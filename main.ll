; ModuleID = './main.go'
source_filename = "./main.go"
target datalayout = "e-m:e-p:32:32-i64:64-n32:64-S128"
target triple = "wasm32--wasi"

%"unicode/utf8.acceptRange" = type { i8, i8 }
%runtime._string = type { i8*, i32 }
%strconv.floatInfo = type { i32, i32, i32 }
%strconv.extFloat = type { i64, i32, i1 }
%runtime.stackChainObject = type { %runtime.stackChainObject*, i32 }
%runtime.__wasi_iovec_t = type { i8*, i32 }
%runtime._interface = type { i32, i8* }
%reflect.Value = type { i32, i8*, i8 }
%reflect.StructField = type { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 }
%reflect.TypeError = type { %runtime._string }
%reflect.StringHeader = type { i32, i32 }
%reflect.SliceHeader = type { i32, i32, i32 }
%strconv.decimalSlice = type { { i8*, i32, i32 }, i32, i32, i1 }
%strconv.decimal = type { [800 x i8], i32, i32, i1, i1 }
%strconv.leftCheat = type { i32, %runtime._string }
%os.File = type { %runtime._interface, %runtime._string }
%fmt.pp = type { { i8*, i32, i32 }, %runtime._interface, %reflect.Value, %fmt.fmt, i1, i1, i1, i1, i1, %runtime._interface }
%fmt.fmt = type { { i8*, i32, i32 }*, %fmt.fmtFlags, i32, i32, [68 x i8] }
%fmt.fmtFlags = type { i1, i1, i1, i1, i1, i1, i1, i1, i1 }
%runtime._defer = type { i32, %runtime._defer* }
%"internal/fmtsort.SortedMap" = type { { %reflect.Value*, i32, i32 }, { %reflect.Value*, i32, i32 } }
%runtime.stringIterator = type { i32 }

@"unicode/utf8.first" = internal unnamed_addr constant [256 x i8] cdbg !0
@"unicode/utf8.acceptRanges" = internal unnamed_addr constant [16 x %"unicode/utf8.acceptRange"] [%"unicode/utf8.acceptRange" { i8 -128, i8 -65 }, %"unicode/utf8.acceptRange" { i8 -96, i8 -65 }, %"unicode/utf8.acceptRange" { i8 -128, i8 -97 }, %"unicode/utf8.acceptRange" { i8 -112, i8 -65 }, %"unicode/utf8.acceptRange" { i8 -128, i8 -113 }, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer, %"unicode/utf8.acceptRange" zeroinitializer], !dbg !7
@"(reflect.Type).Align$string" = internal unnamed_addr constant [32 x i8] c"unimplemented: alignment of type"
@"(reflect.Type).Align$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @"(reflect.Type).Align$string", i32 0, i32 0), i32 32 } }
@"(reflect.Type).Elem$string" = internal unnamed_addr constant [36 x i8] c"unimplemented: (reflect.Type).Elem()"
@"(reflect.Type).Elem$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @"(reflect.Type).Elem$string", i32 0, i32 0), i32 36 } }
@"(reflect.Type).Field$string" = internal unnamed_addr constant [5 x i8] c"Field"
@"(reflect.Type).Field$string.1" = internal unnamed_addr constant [33 x i8] c"reflect: field index out of range"
@"(reflect.Type).Field$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"(reflect.Type).Field$string.1", i32 0, i32 0), i32 33 } }
@"(reflect.Type).Field$string.4" = internal unnamed_addr constant [15 x i8] c"<unimplemented>"
@"(reflect.Type).NumField$string" = internal unnamed_addr constant [8 x i8] c"NumField"
@"(reflect.Type).Size$string" = internal unnamed_addr constant [27 x i8] c"unimplemented: size of type"
@"(reflect.Type).Size$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @"(reflect.Type).Size$string", i32 0, i32 0), i32 27 } }
@"(reflect.Type).String$string" = internal unnamed_addr constant [1 x i8] c"T"
@"(reflect.Value).Bool$string" = internal unnamed_addr constant [4 x i8] c"Bool"
@"(reflect.Value).Complex$string" = internal unnamed_addr constant [7 x i8] c"Complex"
@"(reflect.Value).Elem$string" = internal unnamed_addr constant [4 x i8] c"Elem"
@"(reflect.Value).Float$string" = internal unnamed_addr constant [5 x i8] c"Float"
@"(reflect.Value).Index$string" = internal unnamed_addr constant [33 x i8] c"reflect: slice index out of range"
@"(reflect.Value).Index$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @"(reflect.Value).Index$string", i32 0, i32 0), i32 33 } }
@"(reflect.Value).Index$string.8" = internal unnamed_addr constant [34 x i8] c"reflect: string index out of range"
@"(reflect.Value).Index$pack.9" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @"(reflect.Value).Index$string.8", i32 0, i32 0), i32 34 } }
@"(reflect.Value).Index$string.10" = internal unnamed_addr constant [5 x i8] c"Index"
@"(reflect.Value).Int$string" = internal unnamed_addr constant [3 x i8] c"Int"
@"(reflect.Value).IsNil$string" = internal unnamed_addr constant [5 x i8] c"IsNil"
@"(reflect.Value).Len$string" = internal unnamed_addr constant [3 x i8] c"Len"
@"(reflect.Value).MapRange$string" = internal unnamed_addr constant [41 x i8] c"unimplemented: (reflect.Value).MapRange()"
@"(reflect.Value).MapRange$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @"(reflect.Value).MapRange$string", i32 0, i32 0), i32 41 } }
@"(reflect.Value).Pointer$string" = internal unnamed_addr constant [40 x i8] c"unimplemented: (reflect.Value).Pointer()"
@"(reflect.Value).Pointer$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @"(reflect.Value).Pointer$string", i32 0, i32 0), i32 40 } }
@"(reflect.Value).Pointer$string.11" = internal unnamed_addr constant [7 x i8] c"Pointer"
@"(reflect.Value).String$string" = internal unnamed_addr constant [3 x i8] c"<T>"
@"(reflect.Value).Uint$string" = internal unnamed_addr constant [4 x i8] c"Uint"
@"math/bits.len8tab" = internal unnamed_addr constant [256 x i8] c"\00\01\02\02\03\03\03\03\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08", !dbg !17
@"os.init$string.389" = internal unnamed_addr constant [23 x i8] c"operation not supported"
@"os.init$string.394" = internal unnamed_addr constant [11 x i8] c"/dev/stdout"
@"strconv.adjustLastDigitFixed$string" = internal unnamed_addr constant [49 x i8] c"strconv: num > den<<shift in adjustLastDigitFixed"
@"strconv.adjustLastDigitFixed$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @"strconv.adjustLastDigitFixed$string", i32 0, i32 0), i32 49 } }
@"strconv.adjustLastDigitFixed$string.432" = internal unnamed_addr constant [28 x i8] c"strconv: \CE\B5 > (den<<shift)/2"
@"strconv.adjustLastDigitFixed$pack.433" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @"strconv.adjustLastDigitFixed$string.432", i32 0, i32 0), i32 28 } }
@"strconv.appendEscapedRune$string" = internal unnamed_addr constant [2 x i8] c"\\a"
@"strconv.appendEscapedRune$string.434" = internal unnamed_addr constant [2 x i8] c"\\b"
@"strconv.appendEscapedRune$string.435" = internal unnamed_addr constant [2 x i8] c"\\f"
@"strconv.appendEscapedRune$string.436" = internal unnamed_addr constant [2 x i8] c"\\n"
@"strconv.appendEscapedRune$string.437" = internal unnamed_addr constant [2 x i8] c"\\r"
@"strconv.appendEscapedRune$string.438" = internal unnamed_addr constant [2 x i8] c"\\t"
@"strconv.appendEscapedRune$string.439" = internal unnamed_addr constant [2 x i8] c"\\v"
@"strconv.appendEscapedRune$string.443" = internal unnamed_addr constant [2 x i8] c"\\u"
@"strconv.appendEscapedRune$string.445" = internal unnamed_addr constant [2 x i8] c"\\U"
@"strconv.appendQuotedWith$string" = internal unnamed_addr constant [2 x i8] c"\\x"
@"strconv.appendQuotedWith$string.448" = internal unnamed_addr constant [16 x i8] c"0123456789abcdef"
@strconv.float32info = internal global %strconv.floatInfo { i32 23, i32 8, i32 -127 }, !dbg !20
@strconv.float64info = internal global %strconv.floatInfo { i32 52, i32 11, i32 -1023 }, !dbg !31
@strconv.powersOfTen = internal unnamed_addr constant [87 x %strconv.extFloat] [%strconv.extFloat { i64 -391859759250406776, i32 -1220, i1 false }, %strconv.extFloat { i64 -4994806998408183946, i32 -1193, i1 false }, %strconv.extFloat { i64 -8424269937281487754, i32 -1166, i1 false }, %strconv.extFloat { i64 -3512093806901185046, i32 -1140, i1 false }, %strconv.extFloat { i64 -7319562523736982739, i32 -1113, i1 false }, %strconv.extFloat { i64 -1865951482774665761, i32 -1087, i1 false }, %strconv.extFloat { i64 -6093090917745768758, i32 -1060, i1 false }, %strconv.extFloat { i64 -38366372719436721, i32 -1034, i1 false }, %strconv.extFloat { i64 -4731433901725329908, i32 -1007, i1 false }, %strconv.extFloat { i64 -8228041688891786180, i32 -980, i1 false }, %strconv.extFloat { i64 -3219690930897053053, i32 -954, i1 false }, %strconv.extFloat { i64 -7101705404292871755, i32 -927, i1 false }, %strconv.extFloat { i64 -1541319077368263733, i32 -901, i1 false }, %strconv.extFloat { i64 -5851220927660403859, i32 -874, i1 false }, %strconv.extFloat { i64 -9062348037703676329, i32 -847, i1 false }, %strconv.extFloat { i64 -4462904269766699465, i32 -821, i1 false }, %strconv.extFloat { i64 -8027971522334779313, i32 -794, i1 false }, %strconv.extFloat { i64 -2921563150702462265, i32 -768, i1 false }, %strconv.extFloat { i64 -6879582898840692748, i32 -741, i1 false }, %strconv.extFloat { i64 -1210330751515841307, i32 -715, i1 false }, %strconv.extFloat { i64 -5604615407819967858, i32 -688, i1 false }, %strconv.extFloat { i64 -8878612607581929669, i32 -661, i1 false }, %strconv.extFloat { i64 -4189117143640191558, i32 -635, i1 false }, %strconv.extFloat { i64 -7823984217374209642, i32 -608, i1 false }, %strconv.extFloat { i64 -2617598379430861436, i32 -582, i1 false }, %strconv.extFloat { i64 -6653111496142234890, i32 -555, i1 false }, %strconv.extFloat { i64 -872862063775190746, i32 -529, i1 false }, %strconv.extFloat { i64 -5353181642124984136, i32 -502, i1 false }, %strconv.extFloat { i64 -8691279853972075893, i32 -475, i1 false }, %strconv.extFloat { i64 -3909969587797413805, i32 -449, i1 false }, %strconv.extFloat { i64 -7616003081050118571, i32 -422, i1 false }, %strconv.extFloat { i64 -2307682335666372931, i32 -396, i1 false }, %strconv.extFloat { i64 -6422206049907525489, i32 -369, i1 false }, %strconv.extFloat { i64 -528786136287117932, i32 -343, i1 false }, %strconv.extFloat { i64 -5096825099203863601, i32 -316, i1 false }, %strconv.extFloat { i64 -8500279345513818773, i32 -289, i1 false }, %strconv.extFloat { i64 -3625356651333078602, i32 -263, i1 false }, %strconv.extFloat { i64 -7403949918844649556, i32 -236, i1 false }, %strconv.extFloat { i64 -1991698500497491194, i32 -210, i1 false }, %strconv.extFloat { i64 -6186779746782440749, i32 -183, i1 false }, %strconv.extFloat { i64 -177973607073265138, i32 -157, i1 false }, %strconv.extFloat { i64 -4835449396872013077, i32 -130, i1 false }, %strconv.extFloat { i64 -8305539271883716404, i32 -103, i1 false }, %strconv.extFloat { i64 -3335171328526686932, i32 -77, i1 false }, %strconv.extFloat { i64 -7187745005283311616, i32 -50, i1 false }, %strconv.extFloat { i64 -1669528073709551616, i32 -24, i1 false }, %strconv.extFloat { i64 -5946744073709551616, i32 3, i1 false }, %strconv.extFloat { i64 -9133518327554766460, i32 30, i1 false }, %strconv.extFloat { i64 -4568956265895094861, i32 56, i1 false }, %strconv.extFloat { i64 -8106986416796705680, i32 83, i1 false }, %strconv.extFloat { i64 -3039304518611664792, i32 109, i1 false }, %strconv.extFloat { i64 -6967307053960650171, i32 136, i1 false }, %strconv.extFloat { i64 -1341049929119499481, i32 162, i1 false }, %strconv.extFloat { i64 -5702008784649933400, i32 189, i1 false }, %strconv.extFloat { i64 -8951176327949752869, i32 216, i1 false }, %strconv.extFloat { i64 -4297245513042813542, i32 242, i1 false }, %strconv.extFloat { i64 -7904546130479028392, i32 269, i1 false }, %strconv.extFloat { i64 -2737644984756826646, i32 295, i1 false }, %strconv.extFloat { i64 -6742553186979055798, i32 322, i1 false }, %strconv.extFloat { i64 -1006140569036166267, i32 348, i1 false }, %strconv.extFloat { i64 -5452481866653427593, i32 375, i1 false }, %strconv.extFloat { i64 -8765264286586255934, i32 402, i1 false }, %strconv.extFloat { i64 -4020214983419339459, i32 428, i1 false }, %strconv.extFloat { i64 -7698142301602209613, i32 455, i1 false }, %strconv.extFloat { i64 -2430079312244744221, i32 481, i1 false }, %strconv.extFloat { i64 -6513398903789220827, i32 508, i1 false }, %strconv.extFloat { i64 -664674077828931748, i32 534, i1 false }, %strconv.extFloat { i64 -5198069505264599346, i32 561, i1 false }, %strconv.extFloat { i64 -8575712306248138270, i32 588, i1 false }, %strconv.extFloat { i64 -3737760522056206171, i32 614, i1 false }, %strconv.extFloat { i64 -7487697328667536417, i32 641, i1 false }, %strconv.extFloat { i64 -2116491865831296966, i32 667, i1 false }, %strconv.extFloat { i64 -6279758049420528746, i32 694, i1 false }, %strconv.extFloat { i64 -316522074587315140, i32 720, i1 false }, %strconv.extFloat { i64 -4938676049251384304, i32 747, i1 false }, %strconv.extFloat { i64 -8382449121214030822, i32 774, i1 false }, %strconv.extFloat { i64 -3449775934753242068, i32 800, i1 false }, %strconv.extFloat { i64 -7273132090830278359, i32 827, i1 false }, %strconv.extFloat { i64 -1796764746270372707, i32 853, i1 false }, %strconv.extFloat { i64 -6041542782089432023, i32 880, i1 false }, %strconv.extFloat { i64 -9204148869281624187, i32 907, i1 false }, %strconv.extFloat { i64 -4674203974643163859, i32 933, i1 false }, %strconv.extFloat { i64 -8185402070463610993, i32 960, i1 false }, %strconv.extFloat { i64 -3156152948152813503, i32 986, i1 false }, %strconv.extFloat { i64 -7054365918152680535, i32 1013, i1 false }, %strconv.extFloat { i64 -1470777745987373095, i32 1039, i1 false }, %strconv.extFloat { i64 -5798663540173640085, i32 1066, i1 false }], !dbg !33
@"strconv.genericFtoa$string.473" = internal unnamed_addr constant [48 x i8] c"strconv: illegal AppendFloat/FormatFloat bitSize"
@"strconv.genericFtoa$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @"strconv.genericFtoa$string.473", i32 0, i32 0), i32 48 } }
@"strconv.genericFtoa$string.474" = internal unnamed_addr constant [3 x i8] c"NaN"
@"strconv.genericFtoa$string.475" = internal unnamed_addr constant [4 x i8] c"-Inf"
@"strconv.genericFtoa$string.476" = internal unnamed_addr constant [4 x i8] c"+Inf"
@"strconv.init$string.478" = internal unnamed_addr constant [0 x i8] zeroinitializer
@"strconv.init$string.479" = internal unnamed_addr constant [1 x i8] c"5"
@"strconv.init$string.480" = internal unnamed_addr constant [2 x i8] c"25"
@"strconv.init$string.481" = internal unnamed_addr constant [3 x i8] c"125"
@"strconv.init$string.482" = internal unnamed_addr constant [3 x i8] c"625"
@"strconv.init$string.483" = internal unnamed_addr constant [4 x i8] c"3125"
@"strconv.init$string.484" = internal unnamed_addr constant [5 x i8] c"15625"
@"strconv.init$string.485" = internal unnamed_addr constant [5 x i8] c"78125"
@"strconv.init$string.486" = internal unnamed_addr constant [6 x i8] c"390625"
@"strconv.init$string.487" = internal unnamed_addr constant [7 x i8] c"1953125"
@"strconv.init$string.488" = internal unnamed_addr constant [7 x i8] c"9765625"
@"strconv.init$string.489" = internal unnamed_addr constant [8 x i8] c"48828125"
@"strconv.init$string.490" = internal unnamed_addr constant [9 x i8] c"244140625"
@"strconv.init$string.491" = internal unnamed_addr constant [10 x i8] c"1220703125"
@"strconv.init$string.492" = internal unnamed_addr constant [10 x i8] c"6103515625"
@"strconv.init$string.493" = internal unnamed_addr constant [11 x i8] c"30517578125"
@"strconv.init$string.494" = internal unnamed_addr constant [12 x i8] c"152587890625"
@"strconv.init$string.495" = internal unnamed_addr constant [12 x i8] c"762939453125"
@"strconv.init$string.496" = internal unnamed_addr constant [13 x i8] c"3814697265625"
@"strconv.init$string.497" = internal unnamed_addr constant [14 x i8] c"19073486328125"
@"strconv.init$string.498" = internal unnamed_addr constant [14 x i8] c"95367431640625"
@"strconv.init$string.499" = internal unnamed_addr constant [15 x i8] c"476837158203125"
@"strconv.init$string.500" = internal unnamed_addr constant [16 x i8] c"2384185791015625"
@"strconv.init$string.501" = internal unnamed_addr constant [17 x i8] c"11920928955078125"
@"strconv.init$string.502" = internal unnamed_addr constant [17 x i8] c"59604644775390625"
@"strconv.init$string.503" = internal unnamed_addr constant [18 x i8] c"298023223876953125"
@"strconv.init$string.504" = internal unnamed_addr constant [19 x i8] c"1490116119384765625"
@"strconv.init$string.505" = internal unnamed_addr constant [19 x i8] c"7450580596923828125"
@"strconv.init$string.506" = internal unnamed_addr constant [20 x i8] c"37252902984619140625"
@"strconv.init$string.507" = internal unnamed_addr constant [21 x i8] c"186264514923095703125"
@"strconv.init$string.508" = internal unnamed_addr constant [21 x i8] c"931322574615478515625"
@"strconv.init$string.509" = internal unnamed_addr constant [22 x i8] c"4656612873077392578125"
@"strconv.init$string.510" = internal unnamed_addr constant [23 x i8] c"23283064365386962890625"
@"strconv.init$string.511" = internal unnamed_addr constant [24 x i8] c"116415321826934814453125"
@"strconv.init$string.512" = internal unnamed_addr constant [24 x i8] c"582076609134674072265625"
@"strconv.init$string.513" = internal unnamed_addr constant [25 x i8] c"2910383045673370361328125"
@"strconv.init$string.514" = internal unnamed_addr constant [26 x i8] c"14551915228366851806640625"
@"strconv.init$string.515" = internal unnamed_addr constant [26 x i8] c"72759576141834259033203125"
@"strconv.init$string.516" = internal unnamed_addr constant [27 x i8] c"363797880709171295166015625"
@"strconv.init$string.517" = internal unnamed_addr constant [28 x i8] c"1818989403545856475830078125"
@"strconv.init$string.518" = internal unnamed_addr constant [28 x i8] c"9094947017729282379150390625"
@"strconv.init$string.519" = internal unnamed_addr constant [29 x i8] c"45474735088646411895751953125"
@"strconv.init$string.520" = internal unnamed_addr constant [30 x i8] c"227373675443232059478759765625"
@"strconv.init$string.521" = internal unnamed_addr constant [31 x i8] c"1136868377216160297393798828125"
@"strconv.init$string.522" = internal unnamed_addr constant [31 x i8] c"5684341886080801486968994140625"
@"strconv.init$string.523" = internal unnamed_addr constant [32 x i8] c"28421709430404007434844970703125"
@"strconv.init$string.524" = internal unnamed_addr constant [33 x i8] c"142108547152020037174224853515625"
@"strconv.init$string.525" = internal unnamed_addr constant [33 x i8] c"710542735760100185871124267578125"
@"strconv.init$string.526" = internal unnamed_addr constant [34 x i8] c"3552713678800500929355621337890625"
@"strconv.init$string.527" = internal unnamed_addr constant [35 x i8] c"17763568394002504646778106689453125"
@"strconv.init$string.528" = internal unnamed_addr constant [35 x i8] c"88817841970012523233890533447265625"
@"strconv.init$string.529" = internal unnamed_addr constant [36 x i8] c"444089209850062616169452667236328125"
@"strconv.init$string.530" = internal unnamed_addr constant [37 x i8] c"2220446049250313080847263336181640625"
@"strconv.init$string.531" = internal unnamed_addr constant [38 x i8] c"11102230246251565404236316680908203125"
@"strconv.init$string.532" = internal unnamed_addr constant [38 x i8] c"55511151231257827021181583404541015625"
@"strconv.init$string.533" = internal unnamed_addr constant [39 x i8] c"277555756156289135105907917022705078125"
@"strconv.init$string.534" = internal unnamed_addr constant [40 x i8] c"1387778780781445675529539585113525390625"
@"strconv.init$string.535" = internal unnamed_addr constant [40 x i8] c"6938893903907228377647697925567626953125"
@"strconv.init$string.536" = internal unnamed_addr constant [41 x i8] c"34694469519536141888238489627838134765625"
@"strconv.init$string.537" = internal unnamed_addr constant [42 x i8] c"173472347597680709441192448139190673828125"
@"strconv.init$string.538" = internal unnamed_addr constant [42 x i8] c"867361737988403547205962240695953369140625"
@strconv.uint64pow10 = internal unnamed_addr constant [20 x i64] [i64 1, i64 10, i64 100, i64 1000, i64 10000, i64 100000, i64 1000000, i64 10000000, i64 100000000, i64 1000000000, i64 10000000000, i64 100000000000, i64 1000000000000, i64 10000000000000, i64 100000000000000, i64 1000000000000000, i64 10000000000000000, i64 100000000000000000, i64 1000000000000000000, i64 -8446744073709551616], !dbg !47
@"runtime._panic$string" = internal unnamed_addr constant [7 x i8] c"panic: "
@__heap_base = external global [0 x i8]
@runtime.heapEnd = internal unnamed_addr global i32 0, !dbg !52
@runtime.zeroSizedAlloc = internal global i8 0, !dbg !56
@runtime.nextAlloc = internal unnamed_addr global i32 0, !dbg !59
@"runtime.alloc$string" = internal unnamed_addr constant [13 x i8] c"out of memory"
@runtime.endBlock = internal unnamed_addr global i32 0, !dbg !62
@runtime.stackOverflow = internal unnamed_addr global i1 false, !dbg !64
@runtime.putcharPosition = internal unnamed_addr global i32 0, !dbg !66
@runtime.putcharBuffer = internal global [120 x i8] zeroinitializer, !dbg !69
@"runtime.lookupPanic$string" = internal unnamed_addr constant [18 x i8] c"index out of range"
@runtime.trackedGlobalsLength = internal local_unnamed_addr global i32 192
@runtime.trackedGlobalsBitmap = external local_unnamed_addr global [0 x i8]
@runtime.trackedGlobalsStart = internal local_unnamed_addr global i32 ptrtoint ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals to i32)
@runtime.stackChainStart = internal local_unnamed_addr global %runtime.stackChainObject* null
@"runtime.nilPanic$string" = internal unnamed_addr constant [23 x i8] c"nil pointer dereference"
@runtime.putcharNWritten = internal global i32 0, !dbg !75
@"runtime.runtimePanic$string" = internal unnamed_addr constant [22 x i8] c"panic: runtime error: "
@"runtime.slicePanic$string" = internal unnamed_addr constant [18 x i8] c"slice out of range"
@"main.main$string" = internal unnamed_addr constant [6 x i8] c"sadasd"
@"main.main$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"main.main$string", i32 0, i32 0), i32 6 } }
@"(*reflect.TypeError).Error$string" = internal unnamed_addr constant [30 x i8] c"reflect: call of reflect.Type."
@"(*reflect.ValueError).Error$string" = internal unnamed_addr constant [31 x i8] c"reflect: call of reflect.Value."
@"(*reflect.ValueError).Error$string.643" = internal unnamed_addr constant [16 x i8] c" on invalid type"
@"(*fmt.pp).badVerb$string" = internal unnamed_addr constant [2 x i8] c"%!"
@"(*fmt.pp).fmtComplex$string" = internal unnamed_addr constant [2 x i8] c"i)"
@"(*fmt.pp).fmtInteger$string" = internal unnamed_addr constant [17 x i8] c"0123456789abcdefx"
@"(*fmt.pp).fmtPointer$string" = internal unnamed_addr constant [2 x i8] c")("
@"(*fmt.pp).fmtPointer$string.746" = internal unnamed_addr constant [3 x i8] c"nil"
@"(*fmt.pp).handleMethods$string.750" = internal unnamed_addr constant [5 x i8] c"Error"
@"(*fmt.pp).handleMethods$string.751" = internal unnamed_addr constant [6 x i8] c"String"
@"(*fmt.pp).printArg$string.753" = internal unnamed_addr constant [6 x i8] c"[]byte"
@"(*fmt.pp).printValue$string" = internal unnamed_addr constant [23 x i8] c"<invalid reflect.Value>"
@"(*fmt.pp).printValue$string.757" = internal unnamed_addr constant [4 x i8] c"map["
@"(*fmt.pp).printValue$string.762" = internal unnamed_addr constant [5 x i8] c"(nil)"
@"(*fmt.pp).printValue$string.763" = internal unnamed_addr constant [2 x i8] c", "
@"(*fmt.pp).unknownType$string" = internal unnamed_addr constant [5 x i8] c"<nil>"
@"(*fmt.fmt).fmtQ$string.764" = internal unnamed_addr constant [1 x i8] c"`"
@"(*fmt.fmt).fmtInteger$string" = internal unnamed_addr constant [31 x i8] c"fmt: unknown base; can't happen"
@"(*fmt.fmt).fmtInteger$pack" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"(*fmt.fmt).fmtInteger$string", i32 0, i32 0), i32 31 } }
@"(*strconv.extFloat).FixedDecimal$string.766" = internal unnamed_addr constant [49 x i8] c"strconv: internal error, rest != 0 but needed > 0"
@"(*strconv.extFloat).FixedDecimal$pack.767" = private unnamed_addr constant { %runtime._string } { %runtime._string { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @"(*strconv.extFloat).FixedDecimal$string.766", i32 0, i32 0), i32 49 } }
@"(*fmt.fmt).fmtBoolean$string" = internal unnamed_addr constant [4 x i8] c"true"
@"(*fmt.fmt).fmtBoolean$string.768" = internal unnamed_addr constant [5 x i8] c"false"
@"(*os.File).Write$string" = internal unnamed_addr constant [5 x i8] c"write"
@"(*os.PathError).Error$string" = internal unnamed_addr constant [1 x i8] c" "
@"(*os.PathError).Error$string.773" = internal unnamed_addr constant [2 x i8] c": "
@"strconv$alloc.1444" = internal global [884 x i8] c" \00~\00\A1\00w\03z\03\7F\03\84\03V\05Y\05\8A\05\8D\05\C7\05\D0\05\EA\05\EF\05\F4\05\06\06\1B\06\1E\06\0D\07\10\07J\07M\07\B1\07\C0\07\FA\07\FD\07-\080\08[\08^\08j\08\A0\08\BD\08\D3\08\8C\09\8F\09\90\09\93\09\B2\09\B6\09\B9\09\BC\09\C4\09\C7\09\C8\09\CB\09\CE\09\D7\09\D7\09\DC\09\E3\09\E6\09\FE\09\01\0A\0A\0A\0F\0A\10\0A\13\0A9\0A<\0AB\0AG\0AH\0AK\0AM\0AQ\0AQ\0AY\0A^\0Af\0Av\0A\81\0A\B9\0A\BC\0A\CD\0A\D0\0A\D0\0A\E0\0A\E3\0A\E6\0A\F1\0A\F9\0A\0C\0B\0F\0B\10\0B\13\0B9\0B<\0BD\0BG\0BH\0BK\0BM\0BV\0BW\0B\\\0Bc\0Bf\0Bw\0B\82\0B\8A\0B\8E\0B\95\0B\99\0B\9F\0B\A3\0B\A4\0B\A8\0B\AA\0B\AE\0B\B9\0B\BE\0B\C2\0B\C6\0B\CD\0B\D0\0B\D0\0B\D7\0B\D7\0B\E6\0B\FA\0B\00\0C9\0C=\0CM\0CU\0CZ\0C`\0Cc\0Cf\0Co\0Cw\0C\B9\0C\BC\0C\CD\0C\D5\0C\D6\0C\DE\0C\E3\0C\E6\0C\F2\0C\00\0DO\0DT\0Dc\0Df\0D\7F\0D\82\0D\96\0D\9A\0D\BD\0D\C0\0D\C6\0D\CA\0D\CA\0D\CF\0D\DF\0D\E6\0D\EF\0D\F2\0D\F4\0D\01\0E:\0E?\0E[\0E\81\0E\BD\0E\C0\0E\CD\0E\D0\0E\D9\0E\DC\0E\DF\0E\00\0Fl\0Fq\0F\DA\0F\00\10\C7\10\CD\10\CD\10\D0\10M\12P\12]\12`\12\8D\12\90\12\B5\12\B8\12\C5\12\C8\12\15\13\18\13Z\13]\13|\13\80\13\99\13\A0\13\F5\13\F8\13\FD\13\00\14\9C\16\A0\16\F8\16\00\17\14\17 \176\17@\17S\17`\17s\17\80\17\DD\17\E0\17\E9\17\F0\17\F9\17\00\18\0D\18\10\18\19\18 \18x\18\80\18\AA\18\B0\18\F5\18\00\19+\190\19;\19@\19@\19D\19m\19p\19t\19\80\19\AB\19\B0\19\C9\19\D0\19\DA\19\DE\19\1B\1A\1E\1A|\1A\7F\1A\89\1A\90\1A\99\1A\A0\1A\AD\1A\B0\1A\BE\1A\00\1BK\1BP\1B|\1B\80\1B\F3\1B\FC\1B7\1C;\1CI\1CM\1C\88\1C\90\1C\BA\1C\BD\1C\C7\1C\D0\1C\FA\1C\00\1D\15\1F\18\1F\1D\1F \1FE\1FH\1FM\1FP\1F}\1F\80\1F\D3\1F\D6\1F\EF\1F\F2\1F\FE\1F\10 ' 0 ^ p q t \9C \A0 \BF \D0 \F0 \00!\8B!\90!&$@$J$`$s+v+\95+\98+\F3,\F9,'-----0-g-o-p-\7F-\96-\A0-O.\80.\F3.\00/\D5/\F0/\FB/\010\960\990\FF0\051\BA1\C01\E31\F01\B5M\C0M\EF\9F\00\A0\8C\A4\90\A4\C6\A4\D0\A4+\A6@\A6\F7\A6\00\A7\BF\A7\C2\A7\C6\A7\F7\A7+\A80\A89\A8@\A8w\A8\80\A8\C5\A8\CE\A8\D9\A8\E0\A8S\A9_\A9|\A9\80\A9\D9\A9\DE\A96\AA@\AAM\AAP\AAY\AA\\\AA\C2\AA\DB\AA\F6\AA\01\AB\06\AB\09\AB\0E\AB\11\AB\16\AB \ABg\ABp\AB\ED\AB\F0\AB\F9\AB\00\AC\A3\D7\B0\D7\C6\D7\CB\D7\FB\D7\00\F9m\FAp\FA\D9\FA\00\FB\06\FB\13\FB\17\FB\1D\FB\C1\FB\D3\FB?\FDP\FD\8F\FD\92\FD\C7\FD\F0\FD\FD\FD\00\FE\19\FE \FEk\FEp\FE\FC\FE\01\FF\BE\FF\C2\FF\C7\FF\CA\FF\CF\FF\D2\FF\D7\FF\DA\FF\DC\FF\E0\FF\EE\FF\FC\FF\FD\FF", align 4
@"strconv$alloc.1445" = internal global [264 x i8] c"\AD\00\8B\03\8D\03\A2\030\05\90\05\DD\06?\08_\08\B5\08\E2\08\84\09\A9\09\B1\09\DE\09\04\0A)\0A1\0A4\0A7\0A=\0A]\0A\84\0A\8E\0A\92\0A\A9\0A\B1\0A\B4\0A\C6\0A\CA\0A\00\0B\04\0B)\0B1\0B4\0B^\0B\84\0B\91\0B\9B\0B\9D\0B\C9\0B\0D\0C\11\0C)\0CE\0CI\0CW\0C\8D\0C\91\0C\A9\0C\B4\0C\C5\0C\C9\0C\DF\0C\F0\0C\04\0D\0D\0D\11\0DE\0DI\0D\84\0D\B2\0D\BC\0D\D5\0D\D7\0D\83\0E\85\0E\8B\0E\A4\0E\A6\0E\C5\0E\C7\0EH\0F\98\0F\BD\0F\CD\0F\C6\10I\12W\12Y\12\89\12\B1\12\BF\12\C1\12\D7\12\11\13\80\16\0D\17m\17q\17\1F\19_\1A\FA\1DX\1FZ\1F\\\1F^\1F\B5\1F\C5\1F\DC\1F\F5\1F\8F /,_,&-\A7-\AF-\B7-\BF-\C7-\CF-\D7-\DF-\9A.@001\8F1\1F2\FF2\CE\A9\FF\A9'\AB/\AB7\FB=\FB?\FBB\FBE\FBS\FEg\FEu\FE\E7\FF", align 4
@"strconv$alloc.1446" = internal global [1800 x i8] c"\00\00\01\00M\00\01\00P\00\01\00]\00\01\00\80\00\01\00\FA\00\01\00\00\01\01\00\02\01\01\00\07\01\01\003\01\01\007\01\01\00\9B\01\01\00\A0\01\01\00\A0\01\01\00\D0\01\01\00\FD\01\01\00\80\02\01\00\9C\02\01\00\A0\02\01\00\D0\02\01\00\E0\02\01\00\FB\02\01\00\00\03\01\00#\03\01\00-\03\01\00J\03\01\00P\03\01\00z\03\01\00\80\03\01\00\C3\03\01\00\C8\03\01\00\D5\03\01\00\00\04\01\00\9D\04\01\00\A0\04\01\00\A9\04\01\00\B0\04\01\00\D3\04\01\00\D8\04\01\00\FB\04\01\00\00\05\01\00'\05\01\000\05\01\00c\05\01\00o\05\01\00o\05\01\00\00\06\01\006\07\01\00@\07\01\00U\07\01\00`\07\01\00g\07\01\00\00\08\01\00\05\08\01\00\08\08\01\008\08\01\00<\08\01\00<\08\01\00?\08\01\00\9E\08\01\00\A7\08\01\00\AF\08\01\00\E0\08\01\00\F5\08\01\00\FB\08\01\00\1B\09\01\00\1F\09\01\009\09\01\00?\09\01\00?\09\01\00\80\09\01\00\B7\09\01\00\BC\09\01\00\CF\09\01\00\D2\09\01\00\06\0A\01\00\0C\0A\01\005\0A\01\008\0A\01\00:\0A\01\00?\0A\01\00H\0A\01\00P\0A\01\00X\0A\01\00`\0A\01\00\9F\0A\01\00\C0\0A\01\00\E6\0A\01\00\EB\0A\01\00\F6\0A\01\00\00\0B\01\005\0B\01\009\0B\01\00U\0B\01\00X\0B\01\00r\0B\01\00x\0B\01\00\91\0B\01\00\99\0B\01\00\9C\0B\01\00\A9\0B\01\00\AF\0B\01\00\00\0C\01\00H\0C\01\00\80\0C\01\00\B2\0C\01\00\C0\0C\01\00\F2\0C\01\00\FA\0C\01\00'\0D\01\000\0D\01\009\0D\01\00`\0E\01\00~\0E\01\00\00\0F\01\00'\0F\01\000\0F\01\00Y\0F\01\00\E0\0F\01\00\F6\0F\01\00\00\10\01\00M\10\01\00R\10\01\00o\10\01\00\7F\10\01\00\C1\10\01\00\D0\10\01\00\E8\10\01\00\F0\10\01\00\F9\10\01\00\00\11\01\00F\11\01\00P\11\01\00v\11\01\00\80\11\01\00\CD\11\01\00\D0\11\01\00\F4\11\01\00\00\12\01\00>\12\01\00\80\12\01\00\A9\12\01\00\B0\12\01\00\EA\12\01\00\F0\12\01\00\F9\12\01\00\00\13\01\00\0C\13\01\00\0F\13\01\00\10\13\01\00\13\13\01\00D\13\01\00G\13\01\00H\13\01\00K\13\01\00M\13\01\00P\13\01\00P\13\01\00W\13\01\00W\13\01\00]\13\01\00c\13\01\00f\13\01\00l\13\01\00p\13\01\00t\13\01\00\00\14\01\00_\14\01\00\80\14\01\00\C7\14\01\00\D0\14\01\00\D9\14\01\00\80\15\01\00\B5\15\01\00\B8\15\01\00\DD\15\01\00\00\16\01\00D\16\01\00P\16\01\00Y\16\01\00`\16\01\00l\16\01\00\80\16\01\00\B8\16\01\00\C0\16\01\00\C9\16\01\00\00\17\01\00\1A\17\01\00\1D\17\01\00+\17\01\000\17\01\00?\17\01\00\00\18\01\00;\18\01\00\A0\18\01\00\F2\18\01\00\FF\18\01\00\FF\18\01\00\A0\19\01\00\A7\19\01\00\AA\19\01\00\D7\19\01\00\DA\19\01\00\E4\19\01\00\00\1A\01\00G\1A\01\00P\1A\01\00\A2\1A\01\00\C0\1A\01\00\F8\1A\01\00\00\1C\01\00E\1C\01\00P\1C\01\00l\1C\01\00p\1C\01\00\8F\1C\01\00\92\1C\01\00\B6\1C\01\00\00\1D\01\006\1D\01\00:\1D\01\00G\1D\01\00P\1D\01\00Y\1D\01\00`\1D\01\00\98\1D\01\00\A0\1D\01\00\A9\1D\01\00\E0\1E\01\00\F8\1E\01\00\C0\1F\01\00\F1\1F\01\00\FF\1F\01\00\99#\01\00\00$\01\00t$\01\00\80$\01\00C%\01\00\000\01\00.4\01\00\00D\01\00FF\01\00\00h\01\008j\01\00@j\01\00ij\01\00nj\01\00oj\01\00\D0j\01\00\EDj\01\00\F0j\01\00\F5j\01\00\00k\01\00Ek\01\00Pk\01\00wk\01\00}k\01\00\8Fk\01\00@n\01\00\9An\01\00\00o\01\00Jo\01\00Oo\01\00\87o\01\00\8Fo\01\00\9Fo\01\00\E0o\01\00\E3o\01\00\00p\01\00\F7\87\01\00\00\88\01\00\F2\8A\01\00\00\B0\01\00\1E\B1\01\00P\B1\01\00R\B1\01\00d\B1\01\00g\B1\01\00p\B1\01\00\FB\B2\01\00\00\BC\01\00j\BC\01\00p\BC\01\00|\BC\01\00\80\BC\01\00\88\BC\01\00\90\BC\01\00\99\BC\01\00\9C\BC\01\00\9F\BC\01\00\00\D0\01\00\F5\D0\01\00\00\D1\01\00&\D1\01\00)\D1\01\00r\D1\01\00{\D1\01\00\E8\D1\01\00\00\D2\01\00E\D2\01\00\E0\D2\01\00\F3\D2\01\00\00\D3\01\00V\D3\01\00`\D3\01\00x\D3\01\00\00\D4\01\00\9F\D4\01\00\A2\D4\01\00\A2\D4\01\00\A5\D4\01\00\A6\D4\01\00\A9\D4\01\00\0A\D5\01\00\0D\D5\01\00F\D5\01\00J\D5\01\00\A5\D6\01\00\A8\D6\01\00\CB\D7\01\00\CE\D7\01\00\8B\DA\01\00\9B\DA\01\00\AF\DA\01\00\00\E0\01\00\18\E0\01\00\1B\E0\01\00*\E0\01\00\00\E1\01\00,\E1\01\000\E1\01\00=\E1\01\00@\E1\01\00I\E1\01\00N\E1\01\00O\E1\01\00\C0\E2\01\00\F9\E2\01\00\FF\E2\01\00\FF\E2\01\00\00\E8\01\00\C4\E8\01\00\C7\E8\01\00\D6\E8\01\00\00\E9\01\00K\E9\01\00P\E9\01\00Y\E9\01\00^\E9\01\00_\E9\01\00q\EC\01\00\B4\EC\01\00\01\ED\01\00=\ED\01\00\00\EE\01\00$\EE\01\00'\EE\01\00;\EE\01\00B\EE\01\00B\EE\01\00G\EE\01\00T\EE\01\00W\EE\01\00d\EE\01\00g\EE\01\00\9B\EE\01\00\A1\EE\01\00\BB\EE\01\00\F0\EE\01\00\F1\EE\01\00\00\F0\01\00+\F0\01\000\F0\01\00\93\F0\01\00\A0\F0\01\00\AE\F0\01\00\B1\F0\01\00\F5\F0\01\00\00\F1\01\00\0C\F1\01\00\10\F1\01\00l\F1\01\00p\F1\01\00\AC\F1\01\00\E6\F1\01\00\02\F2\01\00\10\F2\01\00;\F2\01\00@\F2\01\00H\F2\01\00P\F2\01\00Q\F2\01\00`\F2\01\00e\F2\01\00\00\F3\01\00\D5\F6\01\00\E0\F6\01\00\EC\F6\01\00\F0\F6\01\00\FA\F6\01\00\00\F7\01\00s\F7\01\00\80\F7\01\00\D8\F7\01\00\E0\F7\01\00\EB\F7\01\00\00\F8\01\00\0B\F8\01\00\10\F8\01\00G\F8\01\00P\F8\01\00Y\F8\01\00`\F8\01\00\87\F8\01\00\90\F8\01\00\AD\F8\01\00\00\F9\01\00v\F9\01\00z\F9\01\00\A2\F9\01\00\A5\F9\01\00\AA\F9\01\00\AE\F9\01\00\CA\F9\01\00\CD\F9\01\00S\FA\01\00`\FA\01\00m\FA\01\00p\FA\01\00s\FA\01\00x\FA\01\00z\FA\01\00\80\FA\01\00\82\FA\01\00\90\FA\01\00\95\FA\01\00\00\00\02\00\D6\A6\02\00\00\A7\02\004\B7\02\00@\B7\02\00\1D\B8\02\00 \B8\02\00\A1\CE\02\00\B0\CE\02\00\E0\EB\02\00\00\F8\02\00\1D\FA\02\00\00\01\0E\00\EF\01\0E\00", align 4
@"strconv$alloc.1447" = internal global [180 x i8] c"\0C\00'\00;\00>\00\8F\01\9E\03\09\086\08V\08\F3\08\04\0A\14\0A\18\0A\BD\105\11\E0\11\12\12\87\12\89\12\8E\12\9E\12\04\13)\131\134\13:\13Z\14\\\14\09\1C7\1C\A8\1C\07\1D\0A\1D;\1D>\1Df\1Di\1D\8F\1D\92\1Do$_jZkbkU\D4\9D\D4\AD\D4\BA\D4\BC\D4\C4\D4\06\D5\15\D5\1D\D5:\D5?\D5E\D5Q\D5\A0\DA\07\E0\22\E0%\E0\04\EE \EE#\EE(\EE3\EE8\EE:\EEH\EEJ\EEL\EEP\EES\EEX\EEZ\EE\\\EE^\EE`\EEc\EEk\EEs\EEx\EE}\EE\7F\EE\8A\EE\A4\EE\AA\EE\C0\F0\D0\F0\0C\F9r\F9", align 4
@reflect.namedNonBasicTypesSidetable = internal unnamed_addr constant [13 x i32] [i32 0, i32 0, i32 4, i32 1, i32 73, i32 16, i32 14, i32 53, i32 25, i32 113, i32 118, i32 3, i32 128]
@reflect.arrayTypesSidetable = internal unnamed_addr constant [2 x i8] c"\10D"
@reflect.structTypesSidetable = internal unnamed_addr constant [139 x i8] c"\01\04\22\00\03\04\22\07\04\22\0A\04s\0F\03\00X!\00$\1B\00\90\01*\09\00\02=\00\02H\00\02T\00\02Z\00\02_\00\02e\00\02k\00\02p\00\02v\05\00\E5-\13\01\9F\024\00\04}\00\04\81\01\00\09\86\01\0A\00\B7\01\13\00C\17\00\DF\01\1B\00\FF\010\00\02\8D\01\00\02\97\01\00\02\A2\01\00\02\AC\01\00\02\B5\01\00s\BE\01\01\00\22\C9\01\02\00\F3\02\CB\01\00\22\D2\01\02\04\E77\D7\01\04\E77\DB\01"
@reflect.structNamesSidetable = internal unnamed_addr constant [225 x i8] c"\06Method\02Op\04Path\03Err\03buf\03arg\05value\08typecode\05flags\03fmt\08fmtFlags\0AwidPresent\0BprecPresent\05minus\04plus\05sharp\05space\04zero\05plusV\06sharpV\03wid\04prec\06intbuf\09reordered\0AgoodArgNum\09panicking\08erroring\08wrapErrs\0AwrappedErr\01s\06handle\04name\03Key\05Value"
@tinygo.trackedGlobals = internal unnamed_addr global { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } } { i8* null, %runtime.__wasi_iovec_t { i8* getelementptr inbounds ([120 x i8], [120 x i8]* @runtime.putcharBuffer, i32 0, i32 0), i32 0 }, { [23 x i8]*, [4 x i8] } { [23 x i8]* @"os.init$string.389", [4 x i8] c"\17\00\00\00" }, { i32, [4 x i8], [11 x i8]*, [4 x i8] } { i32 208, [4 x i8] c"\01\00\00\00", [11 x i8]* @"os.init$string.394", [4 x i8] c"\0B\00\00\00" }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } { [4 x i8] zeroinitializer, [0 x i8]* @"strconv.init$string.478", [8 x i8] c"\00\00\00\00\01\00\00\00", [1 x i8]* @"strconv.init$string.479", [8 x i8] c"\01\00\00\00\01\00\00\00", [2 x i8]* @"strconv.init$string.480", [8 x i8] c"\02\00\00\00\01\00\00\00", [3 x i8]* @"strconv.init$string.481", [8 x i8] c"\03\00\00\00\02\00\00\00", [3 x i8]* @"strconv.init$string.482", [8 x i8] c"\03\00\00\00\02\00\00\00", [4 x i8]* @"strconv.init$string.483", [8 x i8] c"\04\00\00\00\02\00\00\00", [5 x i8]* @"strconv.init$string.484", [8 x i8] c"\05\00\00\00\03\00\00\00", [5 x i8]* @"strconv.init$string.485", [8 x i8] c"\05\00\00\00\03\00\00\00", [6 x i8]* @"strconv.init$string.486", [8 x i8] c"\06\00\00\00\03\00\00\00", [7 x i8]* @"strconv.init$string.487", [8 x i8] c"\07\00\00\00\04\00\00\00", [7 x i8]* @"strconv.init$string.488", [8 x i8] c"\07\00\00\00\04\00\00\00", [8 x i8]* @"strconv.init$string.489", [8 x i8] c"\08\00\00\00\04\00\00\00", [9 x i8]* @"strconv.init$string.490", [8 x i8] c"\09\00\00\00\04\00\00\00", [10 x i8]* @"strconv.init$string.491", [8 x i8] c"\0A\00\00\00\05\00\00\00", [10 x i8]* @"strconv.init$string.492", [8 x i8] c"\0A\00\00\00\05\00\00\00", [11 x i8]* @"strconv.init$string.493", [8 x i8] c"\0B\00\00\00\05\00\00\00", [12 x i8]* @"strconv.init$string.494", [8 x i8] c"\0C\00\00\00\06\00\00\00", [12 x i8]* @"strconv.init$string.495", [8 x i8] c"\0C\00\00\00\06\00\00\00", [13 x i8]* @"strconv.init$string.496", [8 x i8] c"\0D\00\00\00\06\00\00\00", [14 x i8]* @"strconv.init$string.497", [8 x i8] c"\0E\00\00\00\07\00\00\00", [14 x i8]* @"strconv.init$string.498", [8 x i8] c"\0E\00\00\00\07\00\00\00", [15 x i8]* @"strconv.init$string.499", [8 x i8] c"\0F\00\00\00\07\00\00\00", [16 x i8]* @"strconv.init$string.500", [8 x i8] c"\10\00\00\00\07\00\00\00", [17 x i8]* @"strconv.init$string.501", [8 x i8] c"\11\00\00\00\08\00\00\00", [17 x i8]* @"strconv.init$string.502", [8 x i8] c"\11\00\00\00\08\00\00\00", [18 x i8]* @"strconv.init$string.503", [8 x i8] c"\12\00\00\00\08\00\00\00", [19 x i8]* @"strconv.init$string.504", [8 x i8] c"\13\00\00\00\09\00\00\00", [19 x i8]* @"strconv.init$string.505", [8 x i8] c"\13\00\00\00\09\00\00\00", [20 x i8]* @"strconv.init$string.506", [8 x i8] c"\14\00\00\00\09\00\00\00", [21 x i8]* @"strconv.init$string.507", [8 x i8] c"\15\00\00\00\0A\00\00\00", [21 x i8]* @"strconv.init$string.508", [8 x i8] c"\15\00\00\00\0A\00\00\00", [22 x i8]* @"strconv.init$string.509", [8 x i8] c"\16\00\00\00\0A\00\00\00", [23 x i8]* @"strconv.init$string.510", [8 x i8] c"\17\00\00\00\0A\00\00\00", [24 x i8]* @"strconv.init$string.511", [8 x i8] c"\18\00\00\00\0B\00\00\00", [24 x i8]* @"strconv.init$string.512", [8 x i8] c"\18\00\00\00\0B\00\00\00", [25 x i8]* @"strconv.init$string.513", [8 x i8] c"\19\00\00\00\0B\00\00\00", [26 x i8]* @"strconv.init$string.514", [8 x i8] c"\1A\00\00\00\0C\00\00\00", [26 x i8]* @"strconv.init$string.515", [8 x i8] c"\1A\00\00\00\0C\00\00\00", [27 x i8]* @"strconv.init$string.516", [8 x i8] c"\1B\00\00\00\0C\00\00\00", [28 x i8]* @"strconv.init$string.517", [8 x i8] c"\1C\00\00\00\0D\00\00\00", [28 x i8]* @"strconv.init$string.518", [8 x i8] c"\1C\00\00\00\0D\00\00\00", [29 x i8]* @"strconv.init$string.519", [8 x i8] c"\1D\00\00\00\0D\00\00\00", [30 x i8]* @"strconv.init$string.520", [8 x i8] c"\1E\00\00\00\0D\00\00\00", [31 x i8]* @"strconv.init$string.521", [8 x i8] c"\1F\00\00\00\0E\00\00\00", [31 x i8]* @"strconv.init$string.522", [8 x i8] c"\1F\00\00\00\0E\00\00\00", [32 x i8]* @"strconv.init$string.523", [8 x i8] c" \00\00\00\0E\00\00\00", [33 x i8]* @"strconv.init$string.524", [8 x i8] c"!\00\00\00\0F\00\00\00", [33 x i8]* @"strconv.init$string.525", [8 x i8] c"!\00\00\00\0F\00\00\00", [34 x i8]* @"strconv.init$string.526", [8 x i8] c"\22\00\00\00\0F\00\00\00", [35 x i8]* @"strconv.init$string.527", [8 x i8] c"#\00\00\00\10\00\00\00", [35 x i8]* @"strconv.init$string.528", [8 x i8] c"#\00\00\00\10\00\00\00", [36 x i8]* @"strconv.init$string.529", [8 x i8] c"$\00\00\00\10\00\00\00", [37 x i8]* @"strconv.init$string.530", [8 x i8] c"%\00\00\00\10\00\00\00", [38 x i8]* @"strconv.init$string.531", [8 x i8] c"&\00\00\00\11\00\00\00", [38 x i8]* @"strconv.init$string.532", [8 x i8] c"&\00\00\00\11\00\00\00", [39 x i8]* @"strconv.init$string.533", [8 x i8] c"'\00\00\00\11\00\00\00", [40 x i8]* @"strconv.init$string.534", [8 x i8] c"(\00\00\00\12\00\00\00", [40 x i8]* @"strconv.init$string.535", [8 x i8] c"(\00\00\00\12\00\00\00", [41 x i8]* @"strconv.init$string.536", [8 x i8] c")\00\00\00\12\00\00\00", [42 x i8]* @"strconv.init$string.537", [8 x i8] c"*\00\00\00\13\00\00\00", [42 x i8]* @"strconv.init$string.538", [4 x i8] c"*\00\00\00" } }
@runtime.trackedGlobalsBitmap.1451 = internal global [24 x i8] c"\8B$I\92$I\92$I\92$I\92$I\92$I\92$I\92$I"

; Function Attrs: noinline optsize
define internal fastcc noalias nonnull i8* @runtime.alloc(i32 %size) unnamed_addr #0 section ".text.runtime.alloc" !dbg !1531 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, metadata !1535, metadata !DIExpression()), !dbg !1545
  call void @llvm.dbg.value(metadata i32 %size, metadata !1535, metadata !DIExpression()), !dbg !1546
  %0 = icmp eq i32 %size, 0, !dbg !1547
  br i1 %0, label %if.then, label %if.done, !dbg !1548

if.then:                                          ; preds = %entry
  ret i8* @runtime.zeroSizedAlloc, !dbg !1549

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %size, metadata !1535, metadata !DIExpression()), !dbg !1550
  %1 = add i32 %size, 15, !dbg !1551
  %2 = lshr i32 %1, 4, !dbg !1552
  call void @llvm.dbg.value(metadata i32 %2, metadata !1536, metadata !DIExpression()), !dbg !1553
  %3 = load i32, i32* @runtime.nextAlloc, align 4, !dbg !1554
  call void @llvm.dbg.value(metadata i32 %3, metadata !1537, metadata !DIExpression()), !dbg !1554
  call void @llvm.dbg.value(metadata i32 %3, metadata !1538, metadata !DIExpression()), !dbg !1555
  call void @llvm.dbg.value(metadata i32 0, metadata !1539, metadata !DIExpression()), !dbg !1556
  call void @llvm.dbg.value(metadata i8 0, metadata !1540, metadata !DIExpression()), !dbg !1557
  br label %for.body, !dbg !1548

for.body:                                         ; preds = %for.body.backedge, %if.done
  %4 = phi i32 [ %3, %if.done ], [ %.pre, %for.body.backedge ], !dbg !1558
  %5 = phi i32 [ %3, %if.done ], [ %.be, %for.body.backedge ], !dbg !1555
  %6 = phi i32 [ 0, %if.done ], [ %.be2, %for.body.backedge ], !dbg !1556
  %7 = phi i8 [ 0, %if.done ], [ %75, %for.body.backedge ], !dbg !1557
  call void @llvm.dbg.value(metadata i32 %5, metadata !1538, metadata !DIExpression()), !dbg !1559
  call void @llvm.dbg.value(metadata i32 %4, metadata !1537, metadata !DIExpression()), !dbg !1558
  %8 = icmp eq i32 %5, %4, !dbg !1560
  br i1 %8, label %if.then1, label %if.done6, !dbg !1548

if.then1:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 %7, metadata !1540, metadata !DIExpression()), !dbg !1561
  switch i8 %7, label %if.else4 [
    i8 0, label %if.done6
    i8 1, label %if.then3
  ], !dbg !1548

if.then3:                                         ; preds = %if.then1
  call void @llvm.dbg.value(metadata i8 2, metadata !1540, metadata !DIExpression()), !dbg !1562
  %9 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !1563
  call void @llvm.dbg.value(metadata %runtime.stackChainObject* %9, metadata !1568, metadata !DIExpression()), !dbg !1563
  call void @llvm.dbg.value(metadata %runtime.stackChainObject* %9, metadata !1575, metadata !DIExpression()), !dbg !1587
  br label %for.loop.i.i, !dbg !1588

for.loop.i.i:                                     ; preds = %runtime.markRoots.exit.i.i, %if.then3
  %.sink4 = phi %runtime.stackChainObject* [ %24, %runtime.markRoots.exit.i.i ], [ %9, %if.then3 ]
  %10 = bitcast %runtime.stackChainObject* %.sink4 to i8*, !dbg !1588
  %11 = bitcast %runtime.stackChainObject* %.sink4 to i8*, !dbg !1589
  call void @llvm.dbg.value(metadata %runtime.stackChainObject* %.sink4, metadata !1575, metadata !DIExpression()), !dbg !1589
  %.not.i.i = icmp eq %runtime.stackChainObject* %.sink4, null, !dbg !1590
  br i1 %.not.i.i, label %for.loop.i1.i, label %for.body.i.i, !dbg !1588

for.body.i.i:                                     ; preds = %for.loop.i.i
  call void @llvm.dbg.value(metadata %runtime.stackChainObject* %.sink4, metadata !1575, metadata !DIExpression()), !dbg !1591
  %12 = ptrtoint %runtime.stackChainObject* %.sink4 to i32, !dbg !1592
  %13 = add i32 %12, 8, !dbg !1593
  call void @llvm.dbg.value(metadata i32 %13, metadata !1576, metadata !DIExpression()), !dbg !1594
  %14 = getelementptr inbounds %runtime.stackChainObject, %runtime.stackChainObject* %.sink4, i32 0, i32 1, !dbg !1595
  %15 = load i32, i32* %14, align 4, !dbg !1595
  %16 = shl i32 %15, 2, !dbg !1596
  %17 = add i32 %16, %13, !dbg !1597
  call void @llvm.dbg.value(metadata i32 %17, metadata !1577, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.value(metadata i32 %17, metadata !1599, metadata !DIExpression()), !dbg !1607
  call void @llvm.dbg.value(metadata i32 %13, metadata !1604, metadata !DIExpression()), !dbg !1609
  call void @llvm.dbg.value(metadata i32 %13, metadata !1605, metadata !DIExpression()), !dbg !1610
  br label %for.loop.i.i.i, !dbg !1611

for.loop.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.i.i
  %18 = phi i32 [ %13, %for.body.i.i ], [ %22, %for.body.i.i.i ], !dbg !1610
  call void @llvm.dbg.value(metadata i32 %18, metadata !1605, metadata !DIExpression()), !dbg !1612
  call void @llvm.dbg.value(metadata i32 %17, metadata !1599, metadata !DIExpression()), !dbg !1613
  %.not.i.i.i = icmp eq i32 %18, %17, !dbg !1614
  br i1 %.not.i.i.i, label %runtime.markRoots.exit.i.i, label %for.body.i.i.i, !dbg !1611

for.body.i.i.i:                                   ; preds = %for.loop.i.i.i
  call void @llvm.dbg.value(metadata i32 %18, metadata !1605, metadata !DIExpression()), !dbg !1615
  %19 = inttoptr i32 %18 to i8*, !dbg !1616
  %20 = inttoptr i32 %18 to i32*, !dbg !1617
  %21 = load i32, i32* %20, align 4, !dbg !1618
  call void @llvm.dbg.value(metadata i32 %21, metadata !1606, metadata !DIExpression()), !dbg !1619
  call void @llvm.dbg.value(metadata i32 %18, metadata !1605, metadata !DIExpression()), !dbg !1620
  call void @llvm.dbg.value(metadata i32 %21, metadata !1606, metadata !DIExpression()), !dbg !1621
  tail call fastcc void @runtime.markRoot(i32 %21), !dbg !1622
  %22 = add i32 %18, 4, !dbg !1623
  call void @llvm.dbg.value(metadata i32 %22, metadata !1605, metadata !DIExpression()), !dbg !1623
  br label %for.loop.i.i.i, !dbg !1611

runtime.markRoots.exit.i.i:                       ; preds = %for.loop.i.i.i
  %23 = getelementptr inbounds %runtime.stackChainObject, %runtime.stackChainObject* %.sink4, i32 0, i32 0, !dbg !1624
  %24 = load %runtime.stackChainObject*, %runtime.stackChainObject** %23, align 4, !dbg !1624
  call void @llvm.dbg.value(metadata %runtime.stackChainObject* %24, metadata !1575, metadata !DIExpression()), !dbg !1625
  br label %for.loop.i.i, !dbg !1588

for.loop.i1.i:                                    ; preds = %for.loop.i.i, %if.done.i.i
  %25 = phi i32 [ %41, %if.done.i.i ], [ 0, %for.loop.i.i ], !dbg !1626
  call void @llvm.dbg.value(metadata i32 %25, metadata !1630, metadata !DIExpression()), !dbg !1636
  %26 = load i32, i32* @runtime.trackedGlobalsLength, align 4, !dbg !1637
  call void @llvm.dbg.value(metadata i32 %26, metadata !1631, metadata !DIExpression()), !dbg !1637
  %27 = icmp ult i32 %25, %26, !dbg !1638
  br i1 %27, label %for.body.i3.i, label %for.loop.i4.i, !dbg !1639

for.body.i3.i:                                    ; preds = %for.loop.i1.i
  call void @llvm.dbg.value(metadata i32 %25, metadata !1630, metadata !DIExpression()), !dbg !1640
  %28 = lshr i32 %25, 3, !dbg !1641
  %29 = getelementptr inbounds [0 x i8], [0 x i8]* bitcast ([24 x i8]* @runtime.trackedGlobalsBitmap.1451 to [0 x i8]*), i32 0, i32 %28, !dbg !1642
  %30 = load i8, i8* %29, align 1, !dbg !1642
  call void @llvm.dbg.value(metadata i32 %25, metadata !1630, metadata !DIExpression()), !dbg !1643
  %31 = trunc i32 %25 to i8, !dbg !1644
  %32 = and i8 %31, 7, !dbg !1644
  %33 = shl nuw i8 1, %32, !dbg !1644
  %34 = and i8 %30, %33, !dbg !1645
  %.not.i2.i = icmp eq i8 %34, 0, !dbg !1646
  br i1 %.not.i2.i, label %if.done.i.i, label %if.then.i.i, !dbg !1639

if.then.i.i:                                      ; preds = %for.body.i3.i
  %35 = load i32, i32* @runtime.trackedGlobalsStart, align 4, !dbg !1647
  call void @llvm.dbg.value(metadata i32 %35, metadata !1632, metadata !DIExpression()), !dbg !1647
  call void @llvm.dbg.value(metadata i32 %25, metadata !1630, metadata !DIExpression()), !dbg !1648
  %36 = shl i32 %25, 2, !dbg !1649
  %37 = add i32 %35, %36, !dbg !1650
  call void @llvm.dbg.value(metadata i32 %37, metadata !1633, metadata !DIExpression()), !dbg !1651
  call void @llvm.dbg.value(metadata i32 %37, metadata !1633, metadata !DIExpression()), !dbg !1652
  %38 = inttoptr i32 %37 to i8*, !dbg !1653
  %39 = inttoptr i32 %37 to i32*, !dbg !1654
  %40 = load i32, i32* %39, align 4, !dbg !1655
  call void @llvm.dbg.value(metadata i32 %40, metadata !1634, metadata !DIExpression()), !dbg !1656
  call void @llvm.dbg.value(metadata i32 %37, metadata !1633, metadata !DIExpression()), !dbg !1657
  call void @llvm.dbg.value(metadata i32 %40, metadata !1634, metadata !DIExpression()), !dbg !1658
  tail call fastcc void @runtime.markRoot(i32 %40), !dbg !1659
  br label %if.done.i.i, !dbg !1639

if.done.i.i:                                      ; preds = %if.then.i.i, %for.body.i3.i
  %41 = add nuw i32 %25, 1, !dbg !1660
  call void @llvm.dbg.value(metadata i32 %41, metadata !1630, metadata !DIExpression()), !dbg !1660
  br label %for.loop.i1.i, !dbg !1639

for.loop.i4.i:                                    ; preds = %for.loop1.i.i, %for.loop.i1.i
  %42 = load i1, i1* @runtime.stackOverflow, align 1, !dbg !1661
  call void @llvm.dbg.value(metadata i1 %42, metadata !1664, metadata !DIExpression()), !dbg !1661
  br i1 %42, label %for.body.i5.i, label %for.loop.i8.i, !dbg !1668

for.body.i5.i:                                    ; preds = %for.loop.i4.i
  store i1 false, i1* @runtime.stackOverflow, align 1, !dbg !1669
  call void @llvm.dbg.value(metadata i1 false, metadata !1664, metadata !DIExpression()), !dbg !1669
  call void @llvm.dbg.value(metadata i32 0, metadata !1665, metadata !DIExpression()), !dbg !1670
  br label %for.loop1.i.i, !dbg !1668

for.loop1.i.i:                                    ; preds = %for.post.i.i, %for.body.i5.i
  %43 = phi i32 [ 0, %for.body.i5.i ], [ %47, %for.post.i.i ], !dbg !1670
  call void @llvm.dbg.value(metadata i32 %43, metadata !1665, metadata !DIExpression()), !dbg !1671
  %44 = load i32, i32* @runtime.endBlock, align 4, !dbg !1672
  call void @llvm.dbg.value(metadata i32 %44, metadata !1666, metadata !DIExpression()), !dbg !1672
  %45 = icmp ult i32 %43, %44, !dbg !1673
  br i1 %45, label %for.body2.i.i, label %for.loop.i4.i, !dbg !1668

for.body2.i.i:                                    ; preds = %for.loop1.i.i
  call void @llvm.dbg.value(metadata i32 %43, metadata !1665, metadata !DIExpression()), !dbg !1674
  %46 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %43), !dbg !1675
  %.not.i6.i = icmp eq i8 %46, 3, !dbg !1676
  br i1 %.not.i6.i, label %if.done.i7.i, label %for.post.i.i, !dbg !1668

for.post.i.i:                                     ; preds = %if.done.i7.i, %for.body2.i.i
  %47 = add nuw i32 %43, 1, !dbg !1677
  call void @llvm.dbg.value(metadata i32 %47, metadata !1665, metadata !DIExpression()), !dbg !1677
  br label %for.loop1.i.i, !dbg !1668

if.done.i7.i:                                     ; preds = %for.body2.i.i
  call void @llvm.dbg.value(metadata i32 %43, metadata !1665, metadata !DIExpression()), !dbg !1678
  tail call fastcc void @runtime.startMark(i32 %43), !dbg !1679
  br label %for.post.i.i, !dbg !1668

for.loop.i8.i:                                    ; preds = %for.loop.i4.i, %switch.done.i.i
  %48 = phi i1 [ %53, %switch.done.i.i ], [ false, %for.loop.i4.i ], !dbg !1680
  %49 = phi i32 [ %54, %switch.done.i.i ], [ 0, %for.loop.i4.i ], !dbg !1687
  call void @llvm.dbg.value(metadata i32 %49, metadata !1684, metadata !DIExpression()), !dbg !1688
  %50 = load i32, i32* @runtime.endBlock, align 4, !dbg !1689
  call void @llvm.dbg.value(metadata i32 %50, metadata !1685, metadata !DIExpression()), !dbg !1689
  %51 = icmp ult i32 %49, %50, !dbg !1690
  br i1 %51, label %for.body.i9.i, label %if.done6, !dbg !1691

for.body.i9.i:                                    ; preds = %for.loop.i8.i
  call void @llvm.dbg.value(metadata i32 %49, metadata !1684, metadata !DIExpression()), !dbg !1692
  %52 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %49), !dbg !1693
  switch i8 %52, label %switch.done.i.i [
    i8 1, label %switch.body.i.i
    i8 2, label %switch.body1.i.i
    i8 3, label %switch.body3.i.i
  ], !dbg !1691

switch.body.i.i:                                  ; preds = %for.body.i9.i
  call void @llvm.dbg.value(metadata i32 %49, metadata !1684, metadata !DIExpression()), !dbg !1694
  tail call fastcc void @"(runtime.gcBlock).markFree"(i32 %49), !dbg !1695
  call void @llvm.dbg.value(metadata i1 true, metadata !1683, metadata !DIExpression()), !dbg !1696
  br label %switch.done.i.i, !dbg !1691

switch.done.i.i:                                  ; preds = %switch.body3.i.i, %if.then.i10.i, %switch.body1.i.i, %switch.body.i.i, %for.body.i9.i
  %53 = phi i1 [ true, %switch.body.i.i ], [ false, %switch.body1.i.i ], [ false, %switch.body3.i.i ], [ true, %if.then.i10.i ], [ %48, %for.body.i9.i ], !dbg !1680
  %54 = add nuw i32 %49, 1, !dbg !1697
  call void @llvm.dbg.value(metadata i32 %54, metadata !1684, metadata !DIExpression()), !dbg !1697
  br label %for.loop.i8.i, !dbg !1691

switch.body1.i.i:                                 ; preds = %for.body.i9.i
  call void @llvm.dbg.value(metadata i1 %48, metadata !1683, metadata !DIExpression()), !dbg !1698
  br i1 %48, label %if.then.i10.i, label %switch.done.i.i, !dbg !1691

if.then.i10.i:                                    ; preds = %switch.body1.i.i
  call void @llvm.dbg.value(metadata i32 %49, metadata !1684, metadata !DIExpression()), !dbg !1699
  tail call fastcc void @"(runtime.gcBlock).markFree"(i32 %49), !dbg !1700
  br label %switch.done.i.i, !dbg !1691

switch.body3.i.i:                                 ; preds = %for.body.i9.i
  call void @llvm.dbg.value(metadata i32 %49, metadata !1684, metadata !DIExpression()), !dbg !1701
  call void @llvm.dbg.value(metadata i32 %49, metadata !1702, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.value(metadata i8 2, metadata !1707, metadata !DIExpression()), !dbg !1713
  %55 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !1714
  call void @llvm.dbg.value(metadata i8* %55, metadata !1709, metadata !DIExpression()), !dbg !1714
  %56 = lshr i32 %49, 2, !dbg !1715
  %57 = getelementptr inbounds i8, i8* %55, i32 %56, !dbg !1716
  call void @llvm.dbg.value(metadata i8* %57, metadata !1710, metadata !DIExpression()), !dbg !1717
  %b.tr.i.i.i = trunc i32 %49 to i8, !dbg !1718
  %58 = shl i8 %b.tr.i.i.i, 1, !dbg !1718
  %59 = and i8 %58, 6, !dbg !1718
  %60 = shl nuw i8 2, %59, !dbg !1718
  %61 = load i8, i8* %57, align 1, !dbg !1719
  %62 = xor i8 %60, -1, !dbg !1719
  %63 = and i8 %61, %62, !dbg !1719
  store i8 %63, i8* %57, align 1, !dbg !1719
  call void @llvm.dbg.value(metadata i1 false, metadata !1683, metadata !DIExpression()), !dbg !1720
  br label %switch.done.i.i, !dbg !1691

if.else4:                                         ; preds = %if.then1
  %64 = tail call i32 @llvm.wasm.memory.size.i32(i32 0), !dbg !1721
  call void @llvm.dbg.value(metadata i32 %64, metadata !1724, metadata !DIExpression()), !dbg !1728
  %65 = tail call i32 @llvm.wasm.memory.grow.i32(i32 0, i32 %64), !dbg !1729
  call void @llvm.dbg.value(metadata i32 %65, metadata !1726, metadata !DIExpression()), !dbg !1730
  %66 = icmp eq i32 %65, -1, !dbg !1731
  br i1 %66, label %if.else5, label %runtime.growHeap.exit.thread, !dbg !1732

runtime.growHeap.exit.thread:                     ; preds = %if.else4
  %67 = tail call i32 @llvm.wasm.memory.size.i32(i32 0), !dbg !1733
  %68 = shl i32 %67, 16, !dbg !1734
  call void @llvm.dbg.value(metadata i32 %68, metadata !1735, metadata !DIExpression()), !dbg !1742
  %69 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !1744
  call void @llvm.dbg.value(metadata i8* %69, metadata !1739, metadata !DIExpression()), !dbg !1744
  call void @llvm.dbg.value(metadata i8* %69, metadata !1740, metadata !DIExpression()), !dbg !1745
  %70 = load i32, i32* @runtime.heapEnd, align 4, !dbg !1746
  call void @llvm.dbg.value(metadata i32 %70, metadata !1738, metadata !DIExpression()), !dbg !1746
  %71 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !1747
  call void @llvm.dbg.value(metadata i8* %71, metadata !1739, metadata !DIExpression()), !dbg !1747
  %72 = ptrtoint i8* %71 to i32, !dbg !1748
  %73 = sub i32 %70, %72, !dbg !1749
  call void @llvm.dbg.value(metadata i32 %73, metadata !1741, metadata !DIExpression()), !dbg !1750
  store i32 %68, i32* @runtime.heapEnd, align 4, !dbg !1751
  call void @llvm.dbg.value(metadata i32 %68, metadata !1738, metadata !DIExpression()), !dbg !1751
  tail call fastcc void @runtime.calculateHeapAddresses(), !dbg !1752
  %74 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !1753
  call void @llvm.dbg.value(metadata i8* %74, metadata !1739, metadata !DIExpression()), !dbg !1753
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %74, i8* align 1 %69, i32 %73, i1 false), !dbg !1754
  br label %if.done6, !dbg !1548

if.else5:                                         ; preds = %if.else4
  tail call fastcc void @runtime.runtimePanic(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"runtime.alloc$string", i32 0, i32 0), i32 13), !dbg !1755
  br label %if.done6, !dbg !1548

if.done6:                                         ; preds = %for.loop.i8.i, %runtime.growHeap.exit.thread, %if.then1, %if.else5, %for.body
  %75 = phi i8 [ %7, %for.body ], [ %7, %if.else5 ], [ 1, %if.then1 ], [ %7, %runtime.growHeap.exit.thread ], [ 2, %for.loop.i8.i ], !dbg !1557
  call void @llvm.dbg.value(metadata i32 %5, metadata !1538, metadata !DIExpression()), !dbg !1756
  %76 = load i32, i32* @runtime.endBlock, align 4, !dbg !1757
  call void @llvm.dbg.value(metadata i32 %76, metadata !1541, metadata !DIExpression()), !dbg !1757
  %77 = icmp eq i32 %5, %76, !dbg !1758
  %spec.select = select i1 %77, i32 0, i32 %5, !dbg !1548
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !1538, metadata !DIExpression()), !dbg !1759
  %78 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %spec.select), !dbg !1760
  %.not = icmp eq i8 %78, 0, !dbg !1761
  br i1 %.not, label %if.done10, label %if.then9, !dbg !1548

if.then9:                                         ; preds = %if.done6
  call void @llvm.dbg.value(metadata i32 0, metadata !1539, metadata !DIExpression()), !dbg !1762
  %79 = add i32 %spec.select, 1, !dbg !1763
  call void @llvm.dbg.value(metadata i32 %79, metadata !1538, metadata !DIExpression()), !dbg !1763
  br label %for.body.backedge, !dbg !1548

for.body.backedge:                                ; preds = %if.then9, %if.done10
  %.be = phi i32 [ %79, %if.then9 ], [ %81, %if.done10 ]
  %.be2 = phi i32 [ 0, %if.then9 ], [ %80, %if.done10 ]
  %.pre = load i32, i32* @runtime.nextAlloc, align 4, !dbg !1558
  br label %for.body, !dbg !1559

if.done10:                                        ; preds = %if.done6
  %.op = add i32 %6, 1, !dbg !1764
  %80 = select i1 %77, i32 1, i32 %.op, !dbg !1764
  call void @llvm.dbg.value(metadata i32 %80, metadata !1539, metadata !DIExpression()), !dbg !1764
  %81 = add i32 %spec.select, 1, !dbg !1765
  call void @llvm.dbg.value(metadata i32 %81, metadata !1538, metadata !DIExpression()), !dbg !1765
  call void @llvm.dbg.value(metadata i32 %2, metadata !1536, metadata !DIExpression()), !dbg !1766
  %82 = icmp eq i32 %80, %2, !dbg !1767
  br i1 %82, label %if.then11, label %for.body.backedge, !dbg !1548

if.then11:                                        ; preds = %if.done10
  call void @llvm.dbg.value(metadata i32 %81, metadata !1538, metadata !DIExpression()), !dbg !1768
  store i32 %81, i32* @runtime.nextAlloc, align 4, !dbg !1769
  call void @llvm.dbg.value(metadata i32 %81, metadata !1537, metadata !DIExpression()), !dbg !1769
  call void @llvm.dbg.value(metadata i32 %2, metadata !1536, metadata !DIExpression()), !dbg !1770
  %83 = sub i32 %81, %2, !dbg !1771
  call void @llvm.dbg.value(metadata i32 %83, metadata !1542, metadata !DIExpression()), !dbg !1772
  tail call fastcc void @"(runtime.gcBlock).setState"(i32 %83, i8 1), !dbg !1773
  call void @llvm.dbg.value(metadata i32 %83, metadata !1543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1774
  br label %for.loop, !dbg !1548

for.loop:                                         ; preds = %for.body14, %if.then11
  %.in = phi i32 [ %83, %if.then11 ], [ %84, %for.body14 ]
  %84 = add i32 %.in, 1, !dbg !1774
  call void @llvm.dbg.value(metadata i32 %84, metadata !1543, metadata !DIExpression()), !dbg !1775
  %85 = load i32, i32* @runtime.nextAlloc, align 4, !dbg !1776
  call void @llvm.dbg.value(metadata i32 %85, metadata !1537, metadata !DIExpression()), !dbg !1776
  %.not1 = icmp eq i32 %84, %85, !dbg !1777
  br i1 %.not1, label %for.done, label %for.body14, !dbg !1548

for.body14:                                       ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %84, metadata !1543, metadata !DIExpression()), !dbg !1778
  tail call fastcc void @"(runtime.gcBlock).setState"(i32 %84, i8 2), !dbg !1779
  call void @llvm.dbg.value(metadata i32 %84, metadata !1543, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1780
  br label %for.loop, !dbg !1548

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %83, metadata !1542, metadata !DIExpression()), !dbg !1781
  call void @llvm.dbg.value(metadata i32 %83, metadata !1782, metadata !DIExpression()), !dbg !1785
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !1787, metadata !DIExpression()), !dbg !1791
  call void @llvm.dbg.value(metadata i32 %83, metadata !1790, metadata !DIExpression()), !dbg !1793
  %86 = shl i32 %83, 4, !dbg !1794
  %87 = add i32 %86, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !1795
  %88 = inttoptr i32 %87 to i8*, !dbg !1796
  call void @llvm.dbg.value(metadata i8* %88, metadata !1544, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.value(metadata i32 %size, metadata !1535, metadata !DIExpression()), !dbg !1798
  tail call void @llvm.memset.p0i8.i32(i8* align 1 %88, i8 0, i32 %size, i1 false), !dbg !1799
  ret i8* %88, !dbg !1800
}

; Function Attrs: nounwind optsize readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: optsize
define internal fastcc void @runtime.lookupPanic() unnamed_addr #2 section ".text.runtime.lookupPanic" !dbg !1801 {
entry:
  tail call fastcc void @runtime.runtimePanic(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"runtime.lookupPanic$string", i32 0, i32 0), i32 18), !dbg !1803
  ret void, !dbg !1804
}

; Function Attrs: optsize
declare void @runtime.trackPointer(i8* nocapture readonly, i8*, i8*) local_unnamed_addr #3

; Function Attrs: optsize
define internal fastcc void @runtime.nilPanic() unnamed_addr #2 section ".text.runtime.nilPanic" !dbg !1805 {
entry:
  tail call fastcc void @runtime.runtimePanic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"runtime.nilPanic$string", i32 0, i32 0), i32 23), !dbg !1806
  ret void, !dbg !1807
}

; Function Attrs: optsize
define internal fastcc { i32, i32 } @"unicode/utf8.DecodeRuneInString"(i8* nocapture readonly %s.data, i32 %s.len) unnamed_addr #2 section ".text.unicode/utf8.DecodeRuneInString" !dbg !1808 {
entry:
  %accept = alloca %"unicode/utf8.acceptRange", align 8, !dbg !1822
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !1812, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1822
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !1812, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1822
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !1813, metadata !DIExpression()), !dbg !1823
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !1812, metadata !DIExpression()), !dbg !1824
  %0 = load i8, i8* %s.data, align 1, !dbg !1825
  call void @llvm.dbg.value(metadata i8 %0, metadata !1814, metadata !DIExpression()), !dbg !1826
  %1 = zext i8 %0 to i32, !dbg !1827
  %2 = getelementptr inbounds [256 x i8], [256 x i8]* @"unicode/utf8.first", i32 0, i32 %1, !dbg !1828
  %3 = load i8, i8* %2, align 1, !dbg !1828
  call void @llvm.dbg.value(metadata i8 %3, metadata !1815, metadata !DIExpression()), !dbg !1829
  %4 = add nsw i32 %1, -194, !dbg !1830
  %5 = icmp ugt i32 %4, 50, !dbg !1830
  br i1 %5, label %if.then1, label %if.done2, !dbg !1827

if.then:                                          ; preds = %lookup.next41, %lookup.next36, %lookup.next28, %if.done2
  ret { i32, i32 } { i32 65533, i32 1 }, !dbg !1831

if.then1:                                         ; preds = %entry
  %6 = and i8 %3, 1, !dbg !1832
  %.not = icmp eq i8 %6, 0, !dbg !1832
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !1812, metadata !DIExpression()), !dbg !1833
  call void @llvm.dbg.value(metadata i8 %3, metadata !1816, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_shl, DW_OP_constu, 31, DW_OP_shra, DW_OP_stack_value)), !dbg !1834
  %7 = select i1 %.not, i32 %1, i32 65533, !dbg !1835
  %8 = insertvalue { i32, i32 } zeroinitializer, i32 %7, 0, !dbg !1836
  %9 = insertvalue { i32, i32 } %8, i32 1, 1, !dbg !1836
  ret { i32, i32 } %9, !dbg !1836

if.done2:                                         ; preds = %entry
  %10 = and i8 %3, 7, !dbg !1837
  %11 = zext i8 %10 to i32, !dbg !1838
  call void @llvm.dbg.value(metadata i32 %11, metadata !1817, metadata !DIExpression()), !dbg !1839
  %.fca.0.gep = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept, i32 0, i32 0, !dbg !1822
  store i8 0, i8* %.fca.0.gep, align 8, !dbg !1822
  %.fca.1.gep = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept, i32 0, i32 1, !dbg !1822
  store i8 0, i8* %.fca.1.gep, align 1, !dbg !1822
  call void @llvm.dbg.value(metadata i8 %3, metadata !1815, metadata !DIExpression()), !dbg !1840
  %12 = lshr i8 %3, 4, !dbg !1841
  %13 = zext i8 %12 to i32, !dbg !1827
  %.elt = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %13, i32 0, !dbg !1842
  %.unpack = load i8, i8* %.elt, align 2, !dbg !1842
  %.elt1 = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %13, i32 1, !dbg !1842
  %.unpack2 = load i8, i8* %.elt1, align 1, !dbg !1842
  store i8 %.unpack, i8* %.fca.0.gep, align 8, !dbg !1843
  store i8 %.unpack2, i8* %.fca.1.gep, align 1, !dbg !1843
  call void @llvm.dbg.value(metadata %"unicode/utf8.acceptRange" undef, metadata !1818, metadata !DIExpression()), !dbg !1843
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !1813, metadata !DIExpression()), !dbg !1844
  %14 = icmp sgt i32 %11, %s.len, !dbg !1845
  br i1 %14, label %if.then, label %if.done4, !dbg !1827

if.done4:                                         ; preds = %if.done2
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !1812, metadata !DIExpression()), !dbg !1846
  %15 = icmp ult i32 %s.len, 2, !dbg !1847
  br i1 %15, label %lookup.throw27, label %lookup.next28, !dbg !1847

if.done6:                                         ; preds = %lookup.next28
  call void @llvm.dbg.value(metadata i32 %11, metadata !1817, metadata !DIExpression()), !dbg !1848
  %16 = add nsw i32 %1, -224, !dbg !1849
  %17 = icmp ugt i32 %16, 20, !dbg !1849
  br i1 %17, label %if.then7, label %if.done8, !dbg !1827

if.then7:                                         ; preds = %if.done6
  call void @llvm.dbg.value(metadata i8 %0, metadata !1814, metadata !DIExpression()), !dbg !1850
  %18 = and i8 %0, 31, !dbg !1851
  %19 = zext i8 %18 to i32, !dbg !1852
  %20 = shl nuw nsw i32 %19, 6, !dbg !1853
  call void @llvm.dbg.value(metadata i8 %59, metadata !1819, metadata !DIExpression()), !dbg !1854
  %21 = and i8 %59, 63, !dbg !1855
  %22 = zext i8 %21 to i32, !dbg !1856
  %23 = or i32 %20, %22, !dbg !1857
  %24 = insertvalue { i32, i32 } zeroinitializer, i32 %23, 0, !dbg !1858
  %25 = insertvalue { i32, i32 } %24, i32 2, 1, !dbg !1858
  ret { i32, i32 } %25, !dbg !1858

if.done8:                                         ; preds = %if.done6
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !1812, metadata !DIExpression()), !dbg !1859
  %26 = icmp ult i32 %s.len, 3, !dbg !1860
  br i1 %26, label %lookup.throw35, label %lookup.next36, !dbg !1860

if.done11:                                        ; preds = %lookup.next36
  call void @llvm.dbg.value(metadata i32 %11, metadata !1817, metadata !DIExpression()), !dbg !1861
  %27 = add nsw i32 %1, -240, !dbg !1862
  %28 = icmp ugt i32 %27, 4, !dbg !1862
  br i1 %28, label %if.then12, label %if.done13, !dbg !1827

if.then12:                                        ; preds = %if.done11
  call void @llvm.dbg.value(metadata i8 %0, metadata !1814, metadata !DIExpression()), !dbg !1863
  %29 = and i8 %0, 15, !dbg !1864
  %30 = zext i8 %29 to i32, !dbg !1865
  %31 = shl nuw nsw i32 %30, 12, !dbg !1866
  call void @llvm.dbg.value(metadata i8 %59, metadata !1819, metadata !DIExpression()), !dbg !1867
  %32 = and i8 %59, 63, !dbg !1868
  %33 = zext i8 %32 to i32, !dbg !1869
  %34 = shl nuw nsw i32 %33, 6, !dbg !1870
  %35 = or i32 %34, %31, !dbg !1871
  call void @llvm.dbg.value(metadata i8 %63, metadata !1820, metadata !DIExpression()), !dbg !1872
  %36 = and i8 %63, 63, !dbg !1873
  %37 = zext i8 %36 to i32, !dbg !1874
  %38 = or i32 %35, %37, !dbg !1875
  %39 = insertvalue { i32, i32 } zeroinitializer, i32 %38, 0, !dbg !1876
  %40 = insertvalue { i32, i32 } %39, i32 3, 1, !dbg !1876
  ret { i32, i32 } %40, !dbg !1876

if.done13:                                        ; preds = %if.done11
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !1812, metadata !DIExpression()), !dbg !1877
  %41 = icmp ult i32 %s.len, 4, !dbg !1878
  br i1 %41, label %lookup.throw40, label %lookup.next41, !dbg !1878

if.done16:                                        ; preds = %lookup.next41
  call void @llvm.dbg.value(metadata i8 %0, metadata !1814, metadata !DIExpression()), !dbg !1879
  %42 = and i8 %0, 7, !dbg !1880
  %43 = zext i8 %42 to i32, !dbg !1881
  %44 = shl nuw nsw i32 %43, 18, !dbg !1882
  call void @llvm.dbg.value(metadata i8 %59, metadata !1819, metadata !DIExpression()), !dbg !1883
  %45 = and i8 %59, 63, !dbg !1884
  %46 = zext i8 %45 to i32, !dbg !1885
  %47 = shl nuw nsw i32 %46, 12, !dbg !1886
  %48 = or i32 %47, %44, !dbg !1887
  call void @llvm.dbg.value(metadata i8 %63, metadata !1820, metadata !DIExpression()), !dbg !1888
  %49 = and i8 %63, 63, !dbg !1889
  %50 = zext i8 %49 to i32, !dbg !1890
  %51 = shl nuw nsw i32 %50, 6, !dbg !1891
  %52 = or i32 %48, %51, !dbg !1892
  call void @llvm.dbg.value(metadata i8 %67, metadata !1821, metadata !DIExpression()), !dbg !1893
  %53 = and i8 %67, 63, !dbg !1894
  %54 = zext i8 %53 to i32, !dbg !1895
  %55 = or i32 %52, %54, !dbg !1896
  %56 = insertvalue { i32, i32 } zeroinitializer, i32 %55, 0, !dbg !1897
  %57 = insertvalue { i32, i32 } %56, i32 4, 1, !dbg !1897
  ret { i32, i32 } %57, !dbg !1897

lookup.throw27:                                   ; preds = %if.done4
  tail call fastcc void @runtime.lookupPanic(), !dbg !1847
  unreachable, !dbg !1847

lookup.next28:                                    ; preds = %if.done4
  %58 = getelementptr inbounds i8, i8* %s.data, i32 1, !dbg !1847
  %59 = load i8, i8* %58, align 1, !dbg !1847
  call void @llvm.dbg.value(metadata i8 %59, metadata !1819, metadata !DIExpression()), !dbg !1898
  %60 = icmp ult i8 %59, %.unpack, !dbg !1899
  %61 = icmp ult i8 %.unpack2, %59
  %or.cond48 = or i1 %60, %61, !dbg !1827
  call void @llvm.dbg.value(metadata i8 %59, metadata !1819, metadata !DIExpression()), !dbg !1900
  br i1 %or.cond48, label %if.then, label %if.done6, !dbg !1827

lookup.throw35:                                   ; preds = %if.done8
  tail call fastcc void @runtime.lookupPanic(), !dbg !1860
  unreachable, !dbg !1860

lookup.next36:                                    ; preds = %if.done8
  %62 = getelementptr inbounds i8, i8* %s.data, i32 2, !dbg !1860
  %63 = load i8, i8* %62, align 1, !dbg !1860
  call void @llvm.dbg.value(metadata i8 %63, metadata !1820, metadata !DIExpression()), !dbg !1901
  call void @llvm.dbg.value(metadata i8 %63, metadata !1820, metadata !DIExpression()), !dbg !1902
  %64 = icmp sgt i8 %63, -1, !dbg !1903
  %65 = icmp ugt i8 %63, -65
  %or.cond = or i1 %64, %65, !dbg !1827
  call void @llvm.dbg.value(metadata i8 %63, metadata !1820, metadata !DIExpression()), !dbg !1904
  br i1 %or.cond, label %if.then, label %if.done11, !dbg !1827

lookup.throw40:                                   ; preds = %if.done13
  tail call fastcc void @runtime.lookupPanic(), !dbg !1878
  unreachable, !dbg !1878

lookup.next41:                                    ; preds = %if.done13
  %66 = getelementptr inbounds i8, i8* %s.data, i32 3, !dbg !1878
  %67 = load i8, i8* %66, align 1, !dbg !1878
  call void @llvm.dbg.value(metadata i8 %67, metadata !1821, metadata !DIExpression()), !dbg !1905
  call void @llvm.dbg.value(metadata i8 %67, metadata !1821, metadata !DIExpression()), !dbg !1906
  %68 = icmp sgt i8 %67, -1, !dbg !1907
  %69 = icmp ugt i8 %67, -65
  %or.cond45 = or i1 %68, %69, !dbg !1827
  call void @llvm.dbg.value(metadata i8 %67, metadata !1821, metadata !DIExpression()), !dbg !1908
  br i1 %or.cond45, label %if.then, label %if.done16, !dbg !1827
}

; Function Attrs: noreturn optsize
define internal fastcc void @runtime._panic(i32 %message.typecode, i8* %message.value) unnamed_addr #4 section ".text.runtime._panic" !dbg !1909 {
entry:
  call void @llvm.dbg.value(metadata i32 %message.typecode, metadata !1913, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1914
  call void @llvm.dbg.value(metadata i8* %message.value, metadata !1913, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1914
  tail call fastcc void @runtime.printstring(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"runtime._panic$string", i32 0, i32 0), i32 7), !dbg !1915
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !1913, metadata !DIExpression()), !dbg !1916
  tail call fastcc void @runtime.printitf(i32 %message.typecode, i8* %message.value), !dbg !1917
  tail call fastcc void @runtime.printnl(), !dbg !1918
  tail call void @llvm.trap() #15, !dbg !1919
  unreachable, !dbg !1922
}

; Function Attrs: optsize
define internal fastcc { i32, i8* } @reflect.ValueOf(i32 %i.typecode, i8* %i.value) unnamed_addr #2 section ".text.reflect.ValueOf" !dbg !1923 {
entry:
  %i.i = alloca %runtime._interface, align 8, !dbg !1929
  %complit = alloca %reflect.Value, align 8, !dbg !1935
  call void @llvm.dbg.value(metadata i32 %i.typecode, metadata !1926, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1935
  call void @llvm.dbg.value(metadata i8* %i.value, metadata !1926, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1935
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !1926, metadata !DIExpression()), !dbg !1936
  %0 = bitcast %runtime._interface* %i.i to i8*, !dbg !1929
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0), !dbg !1929
  call void @llvm.dbg.value(metadata i32 %i.typecode, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1929
  call void @llvm.dbg.value(metadata i8* %i.value, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1929
  %.fca.0.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %i.i, i32 0, i32 0, !dbg !1929
  store i32 0, i32* %.fca.0.gep.i, align 8, !dbg !1929
  %.fca.1.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %i.i, i32 0, i32 1, !dbg !1929
  store i8* null, i8** %.fca.1.gep.i, align 4, !dbg !1929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0), !dbg !1937
  call void @llvm.dbg.value(metadata i32 %i.typecode, metadata !1927, metadata !DIExpression()), !dbg !1938
  call void @llvm.dbg.value(metadata i8* %i.value, metadata !1928, metadata !DIExpression()), !dbg !1939
  %1 = bitcast %reflect.Value* %complit to i8*, !dbg !1935
  %2 = bitcast %reflect.Value* %complit to i8*, !dbg !1935
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %2, i8 0, i64 9, i1 false), !dbg !1935
  %newret = insertvalue { i32, i8* } undef, i32 %i.typecode, 0, !dbg !1940
  %newret2 = insertvalue { i32, i8* } %newret, i8* %i.value, 1, !dbg !1940
  ret { i32, i8* } %newret2, !dbg !1940
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Kind" !dbg !1941 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !1952
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !1951, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1952
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1951, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1952
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !1951, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !1952
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !1952
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !1952
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !1952
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !1951, metadata !DIExpression()), !dbg !1953
  %2 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !1954
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %v.typecode), !dbg !1955
  ret i32 %3, !dbg !1956
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Value).Len"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Len" !dbg !1957 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !1961
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !1961
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !1961
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !1961
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !1961
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !1961
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !1961
  %v = alloca %reflect.Value, align 8, !dbg !1961
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !1961
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !1961
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !1961
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !1961
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !1961
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !1961
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !1961
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !1961
  store i8* %3, i8** %4, align 4, !dbg !1961
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !1961
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !1961
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !1962
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !1962
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !1962
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !1959, metadata !DIExpression()), !dbg !1963
  %6 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !1964
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !1960, metadata !DIExpression()), !dbg !1965
  %7 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %v.typecode), !dbg !1966
  switch i32 %7, label %switch.next8 [
    i32 23, label %deref.next10
    i32 19, label %deref.next12
    i32 25, label %deref.next16
    i32 22, label %deref.next20
    i32 17, label %deref.next26
  ], !dbg !1962

switch.next8:                                     ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !1967
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !1968
  store i8* %complit, i8** %8, align 4, !dbg !1968
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !1968
  store i8* %complit, i8** %9, align 4, !dbg !1968
  %.repack = bitcast i8* %complit to i8**, !dbg !1968
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(reflect.Value).Len$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !1968
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !1968
  %10 = bitcast i8* %.repack1 to i32*, !dbg !1968
  store i32 3, i32* %10, align 4, !dbg !1968
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !1969
  unreachable, !dbg !1969

deref.next10:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !1959, metadata !DIExpression()), !dbg !1970
  %11 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !1971
  %12 = tail call fastcc i32 @"(reflect.Type).Len"(i32 %v.typecode), !dbg !1972
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !1973
  ret i32 %12, !dbg !1973

deref.next12:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1974, metadata !DIExpression()), !dbg !2010
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1974, metadata !DIExpression()), !dbg !2012
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1980, metadata !DIExpression()), !dbg !2013
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1980, metadata !DIExpression()), !dbg !2014
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2015, metadata !DIExpression()), !dbg !2020
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2015, metadata !DIExpression()), !dbg !2022
  %13 = icmp eq i8* %v.value, null, !dbg !2023
  br i1 %13, label %runtime.chanLenUnsafePointer.exit, label %gep.next.i.i, !dbg !2024

gep.next.i.i:                                     ; preds = %deref.next12
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2015, metadata !DIExpression()), !dbg !2022
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2015, metadata !DIExpression()), !dbg !2020
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1980, metadata !DIExpression()), !dbg !2014
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !1980, metadata !DIExpression()), !dbg !2013
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2015, metadata !DIExpression()), !dbg !2025
  %14 = getelementptr inbounds i8, i8* %v.value, i32 24, !dbg !2026
  %15 = bitcast i8* %14 to i32*, !dbg !2026
  %16 = load i32, i32* %15, align 4, !dbg !2026
  br label %runtime.chanLenUnsafePointer.exit, !dbg !2027

runtime.chanLenUnsafePointer.exit:                ; preds = %gep.next.i.i2, %deref.next16, %deref.next12, %gep.next.i.i
  %17 = phi i32 [ %16, %gep.next.i.i ], [ 0, %deref.next12 ], [ %21, %gep.next.i.i2 ], [ 0, %deref.next16 ]
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2028
  ret i32 %17, !dbg !2028

deref.next16:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2029, metadata !DIExpression()), !dbg !2034
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2029, metadata !DIExpression()), !dbg !2036
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2033, metadata !DIExpression()), !dbg !2037
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2033, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2039, metadata !DIExpression()), !dbg !2044
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2039, metadata !DIExpression()), !dbg !2046
  %18 = icmp eq i8* %v.value, null, !dbg !2047
  br i1 %18, label %runtime.chanLenUnsafePointer.exit, label %gep.next.i.i2, !dbg !2048

gep.next.i.i2:                                    ; preds = %deref.next16
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2039, metadata !DIExpression()), !dbg !2046
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2039, metadata !DIExpression()), !dbg !2044
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2033, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2033, metadata !DIExpression()), !dbg !2037
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2039, metadata !DIExpression()), !dbg !2049
  %19 = getelementptr inbounds i8, i8* %v.value, i32 8, !dbg !2050
  %20 = bitcast i8* %19 to i32*, !dbg !2050
  %21 = load i32, i32* %20, align 4, !dbg !2050
  br label %runtime.chanLenUnsafePointer.exit, !dbg !2051

deref.next20:                                     ; preds = %entry
  %22 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2052
  %23 = bitcast i8* %22 to i32*, !dbg !2052
  %24 = load i32, i32* %23, align 4, !dbg !2052
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2053
  ret i32 %24, !dbg !2053

deref.next26:                                     ; preds = %entry
  %25 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2054
  %26 = bitcast i8* %25 to i32*, !dbg !2054
  %27 = load i32, i32* %26, align 4, !dbg !2054
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2055
  ret i32 %27, !dbg !2055
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Value).Type"(i32 returned %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Type" !dbg !2056 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !2059
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2058, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2059
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2058, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2059
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2058, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2059
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !2059
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !2059
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !2059
  ret i32 %v.typecode, !dbg !2060
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).Elem"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).Elem" !dbg !2061 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8* }, align 8, !dbg !2069
  store { %runtime.stackChainObject*, i32, i8*, i8* } { %runtime.stackChainObject* null, i32 2, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, align 4, !dbg !2069
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2069
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2069
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2069
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2069
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2069
  call void @llvm.dbg.value(metadata i32 %t, metadata !2066, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.value(metadata i32 %t, metadata !2066, metadata !DIExpression()), !dbg !2070
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t), !dbg !2071
  switch i32 %3, label %switch.next4 [
    i32 19, label %switch.body
    i32 21, label %switch.body
    i32 22, label %switch.body
    i32 23, label %switch.body3
  ], !dbg !2072

switch.body:                                      ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2066, metadata !DIExpression()), !dbg !2073
  %4 = tail call fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t), !dbg !2074
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2075
  ret i32 %4, !dbg !2075

switch.body3:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2066, metadata !DIExpression()), !dbg !2076
  %5 = tail call fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t), !dbg !2077
  call void @llvm.dbg.value(metadata i32 %5, metadata !2067, metadata !DIExpression()), !dbg !2078
  call void @llvm.dbg.value(metadata i32 %5, metadata !2067, metadata !DIExpression()), !dbg !2079
  %6 = add i32 %5, ptrtoint ([2 x i8]* @reflect.arrayTypesSidetable to i32), !dbg !2080
  %7 = inttoptr i32 %6 to i8*, !dbg !2081
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2082
  store i8* %7, i8** %8, align 4, !dbg !2082
  %9 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %7), !dbg !2082
  %10 = extractvalue { i32, i8* } %9, 1, !dbg !2082
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2072
  store i8* %10, i8** %11, align 4, !dbg !2072
  %12 = extractvalue { i32, i8* } %9, 0, !dbg !2072
  call void @llvm.dbg.value(metadata i32 %12, metadata !2068, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.value(metadata i32 %12, metadata !2068, metadata !DIExpression()), !dbg !2084
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2085
  ret i32 %12, !dbg !2085

switch.next4:                                     ; preds = %entry
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Type).Elem$pack" to i8*)), !dbg !2086
  unreachable, !dbg !2086
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).Size"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).Size" !dbg !2087 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, align 8, !dbg !2102
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 4, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2102
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2102
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2102
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2102
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2102
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2102
  %lastField = alloca %reflect.StructField, align 8, !dbg !2102
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2103
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t), !dbg !2104
  switch i32 %3, label %switch.next39 [
    i32 1, label %switch.body
    i32 3, label %switch.body
    i32 8, label %switch.body
    i32 4, label %switch.body3
    i32 9, label %switch.body3
    i32 5, label %switch.body6
    i32 10, label %switch.body6
    i32 6, label %switch.body9
    i32 11, label %switch.body9
    i32 2, label %switch.body12
    i32 7, label %switch.body12
    i32 12, label %switch.body15
    i32 13, label %switch.body17
    i32 14, label %switch.body19
    i32 15, label %switch.body21
    i32 16, label %switch.body23
    i32 17, label %switch.body25
    i32 18, label %switch.body27
    i32 19, label %switch.body27
    i32 25, label %switch.body27
    i32 21, label %switch.body27
    i32 22, label %switch.body32
    i32 20, label %switch.body34
    i32 23, label %switch.body36
    i32 26, label %switch.body38
  ], !dbg !2105

switch.body:                                      ; preds = %switch.body38, %entry, %entry, %entry, %switch.body34, %switch.body32, %switch.body27, %switch.body25, %switch.body23, %switch.body21, %switch.body19, %switch.body17, %switch.body15, %switch.body12, %switch.body9, %switch.body6, %switch.body3
  %merge = phi i32 [ 1, %entry ], [ 2, %switch.body3 ], [ 4, %switch.body6 ], [ 8, %switch.body9 ], [ 4, %switch.body12 ], [ 4, %switch.body15 ], [ 4, %switch.body17 ], [ 8, %switch.body19 ], [ 8, %switch.body21 ], [ 16, %switch.body23 ], [ 8, %switch.body25 ], [ 4, %switch.body27 ], [ 12, %switch.body32 ], [ 8, %switch.body34 ], [ 1, %entry ], [ 1, %entry ], [ 0, %switch.body38 ]
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2106
  ret i32 %merge, !dbg !2106

switch.body3:                                     ; preds = %entry, %entry
  br label %switch.body

switch.body6:                                     ; preds = %entry, %entry
  br label %switch.body

switch.body9:                                     ; preds = %entry, %entry
  br label %switch.body

switch.body12:                                    ; preds = %entry, %entry
  br label %switch.body

switch.body15:                                    ; preds = %entry
  br label %switch.body

switch.body17:                                    ; preds = %entry
  br label %switch.body

switch.body19:                                    ; preds = %entry
  br label %switch.body

switch.body21:                                    ; preds = %entry
  br label %switch.body

switch.body23:                                    ; preds = %entry
  br label %switch.body

switch.body25:                                    ; preds = %entry
  br label %switch.body

switch.body27:                                    ; preds = %entry, %entry, %entry, %entry
  br label %switch.body

switch.body32:                                    ; preds = %entry
  br label %switch.body

switch.body34:                                    ; preds = %entry
  br label %switch.body

switch.body36:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2107
  %4 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %t), !dbg !2108
  %5 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %4), !dbg !2109
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2110
  %6 = tail call fastcc i32 @"(reflect.Type).Len"(i32 %t), !dbg !2111
  %7 = mul i32 %6, %5, !dbg !2112
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2113
  ret i32 %7, !dbg !2113

switch.body38:                                    ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2114
  %8 = tail call fastcc i32 @"(reflect.Type).NumField"(i32 %t), !dbg !2115
  call void @llvm.dbg.value(metadata i32 %8, metadata !2090, metadata !DIExpression()), !dbg !2116
  call void @llvm.dbg.value(metadata i32 %8, metadata !2090, metadata !DIExpression()), !dbg !2117
  %9 = icmp eq i32 %8, 0, !dbg !2118
  br i1 %9, label %switch.body, label %if.done, !dbg !2105

if.done:                                          ; preds = %switch.body38
  %.fca.5.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %lastField, i32 0, i32 5, !dbg !2102
  store i32 0, i32* %.fca.5.gep, align 8, !dbg !2102
  %10 = bitcast %reflect.StructField* %lastField to i8*, !dbg !2102
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2102
  store i8* %10, i8** %11, align 4, !dbg !2102
  %12 = bitcast %reflect.StructField* %lastField to i8*, !dbg !2102
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(29) %12, i8 0, i64 29, i1 false), !dbg !2102
  call void @llvm.dbg.value(metadata i32 %t, metadata !2089, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %8, metadata !2090, metadata !DIExpression()), !dbg !2120
  %13 = add i32 %8, -1, !dbg !2121
  %14 = tail call fastcc { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } @"(reflect.Type).Field"(i32 %t, i32 %13), !dbg !2122
  %newret = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %14, 0, !dbg !2122
  %newret1 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %14, 1, !dbg !2122
  %newret3 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %14, 2, !dbg !2122
  %newret5 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %14, 3, !dbg !2122
  %newret9 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %14, 5, !dbg !2122
  %15 = extractvalue %runtime._string %newret, 0, !dbg !2122
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2122
  store i8* %15, i8** %16, align 4, !dbg !2122
  %17 = extractvalue %runtime._string %newret1, 0, !dbg !2122
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2122
  store i8* %17, i8** %18, align 4, !dbg !2122
  %19 = extractvalue %runtime._string %newret5, 0, !dbg !2122
  %20 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2123
  store i8* %19, i8** %20, align 4, !dbg !2123
  call void @llvm.dbg.value(metadata %reflect.StructField undef, metadata !2091, metadata !DIExpression()), !dbg !2123
  %21 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %newret3), !dbg !2124
  %22 = add i32 %21, %newret9, !dbg !2125
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2126
  ret i32 %22, !dbg !2126

switch.next39:                                    ; preds = %entry
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Type).Size$pack" to i8*)), !dbg !2127
  unreachable, !dbg !2127
}

; Function Attrs: optsize
define internal fastcc void @runtime.slicePanic() unnamed_addr #2 section ".text.runtime.slicePanic" !dbg !2128 {
entry:
  tail call fastcc void @runtime.runtimePanic(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @"runtime.slicePanic$string", i32 0, i32 0), i32 18), !dbg !2129
  ret void, !dbg !2130
}

; Function Attrs: argmemonly nounwind optsize willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).Align"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).Align" !dbg !2131 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2139
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2139
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2139
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2139
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2139
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2139
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2139
  br label %tailrecurse, !dbg !2139

tailrecurse:                                      ; preds = %switch.body38, %entry
  %t.tr = phi i32 [ %t, %entry ], [ %18, %switch.body38 ]
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2141
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t.tr), !dbg !2142
  switch i32 %3, label %switch.next39 [
    i32 1, label %switch.body
    i32 3, label %switch.body
    i32 8, label %switch.body
    i32 4, label %switch.body3
    i32 9, label %switch.body3
    i32 5, label %switch.body6
    i32 10, label %switch.body6
    i32 6, label %switch.body9
    i32 11, label %switch.body9
    i32 2, label %switch.body12
    i32 7, label %switch.body12
    i32 12, label %switch.body15
    i32 13, label %switch.body17
    i32 14, label %switch.body19
    i32 15, label %switch.body21
    i32 16, label %switch.body23
    i32 17, label %switch.body25
    i32 18, label %switch.body27
    i32 19, label %switch.body27
    i32 25, label %switch.body27
    i32 21, label %switch.body27
    i32 22, label %switch.body32
    i32 20, label %switch.body34
    i32 26, label %switch.body36
    i32 23, label %switch.body38
  ], !dbg !2143

switch.body:                                      ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %for.loop, %switch.body34, %switch.body32, %switch.body27, %switch.body25, %switch.body23, %switch.body21, %switch.body19, %switch.body17, %switch.body15, %switch.body12, %switch.body9, %switch.body6, %switch.body3
  %merge = phi i32 [ 2, %switch.body3 ], [ 4, %switch.body6 ], [ 4, %switch.body9 ], [ 4, %switch.body12 ], [ 4, %switch.body15 ], [ 4, %switch.body17 ], [ 4, %switch.body19 ], [ 4, %switch.body21 ], [ 4, %switch.body23 ], [ 4, %switch.body25 ], [ 4, %switch.body27 ], [ 4, %switch.body32 ], [ 4, %switch.body34 ], [ %6, %for.loop ], [ 1, %tailrecurse ], [ 1, %tailrecurse ], [ 1, %tailrecurse ]
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2144
  ret i32 %merge, !dbg !2144

switch.body3:                                     ; preds = %tailrecurse, %tailrecurse
  br label %switch.body

switch.body6:                                     ; preds = %tailrecurse, %tailrecurse
  br label %switch.body

switch.body9:                                     ; preds = %tailrecurse, %tailrecurse
  br label %switch.body

switch.body12:                                    ; preds = %tailrecurse, %tailrecurse
  br label %switch.body

switch.body15:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body17:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body19:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body21:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body23:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body25:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body27:                                    ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  br label %switch.body

switch.body32:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body34:                                    ; preds = %tailrecurse
  br label %switch.body

switch.body36:                                    ; preds = %tailrecurse
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2140
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2145
  %4 = tail call fastcc i32 @"(reflect.Type).NumField"(i32 %t.tr), !dbg !2146
  call void @llvm.dbg.value(metadata i32 %4, metadata !2134, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.value(metadata i32 1, metadata !2135, metadata !DIExpression()), !dbg !2148
  call void @llvm.dbg.value(metadata i32 0, metadata !2136, metadata !DIExpression()), !dbg !2149
  %5 = icmp sgt i32 %4, 0, !dbg !2143
  %smax = select i1 %5, i32 %4, i32 0, !dbg !2143
  br label %for.loop, !dbg !2143

for.loop:                                         ; preds = %for.body, %switch.body36
  %6 = phi i32 [ 1, %switch.body36 ], [ %spec.select, %for.body ], !dbg !2148
  %7 = phi i32 [ 0, %switch.body36 ], [ %17, %for.body ], !dbg !2149
  call void @llvm.dbg.value(metadata i32 %7, metadata !2136, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.value(metadata i32 %4, metadata !2134, metadata !DIExpression()), !dbg !2151
  %exitcond.not = icmp eq i32 %7, %smax, !dbg !2152
  br i1 %exitcond.not, label %switch.body, label %for.body, !dbg !2143

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2153
  call void @llvm.dbg.value(metadata i32 %7, metadata !2136, metadata !DIExpression()), !dbg !2154
  %8 = tail call fastcc { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } @"(reflect.Type).Field"(i32 %t.tr, i32 %7), !dbg !2155
  %newret = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %8, 0, !dbg !2155
  %newret1 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %8, 1, !dbg !2155
  %newret3 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %8, 2, !dbg !2155
  %newret5 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %8, 3, !dbg !2155
  %9 = extractvalue %runtime._string %newret, 0, !dbg !2155
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2155
  store i8* %9, i8** %10, align 4, !dbg !2155
  %11 = extractvalue %runtime._string %newret1, 0, !dbg !2155
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2155
  store i8* %11, i8** %12, align 4, !dbg !2155
  %13 = extractvalue %runtime._string %newret5, 0, !dbg !2155
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2156
  store i8* %13, i8** %14, align 4, !dbg !2156
  call void @llvm.dbg.value(metadata i32 %newret3, metadata !2137, metadata !DIExpression()), !dbg !2156
  %15 = tail call fastcc i32 @"(reflect.Type).Align"(i32 %newret3), !dbg !2157
  call void @llvm.dbg.value(metadata i32 %15, metadata !2138, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.value(metadata i32 %6, metadata !2135, metadata !DIExpression()), !dbg !2159
  %16 = icmp sgt i32 %15, %6, !dbg !2160
  %spec.select = select i1 %16, i32 %15, i32 %6, !dbg !2143
  %17 = add nuw i32 %7, 1, !dbg !2161
  call void @llvm.dbg.value(metadata i32 %17, metadata !2136, metadata !DIExpression()), !dbg !2161
  br label %for.loop, !dbg !2143

switch.body38:                                    ; preds = %tailrecurse
  call void @llvm.dbg.value(metadata i32 %t.tr, metadata !2133, metadata !DIExpression()), !dbg !2162
  %18 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %t.tr), !dbg !2163
  br label %tailrecurse, !dbg !2139

switch.next39:                                    ; preds = %tailrecurse
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Type).Align$pack" to i8*)), !dbg !2164
  unreachable, !dbg !2164
}

; Function Attrs: norecurse nounwind optsize readnone
define internal fastcc i32 @"(reflect.Type).Kind"(i32 %t) unnamed_addr #6 section ".text.(reflect.Type).Kind" !dbg !2165 {
entry:
  call void @llvm.dbg.value(metadata i32 %t, metadata !2167, metadata !DIExpression()), !dbg !2168
  call void @llvm.dbg.value(metadata i32 %t, metadata !2167, metadata !DIExpression()), !dbg !2169
  %0 = and i32 %t, 1, !dbg !2170
  %1 = icmp eq i32 %0, 0, !dbg !2171
  call void @llvm.dbg.value(metadata i32 %t, metadata !2167, metadata !DIExpression()), !dbg !2172
  call void @llvm.dbg.value(metadata i32 %t, metadata !2167, metadata !DIExpression()), !dbg !2173
  %2 = lshr i32 %t, 1, !dbg !2174
  br i1 %1, label %if.then, label %if.else, !dbg !2174

if.then:                                          ; preds = %entry
  %3 = and i32 %2, 31, !dbg !2175
  ret i32 %3, !dbg !2176

if.else:                                          ; preds = %entry
  %4 = and i32 %2, 7, !dbg !2177
  %5 = add nuw nsw i32 %4, 19, !dbg !2178
  ret i32 %5, !dbg !2179
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).NumField"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).NumField" !dbg !2180 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, align 8, !dbg !2185
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 4, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2185
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2185
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2185
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2185
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2185
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2185
  call void @llvm.dbg.value(metadata i32 %t, metadata !2182, metadata !DIExpression()), !dbg !2185
  call void @llvm.dbg.value(metadata i32 %t, metadata !2182, metadata !DIExpression()), !dbg !2186
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t), !dbg !2187
  %.not = icmp eq i32 %3, 26, !dbg !2188
  br i1 %.not, label %if.done, label %if.then, !dbg !2189

if.then:                                          ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2190
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2191
  store i8* %complit, i8** %4, align 4, !dbg !2191
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2191
  store i8* %complit, i8** %5, align 4, !dbg !2191
  %.repack = bitcast i8* %complit to i8**, !dbg !2191
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @"(reflect.Type).NumField$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2191
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2191
  %6 = bitcast i8* %.repack1 to i32*, !dbg !2191
  store i32 8, i32* %6, align 4, !dbg !2191
  tail call fastcc void @runtime._panic(i32 2021, i8* nonnull %complit), !dbg !2192
  unreachable, !dbg !2192

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2182, metadata !DIExpression()), !dbg !2193
  %7 = tail call fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t), !dbg !2194
  call void @llvm.dbg.value(metadata i32 %7, metadata !2183, metadata !DIExpression()), !dbg !2195
  call void @llvm.dbg.value(metadata i32 %7, metadata !2183, metadata !DIExpression()), !dbg !2196
  %8 = add i32 %7, ptrtoint ([139 x i8]* @reflect.structTypesSidetable to i32), !dbg !2197
  %9 = inttoptr i32 %8 to i8*, !dbg !2198
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2199
  store i8* %9, i8** %10, align 4, !dbg !2199
  %11 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %9), !dbg !2199
  %12 = extractvalue { i32, i8* } %11, 1, !dbg !2199
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2189
  store i8* %12, i8** %13, align 4, !dbg !2189
  %14 = extractvalue { i32, i8* } %11, 0, !dbg !2189
  call void @llvm.dbg.value(metadata i32 %14, metadata !2184, metadata !DIExpression()), !dbg !2200
  call void @llvm.dbg.value(metadata i32 %14, metadata !2184, metadata !DIExpression()), !dbg !2201
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2202
  ret i32 %14, !dbg !2202
}

; Function Attrs: optsize
define internal fastcc { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } @"(reflect.Type).Field"(i32 %t, i32 %i) unnamed_addr #2 section ".text.(reflect.Type).Field" !dbg !2203 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2225
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 16, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2225
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2225
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2225
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2225
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2225
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2225
  %field = alloca %reflect.StructField, align 8, !dbg !2225
  call void @llvm.dbg.value(metadata i32 %t, metadata !2207, metadata !DIExpression()), !dbg !2225
  call void @llvm.dbg.value(metadata i32 %i, metadata !2208, metadata !DIExpression()), !dbg !2225
  call void @llvm.dbg.value(metadata i32 %t, metadata !2207, metadata !DIExpression()), !dbg !2226
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t), !dbg !2227
  %.not = icmp eq i32 %3, 26, !dbg !2228
  br i1 %.not, label %if.done, label %if.then, !dbg !2229

if.then:                                          ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2230
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2231
  store i8* %complit, i8** %4, align 4, !dbg !2231
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2231
  store i8* %complit, i8** %5, align 4, !dbg !2231
  %.repack = bitcast i8* %complit to i8**, !dbg !2231
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(reflect.Type).Field$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2231
  %.repack23 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2231
  %6 = bitcast i8* %.repack23 to i32*, !dbg !2231
  store i32 5, i32* %6, align 4, !dbg !2231
  tail call fastcc void @runtime._panic(i32 2021, i8* nonnull %complit), !dbg !2232
  unreachable, !dbg !2232

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2207, metadata !DIExpression()), !dbg !2233
  %7 = tail call fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t), !dbg !2234
  call void @llvm.dbg.value(metadata i32 %7, metadata !2209, metadata !DIExpression()), !dbg !2235
  call void @llvm.dbg.value(metadata i32 %7, metadata !2209, metadata !DIExpression()), !dbg !2236
  %8 = add i32 %7, ptrtoint ([139 x i8]* @reflect.structTypesSidetable to i32), !dbg !2237
  %9 = inttoptr i32 %8 to i8*, !dbg !2238
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2239
  store i8* %9, i8** %10, align 4, !dbg !2239
  %11 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %9), !dbg !2239
  %12 = extractvalue { i32, i8* } %11, 1, !dbg !2239
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2229
  store i8* %12, i8** %13, align 4, !dbg !2229
  %14 = extractvalue { i32, i8* } %11, 0, !dbg !2229
  call void @llvm.dbg.value(metadata i32 %14, metadata !2210, metadata !DIExpression()), !dbg !2240
  call void @llvm.dbg.value(metadata i8* %12, metadata !2211, metadata !DIExpression()), !dbg !2241
  call void @llvm.dbg.value(metadata i32 %i, metadata !2208, metadata !DIExpression()), !dbg !2242
  call void @llvm.dbg.value(metadata i32 %14, metadata !2210, metadata !DIExpression()), !dbg !2243
  %.not19 = icmp ugt i32 %14, %i, !dbg !2244
  br i1 %.not19, label %if.done2, label %if.then1, !dbg !2229

if.then1:                                         ; preds = %if.done
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Type).Field$pack" to i8*)), !dbg !2245
  unreachable, !dbg !2245

if.done2:                                         ; preds = %if.done
  %.fca.0.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 0, i32 0, !dbg !2225
  %.fca.0.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 0, i32 1, !dbg !2225
  %.fca.1.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 1, i32 0, !dbg !2225
  %.fca.1.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 1, i32 1, !dbg !2225
  %.fca.2.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 2, !dbg !2225
  %.fca.3.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 3, i32 0, !dbg !2225
  %.fca.3.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 3, i32 1, !dbg !2225
  %.fca.4.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 4, !dbg !2225
  %.fca.5.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %field, i32 0, i32 5, !dbg !2225
  store i32 0, i32* %.fca.5.gep, align 8, !dbg !2225
  %15 = bitcast %reflect.StructField* %field to i8*, !dbg !2225
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2225
  store i8* %15, i8** %16, align 4, !dbg !2225
  %17 = bitcast %reflect.StructField* %field to i8*, !dbg !2225
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(29) %17, i8 0, i64 29, i1 false), !dbg !2225
  call void @llvm.dbg.value(metadata i32 0, metadata !2212, metadata !DIExpression()), !dbg !2246
  call void @llvm.dbg.value(metadata i32 0, metadata !2213, metadata !DIExpression()), !dbg !2247
  br label %for.loop, !dbg !2229

for.loop:                                         ; preds = %if.done4, %if.done2
  %.fca.5.load = phi i32 [ 0, %if.done2 ], [ %36, %if.done4 ]
  %.fca.4.load = phi i1 [ false, %if.done2 ], [ %46, %if.done4 ]
  %.fca.3.1.load = phi i32 [ 0, %if.done2 ], [ %storemerge, %if.done4 ]
  %.fca.3.0.load = phi i8* [ null, %if.done2 ], [ %storemerge24, %if.done4 ]
  %.fca.2.load = phi i32 [ 0, %if.done2 ], [ %31, %if.done4 ]
  %.fca.1.1.load = phi i32 [ 0, %if.done2 ], [ %.27, %if.done4 ]
  %.fca.1.0.load = phi i8* [ null, %if.done2 ], [ %., %if.done4 ]
  %.fca.0.1.load = phi i32 [ 0, %if.done2 ], [ %newret17, %if.done4 ]
  %.fca.0.0.load = phi i8* [ null, %if.done2 ], [ %newret15, %if.done4 ]
  %18 = phi i8* [ %12, %if.done2 ], [ %54, %if.done4 ], !dbg !2241
  %19 = phi i32 [ 0, %if.done2 ], [ %38, %if.done4 ], !dbg !2246
  %20 = phi i32 [ 0, %if.done2 ], [ %57, %if.done4 ], !dbg !2247
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !2248
  store i8* %.fca.3.0.load, i8** %21, align 4, !dbg !2248
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !2248
  store i8* %.fca.1.0.load, i8** %22, align 4, !dbg !2248
  %23 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !2248
  store i8* %.fca.0.0.load, i8** %23, align 4, !dbg !2248
  %24 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2248
  store i8* %18, i8** %24, align 4, !dbg !2248
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2248
  store i8* %18, i8** %25, align 4, !dbg !2248
  call void @llvm.dbg.value(metadata i32 %20, metadata !2213, metadata !DIExpression()), !dbg !2248
  call void @llvm.dbg.value(metadata i32 %i, metadata !2208, metadata !DIExpression()), !dbg !2249
  %.not20 = icmp sgt i32 %20, %i, !dbg !2250
  br i1 %.not20, label %deref.next47, label %for.body, !dbg !2229

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i8* %18, metadata !2211, metadata !DIExpression()), !dbg !2251
  %26 = load i8, i8* %18, align 1, !dbg !2252
  call void @llvm.dbg.value(metadata i8 %26, metadata !2214, metadata !DIExpression()), !dbg !2253
  %27 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !2254
  call void @llvm.dbg.value(metadata i32 0, metadata !2215, metadata !DIExpression()), !dbg !2255
  call void @llvm.dbg.value(metadata i8* %27, metadata !2211, metadata !DIExpression()), !dbg !2256
  %28 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* nonnull %27), !dbg !2257
  %29 = extractvalue { i32, i8* } %28, 1, !dbg !2257
  %30 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2229
  store i8* %29, i8** %30, align 4, !dbg !2229
  %31 = extractvalue { i32, i8* } %28, 0, !dbg !2229
  call void @llvm.dbg.value(metadata i8* %29, metadata !2211, metadata !DIExpression()), !dbg !2258
  call void @llvm.dbg.value(metadata i32 %31, metadata !2215, metadata !DIExpression()), !dbg !2259
  store i32 %31, i32* %.fca.2.gep, align 8, !dbg !2260
  call void @llvm.dbg.value(metadata i32 %31, metadata !2216, metadata !DIExpression()), !dbg !2260
  call void @llvm.dbg.value(metadata i32 %19, metadata !2212, metadata !DIExpression()), !dbg !2261
  %32 = tail call fastcc i32 @"(reflect.Type).Align"(i32 %31), !dbg !2262
  call void @llvm.dbg.value(metadata i32 %19, metadata !2263, metadata !DIExpression()), !dbg !2267
  call void @llvm.dbg.value(metadata i32 %32, metadata !2266, metadata !DIExpression()), !dbg !2267
  call void @llvm.dbg.value(metadata i32 %19, metadata !2263, metadata !DIExpression()), !dbg !2269
  call void @llvm.dbg.value(metadata i32 %32, metadata !2266, metadata !DIExpression()), !dbg !2270
  %33 = add i32 %19, -1, !dbg !2271
  %34 = add i32 %33, %32, !dbg !2272
  call void @llvm.dbg.value(metadata i32 %32, metadata !2266, metadata !DIExpression()), !dbg !2273
  %35 = sub i32 0, %32, !dbg !2274
  %36 = and i32 %34, %35, !dbg !2274
  call void @llvm.dbg.value(metadata i32 %36, metadata !2212, metadata !DIExpression()), !dbg !2275
  store i32 %36, i32* %.fca.5.gep, align 8, !dbg !2276
  call void @llvm.dbg.value(metadata i32 %36, metadata !2217, metadata !DIExpression()), !dbg !2276
  %37 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %31), !dbg !2277
  %38 = add i32 %36, %37, !dbg !2278
  call void @llvm.dbg.value(metadata i32 %38, metadata !2212, metadata !DIExpression()), !dbg !2278
  call void @llvm.dbg.value(metadata i32 0, metadata !2218, metadata !DIExpression()), !dbg !2279
  %39 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %29), !dbg !2280
  %40 = extractvalue { i32, i8* } %39, 1, !dbg !2280
  %41 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !2229
  store i8* %40, i8** %41, align 4, !dbg !2229
  %42 = extractvalue { i32, i8* } %39, 0, !dbg !2229
  call void @llvm.dbg.value(metadata i32 %42, metadata !2218, metadata !DIExpression()), !dbg !2281
  call void @llvm.dbg.value(metadata i8* %40, metadata !2211, metadata !DIExpression()), !dbg !2282
  %43 = tail call fastcc { i8*, i32 } @reflect.readStringSidetable(i32 %42), !dbg !2283
  %newret15 = extractvalue { i8*, i32 } %43, 0, !dbg !2283
  %44 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !2283
  store i8* %newret15, i8** %44, align 4, !dbg !2283
  %newret17 = extractvalue { i8*, i32 } %43, 1, !dbg !2283
  store i8* %newret15, i8** %.fca.0.0.gep, align 8, !dbg !2284
  store i32 %newret17, i32* %.fca.0.1.gep, align 4, !dbg !2284
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2219, metadata !DIExpression()), !dbg !2284
  %45 = and i8 %26, 1, !dbg !2285
  %46 = icmp ne i8 %45, 0, !dbg !2286
  store i1 %46, i1* %.fca.4.gep, align 4, !dbg !2287
  call void @llvm.dbg.value(metadata i1 %46, metadata !2220, metadata !DIExpression()), !dbg !2287
  %47 = and i8 %26, 2, !dbg !2288
  %.not21 = icmp eq i8 %47, 0, !dbg !2289
  br i1 %.not21, label %if.done4, label %if.then3, !dbg !2229

if.then3:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, metadata !2221, metadata !DIExpression()), !dbg !2290
  call void @llvm.dbg.value(metadata i8* %40, metadata !2211, metadata !DIExpression()), !dbg !2291
  %48 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %40), !dbg !2292
  %49 = extractvalue { i32, i8* } %48, 1, !dbg !2292
  %50 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !2229
  store i8* %49, i8** %50, align 4, !dbg !2229
  %51 = extractvalue { i32, i8* } %48, 0, !dbg !2229
  call void @llvm.dbg.value(metadata i32 %51, metadata !2221, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.value(metadata i8* %49, metadata !2211, metadata !DIExpression()), !dbg !2294
  %52 = tail call fastcc { i8*, i32 } @reflect.readStringSidetable(i32 %51), !dbg !2295
  %newret11 = extractvalue { i8*, i32 } %52, 0, !dbg !2295
  %53 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !2295
  store i8* %newret11, i8** %53, align 4, !dbg !2295
  %newret13 = extractvalue { i8*, i32 } %52, 1, !dbg !2295
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2222, metadata !DIExpression()), !dbg !2296
  br label %if.done4, !dbg !2229

if.done4:                                         ; preds = %for.body, %if.then3
  %storemerge24 = phi i8* [ %newret11, %if.then3 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @"strconv.init$string.478", i32 0, i32 0), %for.body ], !dbg !2229
  %storemerge = phi i32 [ %newret13, %if.then3 ], [ 0, %for.body ], !dbg !2229
  %54 = phi i8* [ %49, %if.then3 ], [ %40, %for.body ], !dbg !2241
  %55 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !2229
  store i8* %54, i8** %55, align 4, !dbg !2229
  store i8* %storemerge24, i8** %.fca.3.0.gep, align 4, !dbg !2229
  store i32 %storemerge, i32* %.fca.3.1.gep, align 4, !dbg !2229
  call void @llvm.dbg.value(metadata i8 %26, metadata !2214, metadata !DIExpression()), !dbg !2297
  %56 = and i8 %26, 4, !dbg !2298
  %.not22 = icmp eq i8 %56, 0, !dbg !2299
  %. = select i1 %.not22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"(reflect.Type).Field$string.4", i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @"strconv.init$string.478", i32 0, i32 0), !dbg !2229
  %.27 = select i1 %.not22, i32 15, i32 0, !dbg !2229
  store i8* %., i8** %.fca.1.0.gep, align 8, !dbg !2229
  store i32 %.27, i32* %.fca.1.1.gep, align 4, !dbg !2229
  %57 = add i32 %20, 1, !dbg !2300
  call void @llvm.dbg.value(metadata i32 %57, metadata !2213, metadata !DIExpression()), !dbg !2300
  br label %for.loop, !dbg !2229

deref.next47:                                     ; preds = %for.loop
  call void @llvm.dbg.value(metadata %reflect.StructField undef, metadata !2224, metadata !DIExpression()), !dbg !2301
  %58 = insertvalue %runtime._string undef, i8* %.fca.0.0.load, 0, !dbg !2302
  %oldret = insertvalue %runtime._string %58, i32 %.fca.0.1.load, 1, !dbg !2302
  %newret = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } undef, %runtime._string %oldret, 0, !dbg !2302
  %59 = insertvalue %runtime._string undef, i8* %.fca.1.0.load, 0, !dbg !2302
  %oldret1 = insertvalue %runtime._string %59, i32 %.fca.1.1.load, 1, !dbg !2302
  %newret2 = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret, %runtime._string %oldret1, 1, !dbg !2302
  %newret4 = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret2, i32 %.fca.2.load, 2, !dbg !2302
  %60 = insertvalue %runtime._string undef, i8* %.fca.3.0.load, 0, !dbg !2302
  %oldret5 = insertvalue %runtime._string %60, i32 %.fca.3.1.load, 1, !dbg !2302
  %newret6 = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret4, %runtime._string %oldret5, 3, !dbg !2302
  %newret8 = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret6, i1 %.fca.4.load, 4, !dbg !2302
  %newret10 = insertvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret8, i32 %.fca.5.load, 5, !dbg !2302
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2302
  ret { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %newret10, !dbg !2302
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).stripPrefix" !dbg !2303 {
entry:
  call void @llvm.dbg.value(metadata i32 %t, metadata !2305, metadata !DIExpression()), !dbg !2308
  call void @llvm.dbg.value(metadata i32 %t, metadata !2305, metadata !DIExpression()), !dbg !2309
  %0 = and i32 %t, 16, !dbg !2310
  %.not = icmp eq i32 %0, 0, !dbg !2310
  call void @llvm.dbg.value(metadata i32 %t, metadata !2305, metadata !DIExpression()), !dbg !2311
  call void @llvm.dbg.value(metadata i32 %t, metadata !2305, metadata !DIExpression()), !dbg !2312
  %1 = lshr i32 %t, 5, !dbg !2313
  br i1 %.not, label %if.done, label %if.then, !dbg !2313

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %1, metadata !2306, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.value(metadata i32 %1, metadata !2306, metadata !DIExpression()), !dbg !2315
  %2 = shl nuw nsw i32 %1, 2, !dbg !2316
  %3 = add i32 %2, ptrtoint ([13 x i32]* @reflect.namedNonBasicTypesSidetable to i32), !dbg !2317
  %4 = inttoptr i32 %3 to i8*, !dbg !2318
  %5 = inttoptr i32 %3 to i32*, !dbg !2319
  %6 = load i32, i32* %5, align 4, !dbg !2320
  call void @llvm.dbg.value(metadata i32 %6, metadata !2307, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %6, metadata !2307, metadata !DIExpression()), !dbg !2322
  ret i32 %6, !dbg !2323

if.done:                                          ; preds = %entry
  ret i32 %1, !dbg !2324
}

; Function Attrs: optsize
define internal fastcc { i32, i8* } @reflect.readVarint(i8* %buf) unnamed_addr #2 section ".text.reflect.readVarint" !dbg !2325 {
entry:
  call void @llvm.dbg.value(metadata i8* %buf, metadata !2328, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.value(metadata i32 0, metadata !2329, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata i32 0, metadata !2330, metadata !DIExpression()), !dbg !2334
  br label %for.body, !dbg !2335

for.body:                                         ; preds = %for.body, %entry
  %0 = phi i8* [ %buf, %entry ], [ %9, %for.body ], !dbg !2336
  %1 = phi i32 [ 0, %entry ], [ %7, %for.body ], !dbg !2333
  %2 = phi i32 [ 0, %entry ], [ %8, %for.body ], !dbg !2334
  call void @llvm.dbg.value(metadata i8* %0, metadata !2328, metadata !DIExpression()), !dbg !2337
  %3 = load i8, i8* %0, align 1, !dbg !2338
  call void @llvm.dbg.value(metadata i8 %3, metadata !2331, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.value(metadata i8 %3, metadata !2331, metadata !DIExpression()), !dbg !2340
  %4 = and i8 %3, 127, !dbg !2341
  %5 = zext i8 %4 to i32, !dbg !2342
  call void @llvm.dbg.value(metadata i32 %2, metadata !2330, metadata !DIExpression()), !dbg !2343
  %shift.overflow = icmp ugt i32 %2, 31, !dbg !2344
  %6 = shl i32 %5, %2, !dbg !2344
  %shift.result = select i1 %shift.overflow, i32 0, i32 %6, !dbg !2344
  %7 = or i32 %shift.result, %1, !dbg !2345
  call void @llvm.dbg.value(metadata i32 %7, metadata !2329, metadata !DIExpression()), !dbg !2345
  %8 = add i32 %2, 7, !dbg !2346
  call void @llvm.dbg.value(metadata i32 %8, metadata !2330, metadata !DIExpression()), !dbg !2346
  call void @llvm.dbg.value(metadata i8* %0, metadata !2328, metadata !DIExpression()), !dbg !2347
  %9 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !2348
  call void @llvm.dbg.value(metadata i8* %9, metadata !2328, metadata !DIExpression()), !dbg !2349
  call void @llvm.dbg.value(metadata i8 %3, metadata !2331, metadata !DIExpression()), !dbg !2350
  %10 = icmp sgt i8 %3, -1, !dbg !2351
  br i1 %10, label %if.then, label %for.body, !dbg !2335

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %7, metadata !2329, metadata !DIExpression()), !dbg !2352
  call void @llvm.dbg.value(metadata i8* %9, metadata !2328, metadata !DIExpression()), !dbg !2353
  %11 = insertvalue { i32, i8* } zeroinitializer, i32 %7, 0, !dbg !2354
  %12 = insertvalue { i32, i8* } %11, i8* %9, 1, !dbg !2354
  ret { i32, i8* } %12, !dbg !2354
}

; Function Attrs: optsize
define internal fastcc { i8*, i32 } @reflect.readStringSidetable(i32 %index) unnamed_addr #2 section ".text.reflect.readStringSidetable" !dbg !2355 {
entry:
  %stackalloc.alloca = alloca [2 x i32], align 4, !dbg !2363
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([225 x i8], [225 x i8]* @reflect.structNamesSidetable, i32 0, i32 0), metadata !2359, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata i32 %index, metadata !2360, metadata !DIExpression()), !dbg !2365
  %0 = getelementptr inbounds [225 x i8], [225 x i8]* @reflect.structNamesSidetable, i32 0, i32 %index, !dbg !2366
  %1 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* nonnull %0), !dbg !2367
  %2 = extractvalue { i32, i8* } %1, 1, !dbg !2367
  %3 = extractvalue { i32, i8* } %1, 0, !dbg !2368
  call void @llvm.dbg.value(metadata i32 %3, metadata !2361, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.value(metadata i8* %2, metadata !2362, metadata !DIExpression()), !dbg !2370
  %.fca.0.gep = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !2371
  store i32 0, i32* %.fca.0.gep, align 4, !dbg !2371
  %.fca.1.gep = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca, i32 0, i32 1, !dbg !2371
  store i32 0, i32* %.fca.1.gep, align 4, !dbg !2371
  %stackalloc = bitcast [2 x i32]* %stackalloc.alloca to i8*, !dbg !2371
  %4 = ptrtoint i8* %2 to i32, !dbg !2372
  store i32 %4, i32* %.fca.0.gep, align 4, !dbg !2373
  store i32 %3, i32* %.fca.1.gep, align 4, !dbg !2374
  %newret = insertvalue { i8*, i32 } undef, i8* %2, 0, !dbg !2375
  %newret2 = insertvalue { i8*, i32 } %newret, i32 %3, 1, !dbg !2375
  ret { i8*, i32 } %newret2, !dbg !2375
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Type).Len"(i32 %t) unnamed_addr #2 section ".text.(reflect.Type).Len" !dbg !2376 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2382
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 6, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2382
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2382
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2382
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2382
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2382
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2382
  %complit = alloca %reflect.TypeError, align 8, !dbg !2382
  call void @llvm.dbg.value(metadata i32 %t, metadata !2378, metadata !DIExpression()), !dbg !2382
  call void @llvm.dbg.value(metadata i32 %t, metadata !2378, metadata !DIExpression()), !dbg !2383
  %3 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %t), !dbg !2384
  %.not = icmp eq i32 %3, 23, !dbg !2385
  br i1 %.not, label %if.done, label %if.then, !dbg !2386

if.then:                                          ; preds = %entry
  %.fca.0.0.gep = getelementptr inbounds %reflect.TypeError, %reflect.TypeError* %complit, i32 0, i32 0, i32 0, !dbg !2382
  store i8* null, i8** %.fca.0.0.gep, align 8, !dbg !2382
  %.fca.0.1.gep = getelementptr inbounds %reflect.TypeError, %reflect.TypeError* %complit, i32 0, i32 0, i32 1, !dbg !2382
  store i32 0, i32* %.fca.0.1.gep, align 4, !dbg !2382
  %4 = bitcast %reflect.TypeError* %complit to i8*, !dbg !2382
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2386
  store i8* %4, i8** %5, align 4, !dbg !2386
  %6 = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2386
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2386
  store i8* %6, i8** %7, align 4, !dbg !2386
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2386
  store i8* %6, i8** %8, align 4, !dbg !2386
  %.repack = bitcast i8* %6 to i8**, !dbg !2386
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(reflect.Value).Len$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2386
  %.repack1 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !2386
  %9 = bitcast i8* %.repack1 to i32*, !dbg !2386
  store i32 3, i32* %9, align 4, !dbg !2386
  tail call fastcc void @runtime._panic(i32 63, i8* nonnull %6), !dbg !2387
  unreachable, !dbg !2387

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %t, metadata !2378, metadata !DIExpression()), !dbg !2388
  %10 = tail call fastcc i32 @"(reflect.Type).stripPrefix"(i32 %t), !dbg !2389
  call void @llvm.dbg.value(metadata i32 %10, metadata !2379, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i32 %10, metadata !2379, metadata !DIExpression()), !dbg !2391
  %11 = add i32 %10, ptrtoint ([2 x i8]* @reflect.arrayTypesSidetable to i32), !dbg !2392
  %12 = inttoptr i32 %11 to i8*, !dbg !2393
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2394
  store i8* %12, i8** %13, align 4, !dbg !2394
  %14 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %12), !dbg !2394
  %15 = extractvalue { i32, i8* } %14, 1, !dbg !2394
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2395
  store i8* %15, i8** %16, align 4, !dbg !2395
  call void @llvm.dbg.value(metadata i8* %15, metadata !2380, metadata !DIExpression()), !dbg !2395
  call void @llvm.dbg.value(metadata i8* %15, metadata !2380, metadata !DIExpression()), !dbg !2396
  %17 = tail call fastcc { i32, i8* } @reflect.readVarint(i8* %15), !dbg !2397
  %18 = extractvalue { i32, i8* } %17, 1, !dbg !2397
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2386
  store i8* %18, i8** %19, align 4, !dbg !2386
  %20 = extractvalue { i32, i8* } %17, 0, !dbg !2386
  call void @llvm.dbg.value(metadata i32 %20, metadata !2381, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i32 %20, metadata !2381, metadata !DIExpression()), !dbg !2399
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2400
  ret i32 %20, !dbg !2400
}

; Function Attrs: optsize
define internal fastcc i1 @"(reflect.Value).Bool"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Bool" !dbg !2401 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2404
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2404
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2404
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2404
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2404
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2404
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2404
  %v = alloca %reflect.Value, align 8, !dbg !2404
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2403, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2404
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2403, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2404
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2403, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2404
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2404
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2404
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2404
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2404
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2404
  store i8* %3, i8** %4, align 4, !dbg !2404
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2404
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2404
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2405
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2405
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2405
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2403, metadata !DIExpression()), !dbg !2406
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2407
  %7 = icmp eq i32 %6, 1, !dbg !2405
  br i1 %7, label %deref.next2, label %switch.next, !dbg !2405

switch.next:                                      ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2408
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2409
  store i8* %complit, i8** %8, align 4, !dbg !2409
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2409
  store i8* %complit, i8** %9, align 4, !dbg !2409
  %.repack = bitcast i8* %complit to i8**, !dbg !2409
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"(reflect.Value).Bool$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2409
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2409
  %10 = bitcast i8* %.repack1 to i32*, !dbg !2409
  store i32 4, i32* %10, align 4, !dbg !2409
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2410
  unreachable, !dbg !2410

deref.next2:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2403, metadata !DIExpression()), !dbg !2411
  %11 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2412
  br i1 %11, label %deref.next4, label %deref.next8, !dbg !2405

deref.next4:                                      ; preds = %deref.next2
  %12 = bitcast i8* %v.value to i1*, !dbg !2413
  %13 = load i1, i1* %12, align 1, !dbg !2414
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2415
  ret i1 %13, !dbg !2415

deref.next8:                                      ; preds = %deref.next2
  %14 = icmp ne i8* %v.value, null, !dbg !2416
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2417
  ret i1 %14, !dbg !2417
}

; Function Attrs: optsize
define internal fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).isIndirect" !dbg !2418 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !2421
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2421
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2420, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2421
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2421
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !2421
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !2421
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !2421
  %2 = and i8 %v.flags, 1, !dbg !2422
  %3 = icmp ne i8 %2, 0, !dbg !2423
  ret i1 %3, !dbg !2424
}

; Function Attrs: optsize
define internal fastcc void @"(reflect.Value).CanInterface"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).CanInterface" !dbg !2425 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !2428
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2427, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2428
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2427, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2428
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2427, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2428
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !2428
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !2428
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !2428
  ret void, !dbg !2429
}

; Function Attrs: optsize
define internal fastcc { double, double } @"(reflect.Value).Complex"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Complex" !dbg !2430 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2433
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2433
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2433
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2433
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2433
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2433
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2433
  %stackalloc.alloca = alloca [3 x i32], align 4, !dbg !2433
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2432, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2433
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2432, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2433
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2432, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2433
  %.fca.0.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !2434
  store i32 0, i32* %.fca.0.gep, align 4, !dbg !2434
  %.fca.1.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 1, !dbg !2434
  store i32 0, i32* %.fca.1.gep, align 4, !dbg !2434
  %.fca.2.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 2, !dbg !2434
  store i32 0, i32* %.fca.2.gep, align 4, !dbg !2434
  %stackalloc = bitcast [3 x i32]* %stackalloc.alloca to i8*, !dbg !2434
  %3 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2435
  store i8* %stackalloc, i8** %3, align 4, !dbg !2435
  store i32 %v.typecode, i32* %.fca.0.gep, align 4, !dbg !2435
  %4 = bitcast i32* %.fca.1.gep to i8**, !dbg !2435
  store i8* %v.value, i8** %4, align 4, !dbg !2435
  %5 = bitcast i32* %.fca.2.gep to i8*, !dbg !2435
  store i8 %v.flags, i8* %5, align 4, !dbg !2435
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2432, metadata !DIExpression()), !dbg !2436
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2437
  switch i32 %6, label %switch.next2 [
    i32 15, label %deref.next4
    i32 16, label %gep.next14
  ], !dbg !2435

switch.next2:                                     ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2438
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2439
  store i8* %complit, i8** %7, align 4, !dbg !2439
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2439
  store i8* %complit, i8** %8, align 4, !dbg !2439
  %.repack = bitcast i8* %complit to i8**, !dbg !2439
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"(reflect.Value).Complex$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2439
  %.repack7 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2439
  %9 = bitcast i8* %.repack7 to i32*, !dbg !2439
  store i32 7, i32* %9, align 4, !dbg !2439
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2440
  unreachable, !dbg !2440

deref.next4:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2432, metadata !DIExpression()), !dbg !2441
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2442
  %.elt3 = bitcast i8* %v.value to float*, !dbg !2443
  %.unpack4 = load float, float* %.elt3, align 4, !dbg !2443
  %.elt5 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2443
  %11 = bitcast i8* %.elt5 to float*, !dbg !2443
  %.unpack6 = load float, float* %11, align 4, !dbg !2443
  %real.f64 = fpext float %.unpack4 to double, !dbg !2444
  %imag.f64 = fpext float %.unpack6 to double, !dbg !2444
  %12 = insertvalue { double, double } undef, double %real.f64, 0, !dbg !2444
  %13 = insertvalue { double, double } %12, double %imag.f64, 1, !dbg !2444
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2445
  ret { double, double } %13, !dbg !2445

gep.next14:                                       ; preds = %entry
  %.elt = bitcast i8* %v.value to double*, !dbg !2446
  %.unpack = load double, double* %.elt, align 8, !dbg !2446
  %14 = insertvalue { double, double } undef, double %.unpack, 0, !dbg !2446
  %.elt1 = getelementptr inbounds i8, i8* %v.value, i32 8, !dbg !2446
  %15 = bitcast i8* %.elt1 to double*, !dbg !2446
  %.unpack2 = load double, double* %15, align 8, !dbg !2446
  %16 = insertvalue { double, double } %14, double %.unpack2, 1, !dbg !2446
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2447
  ret { double, double } %16, !dbg !2447
}

; Function Attrs: optsize
define internal fastcc { i32, i8*, i8 } @"(reflect.Value).Elem"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Elem" !dbg !2448 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2452
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2452
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2452
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2452
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2452
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2452
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2452
  %complit9 = alloca %reflect.Value, align 8, !dbg !2452
  %complit = alloca %reflect.Value, align 8, !dbg !2452
  %v = alloca %reflect.Value, align 8, !dbg !2452
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2450, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2452
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2450, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2452
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2450, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2452
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2452
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2452
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2452
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2452
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2452
  store i8* %3, i8** %4, align 4, !dbg !2452
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2452
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2452
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2453
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2453
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2453
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2450, metadata !DIExpression()), !dbg !2454
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2455
  %7 = icmp eq i32 %6, 21, !dbg !2453
  br i1 %7, label %deref.next4, label %switch.next, !dbg !2453

if.then:                                          ; preds = %deref.next4
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2451, metadata !DIExpression()), !dbg !2456
  %8 = bitcast i8* %v.value to i8**, !dbg !2457
  %9 = load i8*, i8** %8, align 4, !dbg !2458
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2459
  store i8* %9, i8** %10, align 4, !dbg !2459
  call void @llvm.dbg.value(metadata i8* %9, metadata !2451, metadata !DIExpression()), !dbg !2459
  br label %if.done, !dbg !2453

if.done:                                          ; preds = %if.then, %deref.next4
  %11 = phi i8* [ %v.value, %deref.next4 ], [ %9, %if.then ], !dbg !2460
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2461
  store i8* %11, i8** %12, align 4, !dbg !2461
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2461
  store i8* %11, i8** %13, align 4, !dbg !2461
  call void @llvm.dbg.value(metadata i8* %11, metadata !2451, metadata !DIExpression()), !dbg !2461
  %14 = icmp eq i8* %11, null, !dbg !2462
  br i1 %14, label %if.then1, label %if.done2, !dbg !2453

if.then1:                                         ; preds = %if.done
  %15 = bitcast %reflect.Value* %complit to i8*, !dbg !2452
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2452
  store i8* %15, i8** %16, align 4, !dbg !2452
  %17 = bitcast %reflect.Value* %complit to i8*, !dbg !2452
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %17, i8 0, i64 9, i1 false), !dbg !2452
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2463
  ret { i32, i8*, i8 } zeroinitializer, !dbg !2463

if.done2:                                         ; preds = %if.done
  %18 = bitcast %reflect.Value* %complit9 to i8*, !dbg !2452
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2452
  store i8* %18, i8** %19, align 4, !dbg !2452
  %20 = bitcast %reflect.Value* %complit9 to i8*, !dbg !2452
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %20, i8 0, i64 9, i1 false), !dbg !2452
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2450, metadata !DIExpression()), !dbg !2464
  %21 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2465
  %22 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2466
  call void @llvm.dbg.value(metadata i8* %11, metadata !2451, metadata !DIExpression()), !dbg !2467
  %23 = or i8 %v.flags, 1, !dbg !2468
  %newret6 = insertvalue { i32, i8*, i8 } undef, i32 %22, 0, !dbg !2469
  %newret8 = insertvalue { i32, i8*, i8 } %newret6, i8* %11, 1, !dbg !2469
  %newret10 = insertvalue { i32, i8*, i8 } %newret8, i8 %23, 2, !dbg !2469
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2469
  ret { i32, i8*, i8 } %newret10, !dbg !2469

switch.next:                                      ; preds = %entry
  %complit30 = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2470
  %24 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2471
  store i8* %complit30, i8** %24, align 4, !dbg !2471
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2471
  store i8* %complit30, i8** %25, align 4, !dbg !2471
  %.repack = bitcast i8* %complit30 to i8**, !dbg !2471
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"(reflect.Value).Elem$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2471
  %.repack11 = getelementptr inbounds i8, i8* %complit30, i32 4, !dbg !2471
  %26 = bitcast i8* %.repack11 to i32*, !dbg !2471
  store i32 4, i32* %26, align 4, !dbg !2471
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit30), !dbg !2472
  unreachable, !dbg !2472

deref.next4:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2451, metadata !DIExpression()), !dbg !2460
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2450, metadata !DIExpression()), !dbg !2473
  %27 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2474
  br i1 %27, label %if.then, label %if.done, !dbg !2453
}

; Function Attrs: optsize
define internal fastcc { i32, i8*, i8 } @"(reflect.Value).Field"(i32 %v.typecode, i8* %v.value, i8 %v.flags, i32 %i) unnamed_addr #2 section ".text.(reflect.Value).Field" !dbg !2475 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2488
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 14, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2488
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2488
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2488
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2488
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2488
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2488
  %complit103 = alloca %reflect.Value, align 8, !dbg !2488
  %complit76 = alloca %reflect.Value, align 8, !dbg !2488
  %complit49 = alloca %reflect.Value, align 8, !dbg !2488
  %complit = alloca %reflect.Value, align 8, !dbg !2488
  %structField = alloca %reflect.StructField, align 8, !dbg !2488
  %v = alloca %reflect.Value, align 8, !dbg !2488
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2479, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2488
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2479, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2488
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2479, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2488
  call void @llvm.dbg.value(metadata i32 %i, metadata !2480, metadata !DIExpression()), !dbg !2488
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2488
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2488
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2488
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2488
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2488
  store i8* %3, i8** %4, align 4, !dbg !2488
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2488
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2489
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2489
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2489
  %.fca.0.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 0, i32 0, !dbg !2488
  %.fca.0.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 0, i32 1, !dbg !2488
  %.fca.1.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 1, i32 0, !dbg !2488
  %.fca.1.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 1, i32 1, !dbg !2488
  %.fca.2.gep146 = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 2, !dbg !2488
  %.fca.3.0.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 3, i32 0, !dbg !2488
  %.fca.3.1.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 3, i32 1, !dbg !2488
  %.fca.4.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 4, !dbg !2488
  %.fca.5.gep = getelementptr inbounds %reflect.StructField, %reflect.StructField* %structField, i32 0, i32 5, !dbg !2488
  store i32 0, i32* %.fca.5.gep, align 8, !dbg !2488
  %6 = bitcast %reflect.StructField* %structField to i8*, !dbg !2488
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2488
  store i8* %6, i8** %7, align 4, !dbg !2488
  %8 = bitcast %reflect.StructField* %structField to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(29) %8, i8 0, i64 29, i1 false), !dbg !2488
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2479, metadata !DIExpression()), !dbg !2490
  %9 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2491
  %10 = tail call fastcc { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } @"(reflect.Type).Field"(i32 %v.typecode, i32 %i), !dbg !2492
  %newret = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 0, !dbg !2492
  %newret211 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 1, !dbg !2492
  %newret213 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 2, !dbg !2492
  %newret215 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 3, !dbg !2492
  %newret217 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 4, !dbg !2492
  %newret219 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %10, 5, !dbg !2492
  %11 = extractvalue %runtime._string %newret, 0, !dbg !2492
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2492
  store i8* %11, i8** %12, align 4, !dbg !2492
  %13 = extractvalue %runtime._string %newret211, 0, !dbg !2492
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2492
  store i8* %13, i8** %14, align 4, !dbg !2492
  %15 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2492
  store i8* %13, i8** %15, align 4, !dbg !2492
  %16 = extractvalue %runtime._string %newret215, 0, !dbg !2492
  %17 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2493
  store i8* %16, i8** %17, align 4, !dbg !2493
  store i8* %11, i8** %.fca.0.0.gep, align 8, !dbg !2493
  %.fca.0.1.extract = extractvalue %runtime._string %newret, 1, !dbg !2493
  store i32 %.fca.0.1.extract, i32* %.fca.0.1.gep, align 4, !dbg !2493
  store i8* %13, i8** %.fca.1.0.gep, align 8, !dbg !2493
  %.fca.1.1.extract = extractvalue %runtime._string %newret211, 1, !dbg !2493
  store i32 %.fca.1.1.extract, i32* %.fca.1.1.gep, align 4, !dbg !2493
  store i32 %newret213, i32* %.fca.2.gep146, align 8, !dbg !2493
  store i8* %16, i8** %.fca.3.0.gep, align 4, !dbg !2493
  %.fca.3.1.extract = extractvalue %runtime._string %newret215, 1, !dbg !2493
  store i32 %.fca.3.1.extract, i32* %.fca.3.1.gep, align 4, !dbg !2493
  store i1 %newret217, i1* %.fca.4.gep, align 4, !dbg !2493
  store i32 %newret219, i32* %.fca.5.gep, align 8, !dbg !2493
  call void @llvm.dbg.value(metadata %reflect.StructField undef, metadata !2481, metadata !DIExpression()), !dbg !2493
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2482, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata i8* %13, metadata !2495, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2503
  call void @llvm.dbg.value(metadata i32 %.fca.1.1.extract, metadata !2495, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2503
  call void @llvm.dbg.value(metadata i32 0, metadata !2501, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2503
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2495, metadata !DIExpression()), !dbg !2505
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2501, metadata !DIExpression()), !dbg !2506
  %.not.i = icmp eq i32 %.fca.1.1.extract, 0, !dbg !2507
  %18 = and i8 %v.flags, -3, !dbg !2489
  %19 = select i1 %.not.i, i8 %v.flags, i8 %18, !dbg !2489
  %20 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2508
  %21 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %v.typecode), !dbg !2509
  call void @llvm.dbg.value(metadata i32 %21, metadata !2483, metadata !DIExpression()), !dbg !2510
  %22 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %newret213), !dbg !2511
  call void @llvm.dbg.value(metadata i32 %22, metadata !2484, metadata !DIExpression()), !dbg !2512
  %23 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2513
  %24 = icmp ugt i32 %22, 4
  %or.cond = or i1 %24, %23, !dbg !2489
  br i1 %or.cond, label %if.then1, label %if.done2, !dbg !2489

if.then1:                                         ; preds = %entry
  %25 = bitcast %reflect.Value* %complit to i8*, !dbg !2488
  %26 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2488
  store i8* %25, i8** %26, align 4, !dbg !2488
  %27 = bitcast %reflect.Value* %complit to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %27, i8 0, i64 9, i1 false), !dbg !2488
  call void @llvm.dbg.value(metadata i8 %19, metadata !2482, metadata !DIExpression()), !dbg !2514
  %28 = getelementptr inbounds i8, i8* %v.value, i32 %newret219, !dbg !2515
  %newret2 = insertvalue { i32, i8*, i8 } undef, i32 %newret213, 0, !dbg !2516
  %newret4 = insertvalue { i32, i8*, i8 } %newret2, i8* %28, 1, !dbg !2516
  %newret6 = insertvalue { i32, i8*, i8 } %newret4, i8 %19, 2, !dbg !2516
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2516
  ret { i32, i8*, i8 } %newret6, !dbg !2516

if.done2:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %22, metadata !2484, metadata !DIExpression()), !dbg !2517
  %29 = icmp eq i32 %22, 0, !dbg !2518
  br i1 %29, label %if.then3, label %if.done4, !dbg !2489

if.then3:                                         ; preds = %if.done2
  %30 = bitcast %reflect.Value* %complit49 to i8*, !dbg !2488
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2488
  store i8* %30, i8** %31, align 4, !dbg !2488
  %32 = bitcast %reflect.Value* %complit49 to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %32, i8 0, i64 9, i1 false), !dbg !2488
  call void @llvm.dbg.value(metadata i8 %19, metadata !2482, metadata !DIExpression()), !dbg !2519
  %newret8 = insertvalue { i32, i8*, i8 } undef, i32 %newret213, 0, !dbg !2520
  %newret10 = insertvalue { i32, i8*, i8 } %newret8, i8* null, 1, !dbg !2520
  %newret12 = insertvalue { i32, i8*, i8 } %newret10, i8 %19, 2, !dbg !2520
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2520
  ret { i32, i8*, i8 } %newret12, !dbg !2520

if.done4:                                         ; preds = %if.done2
  call void @llvm.dbg.value(metadata i32 %21, metadata !2483, metadata !DIExpression()), !dbg !2521
  %33 = icmp ugt i32 %21, 4, !dbg !2522
  br i1 %33, label %deref.next71, label %deref.next98, !dbg !2489

deref.next71:                                     ; preds = %if.done4
  %34 = getelementptr inbounds i8, i8* %v.value, i32 %newret219, !dbg !2523
  call void @llvm.dbg.value(metadata i8* %34, metadata !2485, metadata !DIExpression()), !dbg !2524
  call void @llvm.dbg.value(metadata i32 %22, metadata !2484, metadata !DIExpression()), !dbg !2525
  %35 = tail call fastcc i32 @reflect.loadValue(i8* %34, i32 %22), !dbg !2526
  %36 = inttoptr i32 %35 to i8*, !dbg !2527
  %37 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !2528
  store i8* %36, i8** %37, align 4, !dbg !2528
  %38 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !2528
  store i8* %36, i8** %38, align 4, !dbg !2528
  call void @llvm.dbg.value(metadata i8* %36, metadata !2486, metadata !DIExpression()), !dbg !2528
  %39 = bitcast %reflect.Value* %complit76 to i8*, !dbg !2488
  %40 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !2488
  store i8* %39, i8** %40, align 4, !dbg !2488
  %41 = bitcast %reflect.Value* %complit76 to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %41, i8 0, i64 9, i1 false), !dbg !2488
  %newret14 = insertvalue { i32, i8*, i8 } undef, i32 %newret213, 0, !dbg !2529
  %newret16 = insertvalue { i32, i8*, i8 } %newret14, i8* %36, 1, !dbg !2529
  %newret18 = insertvalue { i32, i8*, i8 } %newret16, i8 0, 2, !dbg !2529
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2529
  ret { i32, i8*, i8 } %newret18, !dbg !2529

deref.next98:                                     ; preds = %if.done4
  %42 = ptrtoint i8* %v.value to i32, !dbg !2530
  call void @llvm.dbg.value(metadata i32 %22, metadata !2484, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata i32 %42, metadata !2532, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.value(metadata i32 %newret219, metadata !2537, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.value(metadata i32 %22, metadata !2538, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.value(metadata i32 %22, metadata !2538, metadata !DIExpression()), !dbg !2542
  %43 = shl nuw nsw i32 %22, 3, !dbg !2543
  %44 = sub nuw nsw i32 32, %43, !dbg !2543
  %45 = lshr i32 -1, %44, !dbg !2544
  call void @llvm.dbg.value(metadata i32 %45, metadata !2539, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.value(metadata i32 %42, metadata !2532, metadata !DIExpression()), !dbg !2546
  call void @llvm.dbg.value(metadata i32 %newret219, metadata !2537, metadata !DIExpression()), !dbg !2547
  %46 = shl i32 %newret219, 3, !dbg !2548
  %shift.overflow1.i = icmp ugt i32 %46, 31, !dbg !2549
  %47 = lshr i32 %42, %46, !dbg !2549
  %shift.result2.i = select i1 %shift.overflow1.i, i32 0, i32 %47, !dbg !2549
  call void @llvm.dbg.value(metadata i32 %45, metadata !2539, metadata !DIExpression()), !dbg !2550
  %48 = and i32 %45, %shift.result2.i, !dbg !2551
  call void @llvm.dbg.value(metadata i32 %48, metadata !2487, metadata !DIExpression()), !dbg !2552
  %49 = bitcast %reflect.Value* %complit103 to i8*, !dbg !2488
  %50 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !2488
  store i8* %49, i8** %50, align 4, !dbg !2488
  %51 = bitcast %reflect.Value* %complit103 to i8*, !dbg !2488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %51, i8 0, i64 9, i1 false), !dbg !2488
  call void @llvm.dbg.value(metadata i8 %19, metadata !2482, metadata !DIExpression()), !dbg !2553
  %52 = inttoptr i32 %48 to i8*, !dbg !2554
  %53 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !2555
  store i8* %52, i8** %53, align 4, !dbg !2555
  %54 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !2555
  store i8* %52, i8** %54, align 4, !dbg !2555
  %newret20 = insertvalue { i32, i8*, i8 } undef, i32 %newret213, 0, !dbg !2555
  %newret22 = insertvalue { i32, i8*, i8 } %newret20, i8* %52, 1, !dbg !2555
  %newret24 = insertvalue { i32, i8*, i8 } %newret22, i8 %19, 2, !dbg !2555
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2555
  ret { i32, i8*, i8 } %newret24, !dbg !2555
}

; Function Attrs: optsize
define internal fastcc i32 @reflect.loadValue(i8* nocapture readonly %ptr, i32 %size) unnamed_addr #2 section ".text.reflect.loadValue" !dbg !2556 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !2558, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.value(metadata i32 %size, metadata !2559, metadata !DIExpression()), !dbg !2563
  call void @llvm.dbg.value(metadata i32 0, metadata !2560, metadata !DIExpression()), !dbg !2564
  call void @llvm.dbg.value(metadata i32 0, metadata !2561, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.value(metadata i32 0, metadata !2562, metadata !DIExpression()), !dbg !2566
  br label %for.loop, !dbg !2567

for.loop:                                         ; preds = %for.body, %entry
  %0 = phi i8* [ %ptr, %entry ], [ %9, %for.body ], !dbg !2568
  %1 = phi i32 [ 0, %entry ], [ %7, %for.body ], !dbg !2564
  %2 = phi i32 [ 0, %entry ], [ %8, %for.body ], !dbg !2565
  %3 = phi i32 [ 0, %entry ], [ %10, %for.body ], !dbg !2566
  call void @llvm.dbg.value(metadata i32 %3, metadata !2562, metadata !DIExpression()), !dbg !2569
  call void @llvm.dbg.value(metadata i32 %size, metadata !2559, metadata !DIExpression()), !dbg !2570
  %exitcond.not = icmp eq i32 %3, %size, !dbg !2571
  br i1 %exitcond.not, label %for.done, label %for.body, !dbg !2567

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i8* %0, metadata !2558, metadata !DIExpression()), !dbg !2572
  %4 = load i8, i8* %0, align 1, !dbg !2573
  %5 = zext i8 %4 to i32, !dbg !2574
  call void @llvm.dbg.value(metadata i32 %2, metadata !2561, metadata !DIExpression()), !dbg !2575
  %shift.overflow = icmp ugt i32 %2, 31, !dbg !2576
  %6 = shl i32 %5, %2, !dbg !2576
  %shift.result = select i1 %shift.overflow, i32 0, i32 %6, !dbg !2576
  %7 = or i32 %shift.result, %1, !dbg !2577
  call void @llvm.dbg.value(metadata i32 %7, metadata !2560, metadata !DIExpression()), !dbg !2577
  %8 = add i32 %2, 8, !dbg !2578
  call void @llvm.dbg.value(metadata i32 %8, metadata !2561, metadata !DIExpression()), !dbg !2578
  call void @llvm.dbg.value(metadata i8* %0, metadata !2558, metadata !DIExpression()), !dbg !2579
  %9 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !2580
  call void @llvm.dbg.value(metadata i8* %9, metadata !2558, metadata !DIExpression()), !dbg !2581
  %10 = add i32 %3, 1, !dbg !2582
  call void @llvm.dbg.value(metadata i32 %10, metadata !2562, metadata !DIExpression()), !dbg !2582
  br label %for.loop, !dbg !2567

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %1, metadata !2560, metadata !DIExpression()), !dbg !2583
  ret i32 %1, !dbg !2584
}

; Function Attrs: optsize
define internal fastcc double @"(reflect.Value).Float"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Float" !dbg !2585 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2588
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 5, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2588
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2588
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2588
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2588
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2588
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2588
  %stackalloc.alloca = alloca [3 x i32], align 4, !dbg !2588
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2587, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2588
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2587, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2588
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2587, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2588
  %.fca.0.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !2589
  store i32 0, i32* %.fca.0.gep, align 4, !dbg !2589
  %.fca.1.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 1, !dbg !2589
  store i32 0, i32* %.fca.1.gep, align 4, !dbg !2589
  %.fca.2.gep = getelementptr inbounds [3 x i32], [3 x i32]* %stackalloc.alloca, i32 0, i32 2, !dbg !2589
  store i32 0, i32* %.fca.2.gep, align 4, !dbg !2589
  %stackalloc = bitcast [3 x i32]* %stackalloc.alloca to i8*, !dbg !2589
  %3 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2590
  store i8* %stackalloc, i8** %3, align 4, !dbg !2590
  store i32 %v.typecode, i32* %.fca.0.gep, align 4, !dbg !2590
  %4 = bitcast i32* %.fca.1.gep to i8**, !dbg !2590
  store i8* %v.value, i8** %4, align 4, !dbg !2590
  %5 = bitcast i32* %.fca.2.gep to i8*, !dbg !2590
  store i8 %v.flags, i8* %5, align 4, !dbg !2590
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2587, metadata !DIExpression()), !dbg !2591
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2592
  switch i32 %6, label %switch.next5 [
    i32 13, label %deref.next7
    i32 14, label %deref.next13
  ], !dbg !2590

switch.next5:                                     ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2593
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2594
  store i8* %complit, i8** %7, align 4, !dbg !2594
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2594
  store i8* %complit, i8** %8, align 4, !dbg !2594
  %.repack = bitcast i8* %complit to i8**, !dbg !2594
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(reflect.Value).Float$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2594
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2594
  %9 = bitcast i8* %.repack1 to i32*, !dbg !2594
  store i32 5, i32* %9, align 4, !dbg !2594
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2595
  unreachable, !dbg !2595

deref.next7:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2587, metadata !DIExpression()), !dbg !2596
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2597
  br i1 %10, label %deref.next9, label %gep.next11, !dbg !2590

deref.next9:                                      ; preds = %deref.next7
  %11 = bitcast i8* %v.value to float*, !dbg !2598
  %12 = load float, float* %11, align 4, !dbg !2599
  %13 = fpext float %12 to double, !dbg !2600
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2601
  ret double %13, !dbg !2601

gep.next11:                                       ; preds = %deref.next7
  %14 = ptrtoint i8* %v.value to i32, !dbg !2590
  %15 = bitcast i32 %14 to float, !dbg !2590
  %16 = bitcast i32* %.fca.1.gep to i8*, !dbg !2602
  %17 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2603
  store i8* %16, i8** %17, align 4, !dbg !2603
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2603
  store i8* %16, i8** %18, align 4, !dbg !2603
  %19 = fpext float %15 to double, !dbg !2603
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2604
  ret double %19, !dbg !2604

deref.next13:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2587, metadata !DIExpression()), !dbg !2605
  %20 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2606
  %21 = bitcast i8* %v.value to double*, !dbg !2607
  %22 = load double, double* %21, align 8, !dbg !2608
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2609
  ret double %22, !dbg !2609
}

; Function Attrs: optsize
define internal fastcc { i32, i8*, i8 } @"(reflect.Value).Index"(i32 %v.typecode, i8* %v.value, i8 %v.flags, i32 %i) unnamed_addr #2 section ".text.(reflect.Value).Index" !dbg !2610 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2635
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 21, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2635
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2635
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2635
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2635
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2635
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2635
  %complit146 = alloca %reflect.Value, align 8, !dbg !2635
  %complit121 = alloca %reflect.Value, align 8, !dbg !2635
  %complit96 = alloca %reflect.Value, align 8, !dbg !2635
  %complit75 = alloca %reflect.Value, align 8, !dbg !2635
  %complit = alloca %reflect.Value, align 8, !dbg !2635
  %s = alloca %reflect.StringHeader, align 8, !dbg !2635
  %elem = alloca %reflect.Value, align 8, !dbg !2635
  %slice = alloca %reflect.SliceHeader, align 8, !dbg !2635
  %v = alloca %reflect.Value, align 8, !dbg !2635
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2612, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2635
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2612, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2635
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2612, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2635
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2635
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2635
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2635
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2635
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2635
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2635
  store i8* %3, i8** %4, align 4, !dbg !2635
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2635
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2636
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2636
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2636
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2637
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2638
  switch i32 %6, label %switch.next12 [
    i32 22, label %switch.body
    i32 17, label %switch.body1
    i32 23, label %deref.next72
  ], !dbg !2636

switch.body:                                      ; preds = %entry
  %.fca.0.gep241 = getelementptr inbounds %reflect.SliceHeader, %reflect.SliceHeader* %slice, i32 0, i32 0, !dbg !2635
  store i32 0, i32* %.fca.0.gep241, align 8, !dbg !2635
  %.fca.1.gep242 = getelementptr inbounds %reflect.SliceHeader, %reflect.SliceHeader* %slice, i32 0, i32 1, !dbg !2635
  store i32 0, i32* %.fca.1.gep242, align 4, !dbg !2635
  %.fca.2.gep243 = getelementptr inbounds %reflect.SliceHeader, %reflect.SliceHeader* %slice, i32 0, i32 2, !dbg !2635
  store i32 0, i32* %.fca.2.gep243, align 8, !dbg !2635
  %7 = bitcast %reflect.SliceHeader* %slice to i8*, !dbg !2635
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2639
  store i8* %7, i8** %8, align 4, !dbg !2639
  %.elt37 = bitcast i8* %v.value to i32*, !dbg !2639
  %.unpack38 = load i32, i32* %.elt37, align 4, !dbg !2639
  %.elt39 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2639
  %9 = bitcast i8* %.elt39 to i32*, !dbg !2639
  %.unpack40 = load i32, i32* %9, align 4, !dbg !2639
  %.elt41 = getelementptr inbounds i8, i8* %v.value, i32 8, !dbg !2639
  %10 = bitcast i8* %.elt41 to i32*, !dbg !2639
  %.unpack42 = load i32, i32* %10, align 4, !dbg !2639
  store i32 %.unpack38, i32* %.fca.0.gep241, align 8, !dbg !2640
  store i32 %.unpack40, i32* %.fca.1.gep242, align 4, !dbg !2640
  store i32 %.unpack42, i32* %.fca.2.gep243, align 8, !dbg !2640
  call void @llvm.dbg.value(metadata %reflect.SliceHeader undef, metadata !2614, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2641
  %.not43 = icmp ugt i32 %.unpack40, %i, !dbg !2642
  br i1 %.not43, label %if.done, label %if.then, !dbg !2636

if.then:                                          ; preds = %switch.body
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Value).Index$pack" to i8*)), !dbg !2643
  unreachable, !dbg !2643

if.done:                                          ; preds = %switch.body
  %11 = bitcast %reflect.Value* %elem to i8*, !dbg !2635
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2635
  store i8* %11, i8** %12, align 4, !dbg !2635
  %13 = bitcast %reflect.Value* %elem to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %13, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2644
  %14 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* nonnull %v.value, i8 %v.flags), !dbg !2645
  %15 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2646
  %16 = or i8 %v.flags, 1, !dbg !2647
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2621, metadata !DIExpression()), !dbg !2648
  %17 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %15, i8* null, i8 %16), !dbg !2649
  %18 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %15), !dbg !2650
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2651
  %19 = mul i32 %18, %i, !dbg !2652
  %20 = add i32 %19, %.unpack38, !dbg !2653
  call void @llvm.dbg.value(metadata i32 %20, metadata !2622, metadata !DIExpression()), !dbg !2654
  %21 = inttoptr i32 %20 to i8*, !dbg !2655
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2656
  store i8* %21, i8** %22, align 4, !dbg !2656
  %23 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2656
  store i8* %21, i8** %23, align 4, !dbg !2656
  call void @llvm.dbg.value(metadata i8* %21, metadata !2623, metadata !DIExpression()), !dbg !2656
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2621, metadata !DIExpression()), !dbg !2657
  %newret = insertvalue { i32, i8*, i8 } undef, i32 %15, 0, !dbg !2658
  %newret2 = insertvalue { i32, i8*, i8 } %newret, i8* %21, 1, !dbg !2658
  %newret4 = insertvalue { i32, i8*, i8 } %newret2, i8 %16, 2, !dbg !2658
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2658
  ret { i32, i8*, i8 } %newret4, !dbg !2658

switch.body1:                                     ; preds = %entry
  %.fca.0.gep271 = getelementptr inbounds %reflect.StringHeader, %reflect.StringHeader* %s, i32 0, i32 0, !dbg !2635
  store i32 0, i32* %.fca.0.gep271, align 8, !dbg !2635
  %.fca.1.gep272 = getelementptr inbounds %reflect.StringHeader, %reflect.StringHeader* %s, i32 0, i32 1, !dbg !2635
  store i32 0, i32* %.fca.1.gep272, align 4, !dbg !2635
  %24 = bitcast %reflect.StringHeader* %s to i8*, !dbg !2635
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2659
  store i8* %24, i8** %25, align 4, !dbg !2659
  %.elt = bitcast i8* %v.value to i32*, !dbg !2659
  %.unpack = load i32, i32* %.elt, align 4, !dbg !2659
  %.elt35 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2659
  %26 = bitcast i8* %.elt35 to i32*, !dbg !2659
  %.unpack36 = load i32, i32* %26, align 4, !dbg !2659
  store i32 %.unpack, i32* %.fca.0.gep271, align 8, !dbg !2660
  store i32 %.unpack36, i32* %.fca.1.gep272, align 4, !dbg !2660
  call void @llvm.dbg.value(metadata %reflect.StringHeader undef, metadata !2624, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2661
  %.not = icmp ugt i32 %.unpack36, %i, !dbg !2662
  br i1 %.not, label %if.done3, label %if.then2, !dbg !2636

if.then2:                                         ; preds = %switch.body1
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Value).Index$pack.9" to i8*)), !dbg !2663
  unreachable, !dbg !2663

if.done3:                                         ; preds = %switch.body1
  %27 = bitcast %reflect.Value* %complit to i8*, !dbg !2635
  %28 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2635
  store i8* %27, i8** %28, align 4, !dbg !2635
  %29 = bitcast %reflect.Value* %complit to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %29, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2664
  %30 = add i32 %.unpack, %i, !dbg !2665
  %31 = inttoptr i32 %30 to i8*, !dbg !2666
  %32 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !2667
  store i8* %31, i8** %32, align 4, !dbg !2667
  %33 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2667
  store i8* %31, i8** %33, align 4, !dbg !2667
  %34 = load i8, i8* %31, align 1, !dbg !2667
  %35 = zext i8 %34 to i32, !dbg !2668
  %36 = inttoptr i32 %35 to i8*, !dbg !2669
  %37 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !2670
  store i8* %36, i8** %37, align 4, !dbg !2670
  %38 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !2670
  store i8* %36, i8** %38, align 4, !dbg !2670
  %newret8 = insertvalue { i32, i8*, i8 } { i32 16, i8* undef, i8 undef }, i8* %36, 1, !dbg !2670
  %newret10 = insertvalue { i32, i8*, i8 } %newret8, i8 0, 2, !dbg !2670
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2670
  ret { i32, i8*, i8 } %newret10, !dbg !2670

if.then6:                                         ; preds = %deref.next72
  %39 = bitcast %reflect.Value* %complit75 to i8*, !dbg !2635
  %40 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !2635
  store i8* %39, i8** %40, align 4, !dbg !2635
  %41 = bitcast %reflect.Value* %complit75 to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %41, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2671
  %42 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2672
  %43 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2673
  %newret12 = insertvalue { i32, i8*, i8 } undef, i32 %43, 0, !dbg !2674
  %newret14 = insertvalue { i32, i8*, i8 } %newret12, i8* null, 1, !dbg !2674
  %newret16 = insertvalue { i32, i8*, i8 } %newret14, i8 %v.flags, 2, !dbg !2674
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2674
  ret { i32, i8*, i8 } %newret16, !dbg !2674

if.done7:                                         ; preds = %deref.next72
  call void @llvm.dbg.value(metadata i32 %67, metadata !2629, metadata !DIExpression()), !dbg !2675
  %44 = icmp ugt i32 %67, 4, !dbg !2676
  br i1 %44, label %deref.next95, label %if.done9, !dbg !2636

if.done9:                                         ; preds = %if.done7
  call void @llvm.dbg.value(metadata i32 %69, metadata !2630, metadata !DIExpression()), !dbg !2677
  %45 = icmp ugt i32 %69, 4, !dbg !2678
  br i1 %45, label %deref.next120, label %if.done11, !dbg !2636

if.done11:                                        ; preds = %if.done9
  call void @llvm.dbg.value(metadata i32 %67, metadata !2629, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2680
  %46 = mul i32 %67, %i, !dbg !2681
  call void @llvm.dbg.value(metadata i32 %46, metadata !2633, metadata !DIExpression()), !dbg !2682
  %47 = ptrtoint i8* %v.value to i32, !dbg !2683
  call void @llvm.dbg.value(metadata i32 %47, metadata !2532, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i32 %46, metadata !2537, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i32 %67, metadata !2538, metadata !DIExpression()), !dbg !2684
  call void @llvm.dbg.value(metadata i32 %67, metadata !2538, metadata !DIExpression()), !dbg !2686
  %48 = shl nuw nsw i32 %67, 3, !dbg !2687
  %49 = sub nuw nsw i32 32, %48, !dbg !2687
  %shift.overflow.i = icmp eq i32 %67, 0, !dbg !2688
  %50 = lshr i32 -1, %49, !dbg !2688
  %shift.result.i = select i1 %shift.overflow.i, i32 0, i32 %50, !dbg !2688
  call void @llvm.dbg.value(metadata i32 %shift.result.i, metadata !2539, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i32 %47, metadata !2532, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata i32 %46, metadata !2537, metadata !DIExpression()), !dbg !2691
  %51 = shl i32 %46, 3, !dbg !2692
  %shift.overflow1.i = icmp ugt i32 %51, 31, !dbg !2693
  %52 = lshr i32 %47, %51, !dbg !2693
  %shift.result2.i = select i1 %shift.overflow1.i, i32 0, i32 %52, !dbg !2693
  call void @llvm.dbg.value(metadata i32 %shift.result.i, metadata !2539, metadata !DIExpression()), !dbg !2694
  %53 = and i32 %shift.result.i, %shift.result2.i, !dbg !2695
  call void @llvm.dbg.value(metadata i32 %53, metadata !2634, metadata !DIExpression()), !dbg !2696
  %54 = bitcast %reflect.Value* %complit146 to i8*, !dbg !2635
  %55 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !2635
  store i8* %54, i8** %55, align 4, !dbg !2635
  %56 = bitcast %reflect.Value* %complit146 to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %56, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2697
  %57 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2698
  %58 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2699
  %59 = inttoptr i32 %53 to i8*, !dbg !2700
  %60 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !2701
  store i8* %59, i8** %60, align 4, !dbg !2701
  %61 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !2701
  store i8* %59, i8** %61, align 4, !dbg !2701
  %newret18 = insertvalue { i32, i8*, i8 } undef, i32 %58, 0, !dbg !2701
  %newret20 = insertvalue { i32, i8*, i8 } %newret18, i8* %59, 1, !dbg !2701
  %newret22 = insertvalue { i32, i8*, i8 } %newret20, i8 %v.flags, 2, !dbg !2701
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2701
  ret { i32, i8*, i8 } %newret22, !dbg !2701

switch.next12:                                    ; preds = %entry
  %complit167 = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2702
  %62 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !2703
  store i8* %complit167, i8** %62, align 4, !dbg !2703
  %63 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !2703
  store i8* %complit167, i8** %63, align 4, !dbg !2703
  %.repack = bitcast i8* %complit167 to i8**, !dbg !2703
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(reflect.Value).Index$string.10", i32 0, i32 0), i8** %.repack, align 4, !dbg !2703
  %.repack44 = getelementptr inbounds i8, i8* %complit167, i32 4, !dbg !2703
  %64 = bitcast i8* %.repack44 to i32*, !dbg !2703
  store i32 5, i32* %64, align 4, !dbg !2703
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit167), !dbg !2704
  unreachable, !dbg !2704

deref.next72:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2705
  %65 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2706
  %66 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2707
  call void @llvm.dbg.value(metadata i32 %66, metadata !2628, metadata !DIExpression()), !dbg !2708
  %67 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %66), !dbg !2709
  call void @llvm.dbg.value(metadata i32 %67, metadata !2629, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2711
  %68 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2712
  %69 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %v.typecode), !dbg !2713
  call void @llvm.dbg.value(metadata i32 %69, metadata !2630, metadata !DIExpression()), !dbg !2714
  %70 = icmp eq i32 %69, 0, !dbg !2715
  br i1 %70, label %if.then6, label %if.done7, !dbg !2636

deref.next95:                                     ; preds = %if.done7
  call void @llvm.dbg.value(metadata i32 %67, metadata !2629, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2717
  %71 = mul i32 %67, %i, !dbg !2718
  call void @llvm.dbg.value(metadata i32 undef, metadata !2631, metadata !DIExpression()), !dbg !2719
  %72 = bitcast %reflect.Value* %complit96 to i8*, !dbg !2635
  %73 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 19, !dbg !2635
  store i8* %72, i8** %73, align 4, !dbg !2635
  %74 = bitcast %reflect.Value* %complit96 to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %74, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2720
  %75 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2721
  %76 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2722
  %77 = getelementptr inbounds i8, i8* %v.value, i32 %71, !dbg !2723
  %newret24 = insertvalue { i32, i8*, i8 } undef, i32 %76, 0, !dbg !2724
  %newret26 = insertvalue { i32, i8*, i8 } %newret24, i8* %77, 1, !dbg !2724
  %newret28 = insertvalue { i32, i8*, i8 } %newret26, i8 %v.flags, 2, !dbg !2724
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2724
  ret { i32, i8*, i8 } %newret28, !dbg !2724

deref.next120:                                    ; preds = %if.done9
  call void @llvm.dbg.value(metadata i32 %67, metadata !2629, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.value(metadata i32 %i, metadata !2613, metadata !DIExpression()), !dbg !2726
  %78 = mul i32 %67, %i, !dbg !2727
  call void @llvm.dbg.value(metadata i32 undef, metadata !2632, metadata !DIExpression()), !dbg !2728
  %79 = bitcast %reflect.Value* %complit121 to i8*, !dbg !2635
  %80 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 20, !dbg !2635
  store i8* %79, i8** %80, align 4, !dbg !2635
  %81 = bitcast %reflect.Value* %complit121 to i8*, !dbg !2635
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %81, i8 0, i64 9, i1 false), !dbg !2635
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2612, metadata !DIExpression()), !dbg !2729
  %82 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2730
  %83 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 %v.typecode), !dbg !2731
  %84 = getelementptr inbounds i8, i8* %v.value, i32 %78, !dbg !2732
  %85 = tail call fastcc i32 @reflect.loadValue(i8* %84, i32 %67), !dbg !2733
  %86 = inttoptr i32 %85 to i8*, !dbg !2734
  %87 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 22, !dbg !2735
  store i8* %86, i8** %87, align 4, !dbg !2735
  %88 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 21, !dbg !2735
  store i8* %86, i8** %88, align 4, !dbg !2735
  %newret30 = insertvalue { i32, i8*, i8 } undef, i32 %83, 0, !dbg !2735
  %newret32 = insertvalue { i32, i8*, i8 } %newret30, i8* %86, 1, !dbg !2735
  %newret34 = insertvalue { i32, i8*, i8 } %newret32, i8 %v.flags, 2, !dbg !2735
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2735
  ret { i32, i8*, i8 } %newret34, !dbg !2735
}

; Function Attrs: optsize
define internal fastcc i64 @"(reflect.Value).Int"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Int" !dbg !2736 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2739
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2739
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2739
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2739
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2739
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2739
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2739
  %v = alloca %reflect.Value, align 8, !dbg !2739
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2738, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2739
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2738, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2739
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2738, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2739
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2739
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2739
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2739
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2739
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2739
  store i8* %3, i8** %4, align 4, !dbg !2739
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2739
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2739
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2740
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2740
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2740
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2741
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2742
  switch i32 %6, label %switch.next18 [
    i32 2, label %deref.next20
    i32 3, label %deref.next28
    i32 4, label %deref.next38
    i32 5, label %deref.next48
    i32 6, label %deref.next58
  ], !dbg !2740

switch.next18:                                    ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2743
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2744
  store i8* %complit, i8** %7, align 4, !dbg !2744
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2744
  store i8* %complit, i8** %8, align 4, !dbg !2744
  %.repack = bitcast i8* %complit to i8**, !dbg !2744
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(reflect.Value).Int$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2744
  %.repack2 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2744
  %9 = bitcast i8* %.repack2 to i32*, !dbg !2744
  store i32 3, i32* %9, align 4, !dbg !2744
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2745
  unreachable, !dbg !2745

deref.next20:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2746
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2747
  br i1 %10, label %deref.next22, label %deref.next26, !dbg !2740

deref.next22:                                     ; preds = %deref.next20
  %11 = bitcast i8* %v.value to i32*, !dbg !2748
  %12 = load i32, i32* %11, align 4, !dbg !2749
  %13 = sext i32 %12 to i64, !dbg !2750
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2751
  ret i64 %13, !dbg !2751

deref.next26:                                     ; preds = %deref.next20
  %14 = ptrtoint i8* %v.value to i32, !dbg !2752
  %15 = sext i32 %14 to i64, !dbg !2753
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2754
  ret i64 %15, !dbg !2754

deref.next28:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2755
  %16 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2756
  br i1 %16, label %deref.next32, label %deref.next36, !dbg !2740

deref.next32:                                     ; preds = %deref.next28
  %17 = load i8, i8* %v.value, align 1, !dbg !2757
  %18 = sext i8 %17 to i64, !dbg !2758
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2759
  ret i64 %18, !dbg !2759

deref.next36:                                     ; preds = %deref.next28
  %19 = ptrtoint i8* %v.value to i32, !dbg !2760
  %20 = zext i32 %19 to i64, !dbg !2761
  %sext1 = shl i64 %20, 56, !dbg !2762
  %21 = ashr exact i64 %sext1, 56, !dbg !2762
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2763
  ret i64 %21, !dbg !2763

deref.next38:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2764
  %22 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2765
  br i1 %22, label %deref.next42, label %deref.next46, !dbg !2740

deref.next42:                                     ; preds = %deref.next38
  %23 = bitcast i8* %v.value to i16*, !dbg !2766
  %24 = load i16, i16* %23, align 2, !dbg !2767
  %25 = sext i16 %24 to i64, !dbg !2768
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2769
  ret i64 %25, !dbg !2769

deref.next46:                                     ; preds = %deref.next38
  %26 = ptrtoint i8* %v.value to i32, !dbg !2770
  %27 = zext i32 %26 to i64, !dbg !2771
  %sext = shl i64 %27, 48, !dbg !2772
  %28 = ashr exact i64 %sext, 48, !dbg !2772
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2773
  ret i64 %28, !dbg !2773

deref.next48:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2774
  %29 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2775
  br i1 %29, label %deref.next52, label %deref.next56, !dbg !2740

deref.next52:                                     ; preds = %deref.next48
  %30 = bitcast i8* %v.value to i32*, !dbg !2776
  %31 = load i32, i32* %30, align 4, !dbg !2777
  %32 = sext i32 %31 to i64, !dbg !2778
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2779
  ret i64 %32, !dbg !2779

deref.next56:                                     ; preds = %deref.next48
  %33 = ptrtoint i8* %v.value to i32, !dbg !2780
  %34 = sext i32 %33 to i64, !dbg !2781
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2782
  ret i64 %34, !dbg !2782

deref.next58:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2738, metadata !DIExpression()), !dbg !2783
  %35 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2784
  %36 = bitcast i8* %v.value to i64*, !dbg !2785
  %37 = load i64, i64* %36, align 8, !dbg !2786
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2787
  ret i64 %37, !dbg !2787
}

; Function Attrs: optsize
define internal fastcc { i32, i8* } @"(reflect.Value).Interface"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Interface" !dbg !2788 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2794
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2794
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2794
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2794
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2794
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2794
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2794
  %complit.i = alloca %runtime._interface, align 8, !dbg !2794
  %v = alloca %reflect.Value, align 8, !dbg !2802
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2790, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2802
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2790, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2802
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2790, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2802
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2802
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2802
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2802
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2802
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2802
  store i8* %3, i8** %4, align 4, !dbg !2802
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2802
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2802
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2803
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2803
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2803
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2790, metadata !DIExpression()), !dbg !2804
  %6 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2805
  br i1 %6, label %deref.next2, label %deref.next14, !dbg !2803

for.loop:                                         ; preds = %for.body, %deref.next4
  %7 = phi i32 [ 0, %deref.next4 ], [ %17, %for.body ], !dbg !2806
  %8 = phi i32 [ %22, %deref.next4 ], [ %10, %for.body ], !dbg !2807
  call void @llvm.dbg.value(metadata i32 %8, metadata !2792, metadata !DIExpression()), !dbg !2808
  %.not = icmp eq i32 %8, 0, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2811
  br i1 %.not, label %gep.next8, label %for.body, !dbg !2803

for.body:                                         ; preds = %for.loop
  %9 = shl i32 %7, 8, !dbg !2812
  call void @llvm.dbg.value(metadata i32 %8, metadata !2792, metadata !DIExpression()), !dbg !2813
  %10 = add i32 %8, -1, !dbg !2814
  %11 = add i32 %10, %23, !dbg !2815
  %12 = inttoptr i32 %11 to i8*, !dbg !2816
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2817
  store i8* %12, i8** %13, align 4, !dbg !2817
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2817
  store i8* %12, i8** %14, align 4, !dbg !2817
  %15 = load i8, i8* %12, align 1, !dbg !2817
  %16 = zext i8 %15 to i32, !dbg !2818
  %17 = or i32 %9, %16, !dbg !2819
  call void @llvm.dbg.value(metadata i32 %17, metadata !2791, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.value(metadata i32 %10, metadata !2792, metadata !DIExpression()), !dbg !2821
  br label %for.loop, !dbg !2803

deref.next2:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2790, metadata !DIExpression()), !dbg !2822
  %18 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2823
  %19 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %v.typecode), !dbg !2824
  %20 = icmp ult i32 %19, 5, !dbg !2825
  br i1 %20, label %deref.next4, label %deref.next14, !dbg !2803

deref.next4:                                      ; preds = %deref.next2
  call void @llvm.dbg.value(metadata i32 0, metadata !2791, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2790, metadata !DIExpression()), !dbg !2826
  %21 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2827
  %22 = tail call fastcc i32 @"(reflect.Type).Size"(i32 %v.typecode), !dbg !2828
  call void @llvm.dbg.value(metadata i32 %22, metadata !2792, metadata !DIExpression()), !dbg !2807
  %23 = ptrtoint i8* %v.value to i32, !dbg !2803
  br label %for.loop, !dbg !2803

gep.next8:                                        ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %7, metadata !2791, metadata !DIExpression()), !dbg !2810
  %24 = inttoptr i32 %7 to i8*, !dbg !2829
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2830
  store i8* %24, i8** %25, align 4, !dbg !2830
  store i8* %24, i8** %.fca.1.gep, align 4, !dbg !2830
  call void @llvm.dbg.value(metadata i8* %24, metadata !2793, metadata !DIExpression()), !dbg !2830
  br label %deref.next14, !dbg !2803

deref.next14:                                     ; preds = %gep.next8, %deref.next2, %entry
  %26 = phi i8* [ %24, %gep.next8 ], [ %v.value, %deref.next2 ], [ %v.value, %entry ], !dbg !2831
  %27 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2794
  store i8* %26, i8** %27, align 4, !dbg !2794
  %28 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2794
  store i8* %26, i8** %28, align 4, !dbg !2794
  %29 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2794
  store i8* %26, i8** %29, align 4, !dbg !2794
  %30 = bitcast %runtime._interface* %complit.i to i8*, !dbg !2794
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2794
  store i8* %30, i8** %31, align 4, !dbg !2794
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30), !dbg !2794
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2799, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata i8* %26, metadata !2800, metadata !DIExpression()), !dbg !2794
  %.fca.0.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %complit.i, i32 0, i32 0, !dbg !2794
  store i32 0, i32* %.fca.0.gep.i, align 8, !dbg !2794
  %.fca.1.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %complit.i, i32 0, i32 1, !dbg !2794
  store i8* null, i8** %.fca.1.gep.i, align 4, !dbg !2794
  %newret.i = insertvalue { i32, i8* } undef, i32 %v.typecode, 0, !dbg !2832
  %newret2.i = insertvalue { i32, i8* } %newret.i, i8* %26, 1, !dbg !2832
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30), !dbg !2832
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2833
  ret { i32, i8* } %newret2.i, !dbg !2833
}

; Function Attrs: optsize
define internal fastcc i1 @"(reflect.Value).IsNil"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).IsNil" !dbg !2834 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !2847
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2847
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2847
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2847
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2847
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2847
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2847
  %i.i = alloca %runtime._interface, align 8, !dbg !2847
  %v = alloca %reflect.Value, align 8, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2836, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2849
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2836, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2849
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2836, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2849
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2849
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2849
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2849
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2849
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2849
  store i8* %3, i8** %4, align 4, !dbg !2849
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2849
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2849
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2850
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2850
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2850
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2836, metadata !DIExpression()), !dbg !2851
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2852
  switch i32 %6, label %switch.next14 [
    i32 19, label %deref.next16
    i32 25, label %deref.next16
    i32 21, label %deref.next16
    i32 24, label %deref.next26
    i32 22, label %deref.next36
    i32 20, label %deref.next46
  ], !dbg !2850

if.then4:                                         ; preds = %deref.next46, %deref.next36, %deref.next26
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2853
  ret i1 true, !dbg !2853

switch.next14:                                    ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2854
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2855
  store i8* %complit, i8** %7, align 4, !dbg !2855
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2855
  store i8* %complit, i8** %8, align 4, !dbg !2855
  %.repack = bitcast i8* %complit to i8**, !dbg !2855
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(reflect.Value).IsNil$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2855
  %.repack3 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2855
  %9 = bitcast i8* %.repack3 to i32*, !dbg !2855
  store i32 5, i32* %9, align 4, !dbg !2855
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2856
  unreachable, !dbg !2856

deref.next16:                                     ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2836, metadata !DIExpression()), !dbg !2857
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2858
  br i1 %10, label %deref.next18, label %deref.next22, !dbg !2850

deref.next18:                                     ; preds = %deref.next16
  %11 = bitcast i8* %v.value to i32*, !dbg !2859
  %12 = load i32, i32* %11, align 4, !dbg !2860
  %13 = icmp eq i32 %12, 0, !dbg !2861
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2862
  ret i1 %13, !dbg !2862

deref.next22:                                     ; preds = %deref.next16
  %14 = icmp eq i8* %v.value, null, !dbg !2863
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2864
  ret i1 %14, !dbg !2864

deref.next26:                                     ; preds = %entry
  %15 = icmp eq i8* %v.value, null, !dbg !2865
  br i1 %15, label %if.then4, label %deref.next30, !dbg !2850

deref.next30:                                     ; preds = %deref.next26
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2837, metadata !DIExpression()), !dbg !2866
  %16 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2867
  %17 = bitcast i8* %16 to i8**, !dbg !2867
  %18 = load i8*, i8** %17, align 4, !dbg !2867
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !2868
  store i8* %18, i8** %19, align 4, !dbg !2868
  %20 = icmp eq i8* %18, null, !dbg !2868
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2869
  ret i1 %20, !dbg !2869

deref.next36:                                     ; preds = %entry
  %21 = icmp eq i8* %v.value, null, !dbg !2870
  br i1 %21, label %if.then4, label %deref.next42, !dbg !2850

deref.next42:                                     ; preds = %deref.next36
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2844, metadata !DIExpression()), !dbg !2871
  %22 = bitcast i8* %v.value to i32*, !dbg !2872
  %23 = load i32, i32* %22, align 4, !dbg !2872
  %24 = icmp eq i32 %23, 0, !dbg !2873
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2874
  ret i1 %24, !dbg !2874

deref.next46:                                     ; preds = %entry
  %25 = icmp eq i8* %v.value, null, !dbg !2875
  br i1 %25, label %if.then4, label %deref.next50, !dbg !2850

deref.next50:                                     ; preds = %deref.next46
  %.elt1 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2876
  %26 = bitcast i8* %.elt1 to i8**, !dbg !2876
  %.unpack2 = load i8*, i8** %26, align 4, !dbg !2876
  %27 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !2847
  store i8* %.unpack2, i8** %27, align 4, !dbg !2847
  %28 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !2847
  store i8* %.unpack2, i8** %28, align 4, !dbg !2847
  %29 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !2847
  store i8* %.unpack2, i8** %29, align 4, !dbg !2847
  %30 = bitcast %runtime._interface* %i.i to i8*, !dbg !2847
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !2847
  store i8* %30, i8** %31, align 4, !dbg !2847
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30), !dbg !2847
  call void @llvm.dbg.value(metadata i32 undef, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2847
  call void @llvm.dbg.value(metadata i8* %.unpack2, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2847
  %.fca.0.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %i.i, i32 0, i32 0, !dbg !2847
  store i32 0, i32* %.fca.0.gep.i, align 8, !dbg !2847
  %.fca.1.gep.i = getelementptr inbounds %runtime._interface, %runtime._interface* %i.i, i32 0, i32 1, !dbg !2847
  store i8* null, i8** %.fca.1.gep.i, align 4, !dbg !2847
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30), !dbg !2877
  call void @llvm.dbg.value(metadata i8* %.unpack2, metadata !2846, metadata !DIExpression()), !dbg !2878
  %32 = icmp eq i8* %.unpack2, null, !dbg !2879
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2880
  ret i1 %32, !dbg !2880
}

; Function Attrs: optsize
define internal fastcc i1 @"(reflect.Value).IsValid"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).IsValid" !dbg !2881 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !2884
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2883, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2884
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2883, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2884
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2883, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2884
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !2884
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !2884
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !2884
  %2 = icmp ne i32 %v.typecode, 0, !dbg !2885
  ret i1 %2, !dbg !2886
}

; Function Attrs: noreturn optsize
define internal fastcc void @"(reflect.Value).MapRange"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #4 section ".text.(reflect.Value).MapRange" !dbg !2887 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8* }, align 8, !dbg !2890
  store { %runtime.stackChainObject*, i32, i8* } { %runtime.stackChainObject* null, i32 1, i8* null }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, align 4, !dbg !2890
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2890
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8* }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2890
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2890
  %2 = bitcast { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2890
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2890
  %v = alloca %reflect.Value, align 8, !dbg !2890
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2889, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2890
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2889, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2890
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2889, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2890
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2890
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8* }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2890
  store i8* %3, i8** %4, align 4, !dbg !2890
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2890
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2890
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Value).MapRange$pack" to i8*)), !dbg !2891
  unreachable, !dbg !2891
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Value).NumField"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).NumField" !dbg !2892 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8* }, align 8, !dbg !2895
  store { %runtime.stackChainObject*, i32, i8* } { %runtime.stackChainObject* null, i32 1, i8* null }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, align 4, !dbg !2895
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2895
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8* }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2895
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2895
  %2 = bitcast { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2895
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2895
  %v = alloca %reflect.Value, align 8, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2894, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2895
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2894, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2895
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2894, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2895
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2895
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8* }, { %runtime.stackChainObject*, i32, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2895
  store i8* %3, i8** %4, align 4, !dbg !2895
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2895
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2895
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2894, metadata !DIExpression()), !dbg !2896
  %6 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2897
  %7 = tail call fastcc i32 @"(reflect.Type).NumField"(i32 %v.typecode), !dbg !2898
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2899
  ret i32 %7, !dbg !2899
}

; Function Attrs: optsize
define internal fastcc i32 @"(reflect.Value).Pointer"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Pointer" !dbg !2900 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2904
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2904
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2904
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2904
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2904
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2904
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2904
  %v = alloca %reflect.Value, align 8, !dbg !2904
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2902, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2904
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2902, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2904
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2902, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2904
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2904
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2904
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2904
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2904
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2904
  store i8* %3, i8** %4, align 4, !dbg !2904
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2904
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2904
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2905
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2905
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2905
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2902, metadata !DIExpression()), !dbg !2906
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2907
  switch i32 %6, label %switch.next7 [
    i32 19, label %deref.next9
    i32 25, label %deref.next9
    i32 21, label %deref.next9
    i32 18, label %deref.next9
    i32 22, label %deref.next19
    i32 24, label %switch.body6
  ], !dbg !2905

switch.body6:                                     ; preds = %entry
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(reflect.Value).Pointer$pack" to i8*)), !dbg !2908
  unreachable, !dbg !2908

switch.next7:                                     ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2909
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2910
  store i8* %complit, i8** %7, align 4, !dbg !2910
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2910
  store i8* %complit, i8** %8, align 4, !dbg !2910
  %.repack = bitcast i8* %complit to i8**, !dbg !2910
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"(reflect.Value).Pointer$string.11", i32 0, i32 0), i8** %.repack, align 4, !dbg !2910
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2910
  %9 = bitcast i8* %.repack1 to i32*, !dbg !2910
  store i32 7, i32* %9, align 4, !dbg !2910
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2911
  unreachable, !dbg !2911

deref.next9:                                      ; preds = %entry, %entry, %entry, %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2902, metadata !DIExpression()), !dbg !2912
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2913
  br i1 %10, label %deref.next11, label %deref.next15, !dbg !2905

deref.next11:                                     ; preds = %deref.next9
  %11 = bitcast i8* %v.value to i32*, !dbg !2914
  %12 = load i32, i32* %11, align 4, !dbg !2915
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2916
  ret i32 %12, !dbg !2916

deref.next15:                                     ; preds = %deref.next9
  %13 = ptrtoint i8* %v.value to i32, !dbg !2917
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2918
  ret i32 %13, !dbg !2918

deref.next19:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2903, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2903, metadata !DIExpression()), !dbg !2920
  %14 = icmp eq i8* %v.value, null, !dbg !2921
  br i1 %14, label %deref.throw20, label %deref.next21, !dbg !2921

deref.throw20:                                    ; preds = %deref.next19
  tail call fastcc void @runtime.nilPanic(), !dbg !2921
  unreachable, !dbg !2921

deref.next21:                                     ; preds = %deref.next19
  %15 = bitcast i8* %v.value to i32*, !dbg !2921
  %16 = load i32, i32* %15, align 4, !dbg !2921
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2922
  ret i32 %16, !dbg !2922
}

; Function Attrs: optsize
define internal fastcc { i8*, i32 } @"(reflect.Value).String"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).String" !dbg !2923 {
entry:
  %v = alloca %reflect.Value, align 8, !dbg !2926
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2925, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2926
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2925, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2926
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2925, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2926
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2926
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2926
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2926
  %0 = bitcast %reflect.Value* %v to i8*, !dbg !2926
  %1 = bitcast %reflect.Value* %v to i8*, !dbg !2926
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %1, i8 0, i64 9, i1 false), !dbg !2926
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2927
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2927
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2927
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2925, metadata !DIExpression()), !dbg !2928
  %2 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2929
  %3 = icmp eq i32 %2, 17, !dbg !2927
  br i1 %3, label %deref.next2, label %switch.next, !dbg !2927

switch.next:                                      ; preds = %entry
  ret { i8*, i32 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(reflect.Value).String$string", i32 0, i32 0), i32 3 }, !dbg !2930

deref.next2:                                      ; preds = %entry
  %.elt = bitcast i8* %v.value to i8**, !dbg !2931
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !2931
  %.elt7 = getelementptr inbounds i8, i8* %v.value, i32 4, !dbg !2931
  %4 = bitcast i8* %.elt7 to i32*, !dbg !2931
  %.unpack8 = load i32, i32* %4, align 4, !dbg !2931
  %newret4 = insertvalue { i8*, i32 } undef, i8* %.unpack, 0, !dbg !2932
  %newret6 = insertvalue { i8*, i32 } %newret4, i32 %.unpack8, 1, !dbg !2932
  ret { i8*, i32 } %newret6, !dbg !2932
}

; Function Attrs: optsize
define internal fastcc i64 @"(reflect.Value).Uint"(i32 %v.typecode, i8* %v.value, i8 %v.flags) unnamed_addr #2 section ".text.(reflect.Value).Uint" !dbg !2933 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !2936
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !2936
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2936
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !2936
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !2936
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !2936
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2936
  %v = alloca %reflect.Value, align 8, !dbg !2936
  call void @llvm.dbg.value(metadata i32 %v.typecode, metadata !2935, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !2936
  call void @llvm.dbg.value(metadata i8* %v.value, metadata !2935, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !2936
  call void @llvm.dbg.value(metadata i8 %v.flags, metadata !2935, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !2936
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 0, !dbg !2936
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 1, !dbg !2936
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %v, i32 0, i32 2, !dbg !2936
  %3 = bitcast %reflect.Value* %v to i8*, !dbg !2936
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !2936
  store i8* %3, i8** %4, align 4, !dbg !2936
  %5 = bitcast %reflect.Value* %v to i8*, !dbg !2936
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !2936
  store i32 %v.typecode, i32* %.fca.0.gep, align 8, !dbg !2937
  store i8* %v.value, i8** %.fca.1.gep, align 4, !dbg !2937
  store i8 %v.flags, i8* %.fca.2.gep, align 8, !dbg !2937
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2938
  %6 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2939
  switch i32 %6, label %switch.next22 [
    i32 12, label %deref.next24
    i32 8, label %deref.next32
    i32 9, label %deref.next42
    i32 7, label %deref.next52
    i32 10, label %deref.next62
    i32 11, label %deref.next72
  ], !dbg !2937

switch.next22:                                    ; preds = %entry
  %complit = tail call fastcc i8* @runtime.alloc(i32 8), !dbg !2940
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !2941
  store i8* %complit, i8** %7, align 4, !dbg !2941
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !2941
  store i8* %complit, i8** %8, align 4, !dbg !2941
  %.repack = bitcast i8* %complit to i8**, !dbg !2941
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"(reflect.Value).Uint$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !2941
  %.repack1 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !2941
  %9 = bitcast i8* %.repack1 to i32*, !dbg !2941
  store i32 4, i32* %9, align 4, !dbg !2941
  tail call fastcc void @runtime._panic(i32 997, i8* nonnull %complit), !dbg !2942
  unreachable, !dbg !2942

deref.next24:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2943
  %10 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2944
  br i1 %10, label %deref.next26, label %deref.next30, !dbg !2937

deref.next26:                                     ; preds = %deref.next24
  %11 = bitcast i8* %v.value to i32*, !dbg !2945
  %12 = load i32, i32* %11, align 4, !dbg !2946
  %13 = zext i32 %12 to i64, !dbg !2947
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2948
  ret i64 %13, !dbg !2948

deref.next30:                                     ; preds = %deref.next24
  %14 = ptrtoint i8* %v.value to i32, !dbg !2949
  %15 = zext i32 %14 to i64, !dbg !2950
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2951
  ret i64 %15, !dbg !2951

deref.next32:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2952
  %16 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2953
  br i1 %16, label %deref.next36, label %deref.next40, !dbg !2937

deref.next36:                                     ; preds = %deref.next32
  %17 = load i8, i8* %v.value, align 1, !dbg !2954
  %18 = zext i8 %17 to i64, !dbg !2955
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2956
  ret i64 %18, !dbg !2956

deref.next40:                                     ; preds = %deref.next32
  %19 = ptrtoint i8* %v.value to i32, !dbg !2957
  %20 = zext i32 %19 to i64, !dbg !2958
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2959
  ret i64 %20, !dbg !2959

deref.next42:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2960
  %21 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2961
  br i1 %21, label %deref.next46, label %deref.next50, !dbg !2937

deref.next46:                                     ; preds = %deref.next42
  %22 = bitcast i8* %v.value to i16*, !dbg !2962
  %23 = load i16, i16* %22, align 2, !dbg !2963
  %24 = zext i16 %23 to i64, !dbg !2964
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2965
  ret i64 %24, !dbg !2965

deref.next50:                                     ; preds = %deref.next42
  %25 = ptrtoint i8* %v.value to i32, !dbg !2966
  %26 = zext i32 %25 to i64, !dbg !2967
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2968
  ret i64 %26, !dbg !2968

deref.next52:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2969
  %27 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2970
  br i1 %27, label %deref.next56, label %deref.next60, !dbg !2937

deref.next56:                                     ; preds = %deref.next52
  %28 = bitcast i8* %v.value to i32*, !dbg !2971
  %29 = load i32, i32* %28, align 4, !dbg !2972
  %30 = zext i32 %29 to i64, !dbg !2973
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2974
  ret i64 %30, !dbg !2974

deref.next60:                                     ; preds = %deref.next52
  %31 = ptrtoint i8* %v.value to i32, !dbg !2975
  %32 = zext i32 %31 to i64, !dbg !2976
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2977
  ret i64 %32, !dbg !2977

deref.next62:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2978
  %33 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2979
  br i1 %33, label %deref.next66, label %deref.next70, !dbg !2937

deref.next66:                                     ; preds = %deref.next62
  %34 = bitcast i8* %v.value to i32*, !dbg !2980
  %35 = load i32, i32* %34, align 4, !dbg !2981
  %36 = zext i32 %35 to i64, !dbg !2982
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2983
  ret i64 %36, !dbg !2983

deref.next70:                                     ; preds = %deref.next62
  %37 = ptrtoint i8* %v.value to i32, !dbg !2984
  %38 = zext i32 %37 to i64, !dbg !2985
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2986
  ret i64 %38, !dbg !2986

deref.next72:                                     ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !2935, metadata !DIExpression()), !dbg !2987
  %39 = tail call fastcc i1 @"(reflect.Value).isIndirect"(i32 %v.typecode, i8* %v.value, i8 %v.flags), !dbg !2988
  %40 = bitcast i8* %v.value to i64*, !dbg !2989
  %41 = load i64, i64* %40, align 8, !dbg !2990
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !2991
  ret i64 %41, !dbg !2991
}

; Function Attrs: optsize
define internal fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %srcBuf, i8* nocapture readonly %elemsBuf, i32 %srcLen, i32 %srcCap, i32 %elemsLen) unnamed_addr #2 section ".text.runtime.sliceAppend" !dbg !2992 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8* }, align 8, !dbg !3004
  store { %runtime.stackChainObject*, i32, i8*, i8* } { %runtime.stackChainObject* null, i32 2, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, align 4, !dbg !3004
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3004
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !3004
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !3004
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !3004
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3004
  call void @llvm.dbg.value(metadata i8* %srcBuf, metadata !2997, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i8* %elemsBuf, metadata !2998, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i32 %srcCap, metadata !3000, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i32 1, metadata !3002, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3005
  %3 = icmp eq i32 %elemsLen, 0, !dbg !3006
  br i1 %3, label %if.then, label %if.done, !dbg !3007

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %srcBuf, metadata !2997, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata i32 %srcCap, metadata !3000, metadata !DIExpression()), !dbg !3010
  %4 = insertvalue { i8*, i32, i32 } zeroinitializer, i8* %srcBuf, 0, !dbg !3011
  %5 = insertvalue { i8*, i32, i32 } %4, i32 %srcLen, 1, !dbg !3011
  %6 = insertvalue { i8*, i32, i32 } %5, i32 %srcCap, 2, !dbg !3011
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3011
  ret { i8*, i32, i32 } %6, !dbg !3011

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3012
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3013
  %7 = add i32 %elemsLen, %srcLen, !dbg !3014
  call void @llvm.dbg.value(metadata i32 %srcCap, metadata !3000, metadata !DIExpression()), !dbg !3015
  %8 = icmp ugt i32 %7, %srcCap, !dbg !3016
  br i1 %8, label %if.then1, label %if.done5, !dbg !3007

if.then1:                                         ; preds = %if.done
  call void @llvm.dbg.value(metadata i32 %srcCap, metadata !3000, metadata !DIExpression()), !dbg !3017
  %9 = shl i32 %srcCap, 1, !dbg !3018
  call void @llvm.dbg.value(metadata i32 %9, metadata !3000, metadata !DIExpression()), !dbg !3019
  call void @llvm.dbg.value(metadata i32 %9, metadata !3000, metadata !DIExpression()), !dbg !3020
  %10 = icmp eq i32 %9, 0, !dbg !3021
  %spec.select = select i1 %10, i32 1, i32 %9, !dbg !3007
  br label %for.loop, !dbg !3007

for.loop:                                         ; preds = %for.loop, %if.then1
  %11 = phi i32 [ %13, %for.loop ], [ %spec.select, %if.then1 ], !dbg !3022
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3023
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  %12 = icmp ugt i32 %7, %11, !dbg !3026
  %13 = shl i32 %11, 1, !dbg !3027
  call void @llvm.dbg.value(metadata i32 %13, metadata !3000, metadata !DIExpression()), !dbg !3027
  br i1 %12, label %for.loop, label %for.done, !dbg !3007

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.value(metadata i32 %11, metadata !3000, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i32 1, metadata !3002, metadata !DIExpression()), !dbg !3029
  %14 = tail call fastcc i8* @runtime.alloc(i32 %11), !dbg !3030
  %15 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !3031
  store i8* %14, i8** %15, align 4, !dbg !3031
  call void @llvm.dbg.value(metadata i8* %14, metadata !3003, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3032
  %.not = icmp eq i32 %srcLen, 0, !dbg !3033
  br i1 %.not, label %if.done5, label %if.then3, !dbg !3007

if.then3:                                         ; preds = %for.done
  call void @llvm.dbg.value(metadata i8* %14, metadata !3003, metadata !DIExpression()), !dbg !3034
  call void @llvm.dbg.value(metadata i8* %srcBuf, metadata !2997, metadata !DIExpression()), !dbg !3035
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i32 1, metadata !3002, metadata !DIExpression()), !dbg !3037
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 %14, i8* align 1 %srcBuf, i32 %srcLen, i1 false), !dbg !3038
  br label %if.done5, !dbg !3007

if.done5:                                         ; preds = %for.done, %if.then3, %if.done
  %16 = phi i8* [ %srcBuf, %if.done ], [ %14, %if.then3 ], [ %14, %for.done ], !dbg !3039
  %17 = phi i32 [ %srcCap, %if.done ], [ %11, %if.then3 ], [ %11, %for.done ], !dbg !3022
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !3040
  store i8* %16, i8** %18, align 4, !dbg !3040
  call void @llvm.dbg.value(metadata i8* %16, metadata !2997, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.value(metadata i32 1, metadata !3002, metadata !DIExpression()), !dbg !3042
  %19 = getelementptr inbounds i8, i8* %16, i32 %srcLen, !dbg !3043
  call void @llvm.dbg.value(metadata i8* %elemsBuf, metadata !2998, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i32 1, metadata !3002, metadata !DIExpression()), !dbg !3046
  tail call void @llvm.memmove.p0i8.p0i8.i32(i8* align 1 %19, i8* align 1 %elemsBuf, i32 %elemsLen, i1 false), !dbg !3047
  call void @llvm.dbg.value(metadata i8* %16, metadata !2997, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i32 %srcLen, metadata !2999, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.value(metadata i32 %elemsLen, metadata !3001, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i32 %17, metadata !3000, metadata !DIExpression()), !dbg !3051
  %20 = insertvalue { i8*, i32, i32 } zeroinitializer, i8* %16, 0, !dbg !3052
  %21 = insertvalue { i8*, i32, i32 } %20, i32 %7, 1, !dbg !3052
  %22 = insertvalue { i8*, i32, i32 } %21, i32 %17, 2, !dbg !3052
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3052
  ret { i8*, i32, i32 } %22, !dbg !3052
}

; Function Attrs: optsize
define internal fastcc { i8*, i32 } @runtime.stringConcat(i8* dereferenceable_or_null(1) %x.ptr, i32 %x.length, i8* dereferenceable_or_null(1) %y.ptr, i32 %y.length) unnamed_addr #2 section ".text.runtime.stringConcat" !dbg !3053 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !3067
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 6, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !3067
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3067
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !3067
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !3067
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !3067
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3067
  %complit = alloca %runtime._string, align 8, !dbg !3067
  %y = alloca %runtime._string, align 8, !dbg !3067
  %x = alloca %runtime._string, align 8, !dbg !3067
  call void @llvm.dbg.value(metadata i8* %x.ptr, metadata !3063, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3067
  call void @llvm.dbg.value(metadata i32 %x.length, metadata !3063, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3067
  call void @llvm.dbg.value(metadata i8* %y.ptr, metadata !3064, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3067
  call void @llvm.dbg.value(metadata i32 %y.length, metadata !3064, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3067
  %.fca.0.gep = getelementptr inbounds %runtime._string, %runtime._string* %x, i32 0, i32 0, !dbg !3067
  store i8* null, i8** %.fca.0.gep, align 8, !dbg !3067
  %.fca.1.gep = getelementptr inbounds %runtime._string, %runtime._string* %x, i32 0, i32 1, !dbg !3067
  store i32 0, i32* %.fca.1.gep, align 4, !dbg !3067
  %3 = bitcast %runtime._string* %x to i8*, !dbg !3067
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !3068
  store i8* %3, i8** %4, align 4, !dbg !3068
  store i8* %x.ptr, i8** %.fca.0.gep, align 8, !dbg !3068
  store i32 %x.length, i32* %.fca.1.gep, align 4, !dbg !3068
  %.fca.0.gep55 = getelementptr inbounds %runtime._string, %runtime._string* %y, i32 0, i32 0, !dbg !3067
  store i8* null, i8** %.fca.0.gep55, align 8, !dbg !3067
  %.fca.1.gep56 = getelementptr inbounds %runtime._string, %runtime._string* %y, i32 0, i32 1, !dbg !3067
  store i32 0, i32* %.fca.1.gep56, align 4, !dbg !3067
  %5 = bitcast %runtime._string* %y to i8*, !dbg !3067
  %6 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !3068
  store i8* %5, i8** %6, align 4, !dbg !3068
  store i8* %y.ptr, i8** %.fca.0.gep55, align 8, !dbg !3068
  store i32 %y.length, i32* %.fca.1.gep56, align 4, !dbg !3068
  %7 = icmp eq i32 %x.length, 0, !dbg !3069
  br i1 %7, label %deref.next6, label %deref.next10, !dbg !3068

deref.next6:                                      ; preds = %entry
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !3064, metadata !DIExpression()), !dbg !3070
  %newret = insertvalue { i8*, i32 } undef, i8* %y.ptr, 0, !dbg !3071
  %newret2 = insertvalue { i8*, i32 } %newret, i32 %y.length, 1, !dbg !3071
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3071
  ret { i8*, i32 } %newret2, !dbg !3071

deref.next10:                                     ; preds = %entry
  %8 = icmp eq i32 %y.length, 0, !dbg !3072
  br i1 %8, label %deref.next12, label %deref.next20, !dbg !3068

deref.next12:                                     ; preds = %deref.next10
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !3063, metadata !DIExpression()), !dbg !3073
  %newret4 = insertvalue { i8*, i32 } undef, i8* %x.ptr, 0, !dbg !3074
  %newret6 = insertvalue { i8*, i32 } %newret4, i32 %x.length, 1, !dbg !3074
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3074
  ret { i8*, i32 } %newret6, !dbg !3074

deref.next20:                                     ; preds = %deref.next10
  %9 = add i32 %y.length, %x.length, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %9, metadata !3065, metadata !DIExpression()), !dbg !3076
  %10 = tail call fastcc i8* @runtime.alloc(i32 %9), !dbg !3077
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !3078
  store i8* %10, i8** %11, align 4, !dbg !3078
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !3078
  store i8* %10, i8** %12, align 4, !dbg !3078
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !3078
  store i8* %10, i8** %13, align 4, !dbg !3078
  call void @llvm.dbg.value(metadata i8* %10, metadata !3066, metadata !DIExpression()), !dbg !3078
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 %10, i8* align 1 %x.ptr, i32 %x.length, i1 false), !dbg !3079
  %14 = getelementptr inbounds i8, i8* %10, i32 %x.length, !dbg !3080
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull align 1 %14, i8* align 1 %y.ptr, i32 %y.length, i1 false), !dbg !3081
  %.fca.0.gep67 = getelementptr inbounds %runtime._string, %runtime._string* %complit, i32 0, i32 0, !dbg !3067
  store i8* null, i8** %.fca.0.gep67, align 8, !dbg !3067
  %.fca.1.gep68 = getelementptr inbounds %runtime._string, %runtime._string* %complit, i32 0, i32 1, !dbg !3067
  store i32 0, i32* %.fca.1.gep68, align 4, !dbg !3067
  %15 = bitcast %runtime._string* %complit to i8*, !dbg !3067
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !3082
  store i8* %15, i8** %16, align 4, !dbg !3082
  %newret8 = insertvalue { i8*, i32 } undef, i8* %10, 0, !dbg !3082
  %newret10 = insertvalue { i8*, i32 } %newret8, i32 %9, 1, !dbg !3082
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3082
  ret { i8*, i32 } %newret10, !dbg !3082
}

; Function Attrs: argmemonly nounwind optsize willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind optsize willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: optsize
define internal fastcc void @runtime.putchar(i8 %c) unnamed_addr #2 section ".text.runtime.putchar" !dbg !3083 {
entry:
  call void @llvm.dbg.value(metadata i8 %c, metadata !3087, metadata !DIExpression()), !dbg !3090
  %0 = load i32, i32* @runtime.putcharPosition, align 4, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %0, metadata !3088, metadata !DIExpression()), !dbg !3091
  %1 = icmp ugt i32 %0, 119, !dbg !3092
  br i1 %1, label %lookup.throw, label %lookup.next, !dbg !3092

if.then:                                          ; preds = %lookup.next
  call void @llvm.dbg.value(metadata i32 %4, metadata !3088, metadata !DIExpression()), !dbg !3093
  store i32 %4, i32* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 1, i32 1), align 4, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %4, metadata !3089, metadata !DIExpression()), !dbg !3094
  %2 = tail call i32 @wasm_import_wasi_unstable_fd_write(i32 1, %runtime.__wasi_iovec_t* nonnull getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 1), i32 1, i32* nonnull @runtime.putcharNWritten), !dbg !3095
  store i32 0, i32* @runtime.putcharPosition, align 4, !dbg !3096
  call void @llvm.dbg.value(metadata i32 0, metadata !3088, metadata !DIExpression()), !dbg !3096
  br label %if.done, !dbg !3097

if.done:                                          ; preds = %lookup.next, %if.then
  ret void, !dbg !3097

lookup.throw:                                     ; preds = %entry
  tail call fastcc void @runtime.lookupPanic(), !dbg !3092
  unreachable, !dbg !3092

lookup.next:                                      ; preds = %entry
  %3 = getelementptr inbounds [120 x i8], [120 x i8]* @runtime.putcharBuffer, i32 0, i32 %0, !dbg !3092
  call void @llvm.dbg.value(metadata i8 %c, metadata !3087, metadata !DIExpression()), !dbg !3098
  store i8 %c, i8* %3, align 1, !dbg !3092
  %4 = add nuw nsw i32 %0, 1, !dbg !3099
  store i32 %4, i32* @runtime.putcharPosition, align 4, !dbg !3099
  call void @llvm.dbg.value(metadata i32 %4, metadata !3088, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i8 %c, metadata !3087, metadata !DIExpression()), !dbg !3100
  %5 = icmp eq i8 %c, 10, !dbg !3101
  %6 = icmp eq i32 %0, 119
  %or.cond = or i1 %5, %6, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %4, metadata !3088, metadata !DIExpression()), !dbg !3102
  br i1 %or.cond, label %if.then, label %if.done, !dbg !3097
}

; Function Attrs: optsize
define internal fastcc { i8*, i32, i32 } @strconv.appendQuotedWith(i8* %buf.data, i8* %s.data, i32 %s.len, i1 %ASCIIonly) unnamed_addr #2 section ".text.strconv.appendQuotedWith" !dbg !3103 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !3118
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 45, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !3118
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3118
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !3118
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !3118
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !3118
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3118
  %stackalloc.alloca224.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca222.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca220.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca218.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca216.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca214.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca212.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca.i = alloca [1 x i32], align 4, !dbg !3118
  %stackalloc.alloca86 = alloca [1 x i32], align 4, !dbg !3132
  %stackalloc.alloca84 = alloca [1 x i32], align 4, !dbg !3132
  %stackalloc.alloca82 = alloca [1 x i32], align 4, !dbg !3132
  %stackalloc.alloca = alloca [1 x i32], align 4, !dbg !3132
  %3 = insertvalue { i8*, i32, i32 } zeroinitializer, i8* %buf.data, 0, !dbg !3132
  %4 = insertvalue { i8*, i32, i32 } %3, i32 0, 1, !dbg !3132
  %5 = insertvalue { i8*, i32, i32 } %4, i32 68, 2, !dbg !3132
  call void @llvm.dbg.value(metadata i8* %buf.data, metadata !3110, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3132
  call void @llvm.dbg.value(metadata i32 0, metadata !3110, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3132
  call void @llvm.dbg.value(metadata i32 68, metadata !3110, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3132
  %6 = insertvalue %runtime._string zeroinitializer, i8* %s.data, 0, !dbg !3132
  %7 = insertvalue %runtime._string %6, i32 %s.len, 1, !dbg !3132
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !3111, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3132
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !3111, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3132
  call void @llvm.dbg.value(metadata i8 34, metadata !3112, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i1 %ASCIIonly, metadata !3113, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i1 false, metadata !3114, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %5, metadata !3110, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %5, metadata !3110, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.value(metadata %runtime._string %7, metadata !3111, metadata !DIExpression()), !dbg !3135
  %8 = icmp sgt i32 %s.len, 68, !dbg !3136
  br i1 %8, label %if.then, label %if.done, !dbg !3137

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %5, metadata !3110, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %5, metadata !3110, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata %runtime._string %7, metadata !3111, metadata !DIExpression()), !dbg !3140
  %9 = add nuw i32 %s.len, 2, !dbg !3141
  %slice.maxcap = icmp slt i32 %9, 0, !dbg !3142
  br i1 %slice.maxcap, label %slice.throw, label %slice.next, !dbg !3142

if.done:                                          ; preds = %slice.next, %entry
  %10 = phi { i8*, i32, i32 } [ %5, %entry ], [ %172, %slice.next ], !dbg !3143
  %11 = extractvalue { i8*, i32, i32 } %10, 0, !dbg !3144
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !3144
  store i8* %11, i8** %12, align 4, !dbg !3144
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %10, metadata !3110, metadata !DIExpression()), !dbg !3144
  call void @llvm.dbg.value(metadata i8 34, metadata !3112, metadata !DIExpression()), !dbg !3145
  %.fca.0.gep90 = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca86, i32 0, i32 0, !dbg !3146
  store i32 0, i32* %.fca.0.gep90, align 4, !dbg !3146
  %stackalloc87 = bitcast [1 x i32]* %stackalloc.alloca86 to i8*, !dbg !3146
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !3145
  store i8* %stackalloc87, i8** %13, align 4, !dbg !3145
  store i8 34, i8* %stackalloc87, align 4, !dbg !3145
  %append.srcLen = extractvalue { i8*, i32, i32 } %10, 1, !dbg !3147
  %append.srcCap = extractvalue { i8*, i32, i32 } %10, 2, !dbg !3147
  %append.new = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %11, i8* nonnull %stackalloc87, i32 %append.srcLen, i32 %append.srcCap, i32 1), !dbg !3147
  %append.newPtr = extractvalue { i8*, i32, i32 } %append.new, 0, !dbg !3147
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !3148
  store i8* %append.newPtr, i8** %14, align 4, !dbg !3148
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new, metadata !3110, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 0, metadata !3116, metadata !DIExpression()), !dbg !3149
  %15 = bitcast [1 x i32]* %stackalloc.alloca224.i to i8*, !dbg !3150
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !3150
  store i8* %15, i8** %16, align 4, !dbg !3150
  %17 = bitcast [1 x i32]* %stackalloc.alloca222.i to i8*, !dbg !3150
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !3150
  store i8* %17, i8** %18, align 4, !dbg !3150
  %19 = bitcast [1 x i32]* %stackalloc.alloca220.i to i8*, !dbg !3150
  %20 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !3150
  store i8* %19, i8** %20, align 4, !dbg !3150
  %21 = bitcast [1 x i32]* %stackalloc.alloca218.i to i8*, !dbg !3150
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 20, !dbg !3150
  store i8* %21, i8** %22, align 4, !dbg !3150
  %23 = bitcast [1 x i32]* %stackalloc.alloca216.i to i8*, !dbg !3150
  %24 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 31, !dbg !3150
  store i8* %23, i8** %24, align 4, !dbg !3150
  %25 = bitcast [1 x i32]* %stackalloc.alloca214.i to i8*, !dbg !3150
  %26 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 33, !dbg !3150
  store i8* %25, i8** %26, align 4, !dbg !3150
  %27 = bitcast [1 x i32]* %stackalloc.alloca212.i to i8*, !dbg !3150
  %28 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 37, !dbg !3150
  store i8* %27, i8** %28, align 4, !dbg !3150
  %29 = bitcast [1 x i32]* %stackalloc.alloca.i to i8*, !dbg !3150
  %30 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 41, !dbg !3150
  store i8* %29, i8** %30, align 4, !dbg !3150
  %.fca.0.gep232.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca224.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep231.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca222.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep230.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca220.i, i32 0, i32 0, !dbg !3150
  %31 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !3151
  %32 = getelementptr inbounds i8, i8* %15, i32 3, !dbg !3151
  %33 = getelementptr inbounds i8, i8* %15, i32 2, !dbg !3151
  %.fca.0.gep.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep226.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca212.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep228.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca216.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep227.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca214.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep229.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca218.i, i32 0, i32 0, !dbg !3150
  %.fca.0.gep89 = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca84, i32 0, i32 0, !dbg !3137
  %stackalloc85 = bitcast [1 x i32]* %stackalloc.alloca84 to i8*, !dbg !3137
  %34 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !3137
  store i8* %stackalloc85, i8** %34, align 4, !dbg !3137
  %.fca.0.gep88 = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca82, i32 0, i32 0, !dbg !3137
  %stackalloc83 = bitcast [1 x i32]* %stackalloc.alloca82 to i8*, !dbg !3137
  %35 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !3137
  store i8* %stackalloc83, i8** %35, align 4, !dbg !3137
  br label %for.loop, !dbg !3137

for.loop:                                         ; preds = %slice.next66, %if.done
  %36 = phi { i8*, i32, i32 } [ %append.new, %if.done ], [ %176, %slice.next66 ], !dbg !3143
  %37 = phi %runtime._string [ %7, %if.done ], [ %181, %slice.next66 ], !dbg !3160
  %38 = extractvalue %runtime._string %37, 0, !dbg !3161
  %39 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !3161
  store i8* %38, i8** %39, align 4, !dbg !3161
  %40 = extractvalue { i8*, i32, i32 } %36, 0, !dbg !3161
  %41 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !3161
  store i8* %40, i8** %41, align 4, !dbg !3161
  call void @llvm.dbg.value(metadata %runtime._string %37, metadata !3111, metadata !DIExpression()), !dbg !3161
  %len11 = extractvalue %runtime._string %37, 1, !dbg !3162
  %42 = icmp sgt i32 %len11, 0, !dbg !3163
  br i1 %42, label %lookup.next, label %for.done, !dbg !3137

if.done2:                                         ; preds = %lookup.next
  call void @llvm.dbg.value(metadata %runtime._string %37, metadata !3111, metadata !DIExpression()), !dbg !3164
  %43 = tail call fastcc { i32, i32 } @"unicode/utf8.DecodeRuneInString"(i8* nonnull %38, i32 %len11), !dbg !3165
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %44, metadata !3117, metadata !DIExpression()), !dbg !3166
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %45, metadata !3116, metadata !DIExpression()), !dbg !3167
  %46 = icmp eq i32 %45, 1, !dbg !3168
  %47 = icmp eq i32 %44, 65533
  %or.cond = and i1 %46, %47, !dbg !3137
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %36, metadata !3110, metadata !DIExpression()), !dbg !3169
  %append.srcLen14 = extractvalue { i8*, i32, i32 } %36, 1, !dbg !3137
  %append.srcCap15 = extractvalue { i8*, i32, i32 } %36, 2, !dbg !3137
  br i1 %or.cond, label %for.post.thread, label %if.done4, !dbg !3137

for.post.thread:                                  ; preds = %if.done2
  %append.new16 = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendQuotedWith$string", i32 0, i32 0), i32 %append.srcLen14, i32 %append.srcCap15, i32 2), !dbg !3170
  %append.newPtr17 = extractvalue { i8*, i32, i32 } %append.new16, 0, !dbg !3170
  %48 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !3170
  store i8* %append.newPtr17, i8** %48, align 4, !dbg !3170
  %append.newLen18 = extractvalue { i8*, i32, i32 } %append.new16, 1, !dbg !3170
  %append.newCap19 = extractvalue { i8*, i32, i32 } %append.new16, 2, !dbg !3170
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new16, metadata !3110, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.value(metadata %runtime._string %37, metadata !3111, metadata !DIExpression()), !dbg !3172
  %49 = load i8, i8* %38, align 1, !dbg !3173
  %50 = lshr i8 %49, 4, !dbg !3174
  %51 = zext i8 %50 to i32, !dbg !3175
  %52 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %51, !dbg !3175
  %53 = load i8, i8* %52, align 1, !dbg !3175
  store i32 0, i32* %.fca.0.gep89, align 4, !dbg !3176
  store i8 %53, i8* %stackalloc85, align 4, !dbg !3175
  %append.new36 = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr17, i8* nonnull %stackalloc85, i32 %append.newLen18, i32 %append.newCap19, i32 1), !dbg !3177
  %append.newPtr37 = extractvalue { i8*, i32, i32 } %append.new36, 0, !dbg !3177
  %54 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !3177
  store i8* %append.newPtr37, i8** %54, align 4, !dbg !3177
  %append.newLen38 = extractvalue { i8*, i32, i32 } %append.new36, 1, !dbg !3177
  %append.newCap39 = extractvalue { i8*, i32, i32 } %append.new36, 2, !dbg !3177
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new36, metadata !3110, metadata !DIExpression()), !dbg !3178
  %55 = load i8, i8* %38, align 1, !dbg !3179
  %56 = and i8 %55, 15, !dbg !3180
  %57 = zext i8 %56 to i32, !dbg !3181
  %58 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %57, !dbg !3181
  %59 = load i8, i8* %58, align 1, !dbg !3181
  store i32 0, i32* %.fca.0.gep88, align 4, !dbg !3182
  store i8 %59, i8* %stackalloc83, align 4, !dbg !3181
  %append.new56 = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr37, i8* nonnull %stackalloc83, i32 %append.newLen38, i32 %append.newCap39, i32 1), !dbg !3183
  %append.newPtr57 = extractvalue { i8*, i32, i32 } %append.new56, 0, !dbg !3183
  %60 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !3184
  store i8* %append.newPtr57, i8** %60, align 4, !dbg !3184
  %61 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !3184
  store i8* %append.newPtr57, i8** %61, align 4, !dbg !3184
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new56, metadata !3110, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32 %45, metadata !3116, metadata !DIExpression()), !dbg !3185
  br label %slice.next66, !dbg !3186

for.post:                                         ; preds = %if.then.i, %if.then2.i, %switch.done.i, %"unicode/utf8.EncodeRune.exit.i"
  %.pre-phi21 = phi i8* [ %append.newPtr209.i, %"unicode/utf8.EncodeRune.exit.i" ], [ %.pre.pre-phi, %switch.done.i ], [ %append.newPtr54.i, %if.then2.i ], [ %append.newPtr39.i, %if.then.i ], !dbg !3187
  %62 = phi { i8*, i32, i32 } [ %append.new208.i, %"unicode/utf8.EncodeRune.exit.i" ], [ %77, %switch.done.i ], [ %append.new53.i, %if.then2.i ], [ %append.new38.i, %if.then.i ]
  %63 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !3188
  store i8* %.pre-phi21, i8** %63, align 4, !dbg !3188
  %64 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !3188
  store i8* %.pre-phi21, i8** %64, align 4, !dbg !3188
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %62, metadata !3110, metadata !DIExpression()), !dbg !3188
  call void @llvm.dbg.value(metadata %runtime._string %37, metadata !3111, metadata !DIExpression()), !dbg !3189
  call void @llvm.dbg.value(metadata i32 %45, metadata !3116, metadata !DIExpression()), !dbg !3185
  %slice.lowhigh60 = icmp ult i32 %len11, %66, !dbg !3186
  br i1 %slice.lowhigh60, label %slice.throw65, label %slice.next66, !dbg !3186

if.done4:                                         ; preds = %if.done2.thread, %if.done2
  %append.srcCap156 = phi i32 [ %append.srcCap153, %if.done2.thread ], [ %append.srcCap15, %if.done2 ]
  %append.srcLen144 = phi i32 [ %append.srcLen142, %if.done2.thread ], [ %append.srcLen14, %if.done2 ]
  %65 = phi i32 [ %175, %if.done2.thread ], [ %44, %if.done2 ]
  %66 = phi i32 [ 1, %if.done2.thread ], [ %45, %if.done2 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3117, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i8 34, metadata !3112, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.value(metadata i1 %ASCIIonly, metadata !3113, metadata !DIExpression()), !dbg !3192
  call void @llvm.dbg.value(metadata i1 false, metadata !3114, metadata !DIExpression()), !dbg !3193
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !3118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29), !dbg !3118
  call void @llvm.dbg.value(metadata i8* %40, metadata !3123, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3118
  call void @llvm.dbg.value(metadata i32 %append.srcLen14, metadata !3123, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3118
  call void @llvm.dbg.value(metadata i32 %append.srcCap15, metadata !3123, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3118
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata i8 34, metadata !3125, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata i1 %ASCIIonly, metadata !3126, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata i1 false, metadata !3127, metadata !DIExpression()), !dbg !3118
  store i32 0, i32* %.fca.0.gep232.i, align 4, !dbg !3194
  switch i32 %65, label %if.done.i [
    i32 92, label %if.then.i
    i32 34, label %if.then.i
  ], !dbg !3150

if.then.i:                                        ; preds = %if.done4, %if.done4
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3195
  store i32 0, i32* %.fca.0.gep231.i, align 4, !dbg !3196
  store i8 92, i8* %17, align 4, !dbg !3150
  %append.new.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* nonnull %17, i32 %append.srcLen144, i32 %append.srcCap156, i32 1), !dbg !3197
  %append.newPtr.i = extractvalue { i8*, i32, i32 } %append.new.i, 0, !dbg !3197
  %67 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !3197
  store i8* %append.newPtr.i, i8** %67, align 4, !dbg !3197
  %append.newLen.i = extractvalue { i8*, i32, i32 } %append.new.i, 1, !dbg !3197
  %append.newCap.i = extractvalue { i8*, i32, i32 } %append.new.i, 2, !dbg !3197
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new.i, metadata !3123, metadata !DIExpression()), !dbg !3198
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3199
  %68 = trunc i32 %65 to i8, !dbg !3200
  store i32 0, i32* %.fca.0.gep230.i, align 4, !dbg !3201
  store i8 %68, i8* %19, align 4, !dbg !3200
  %append.new38.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr.i, i8* nonnull %19, i32 %append.newLen.i, i32 %append.newCap.i, i32 1), !dbg !3202
  %append.newPtr39.i = extractvalue { i8*, i32, i32 } %append.new38.i, 0, !dbg !3202
  %69 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 19, !dbg !3203
  store i8* %append.newPtr39.i, i8** %69, align 4, !dbg !3203
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new38.i, metadata !3123, metadata !DIExpression()), !dbg !3203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27), !dbg !3204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !3204
  br label %for.post, !dbg !3204

if.done.i:                                        ; preds = %if.done4
  call void @llvm.dbg.value(metadata i1 %ASCIIonly, metadata !3126, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3206
  br i1 %ASCIIonly, label %if.then1.i, label %if.else.i, !dbg !3150

if.then1.i:                                       ; preds = %if.done.i
  %70 = icmp slt i32 %65, 128, !dbg !3207
  br i1 %70, label %cond.true.i, label %if.done3.i, !dbg !3150

cond.true.i:                                      ; preds = %if.then1.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3208
  %71 = tail call fastcc i1 @strconv.IsPrint(i32 %65), !dbg !3209
  br i1 %71, label %if.then2.i, label %if.done3.i, !dbg !3150

if.then2.i:                                       ; preds = %cond.true.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3211
  %72 = trunc i32 %65 to i8, !dbg !3212
  store i32 0, i32* %.fca.0.gep229.i, align 4, !dbg !3213
  store i8 %72, i8* %21, align 4, !dbg !3212
  %append.new53.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* nonnull %21, i32 %append.srcLen144, i32 %append.srcCap156, i32 1), !dbg !3214
  %append.newPtr54.i = extractvalue { i8*, i32, i32 } %append.new53.i, 0, !dbg !3214
  %73 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 21, !dbg !3215
  store i8* %append.newPtr54.i, i8** %73, align 4, !dbg !3215
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new53.i, metadata !3123, metadata !DIExpression()), !dbg !3215
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27), !dbg !3216
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !3216
  br label %for.post, !dbg !3216

if.done3.i:                                       ; preds = %if.else.i, %cond.true.i, %if.then1.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3217
  switch i32 %65, label %switch.next15.i [
    i32 7, label %switch.body.i
    i32 8, label %switch.body4.i
    i32 12, label %switch.body6.i
    i32 10, label %switch.body8.i
    i32 13, label %switch.body10.i
    i32 9, label %switch.body12.i
    i32 11, label %switch.body14.i
  ], !dbg !3150

switch.body.i:                                    ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3218
  %append.new60.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3219
  %append.newPtr61.i = extractvalue { i8*, i32, i32 } %append.new60.i, 0, !dbg !3219
  %74 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 22, !dbg !3220
  store i8* %append.newPtr61.i, i8** %74, align 4, !dbg !3220
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new60.i, metadata !3123, metadata !DIExpression()), !dbg !3220
  br label %switch.done.i, !dbg !3150

switch.done.i.loopexit:                           ; preds = %for.loop.i
  %75 = extractvalue { i8*, i32, i32 } %99, 0, !dbg !3221
  br label %switch.done.i, !dbg !3222

switch.done.i.loopexit24:                         ; preds = %for.loop22.i
  %76 = extractvalue { i8*, i32, i32 } %113, 0, !dbg !3223
  br label %switch.done.i, !dbg !3222

switch.done.i:                                    ; preds = %switch.done.i.loopexit24, %switch.done.i.loopexit, %switch.body16.i, %switch.body14.i, %switch.body12.i, %switch.body10.i, %switch.body8.i, %switch.body6.i, %switch.body4.i, %switch.body.i
  %.pre.pre-phi = phi i8* [ %append.newPtr142.i, %switch.body16.i ], [ %append.newPtr103.i, %switch.body14.i ], [ %append.newPtr96.i, %switch.body12.i ], [ %append.newPtr89.i, %switch.body10.i ], [ %append.newPtr82.i, %switch.body8.i ], [ %append.newPtr75.i, %switch.body6.i ], [ %append.newPtr68.i, %switch.body4.i ], [ %append.newPtr61.i, %switch.body.i ], [ %75, %switch.done.i.loopexit ], [ %76, %switch.done.i.loopexit24 ], !dbg !3187
  %77 = phi { i8*, i32, i32 } [ %append.new141.i, %switch.body16.i ], [ %append.new102.i, %switch.body14.i ], [ %append.new95.i, %switch.body12.i ], [ %append.new88.i, %switch.body10.i ], [ %append.new81.i, %switch.body8.i ], [ %append.new74.i, %switch.body6.i ], [ %append.new67.i, %switch.body4.i ], [ %append.new60.i, %switch.body.i ], [ %99, %switch.done.i.loopexit ], [ %113, %switch.done.i.loopexit24 ], !dbg !3224
  %78 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 23, !dbg !3222
  store i8* %.pre.pre-phi, i8** %78, align 4, !dbg !3222
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %77, metadata !3123, metadata !DIExpression()), !dbg !3222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27), !dbg !3225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !3225
  br label %for.post, !dbg !3225

switch.body4.i:                                   ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3226
  %append.new67.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.434", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3227
  %append.newPtr68.i = extractvalue { i8*, i32, i32 } %append.new67.i, 0, !dbg !3227
  %79 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 24, !dbg !3228
  store i8* %append.newPtr68.i, i8** %79, align 4, !dbg !3228
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new67.i, metadata !3123, metadata !DIExpression()), !dbg !3228
  br label %switch.done.i, !dbg !3150

switch.body6.i:                                   ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3229
  %append.new74.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.435", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3230
  %append.newPtr75.i = extractvalue { i8*, i32, i32 } %append.new74.i, 0, !dbg !3230
  %80 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 25, !dbg !3231
  store i8* %append.newPtr75.i, i8** %80, align 4, !dbg !3231
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new74.i, metadata !3123, metadata !DIExpression()), !dbg !3231
  br label %switch.done.i, !dbg !3150

switch.body8.i:                                   ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3232
  %append.new81.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.436", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3233
  %append.newPtr82.i = extractvalue { i8*, i32, i32 } %append.new81.i, 0, !dbg !3233
  %81 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 26, !dbg !3234
  store i8* %append.newPtr82.i, i8** %81, align 4, !dbg !3234
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new81.i, metadata !3123, metadata !DIExpression()), !dbg !3234
  br label %switch.done.i, !dbg !3150

switch.body10.i:                                  ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3235
  %append.new88.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.437", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3236
  %append.newPtr89.i = extractvalue { i8*, i32, i32 } %append.new88.i, 0, !dbg !3236
  %82 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 27, !dbg !3237
  store i8* %append.newPtr89.i, i8** %82, align 4, !dbg !3237
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new88.i, metadata !3123, metadata !DIExpression()), !dbg !3237
  br label %switch.done.i, !dbg !3150

switch.body12.i:                                  ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3238
  %append.new95.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.438", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3239
  %append.newPtr96.i = extractvalue { i8*, i32, i32 } %append.new95.i, 0, !dbg !3239
  %83 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 28, !dbg !3240
  store i8* %append.newPtr96.i, i8** %83, align 4, !dbg !3240
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new95.i, metadata !3123, metadata !DIExpression()), !dbg !3240
  br label %switch.done.i, !dbg !3150

switch.body14.i:                                  ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3241
  %append.new102.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.439", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3242
  %append.newPtr103.i = extractvalue { i8*, i32, i32 } %append.new102.i, 0, !dbg !3242
  %84 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 29, !dbg !3243
  store i8* %append.newPtr103.i, i8** %84, align 4, !dbg !3243
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new102.i, metadata !3123, metadata !DIExpression()), !dbg !3243
  br label %switch.done.i, !dbg !3150

switch.next15.i:                                  ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3244
  %85 = icmp slt i32 %65, 32, !dbg !3245
  br i1 %85, label %switch.body16.i, label %switch.next17.i, !dbg !3150

switch.body16.i:                                  ; preds = %switch.next15.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3246
  %append.new109.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendQuotedWith$string", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3247
  %append.newPtr110.i = extractvalue { i8*, i32, i32 } %append.new109.i, 0, !dbg !3247
  %86 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 30, !dbg !3247
  store i8* %append.newPtr110.i, i8** %86, align 4, !dbg !3247
  %append.newLen111.i = extractvalue { i8*, i32, i32 } %append.new109.i, 1, !dbg !3247
  %append.newCap112.i = extractvalue { i8*, i32, i32 } %append.new109.i, 2, !dbg !3247
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new109.i, metadata !3123, metadata !DIExpression()), !dbg !3248
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3249
  %87 = lshr i32 %65, 4, !dbg !3250
  %88 = and i32 %87, 15, !dbg !3251
  %89 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %88, !dbg !3251
  %90 = load i8, i8* %89, align 1, !dbg !3251
  store i32 0, i32* %.fca.0.gep228.i, align 4, !dbg !3252
  store i8 %90, i8* %23, align 4, !dbg !3251
  %append.new124.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr110.i, i8* nonnull %23, i32 %append.newLen111.i, i32 %append.newCap112.i, i32 1), !dbg !3253
  %append.newPtr125.i = extractvalue { i8*, i32, i32 } %append.new124.i, 0, !dbg !3253
  %91 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 32, !dbg !3253
  store i8* %append.newPtr125.i, i8** %91, align 4, !dbg !3253
  %append.newLen126.i = extractvalue { i8*, i32, i32 } %append.new124.i, 1, !dbg !3253
  %append.newCap127.i = extractvalue { i8*, i32, i32 } %append.new124.i, 2, !dbg !3253
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new124.i, metadata !3123, metadata !DIExpression()), !dbg !3254
  %92 = and i32 %65, 15, !dbg !3255
  %93 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %92, !dbg !3256
  %94 = load i8, i8* %93, align 1, !dbg !3256
  store i32 0, i32* %.fca.0.gep227.i, align 4, !dbg !3257
  store i8 %94, i8* %25, align 4, !dbg !3256
  %append.new141.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr125.i, i8* nonnull %25, i32 %append.newLen126.i, i32 %append.newCap127.i, i32 1), !dbg !3258
  %append.newPtr142.i = extractvalue { i8*, i32, i32 } %append.new141.i, 0, !dbg !3258
  %95 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 34, !dbg !3259
  store i8* %append.newPtr142.i, i8** %95, align 4, !dbg !3259
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new141.i, metadata !3123, metadata !DIExpression()), !dbg !3259
  br label %switch.done.i, !dbg !3150

switch.next17.i:                                  ; preds = %switch.next15.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3260
  %96 = icmp sgt i32 %65, 1114111, !dbg !3261
  br i1 %96, label %switch.body19.i, label %switch.next20.i, !dbg !3150

switch.body19.i:                                  ; preds = %switch.next20.i, %switch.next17.i
  %97 = phi i32 [ %65, %switch.next20.i ], [ 65533, %switch.next17.i ], !dbg !3262
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3263
  %append.new148.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.443", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3264
  %append.newPtr149.i = extractvalue { i8*, i32, i32 } %append.new148.i, 0, !dbg !3264
  %98 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 35, !dbg !3265
  store i8* %append.newPtr149.i, i8** %98, align 4, !dbg !3265
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new148.i, metadata !3123, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata i32 12, metadata !3128, metadata !DIExpression()), !dbg !3266
  br label %for.loop.i, !dbg !3150

for.loop.i:                                       ; preds = %for.body.i, %switch.body19.i
  %99 = phi { i8*, i32, i32 } [ %append.new148.i, %switch.body19.i ], [ %append.new165.i, %for.body.i ], !dbg !3224
  %100 = phi i32 [ 12, %switch.body19.i ], [ %110, %for.body.i ], !dbg !3266
  %101 = extractvalue { i8*, i32, i32 } %99, 0, !dbg !3221
  %102 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 36, !dbg !3221
  store i8* %101, i8** %102, align 4, !dbg !3221
  call void @llvm.dbg.value(metadata i32 %100, metadata !3128, metadata !DIExpression()), !dbg !3221
  %103 = icmp sgt i32 %100, -1, !dbg !3267
  br i1 %103, label %for.body.i, label %switch.done.i.loopexit, !dbg !3150

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %99, metadata !3123, metadata !DIExpression()), !dbg !3268
  call void @llvm.dbg.value(metadata i32 %97, metadata !3124, metadata !DIExpression()), !dbg !3269
  call void @llvm.dbg.value(metadata i32 %100, metadata !3128, metadata !DIExpression()), !dbg !3270
  %104 = icmp ult i32 %100, 31, !dbg !3271
  %shift.offset.i = select i1 %104, i32 %100, i32 31, !dbg !3271
  %105 = ashr i32 %97, %shift.offset.i, !dbg !3271
  %106 = and i32 %105, 15, !dbg !3272
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %106, !dbg !3273
  %108 = load i8, i8* %107, align 1, !dbg !3273
  store i32 0, i32* %.fca.0.gep226.i, align 4, !dbg !3274
  store i8 %108, i8* %27, align 4, !dbg !3273
  %append.srcLen161.i = extractvalue { i8*, i32, i32 } %99, 1, !dbg !3275
  %append.srcCap162.i = extractvalue { i8*, i32, i32 } %99, 2, !dbg !3275
  %append.new165.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %101, i8* nonnull %27, i32 %append.srcLen161.i, i32 %append.srcCap162.i, i32 1), !dbg !3275
  %append.newPtr166.i = extractvalue { i8*, i32, i32 } %append.new165.i, 0, !dbg !3275
  %109 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 38, !dbg !3276
  store i8* %append.newPtr166.i, i8** %109, align 4, !dbg !3276
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new165.i, metadata !3123, metadata !DIExpression()), !dbg !3276
  %110 = add nsw i32 %100, -4, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %110, metadata !3128, metadata !DIExpression()), !dbg !3277
  br label %for.loop.i, !dbg !3150

switch.next20.i:                                  ; preds = %switch.next17.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3278
  %111 = icmp slt i32 %65, 65536, !dbg !3279
  br i1 %111, label %switch.body19.i, label %switch.next21.i, !dbg !3150

switch.next21.i:                                  ; preds = %switch.next20.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3280
  %append.new172.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"strconv.appendEscapedRune$string.445", i32 0, i32 0), i32 %append.srcLen144, i32 %append.srcCap156, i32 2), !dbg !3281
  %append.newPtr173.i = extractvalue { i8*, i32, i32 } %append.new172.i, 0, !dbg !3281
  %112 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 39, !dbg !3282
  store i8* %append.newPtr173.i, i8** %112, align 4, !dbg !3282
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new172.i, metadata !3123, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 28, metadata !3129, metadata !DIExpression()), !dbg !3283
  br label %for.loop22.i, !dbg !3150

for.loop22.i:                                     ; preds = %for.body23.i, %switch.next21.i
  %113 = phi { i8*, i32, i32 } [ %append.new172.i, %switch.next21.i ], [ %append.new191.i, %for.body23.i ], !dbg !3224
  %114 = phi i32 [ 28, %switch.next21.i ], [ %124, %for.body23.i ], !dbg !3283
  %115 = extractvalue { i8*, i32, i32 } %113, 0, !dbg !3223
  %116 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 40, !dbg !3223
  store i8* %115, i8** %116, align 4, !dbg !3223
  call void @llvm.dbg.value(metadata i32 %114, metadata !3129, metadata !DIExpression()), !dbg !3223
  %117 = icmp sgt i32 %114, -1, !dbg !3284
  br i1 %117, label %for.body23.i, label %switch.done.i.loopexit24, !dbg !3150

for.body23.i:                                     ; preds = %for.loop22.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %113, metadata !3123, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 %114, metadata !3129, metadata !DIExpression()), !dbg !3287
  %118 = icmp ult i32 %114, 31, !dbg !3288
  %shift.offset177.i = select i1 %118, i32 %114, i32 31, !dbg !3288
  %119 = ashr i32 %65, %shift.offset177.i, !dbg !3288
  %120 = and i32 %119, 15, !dbg !3289
  %121 = getelementptr inbounds [16 x i8], [16 x i8]* @"strconv.appendQuotedWith$string.448", i32 0, i32 %120, !dbg !3290
  %122 = load i8, i8* %121, align 1, !dbg !3290
  store i32 0, i32* %.fca.0.gep.i, align 4, !dbg !3291
  store i8 %122, i8* %29, align 4, !dbg !3290
  %append.srcLen187.i = extractvalue { i8*, i32, i32 } %113, 1, !dbg !3292
  %append.srcCap188.i = extractvalue { i8*, i32, i32 } %113, 2, !dbg !3292
  %append.new191.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %115, i8* nonnull %29, i32 %append.srcLen187.i, i32 %append.srcCap188.i, i32 1), !dbg !3292
  %append.newPtr192.i = extractvalue { i8*, i32, i32 } %append.new191.i, 0, !dbg !3292
  %123 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 42, !dbg !3293
  store i8* %append.newPtr192.i, i8** %123, align 4, !dbg !3293
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new191.i, metadata !3123, metadata !DIExpression()), !dbg !3293
  %124 = add nsw i32 %114, -4, !dbg !3294
  call void @llvm.dbg.value(metadata i32 %124, metadata !3129, metadata !DIExpression()), !dbg !3294
  br label %for.loop22.i, !dbg !3150

if.else.i:                                        ; preds = %if.done.i
  %125 = tail call fastcc i1 @strconv.IsPrint(i32 %65), !dbg !3295
  br i1 %125, label %slice.next196.i, label %if.done3.i, !dbg !3150

slice.next196.i:                                  ; preds = %if.else.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3124, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i8* %15, metadata !3156, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3297
  call void @llvm.dbg.value(metadata i32 4, metadata !3156, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3297
  call void @llvm.dbg.value(metadata i32 undef, metadata !3156, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3297
  call void @llvm.dbg.value(metadata i32 %44, metadata !3157, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata i32 %44, metadata !3158, metadata !DIExpression()), !dbg !3299
  %126 = icmp ult i32 %65, 128, !dbg !3300
  br i1 %126, label %lookup.next.i.i, label %switch.next.i.i, !dbg !3151

switch.next.i.i:                                  ; preds = %slice.next196.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3158, metadata !DIExpression()), !dbg !3301
  %127 = icmp ult i32 %65, 2048, !dbg !3302
  br i1 %127, label %lookup.next15.i.i, label %switch.next2.i.i, !dbg !3151

switch.next2.i.i:                                 ; preds = %switch.next.i.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3158, metadata !DIExpression()), !dbg !3303
  %128 = icmp ugt i32 %65, 1114111, !dbg !3304
  %129 = and i32 %65, -2048
  %130 = icmp eq i32 %129, 55296
  %or.cond.i.i = or i1 %128, %130, !dbg !3151
  br i1 %or.cond.i.i, label %lookup.next27.i.i, label %switch.next6.i.i, !dbg !3151

switch.next6.i.i:                                 ; preds = %switch.next2.i.i
  call void @llvm.dbg.value(metadata i32 %44, metadata !3158, metadata !DIExpression()), !dbg !3305
  %131 = icmp ult i32 %65, 65536, !dbg !3306
  br i1 %131, label %lookup.next27.i.i, label %lookup.next43.i.i, !dbg !3151

lookup.next.i.i:                                  ; preds = %slice.next196.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3156, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 %44, metadata !3157, metadata !DIExpression()), !dbg !3308
  %132 = trunc i32 %65 to i8, !dbg !3309
  store i8 %132, i8* %15, align 4, !dbg !3310
  br label %"unicode/utf8.EncodeRune.exit.i", !dbg !3311

lookup.next15.i.i:                                ; preds = %switch.next.i.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3156, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i32 %44, metadata !3157, metadata !DIExpression()), !dbg !3313
  %133 = lshr i32 %65, 6, !dbg !3314
  %134 = trunc i32 %133 to i8, !dbg !3315
  %135 = or i8 %134, -64, !dbg !3316
  store i8 %135, i8* %15, align 4, !dbg !3317
  %136 = trunc i32 %65 to i8, !dbg !3318
  %137 = and i8 %136, 63, !dbg !3319
  %138 = or i8 %137, -128, !dbg !3320
  store i8 %138, i8* %31, align 1, !dbg !3321
  br label %"unicode/utf8.EncodeRune.exit.i", !dbg !3322

lookup.next27.i.i:                                ; preds = %switch.next6.i.i, %switch.next2.i.i
  %139 = phi i32 [ %65, %switch.next6.i.i ], [ 65533, %switch.next2.i.i ], !dbg !3323
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3156, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i32 %139, metadata !3157, metadata !DIExpression()), !dbg !3325
  %140 = lshr i32 %139, 12, !dbg !3326
  %141 = trunc i32 %140 to i8, !dbg !3327
  %142 = or i8 %141, -32, !dbg !3328
  store i8 %142, i8* %15, align 4, !dbg !3329
  %143 = lshr i32 %139, 6, !dbg !3330
  %144 = trunc i32 %143 to i8, !dbg !3331
  %145 = and i8 %144, 63, !dbg !3332
  %146 = or i8 %145, -128, !dbg !3333
  store i8 %146, i8* %31, align 1, !dbg !3334
  %147 = trunc i32 %139 to i8, !dbg !3335
  %148 = and i8 %147, 63, !dbg !3336
  %149 = or i8 %148, -128, !dbg !3337
  store i8 %149, i8* %33, align 2, !dbg !3338
  br label %"unicode/utf8.EncodeRune.exit.i", !dbg !3339

lookup.next43.i.i:                                ; preds = %switch.next6.i.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3156, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 %44, metadata !3157, metadata !DIExpression()), !dbg !3341
  %150 = lshr i32 %65, 18, !dbg !3342
  %151 = trunc i32 %150 to i8, !dbg !3343
  %152 = or i8 %151, -16, !dbg !3344
  store i8 %152, i8* %15, align 4, !dbg !3345
  %153 = lshr i32 %65, 12, !dbg !3346
  %154 = trunc i32 %153 to i8, !dbg !3347
  %155 = and i8 %154, 63, !dbg !3348
  %156 = or i8 %155, -128, !dbg !3349
  store i8 %156, i8* %31, align 1, !dbg !3350
  %157 = lshr i32 %65, 6, !dbg !3351
  %158 = trunc i32 %157 to i8, !dbg !3352
  %159 = and i8 %158, 63, !dbg !3353
  %160 = or i8 %159, -128, !dbg !3354
  store i8 %160, i8* %33, align 2, !dbg !3355
  %161 = trunc i32 %65 to i8, !dbg !3356
  %162 = and i8 %161, 63, !dbg !3357
  %163 = or i8 %162, -128, !dbg !3358
  store i8 %163, i8* %32, align 1, !dbg !3359
  br label %"unicode/utf8.EncodeRune.exit.i", !dbg !3360

"unicode/utf8.EncodeRune.exit.i":                 ; preds = %lookup.next43.i.i, %lookup.next27.i.i, %lookup.next15.i.i, %lookup.next.i.i
  %164 = phi i32 [ 1, %lookup.next.i.i ], [ 2, %lookup.next15.i.i ], [ 3, %lookup.next27.i.i ], [ 4, %lookup.next43.i.i ]
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3123, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 %164, metadata !3130, metadata !DIExpression()), !dbg !3362
  %append.new208.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %40, i8* nonnull %15, i32 %append.srcLen144, i32 %append.srcCap156, i32 %164), !dbg !3363
  %append.newPtr209.i = extractvalue { i8*, i32, i32 } %append.new208.i, 0, !dbg !3363
  %165 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 43, !dbg !3364
  store i8* %append.newPtr209.i, i8** %165, align 4, !dbg !3364
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new208.i, metadata !3123, metadata !DIExpression()), !dbg !3364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27), !dbg !3365
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !3365
  br label %for.post, !dbg !3365

for.done:                                         ; preds = %for.loop
  %166 = extractvalue { i8*, i32, i32 } %36, 0, !dbg !3161
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %36, metadata !3110, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata i8 34, metadata !3112, metadata !DIExpression()), !dbg !3367
  %.fca.0.gep = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !3368
  store i32 0, i32* %.fca.0.gep, align 4, !dbg !3368
  %stackalloc = bitcast [1 x i32]* %stackalloc.alloca to i8*, !dbg !3368
  %167 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 44, !dbg !3367
  store i8* %stackalloc, i8** %167, align 4, !dbg !3367
  store i8 34, i8* %stackalloc, align 4, !dbg !3367
  %append.srcLen74 = extractvalue { i8*, i32, i32 } %36, 1, !dbg !3369
  %append.srcCap75 = extractvalue { i8*, i32, i32 } %36, 2, !dbg !3369
  %append.new78 = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %166, i8* nonnull %stackalloc, i32 %append.srcLen74, i32 %append.srcCap75, i32 1), !dbg !3369
  %append.newPtr79 = extractvalue { i8*, i32, i32 } %append.new78, 0, !dbg !3369
  %168 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 45, !dbg !3370
  store i8* %append.newPtr79, i8** %168, align 4, !dbg !3370
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new78, metadata !3110, metadata !DIExpression()), !dbg !3370
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3371
  ret { i8*, i32, i32 } %append.new78, !dbg !3371

slice.throw:                                      ; preds = %if.then
  tail call fastcc void @runtime.slicePanic(), !dbg !3142
  unreachable, !dbg !3142

slice.next:                                       ; preds = %if.then
  %makeslice.buf = tail call fastcc i8* @runtime.alloc(i32 %9), !dbg !3142
  %169 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 46, !dbg !3142
  store i8* %makeslice.buf, i8** %169, align 4, !dbg !3142
  %170 = insertvalue { i8*, i32, i32 } undef, i8* %makeslice.buf, 0, !dbg !3142
  %171 = insertvalue { i8*, i32, i32 } %170, i32 0, 1, !dbg !3142
  %172 = insertvalue { i8*, i32, i32 } %171, i32 %9, 2, !dbg !3142
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %172, metadata !3115, metadata !DIExpression()), !dbg !3372
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %172, metadata !3110, metadata !DIExpression()), !dbg !3373
  br label %if.done, !dbg !3137

lookup.next:                                      ; preds = %for.loop
  call void @llvm.dbg.value(metadata %runtime._string %37, metadata !3111, metadata !DIExpression()), !dbg !3374
  %173 = load i8, i8* %38, align 1, !dbg !3375
  call void @llvm.dbg.value(metadata i32 1, metadata !3116, metadata !DIExpression()), !dbg !3376
  call void @llvm.dbg.value(metadata i8 %173, metadata !3117, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3377
  %174 = icmp slt i8 %173, 0, !dbg !3378
  br i1 %174, label %if.done2, label %if.done2.thread, !dbg !3137

if.done2.thread:                                  ; preds = %lookup.next
  %175 = zext i8 %173 to i32, !dbg !3379
  call void @llvm.dbg.value(metadata i32 %45, metadata !3116, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.value(metadata i32 %44, metadata !3117, metadata !DIExpression()), !dbg !3380
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %36, metadata !3110, metadata !DIExpression()), !dbg !3169
  %append.srcLen142 = extractvalue { i8*, i32, i32 } %36, 1, !dbg !3137
  %append.srcCap153 = extractvalue { i8*, i32, i32 } %36, 2, !dbg !3137
  br label %if.done4, !dbg !3137

slice.throw65:                                    ; preds = %for.post
  tail call fastcc void @runtime.slicePanic(), !dbg !3186
  unreachable, !dbg !3186

slice.next66:                                     ; preds = %for.post.thread, %for.post
  %176 = phi { i8*, i32, i32 } [ %append.new56, %for.post.thread ], [ %62, %for.post ]
  %177 = phi i32 [ 1, %for.post.thread ], [ %66, %for.post ]
  %178 = getelementptr inbounds i8, i8* %38, i32 %177, !dbg !3186
  %179 = sub i32 %len11, %177, !dbg !3186
  %180 = insertvalue %runtime._string undef, i8* %178, 0, !dbg !3186
  %181 = insertvalue %runtime._string %180, i32 %179, 1, !dbg !3186
  call void @llvm.dbg.value(metadata %runtime._string %181, metadata !3111, metadata !DIExpression()), !dbg !3381
  br label %for.loop, !dbg !3137
}

; Function Attrs: optsize
define internal fastcc i1 @strconv.IsPrint(i32 %r) unnamed_addr #2 section ".text.strconv.IsPrint" !dbg !3382 {
entry:
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3402
  %0 = icmp slt i32 %r, 256, !dbg !3403
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3405
  br i1 %0, label %if.then, label %if.done5, !dbg !3406

if.then:                                          ; preds = %entry
  %r.off = add i32 %r, -32, !dbg !3406
  %1 = icmp ult i32 %r.off, 95, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3407
  br i1 %1, label %if.then1, label %if.done, !dbg !3406

if.then1:                                         ; preds = %if.done17, %lookup.next42, %if.done15, %strconv.bsearch32.exit, %lookup.next33, %lookup.next37, %if.done10, %lookup.next28, %if.then7, %lookup.next, %lookup.next23, %if.done, %if.then
  %merge = phi i1 [ true, %if.then ], [ false, %if.done ], [ false, %lookup.next23 ], [ false, %lookup.next ], [ false, %if.then7 ], [ true, %if.done10 ], [ %42, %lookup.next28 ], [ false, %lookup.next37 ], [ false, %lookup.next33 ], [ false, %strconv.bsearch32.exit ], [ true, %if.done15 ], [ true, %if.done17 ], [ %51, %lookup.next42 ]
  ret i1 %merge, !dbg !3408

if.done:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3409
  %2 = icmp sgt i32 %r, 160, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3411
  br i1 %2, label %if.then3, label %if.then1, !dbg !3406

if.then3:                                         ; preds = %if.done
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3412
  %3 = icmp ne i32 %r, 173, !dbg !3413
  ret i1 %3, !dbg !3414

if.done5:                                         ; preds = %entry
  %4 = icmp slt i32 %r, 65536
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3415
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3416
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3417
  br i1 %4, label %if.then7, label %if.done11, !dbg !3406

if.then7:                                         ; preds = %if.done5
  %5 = trunc i32 %r to i16, !dbg !3418
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3387, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i32 132 }, metadata !3388, metadata !DIExpression()), !dbg !3420
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3390, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i32 132 }, metadata !3391, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3390, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3425
  %6 = tail call fastcc i32 @strconv.bsearch16(i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i16 %5), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %6, metadata !3392, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i32 %6, metadata !3392, metadata !DIExpression()), !dbg !3428
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3390, metadata !DIExpression()), !dbg !3429
  %7 = icmp sgt i32 %6, 441, !dbg !3430
  br i1 %7, label %if.then1, label %cond.false, !dbg !3406

cond.false:                                       ; preds = %if.then7
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3390, metadata !DIExpression()), !dbg !3432
  call void @llvm.dbg.value(metadata i32 %6, metadata !3392, metadata !DIExpression()), !dbg !3433
  %8 = and i32 %6, -2, !dbg !3434
  %9 = icmp ugt i32 %8, 441, !dbg !3435
  br i1 %9, label %lookup.throw, label %lookup.next, !dbg !3435

cond.false9:                                      ; preds = %lookup.next
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 442, i32 442 }, metadata !3390, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %6, metadata !3392, metadata !DIExpression()), !dbg !3437
  %10 = or i32 %6, 1, !dbg !3438
  %11 = icmp ugt i32 %10, 441, !dbg !3439
  br i1 %11, label %lookup.throw22, label %lookup.next23, !dbg !3439

if.done10:                                        ; preds = %lookup.next23
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i32 132 }, metadata !3391, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3441
  %12 = tail call fastcc i32 @strconv.bsearch16(i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i16 %5), !dbg !3442
  call void @llvm.dbg.value(metadata i32 %12, metadata !3393, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 %12, metadata !3393, metadata !DIExpression()), !dbg !3444
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i32 132 }, metadata !3391, metadata !DIExpression()), !dbg !3445
  %13 = icmp sgt i32 %12, 131, !dbg !3446
  br i1 %13, label %if.then1, label %lookup.next28, !dbg !3406

if.done11:                                        ; preds = %if.done5
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3394, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i32 90 }, metadata !3395, metadata !DIExpression()), !dbg !3448
  call void @llvm.dbg.value(metadata i32 %r, metadata !3396, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3397, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i32 90 }, metadata !3398, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3397, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.value(metadata i32 %r, metadata !3396, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), metadata !3454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3463
  call void @llvm.dbg.value(metadata i32 450, metadata !3454, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3463
  call void @llvm.dbg.value(metadata i32 undef, metadata !3454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %r, metadata !3459, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } undef, metadata !3454, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.value(metadata i32 0, metadata !3460, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata i32 450, metadata !3461, metadata !DIExpression()), !dbg !3467
  br label %for.loop.i, !dbg !3468

for.loop.i:                                       ; preds = %lookup.next.i, %if.done11
  %14 = phi i32 [ 0, %if.done11 ], [ %spec.select.i, %lookup.next.i ], !dbg !3466
  %15 = phi i32 [ 450, %if.done11 ], [ %spec.select1.i, %lookup.next.i ], !dbg !3467
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %15, metadata !3461, metadata !DIExpression()), !dbg !3470
  %16 = icmp sgt i32 %15, %14, !dbg !3471
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3473
  br i1 %16, label %for.body.i, label %strconv.bsearch32.exit, !dbg !3468

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %15, metadata !3461, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3475
  %17 = sub i32 %15, %14, !dbg !3476
  %18 = sdiv i32 %17, 2, !dbg !3477
  %19 = add i32 %18, %14, !dbg !3478
  call void @llvm.dbg.value(metadata i32 %19, metadata !3462, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } undef, metadata !3454, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i32 %19, metadata !3462, metadata !DIExpression()), !dbg !3481
  %20 = icmp ugt i32 %19, 449, !dbg !3482
  br i1 %20, label %lookup.throw.i, label %lookup.next.i, !dbg !3482

lookup.throw.i:                                   ; preds = %for.body.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !3482
  unreachable, !dbg !3482

lookup.next.i:                                    ; preds = %for.body.i
  %21 = getelementptr inbounds i32, i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 %19, !dbg !3482
  %22 = load i32, i32* %21, align 4, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %r, metadata !3459, metadata !DIExpression()), !dbg !3483
  %23 = icmp ult i32 %22, %r, !dbg !3484
  %24 = add nuw nsw i32 %19, 1
  %spec.select.i = select i1 %23, i32 %24, i32 %14, !dbg !3468
  %spec.select1.i = select i1 %23, i32 %15, i32 %19, !dbg !3468
  br label %for.loop.i, !dbg !3468

strconv.bsearch32.exit:                           ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3460, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.value(metadata i32 %14, metadata !3399, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i32 %14, metadata !3399, metadata !DIExpression()), !dbg !3486
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3397, metadata !DIExpression()), !dbg !3487
  %25 = icmp sgt i32 %14, 449, !dbg !3488
  br i1 %25, label %if.then1, label %cond.false13, !dbg !3406

cond.false13:                                     ; preds = %strconv.bsearch32.exit
  call void @llvm.dbg.value(metadata i32 %r, metadata !3396, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3397, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.value(metadata i32 %14, metadata !3399, metadata !DIExpression()), !dbg !3491
  %26 = and i32 %14, -2, !dbg !3492
  %27 = icmp ugt i32 %26, 449, !dbg !3493
  br i1 %27, label %lookup.throw32, label %lookup.next33, !dbg !3493

cond.false14:                                     ; preds = %lookup.next33
  call void @llvm.dbg.value(metadata { i32*, i32, i32 } { i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 450, i32 450 }, metadata !3397, metadata !DIExpression()), !dbg !3494
  call void @llvm.dbg.value(metadata i32 %14, metadata !3399, metadata !DIExpression()), !dbg !3495
  %28 = or i32 %14, 1, !dbg !3496
  %29 = icmp ugt i32 %28, 449, !dbg !3497
  br i1 %29, label %lookup.throw36, label %lookup.next37, !dbg !3497

if.done15:                                        ; preds = %lookup.next37
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3498
  %30 = icmp sgt i32 %r, 131071, !dbg !3499
  br i1 %30, label %if.then1, label %if.done17, !dbg !3406

if.done17:                                        ; preds = %if.done15
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i32 90 }, metadata !3398, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3502
  %31 = trunc i32 %r to i16, !dbg !3503
  %32 = tail call fastcc i32 @strconv.bsearch16(i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i16 %31), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %32, metadata !3400, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %32, metadata !3400, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i32 90 }, metadata !3398, metadata !DIExpression()), !dbg !3507
  %33 = icmp sgt i32 %32, 89, !dbg !3508
  br i1 %33, label %if.then1, label %lookup.next42, !dbg !3406

lookup.throw:                                     ; preds = %cond.false
  tail call fastcc void @runtime.lookupPanic(), !dbg !3435
  unreachable, !dbg !3435

lookup.next:                                      ; preds = %cond.false
  %34 = getelementptr inbounds i16, i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 %8, !dbg !3435
  %35 = load i16, i16* %34, align 4, !dbg !3435
  %36 = icmp ugt i16 %35, %5, !dbg !3509
  br i1 %36, label %if.then1, label %cond.false9, !dbg !3406

lookup.throw22:                                   ; preds = %cond.false9
  tail call fastcc void @runtime.lookupPanic(), !dbg !3439
  unreachable, !dbg !3439

lookup.next23:                                    ; preds = %cond.false9
  %37 = getelementptr inbounds i16, i16* bitcast ([884 x i8]* @"strconv$alloc.1444" to i16*), i32 %10, !dbg !3439
  %38 = load i16, i16* %37, align 2, !dbg !3439
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3510
  %39 = icmp ult i16 %38, %5, !dbg !3511
  br i1 %39, label %if.then1, label %if.done10, !dbg !3406

lookup.next28:                                    ; preds = %if.done10
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 132, i32 132 }, metadata !3391, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i32 %12, metadata !3393, metadata !DIExpression()), !dbg !3513
  %40 = getelementptr inbounds i16, i16* bitcast ([264 x i8]* @"strconv$alloc.1445" to i16*), i32 %12, !dbg !3514
  %41 = load i16, i16* %40, align 2, !dbg !3514
  call void @llvm.dbg.value(metadata i16 %5, metadata !3389, metadata !DIExpression()), !dbg !3515
  %42 = icmp ne i16 %41, %5, !dbg !3516
  br label %if.then1, !dbg !3406

lookup.throw32:                                   ; preds = %cond.false13
  tail call fastcc void @runtime.lookupPanic(), !dbg !3493
  unreachable, !dbg !3493

lookup.next33:                                    ; preds = %cond.false13
  %43 = getelementptr inbounds i32, i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 %26, !dbg !3493
  %44 = load i32, i32* %43, align 4, !dbg !3493
  %45 = icmp ugt i32 %44, %r, !dbg !3517
  br i1 %45, label %if.then1, label %cond.false14, !dbg !3406

lookup.throw36:                                   ; preds = %cond.false14
  tail call fastcc void @runtime.lookupPanic(), !dbg !3497
  unreachable, !dbg !3497

lookup.next37:                                    ; preds = %cond.false14
  %46 = getelementptr inbounds i32, i32* bitcast ([1800 x i8]* @"strconv$alloc.1446" to i32*), i32 %28, !dbg !3497
  %47 = load i32, i32* %46, align 4, !dbg !3497
  call void @llvm.dbg.value(metadata i32 %r, metadata !3396, metadata !DIExpression()), !dbg !3518
  %48 = icmp ult i32 %47, %r, !dbg !3519
  br i1 %48, label %if.then1, label %if.done15, !dbg !3406

lookup.next42:                                    ; preds = %if.done17
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } { i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 90, i32 90 }, metadata !3398, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32 %32, metadata !3400, metadata !DIExpression()), !dbg !3521
  %49 = getelementptr inbounds i16, i16* bitcast ([180 x i8]* @"strconv$alloc.1447" to i16*), i32 %32, !dbg !3522
  %50 = load i16, i16* %49, align 2, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %r, metadata !3386, metadata !DIExpression()), !dbg !3523
  %51 = icmp ne i16 %50, %31, !dbg !3524
  br label %if.then1, !dbg !3406
}

; Function Attrs: optsize
define internal fastcc i32 @strconv.bsearch16(i16* nocapture readonly %a.data, i32 %a.len, i16 %x) unnamed_addr #2 section ".text.strconv.bsearch16" !dbg !3525 {
entry:
  call void @llvm.dbg.value(metadata i16* %a.data, metadata !3529, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %a.len, metadata !3529, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3534
  call void @llvm.dbg.value(metadata i32 undef, metadata !3529, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3534
  call void @llvm.dbg.value(metadata i16 %x, metadata !3530, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } undef, metadata !3529, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 0, metadata !3531, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i32 %a.len, metadata !3532, metadata !DIExpression()), !dbg !3537
  br label %for.loop, !dbg !3538

for.loop:                                         ; preds = %lookup.next, %entry
  %0 = phi i32 [ 0, %entry ], [ %spec.select, %lookup.next ], !dbg !3536
  %1 = phi i32 [ %a.len, %entry ], [ %spec.select1, %lookup.next ], !dbg !3537
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %1, metadata !3532, metadata !DIExpression()), !dbg !3540
  %2 = icmp sgt i32 %1, %0, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3543
  br i1 %2, label %for.body, label %for.done, !dbg !3538

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %1, metadata !3532, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3545
  %3 = sub i32 %1, %0, !dbg !3546
  %4 = sdiv i32 %3, 2, !dbg !3547
  %5 = add i32 %4, %0, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %5, metadata !3533, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata { i16*, i32, i32 } undef, metadata !3529, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %5, metadata !3533, metadata !DIExpression()), !dbg !3551
  %.not = icmp ult i32 %5, %a.len, !dbg !3552
  br i1 %.not, label %lookup.next, label %lookup.throw, !dbg !3552

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3539
  ret i32 %0, !dbg !3553

lookup.throw:                                     ; preds = %for.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !3552
  unreachable, !dbg !3552

lookup.next:                                      ; preds = %for.body
  %6 = getelementptr inbounds i16, i16* %a.data, i32 %5, !dbg !3552
  %7 = load i16, i16* %6, align 2, !dbg !3552
  call void @llvm.dbg.value(metadata i16 %x, metadata !3530, metadata !DIExpression()), !dbg !3554
  %8 = icmp ult i16 %7, %x, !dbg !3555
  %9 = add nuw i32 %5, 1
  %spec.select = select i1 %8, i32 %9, i32 %0, !dbg !3538
  %spec.select1 = select i1 %8, i32 %1, i32 %5, !dbg !3538
  br label %for.loop, !dbg !3538
}

; Function Attrs: optsize
define internal fastcc i1 @strconv.adjustLastDigit(%strconv.decimalSlice* nocapture dereferenceable_or_null(24) %d, i64 %currentDiff, i64 %targetDiff, i64 %maxDiff, i64 %ulpDecimal, i64 %ulpBinary) unnamed_addr #2 section ".text.strconv.adjustLastDigit" !dbg !3556 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %currentDiff, metadata !3569, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %targetDiff, metadata !3570, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %maxDiff, metadata !3571, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3578
  %0 = shl i64 %ulpBinary, 1, !dbg !3579
  %1 = icmp ugt i64 %0, %ulpDecimal, !dbg !3580
  br i1 %1, label %if.then, label %for.loop.preheader, !dbg !3581

for.loop.preheader:                               ; preds = %entry
  %2 = lshr i64 %ulpDecimal, 1, !dbg !3581
  %3 = add i64 %2, %ulpBinary, !dbg !3581
  %4 = icmp eq %strconv.decimalSlice* %d, null, !dbg !3581
  %.elt5 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d, i32 0, i32 0, i32 0, !dbg !3581
  %.elt7 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d, i32 0, i32 0, i32 1, !dbg !3581
  %5 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d, i32 0, i32 1, !dbg !3581
  br label %for.loop, !dbg !3581

if.then:                                          ; preds = %gep.next11, %lookup.next21, %store.next, %for.done, %entry
  %merge = phi i1 [ false, %for.done ], [ false, %entry ], [ true, %store.next ], [ true, %lookup.next21 ], [ true, %gep.next11 ]
  ret i1 %merge, !dbg !3582

for.loop:                                         ; preds = %for.loop.preheader, %lookup.next
  %6 = phi i64 [ %20, %lookup.next ], [ %currentDiff, %for.loop.preheader ], !dbg !3583
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3586
  %7 = add i64 %3, %6, !dbg !3587
  call void @llvm.dbg.value(metadata i64 %targetDiff, metadata !3570, metadata !DIExpression()), !dbg !3588
  %8 = icmp ult i64 %7, %targetDiff, !dbg !3589
  br i1 %8, label %for.body, label %for.done, !dbg !3581

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3590
  br i1 %4, label %gep.throw, label %gep.next, !dbg !3591

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3593
  %9 = add i64 %6, %ulpDecimal, !dbg !3594
  call void @llvm.dbg.value(metadata i64 %targetDiff, metadata !3570, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3597
  %10 = add i64 %3, %targetDiff, !dbg !3598
  %11 = icmp ule i64 %9, %10, !dbg !3599
  %12 = icmp ult i64 %6, %ulpBinary
  %or.cond = or i1 %12, %11, !dbg !3581
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3601
  %13 = sub i64 %maxDiff, %ulpBinary
  %14 = icmp ugt i64 %6, %13
  %or.cond29 = or i1 %14, %or.cond, !dbg !3581
  call void @llvm.dbg.value(metadata i64 %6, metadata !3569, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata i64 %maxDiff, metadata !3571, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.value(metadata i64 %ulpBinary, metadata !3573, metadata !DIExpression()), !dbg !3604
  br i1 %or.cond29, label %if.then, label %if.done3, !dbg !3581

if.done3:                                         ; preds = %for.done
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3605
  br i1 %4, label %gep.throw10, label %gep.next11, !dbg !3606

gep.throw:                                        ; preds = %for.body
  tail call fastcc void @runtime.nilPanic(), !dbg !3591
  unreachable, !dbg !3591

gep.next:                                         ; preds = %for.body
  %.unpack6 = load i8*, i8** %.elt5, align 4, !dbg !3591
  %.unpack8 = load i32, i32* %.elt7, align 4, !dbg !3591
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3607
  %15 = load i32, i32* %5, align 4, !dbg !3608
  %16 = add i32 %15, -1, !dbg !3609
  %.not = icmp ult i32 %16, %.unpack8, !dbg !3610
  br i1 %.not, label %lookup.next, label %lookup.throw, !dbg !3610

lookup.throw:                                     ; preds = %gep.next
  tail call fastcc void @runtime.lookupPanic(), !dbg !3610
  unreachable, !dbg !3610

lookup.next:                                      ; preds = %gep.next
  %17 = getelementptr inbounds i8, i8* %.unpack6, i32 %16, !dbg !3610
  %18 = load i8, i8* %17, align 1, !dbg !3610
  %19 = add i8 %18, -1, !dbg !3590
  store i8 %19, i8* %17, align 1, !dbg !3610
  call void @llvm.dbg.value(metadata i64 %ulpDecimal, metadata !3572, metadata !DIExpression()), !dbg !3611
  %20 = add i64 %6, %ulpDecimal, !dbg !3612
  call void @llvm.dbg.value(metadata i64 %20, metadata !3569, metadata !DIExpression()), !dbg !3612
  br label %for.loop, !dbg !3581

gep.throw10:                                      ; preds = %if.done3
  tail call fastcc void @runtime.nilPanic(), !dbg !3606
  unreachable, !dbg !3606

gep.next11:                                       ; preds = %if.done3
  %21 = load i32, i32* %5, align 4, !dbg !3606
  %22 = icmp eq i32 %21, 1, !dbg !3613
  br i1 %22, label %gep.next15, label %if.then, !dbg !3581

gep.next15:                                       ; preds = %gep.next11
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3614
  %.unpack = load i8*, i8** %.elt5, align 4, !dbg !3615
  %.unpack2 = load i32, i32* %.elt7, align 4, !dbg !3615
  %23 = icmp eq i32 %.unpack2, 0, !dbg !3616
  br i1 %23, label %lookup.throw20, label %lookup.next21, !dbg !3616

lookup.throw20:                                   ; preds = %gep.next15
  tail call fastcc void @runtime.lookupPanic(), !dbg !3616
  unreachable, !dbg !3616

lookup.next21:                                    ; preds = %gep.next15
  %24 = load i8, i8* %.unpack, align 1, !dbg !3616
  %25 = icmp eq i8 %24, 48, !dbg !3617
  br i1 %25, label %store.next, label %if.then, !dbg !3581

store.next:                                       ; preds = %lookup.next21
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %d, metadata !3568, metadata !DIExpression()), !dbg !3618
  store i32 0, i32* %5, align 4, !dbg !3619
  call void @llvm.dbg.value(metadata i32 0, metadata !3574, metadata !DIExpression()), !dbg !3619
  %26 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d, i32 0, i32 2, !dbg !3620
  store i32 0, i32* %26, align 4, !dbg !3620
  call void @llvm.dbg.value(metadata i32 0, metadata !3575, metadata !DIExpression()), !dbg !3620
  br label %if.then, !dbg !3581
}

; Function Attrs: optsize
define internal fastcc { i8*, i32, i32 } @strconv.bigFtoa(i8* %dst.data, i32 %prec, i1 %neg, i64 %mant, i32 %exp, %strconv.floatInfo* nocapture readonly dereferenceable_or_null(12) %flt) unnamed_addr #2 section ".text.strconv.bigFtoa" !dbg !3621 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !3648
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !3648
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3648
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !3648
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !3648
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !3648
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3648
  %3 = alloca %strconv.decimalSlice, align 8, !dbg !3648
  %4 = alloca %strconv.decimalSlice, align 8, !dbg !3648
  %digs = alloca %strconv.decimalSlice, align 8, !dbg !3648
  call void @llvm.dbg.value(metadata i8* %dst.data, metadata !3626, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3648
  call void @llvm.dbg.value(metadata i32 1, metadata !3626, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3648
  call void @llvm.dbg.value(metadata i32 68, metadata !3626, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3648
  call void @llvm.dbg.value(metadata i32 %prec, metadata !3627, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i8 103, metadata !3628, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3629, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3630, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3631, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3632, metadata !DIExpression()), !dbg !3648
  %new = tail call fastcc i8* @runtime.alloc(i32 812), !dbg !3649
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !3649
  store i8* %new, i8** %5, align 4, !dbg !3649
  %6 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !3649
  store i8* %new, i8** %6, align 4, !dbg !3649
  %7 = bitcast i8* %new to %strconv.decimal*, !dbg !3649
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3633, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3633, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3630, metadata !DIExpression()), !dbg !3652
  tail call fastcc void @"(*strconv.decimal).Assign"(%strconv.decimal* nonnull %7, i64 %mant), !dbg !3653
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3633, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3631, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3632, metadata !DIExpression()), !dbg !3656
  %8 = icmp eq %strconv.floatInfo* %flt, null, !dbg !3657
  br i1 %8, label %gep.throw, label %gep.next, !dbg !3657

if.then:                                          ; preds = %gep.next
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3633, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3630, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3631, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3632, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3667, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3668, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3669, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3667, metadata !DIExpression()), !dbg !3688
  %9 = icmp eq i64 %mant, 0, !dbg !3689
  br i1 %9, label %if.then.i, label %gep.next41.i, !dbg !3690

if.then.i:                                        ; preds = %if.then
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3691
  %10 = getelementptr inbounds i8, i8* %new, i32 800, !dbg !3692
  %11 = bitcast i8* %10 to i32*, !dbg !3692
  store i32 0, i32* %11, align 4, !dbg !3692
  call void @llvm.dbg.value(metadata i32 0, metadata !3670, metadata !DIExpression()), !dbg !3692
  br label %strconv.roundShortest.exit, !dbg !3693

cond.true.i:                                      ; preds = %gep.next41.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3694
  %12 = getelementptr inbounds i8, i8* %new, i32 804, !dbg !3695
  %13 = bitcast i8* %12 to i32*, !dbg !3695
  %14 = load i32, i32* %13, align 4, !dbg !3695
  %15 = getelementptr inbounds i8, i8* %new, i32 800, !dbg !3696
  %16 = bitcast i8* %15 to i32*, !dbg !3696
  %17 = load i32, i32* %16, align 4, !dbg !3696
  %18 = sub i32 %14, %17, !dbg !3697
  %19 = mul i32 %18, 332, !dbg !3698
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3668, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3669, metadata !DIExpression()), !dbg !3700
  %20 = load i32, i32* %122, align 4, !dbg !3701
  %21 = sub i32 %exp, %20, !dbg !3702
  %22 = mul i32 %21, 100, !dbg !3703
  %.not4.i = icmp slt i32 %19, %22, !dbg !3704
  br i1 %.not4.i, label %if.done2.i, label %strconv.roundShortest.exit, !dbg !3690

if.done2.i:                                       ; preds = %gep.next41.i, %cond.true.i
  %new.i = tail call fastcc i8* @runtime.alloc(i32 812), !dbg !3705
  %23 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !3705
  store i8* %new.i, i8** %23, align 4, !dbg !3705
  %24 = bitcast i8* %new.i to %strconv.decimal*, !dbg !3705
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.value(metadata i64 %mant, metadata !3667, metadata !DIExpression()), !dbg !3707
  %25 = shl i64 %mant, 1, !dbg !3708
  %26 = or i64 %25, 1, !dbg !3709
  tail call fastcc void @"(*strconv.decimal).Assign"(%strconv.decimal* nonnull %24, i64 %26), !dbg !3710
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3668, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3669, metadata !DIExpression()), !dbg !3712
  %27 = load i32, i32* %122, align 4, !dbg !3713
  %28 = xor i32 %27, -1, !dbg !3714
  %29 = add i32 %28, %exp, !dbg !3714
  tail call fastcc void @"(*strconv.decimal).Shift"(%strconv.decimal* nonnull %24, i32 %29), !dbg !3715
  call void @llvm.dbg.value(metadata i64 0, metadata !3673, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i32 0, metadata !3674, metadata !DIExpression()), !dbg !3717
  %30 = load i32, i32* %122, align 4, !dbg !3718
  %shift.overflow.i = icmp ugt i32 %30, 63, !dbg !3719
  %31 = zext i32 %30 to i64, !dbg !3719
  %32 = shl nuw i64 1, %31, !dbg !3719
  %shift.result.i = select i1 %shift.overflow.i, i64 0, i64 %32, !dbg !3719
  %33 = icmp ult i64 %shift.result.i, %mant, !dbg !3720
  %34 = icmp eq i32 %92, %exp
  %or.cond122.i = or i1 %34, %33, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %92, metadata !3671, metadata !DIExpression()), !dbg !3721
  %.v.i = select i1 %or.cond122.i, i64 %mant, i64 %25, !dbg !3690
  %not.or.cond122.i.demorgan = or i1 %34, %33, !dbg !3690
  %not.or.cond122.i = xor i1 %not.or.cond122.i.demorgan, true, !dbg !3690
  %35 = sext i1 %not.or.cond122.i to i32, !dbg !3690
  %new62.i = tail call fastcc i8* @runtime.alloc(i32 812), !dbg !3722
  %36 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !3722
  store i8* %new62.i, i8** %36, align 4, !dbg !3722
  %37 = bitcast i8* %new62.i to %strconv.decimal*, !dbg !3722
  call void @llvm.dbg.value(metadata %strconv.decimal* %37, metadata !3675, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i64 %.v.i, metadata !3673, metadata !DIExpression(DW_OP_plus_uconst, 9223372036854775807, DW_OP_stack_value)), !dbg !3724
  %38 = shl i64 %.v.i, 1, !dbg !3725
  %39 = add i64 %38, -1, !dbg !3726
  tail call fastcc void @"(*strconv.decimal).Assign"(%strconv.decimal* nonnull %37, i64 %39), !dbg !3727
  call void @llvm.dbg.value(metadata i32 undef, metadata !3674, metadata !DIExpression()), !dbg !3728
  %40 = load i32, i32* %122, align 4, !dbg !3729
  %41 = xor i32 %40, -1, !dbg !3730
  %42 = add i32 %41, %exp, !dbg !3690
  %43 = add i32 %42, %35, !dbg !3730
  tail call fastcc void @"(*strconv.decimal).Shift"(%strconv.decimal* nonnull %37, i32 %43), !dbg !3731
  %44 = and i64 %mant, 1, !dbg !3732
  %45 = icmp eq i64 %44, 0, !dbg !3733
  call void @llvm.dbg.value(metadata i1 %45, metadata !3676, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i8 0, metadata !3677, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 0, metadata !3678, metadata !DIExpression()), !dbg !3736
  %46 = getelementptr inbounds i8, i8* %new.i, i32 804, !dbg !3690
  %47 = bitcast i8* %46 to i32*, !dbg !3690
  %48 = load i32, i32* %47, align 4, !dbg !3690
  %49 = getelementptr inbounds i8, i8* %new62.i, i32 804, !dbg !3690
  %50 = bitcast i8* %49 to i32*, !dbg !3690
  %51 = getelementptr inbounds i8, i8* %new62.i, i32 800, !dbg !3690
  %52 = bitcast i8* %51 to i32*, !dbg !3690
  %53 = getelementptr inbounds i8, i8* %new.i, i32 800, !dbg !3690
  %54 = bitcast i8* %53 to i32*, !dbg !3690
  %.not.i = xor i1 %45, true, !dbg !3690
  %55 = getelementptr inbounds i8, i8* %new, i32 800, !dbg !3690
  %56 = bitcast i8* %55 to i32*, !dbg !3690
  %57 = getelementptr inbounds i8, i8* %new, i32 804, !dbg !3690
  %58 = bitcast i8* %57 to i32*, !dbg !3690
  %.pre.i = load i32, i32* %58, align 4, !dbg !3737
  %.pre20.i = load i32, i32* %56, align 4, !dbg !3738
  br label %for.body.i, !dbg !3690

for.body.i:                                       ; preds = %switch.next25.i, %if.done2.i
  %59 = phi i8 [ %81, %switch.next25.i ], [ 0, %if.done2.i ], !dbg !3735
  %60 = phi i32 [ %82, %switch.next25.i ], [ 0, %if.done2.i ], !dbg !3736
  call void @llvm.dbg.value(metadata i32 %60, metadata !3678, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3740
  %61 = sub i32 %60, %48, !dbg !3741
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3742
  %62 = add i32 %61, %.pre.i, !dbg !3743
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3744
  %.not1.i = icmp slt i32 %62, %.pre20.i, !dbg !3745
  br i1 %.not1.i, label %gep.next84.i, label %strconv.roundShortest.exit, !dbg !3690

if.done9.i:                                       ; preds = %lookup.next.i, %gep.next88.i, %gep.next84.i
  %63 = phi i8 [ 48, %gep.next84.i ], [ 48, %gep.next88.i ], [ %101, %lookup.next.i ], !dbg !3746
  call void @llvm.dbg.value(metadata i8 48, metadata !3682, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3748
  %64 = icmp sgt i32 %62, -1, !dbg !3749
  br i1 %64, label %gep.next96.i, label %gep.next102.i, !dbg !3690

if.done13.i:                                      ; preds = %lookup.next110.i, %gep.next102.i
  %65 = phi i8 [ 48, %gep.next102.i ], [ %110, %lookup.next110.i ], !dbg !3750
  call void @llvm.dbg.value(metadata i8 %63, metadata !3681, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i8 %105, metadata !3682, metadata !DIExpression()), !dbg !3752
  %66 = icmp ne i8 %63, %105, !dbg !3753
  %brmerge.i = or i1 %66, %.not.i, !dbg !3690
  br i1 %brmerge.i, label %binop.done.i, label %binop.rhs37.i, !dbg !3690

binop.done.i:                                     ; preds = %binop.rhs37.i, %if.done13.i
  %67 = phi i1 [ %66, %if.done13.i ], [ %89, %binop.rhs37.i ], !dbg !3754
  call void @llvm.dbg.value(metadata i1 %67, metadata !3684, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i8 %59, metadata !3677, metadata !DIExpression()), !dbg !3756
  %68 = icmp eq i8 %59, 0, !dbg !3757
  %69 = add i8 %105, 1, !dbg !3690
  %70 = icmp ult i8 %69, %65, !dbg !3690
  %71 = and i1 %68, %70, !dbg !3690
  br i1 %71, label %binop.done18.i, label %switch.next26.i, !dbg !3690

switch.done.i:                                    ; preds = %switch.next30.i
  call void @llvm.dbg.value(metadata i8 %59, metadata !3677, metadata !DIExpression()), !dbg !3758
  br i1 %68, label %switch.next.thread.i, label %binop.rhs15.i, !dbg !3690

binop.rhs15.i:                                    ; preds = %switch.next26.i, %switch.done.i
  %72 = phi i8 [ %59, %switch.done.i ], [ 1, %switch.next26.i ]
  call void @llvm.dbg.value(metadata i1 %45, metadata !3676, metadata !DIExpression()), !dbg !3759
  %73 = icmp ne i8 %72, 1
  %or.cond.i = or i1 %45, %73, !dbg !3690
  call void @llvm.dbg.value(metadata i8 %59, metadata !3677, metadata !DIExpression()), !dbg !3760
  br i1 %or.cond.i, label %binop.done18.i, label %binop.rhs17.i, !dbg !3690

binop.rhs17.i:                                    ; preds = %binop.rhs15.i
  call void @llvm.dbg.value(metadata i32 %60, metadata !3678, metadata !DIExpression()), !dbg !3761
  %74 = add i32 %60, 1, !dbg !3762
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3763
  %75 = icmp slt i32 %74, %106, !dbg !3764
  br label %binop.done18.i, !dbg !3690

binop.done18.i:                                   ; preds = %switch.next30.i, %binop.rhs17.i, %binop.rhs15.i, %binop.done.i
  %76 = phi i8 [ %72, %binop.rhs15.i ], [ 1, %binop.rhs17.i ], [ 2, %binop.done.i ], [ 2, %switch.next30.i ]
  %77 = phi i1 [ true, %binop.rhs15.i ], [ %75, %binop.rhs17.i ], [ true, %binop.done.i ], [ true, %switch.next30.i ], !dbg !3765
  call void @llvm.dbg.value(metadata i1 %77, metadata !3685, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i1 %67, metadata !3684, metadata !DIExpression()), !dbg !3767
  %spec.select.i = and i1 %67, %77, !dbg !3690
  br i1 %spec.select.i, label %switch.body21.i, label %switch.next.i, !dbg !3690

switch.body21.i:                                  ; preds = %binop.done18.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3769
  %78 = add nsw i32 %62, 1, !dbg !3770
  tail call fastcc void @"(*strconv.decimal).Round"(%strconv.decimal* nonnull %7, i32 %78), !dbg !3771
  br label %strconv.roundShortest.exit, !dbg !3772

switch.next.i:                                    ; preds = %binop.done18.i
  call void @llvm.dbg.value(metadata i1 %67, metadata !3684, metadata !DIExpression()), !dbg !3773
  br i1 %67, label %switch.body22.i, label %switch.next23.i, !dbg !3690

switch.next.thread.i:                             ; preds = %switch.done.i
  call void @llvm.dbg.value(metadata i1 %77, metadata !3685, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i1 %67, metadata !3684, metadata !DIExpression()), !dbg !3773
  br i1 %67, label %switch.body22.i, label %switch.next25.i, !dbg !3690

switch.body22.i:                                  ; preds = %switch.next.thread.i, %switch.next.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3775
  %79 = add nsw i32 %62, 1, !dbg !3776
  tail call fastcc void @"(*strconv.decimal).RoundDown"(%strconv.decimal* nonnull %7, i32 %79), !dbg !3777
  br label %strconv.roundShortest.exit, !dbg !3778

switch.next23.i:                                  ; preds = %switch.next.i
  call void @llvm.dbg.value(metadata i1 %77, metadata !3685, metadata !DIExpression()), !dbg !3779
  br i1 %77, label %switch.body24.i, label %switch.next25.i, !dbg !3690

switch.body24.i:                                  ; preds = %switch.next23.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3781
  %80 = add nsw i32 %62, 1, !dbg !3782
  tail call fastcc void @"(*strconv.decimal).RoundUp"(%strconv.decimal* nonnull %7, i32 %80), !dbg !3783
  br label %strconv.roundShortest.exit, !dbg !3784

switch.next25.i:                                  ; preds = %switch.next23.i, %switch.next.thread.i
  %81 = phi i8 [ %76, %switch.next23.i ], [ 0, %switch.next.thread.i ]
  %82 = add i32 %60, 1, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %82, metadata !3678, metadata !DIExpression()), !dbg !3785
  br label %for.body.i, !dbg !3690

switch.next26.i:                                  ; preds = %binop.done.i
  call void @llvm.dbg.value(metadata i8 %59, metadata !3677, metadata !DIExpression()), !dbg !3786
  %83 = icmp ne i8 %105, %65
  %spec.select119.i = and i1 %68, %83, !dbg !3690
  br i1 %spec.select119.i, label %binop.rhs15.i, label %switch.next30.i, !dbg !3690

switch.next30.i:                                  ; preds = %switch.next26.i
  call void @llvm.dbg.value(metadata i8 %59, metadata !3677, metadata !DIExpression()), !dbg !3787
  %84 = icmp eq i8 %59, 1, !dbg !3788
  %.not2.i = icmp ne i8 %105, 57, !dbg !3690
  %85 = icmp ne i8 %65, 48, !dbg !3690
  %spec.select120.i = or i1 %.not2.i, %85, !dbg !3690
  %86 = and i1 %84, %spec.select120.i, !dbg !3690
  br i1 %86, label %binop.done18.i, label %switch.done.i

binop.rhs37.i:                                    ; preds = %if.done13.i
  call void @llvm.dbg.value(metadata i32 %95, metadata !3680, metadata !DIExpression()), !dbg !3789
  %87 = add i32 %95, 1, !dbg !3790
  call void @llvm.dbg.value(metadata %strconv.decimal* %37, metadata !3675, metadata !DIExpression()), !dbg !3791
  %88 = load i32, i32* %52, align 4, !dbg !3792
  %89 = icmp eq i32 %87, %88, !dbg !3793
  br label %binop.done.i, !dbg !3690

gep.next41.i:                                     ; preds = %if.then
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %flt, metadata !3669, metadata !DIExpression()), !dbg !3794
  %90 = getelementptr inbounds %strconv.floatInfo, %strconv.floatInfo* %flt, i32 0, i32 2, !dbg !3795
  %91 = load i32, i32* %90, align 4, !dbg !3795
  %92 = add i32 %91, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %exp, metadata !3668, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 %92, metadata !3671, metadata !DIExpression()), !dbg !3798
  %93 = icmp slt i32 %92, %exp, !dbg !3799
  br i1 %93, label %cond.true.i, label %if.done2.i, !dbg !3690

gep.next84.i:                                     ; preds = %for.body.i
  call void @llvm.dbg.value(metadata i32 %60, metadata !3678, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata %strconv.decimal* %37, metadata !3675, metadata !DIExpression()), !dbg !3802
  %94 = load i32, i32* %50, align 4, !dbg !3803
  %95 = add i32 %94, %61, !dbg !3804
  call void @llvm.dbg.value(metadata i8 48, metadata !3681, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %95, metadata !3680, metadata !DIExpression()), !dbg !3805
  %96 = icmp sgt i32 %95, -1, !dbg !3806
  br i1 %96, label %gep.next88.i, label %if.done9.i, !dbg !3690

gep.next88.i:                                     ; preds = %gep.next84.i
  call void @llvm.dbg.value(metadata i32 %95, metadata !3680, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata %strconv.decimal* %37, metadata !3675, metadata !DIExpression()), !dbg !3808
  %97 = load i32, i32* %52, align 4, !dbg !3809
  %98 = icmp slt i32 %95, %97, !dbg !3810
  br i1 %98, label %gep.next92.i, label %if.done9.i, !dbg !3690

gep.next92.i:                                     ; preds = %gep.next88.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %37, metadata !3675, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i32 %95, metadata !3680, metadata !DIExpression()), !dbg !3812
  %99 = icmp ugt i32 %95, 799, !dbg !3813
  br i1 %99, label %lookup.throw.i, label %lookup.next.i, !dbg !3813

lookup.throw.i:                                   ; preds = %gep.next92.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !3813
  unreachable, !dbg !3813

lookup.next.i:                                    ; preds = %gep.next92.i
  %100 = getelementptr inbounds i8, i8* %new62.i, i32 %95, !dbg !3813
  %101 = load i8, i8* %100, align 1, !dbg !3813
  call void @llvm.dbg.value(metadata i8 %101, metadata !3681, metadata !DIExpression()), !dbg !3814
  br label %if.done9.i, !dbg !3690

gep.next96.i:                                     ; preds = %if.done9.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3662, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %62, metadata !3679, metadata !DIExpression()), !dbg !3816
  %102 = icmp ugt i32 %62, 799, !dbg !3817
  br i1 %102, label %lookup.throw99.i, label %lookup.next100.i, !dbg !3817

lookup.throw99.i:                                 ; preds = %gep.next96.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !3817
  unreachable, !dbg !3817

lookup.next100.i:                                 ; preds = %gep.next96.i
  %103 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %7, i32 0, i32 0, i32 %62, !dbg !3817
  %104 = load i8, i8* %103, align 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8 %104, metadata !3682, metadata !DIExpression()), !dbg !3818
  br label %gep.next102.i, !dbg !3690

gep.next102.i:                                    ; preds = %lookup.next100.i, %if.done9.i
  %105 = phi i8 [ 48, %if.done9.i ], [ %104, %lookup.next100.i ], !dbg !3747
  call void @llvm.dbg.value(metadata i8 48, metadata !3683, metadata !DIExpression()), !dbg !3750
  call void @llvm.dbg.value(metadata i32 %60, metadata !3678, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3820
  %106 = load i32, i32* %54, align 4, !dbg !3821
  %107 = icmp slt i32 %60, %106, !dbg !3822
  br i1 %107, label %gep.next106.i, label %if.done13.i, !dbg !3690

gep.next106.i:                                    ; preds = %gep.next102.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %24, metadata !3672, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i32 %60, metadata !3678, metadata !DIExpression()), !dbg !3824
  %108 = icmp ugt i32 %60, 799, !dbg !3825
  br i1 %108, label %lookup.throw109.i, label %lookup.next110.i, !dbg !3825

lookup.throw109.i:                                ; preds = %gep.next106.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !3825
  unreachable, !dbg !3825

lookup.next110.i:                                 ; preds = %gep.next106.i
  %109 = getelementptr inbounds i8, i8* %new.i, i32 %60, !dbg !3825
  %110 = load i8, i8* %109, align 1, !dbg !3825
  call void @llvm.dbg.value(metadata i8 %110, metadata !3683, metadata !DIExpression()), !dbg !3826
  br label %if.done13.i, !dbg !3690

strconv.roundShortest.exit:                       ; preds = %for.body.i, %cond.true.i, %switch.body24.i, %switch.body22.i, %switch.body21.i, %if.then.i
  %.pre-phi = phi i32* [ %16, %cond.true.i ], [ %56, %switch.body24.i ], [ %56, %switch.body22.i ], [ %56, %switch.body21.i ], [ %11, %if.then.i ], [ %56, %for.body.i ], !dbg !3827
  %111 = bitcast %strconv.decimalSlice* %4 to i8*, !dbg !3648
  %112 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !3648
  store i8* %111, i8** %112, align 4, !dbg !3648
  %113 = bitcast %strconv.decimalSlice* %4 to i8*, !dbg !3648
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %113, i8 0, i64 21, i1 false), !dbg !3648
  %114 = load i32, i32* %.pre-phi, align 4, !dbg !3827
  call void @llvm.dbg.value(metadata i8 103, metadata !3628, metadata !DIExpression()), !dbg !3828
  call void @llvm.dbg.value(metadata i32 %114, metadata !3627, metadata !DIExpression()), !dbg !3829
  br label %deref.next56, !dbg !3830

switch.body11:                                    ; preds = %gep.next
  call void @llvm.dbg.value(metadata i8 103, metadata !3628, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i32 %prec, metadata !3627, metadata !DIExpression()), !dbg !3832
  %115 = icmp eq i32 %prec, 0, !dbg !3833
  %spec.select = select i1 %115, i32 1, i32 %prec, !dbg !3830
  call void @llvm.dbg.value(metadata %strconv.decimal* %7, metadata !3633, metadata !DIExpression()), !dbg !3834
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3627, metadata !DIExpression()), !dbg !3835
  tail call fastcc void @"(*strconv.decimal).Round"(%strconv.decimal* nonnull %7, i32 %spec.select), !dbg !3836
  %116 = bitcast %strconv.decimalSlice* %3 to i8*, !dbg !3648
  %117 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !3648
  store i8* %116, i8** %117, align 4, !dbg !3648
  %118 = bitcast %strconv.decimalSlice* %3 to i8*, !dbg !3648
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %118, i8 0, i64 21, i1 false), !dbg !3648
  %119 = getelementptr inbounds i8, i8* %new, i32 800, !dbg !3837
  %120 = bitcast i8* %119 to i32*, !dbg !3837
  %121 = load i32, i32* %120, align 4, !dbg !3837
  br label %deref.next56, !dbg !3830

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !3657
  unreachable, !dbg !3657

gep.next:                                         ; preds = %entry
  %122 = getelementptr inbounds %strconv.floatInfo, %strconv.floatInfo* %flt, i32 0, i32 0, !dbg !3657
  %123 = load i32, i32* %122, align 4, !dbg !3657
  %124 = sub i32 %exp, %123, !dbg !3838
  tail call fastcc void @"(*strconv.decimal).Shift"(%strconv.decimal* nonnull %7, i32 %124), !dbg !3839
  %125 = bitcast %strconv.decimalSlice* %digs to i8*, !dbg !3648
  %126 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !3648
  store i8* %125, i8** %126, align 4, !dbg !3648
  %127 = bitcast %strconv.decimalSlice* %digs to i8*, !dbg !3648
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %127, i8 0, i64 21, i1 false), !dbg !3648
  call void @llvm.dbg.value(metadata i32 %prec, metadata !3627, metadata !DIExpression()), !dbg !3840
  %128 = icmp slt i32 %prec, 0, !dbg !3841
  call void @llvm.dbg.value(metadata i1 %128, metadata !3646, metadata !DIExpression()), !dbg !3842
  br i1 %128, label %if.then, label %switch.body11, !dbg !3830

deref.next56:                                     ; preds = %strconv.roundShortest.exit, %switch.body11
  %storemerge1 = phi i32 [ %121, %switch.body11 ], [ %114, %strconv.roundShortest.exit ], !dbg !3830
  %129 = phi i32 [ %spec.select, %switch.body11 ], [ %114, %strconv.roundShortest.exit ], !dbg !3843
  %storemerge.in.in = getelementptr inbounds i8, i8* %new, i32 804, !dbg !3830
  %storemerge.in = bitcast i8* %storemerge.in.in to i32*, !dbg !3830
  %storemerge = load i32, i32* %storemerge.in, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3626, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i1 %128, metadata !3646, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3629, metadata !DIExpression()), !dbg !3846
  %.fca.0.0.insert = insertvalue %strconv.decimalSlice undef, i8* %new, 0, 0, !dbg !3847
  %.fca.0.1.insert = insertvalue %strconv.decimalSlice %.fca.0.0.insert, i32 800, 0, 1, !dbg !3847
  %.fca.0.2.insert = insertvalue %strconv.decimalSlice %.fca.0.1.insert, i32 800, 0, 2, !dbg !3847
  %.fca.1.insert = insertvalue %strconv.decimalSlice %.fca.0.2.insert, i32 %storemerge1, 1, !dbg !3847
  %.fca.2.insert = insertvalue %strconv.decimalSlice %.fca.1.insert, i32 %storemerge, 2, !dbg !3847
  %.fca.3.insert = insertvalue %strconv.decimalSlice %.fca.2.insert, i1 false, 3, !dbg !3847
  call void @llvm.dbg.value(metadata %strconv.decimalSlice %.fca.3.insert, metadata !3647, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %129, metadata !3627, metadata !DIExpression()), !dbg !3848
  call void @llvm.dbg.value(metadata i8 103, metadata !3628, metadata !DIExpression()), !dbg !3849
  %130 = tail call fastcc { i8*, i32, i32 } @strconv.formatDigits(i8* %dst.data, i1 %128, i1 %neg, %strconv.decimalSlice %.fca.3.insert, i32 %129), !dbg !3850
  %131 = extractvalue { i8*, i32, i32 } %130, 0, !dbg !3850
  %132 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !3851
  store i8* %131, i8** %132, align 4, !dbg !3851
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3851
  ret { i8*, i32, i32 } %130, !dbg !3851
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.decimal).Assign"(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i64 %v) unnamed_addr #2 section ".text.(*strconv.decimal).Assign" !dbg !3852 {
entry:
  %buf = alloca [24 x i8], align 1, !dbg !3862
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i64 %v, metadata !3857, metadata !DIExpression()), !dbg !3862
  %.fca.0.gep = getelementptr inbounds [24 x i8], [24 x i8]* %buf, i32 0, i32 0, !dbg !3862
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(24) %.fca.0.gep, i8 0, i64 24, i1 false), !dbg !3862
  call void @llvm.dbg.value(metadata i32 0, metadata !3858, metadata !DIExpression()), !dbg !3863
  br label %for.loop, !dbg !3864

for.loop:                                         ; preds = %lookup.next, %entry
  %0 = phi i64 [ %v, %entry ], [ %2, %lookup.next ], !dbg !3865
  %1 = phi i32 [ 0, %entry ], [ %10, %lookup.next ], !dbg !3863
  call void @llvm.dbg.value(metadata i64 %0, metadata !3857, metadata !DIExpression()), !dbg !3866
  %.not = icmp eq i64 %0, 0, !dbg !3867
  br i1 %.not, label %for.done, label %for.body, !dbg !3864

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i64 %0, metadata !3857, metadata !DIExpression()), !dbg !3868
  %2 = udiv i64 %0, 10, !dbg !3869
  call void @llvm.dbg.value(metadata i64 %2, metadata !3859, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata i64 undef, metadata !3857, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 %1, metadata !3858, metadata !DIExpression()), !dbg !3872
  %exitcond = icmp eq i32 %1, 24, !dbg !3873
  br i1 %exitcond, label %lookup.throw, label %lookup.next, !dbg !3873

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3874
  %3 = icmp eq %strconv.decimal* %a, null, !dbg !3875
  br i1 %3, label %gep.throw4, label %gep.next5, !dbg !3875

for.loop1:                                        ; preds = %lookup.next17, %gep.next5
  %storemerge = phi i32 [ %17, %lookup.next17 ], [ 0, %gep.next5 ], !dbg !3864
  %.in = phi i32 [ %4, %lookup.next17 ], [ %1, %gep.next5 ]
  store i32 %storemerge, i32* %11, align 4, !dbg !3864
  %4 = add nsw i32 %.in, -1, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %4, metadata !3858, metadata !DIExpression()), !dbg !3876
  %5 = icmp sgt i32 %.in, 0, !dbg !3877
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3879
  br i1 %5, label %gep.next7, label %gep.next25, !dbg !3864

lookup.throw:                                     ; preds = %for.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !3873
  unreachable, !dbg !3873

lookup.next:                                      ; preds = %for.body
  %.neg = mul i64 %2, -10, !dbg !3880
  %6 = add i64 %.neg, %0, !dbg !3871
  call void @llvm.dbg.value(metadata i64 %6, metadata !3857, metadata !DIExpression()), !dbg !3871
  %7 = getelementptr inbounds [24 x i8], [24 x i8]* %buf, i32 0, i32 %1, !dbg !3873
  call void @llvm.dbg.value(metadata i64 undef, metadata !3857, metadata !DIExpression()), !dbg !3881
  %8 = trunc i64 %6 to i8, !dbg !3882
  %9 = add i8 %8, 48, !dbg !3882
  store i8 %9, i8* %7, align 1, !dbg !3873
  %10 = add nuw nsw i32 %1, 1, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %10, metadata !3858, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i64 %2, metadata !3859, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata i64 %2, metadata !3857, metadata !DIExpression()), !dbg !3885
  br label %for.loop, !dbg !3864

gep.throw4:                                       ; preds = %for.done
  tail call fastcc void @runtime.nilPanic(), !dbg !3875
  unreachable, !dbg !3875

gep.next5:                                        ; preds = %for.done
  %11 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !3875
  call void @llvm.dbg.value(metadata i32 0, metadata !3860, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i32 %1, metadata !3858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3886
  br label %for.loop1, !dbg !3864

gep.next7:                                        ; preds = %for.loop1
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3887
  %12 = icmp ugt i32 %storemerge, 799, !dbg !3888
  br i1 %12, label %lookup.throw12, label %lookup.next17, !dbg !3888

lookup.throw12:                                   ; preds = %gep.next7
  tail call fastcc void @runtime.lookupPanic(), !dbg !3888
  unreachable, !dbg !3888

lookup.next17:                                    ; preds = %gep.next7
  call void @llvm.dbg.value(metadata i32 %4, metadata !3858, metadata !DIExpression()), !dbg !3889
  %13 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %storemerge, !dbg !3888
  %14 = getelementptr inbounds [24 x i8], [24 x i8]* %buf, i32 0, i32 %4, !dbg !3890
  %15 = load i8, i8* %14, align 1, !dbg !3890
  store i8 %15, i8* %13, align 1, !dbg !3888
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3891
  %16 = load i32, i32* %11, align 4, !dbg !3892
  %17 = add i32 %16, 1, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %17, metadata !3860, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i32 %4, metadata !3858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3893
  br label %for.loop1, !dbg !3864

gep.next25:                                       ; preds = %for.loop1
  %18 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 2, !dbg !3894
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3856, metadata !DIExpression()), !dbg !3895
  store i32 %storemerge, i32* %18, align 4, !dbg !3894
  call void @llvm.dbg.value(metadata i32 %storemerge, metadata !3861, metadata !DIExpression()), !dbg !3894
  tail call fastcc void @strconv.trim(%strconv.decimal* nonnull %a), !dbg !3896
  ret void, !dbg !3864
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.decimal).Shift"(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %k) unnamed_addr #2 section ".text.(*strconv.decimal).Shift" !dbg !3897 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata i32 %k, metadata !3902, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3904
  %0 = icmp eq %strconv.decimal* %a, null, !dbg !3905
  br i1 %0, label %gep.throw, label %gep.next, !dbg !3905

switch.done:                                      ; preds = %for.done4, %switch.next1, %for.done, %gep.next
  ret void, !dbg !3906

switch.next:                                      ; preds = %gep.next
  call void @llvm.dbg.value(metadata i32 %k, metadata !3902, metadata !DIExpression()), !dbg !3907
  %1 = icmp sgt i32 %k, 0, !dbg !3908
  br i1 %1, label %for.loop, label %switch.next1, !dbg !3906

for.loop:                                         ; preds = %switch.next, %for.body
  %2 = phi i32 [ %4, %for.body ], [ %k, %switch.next ], !dbg !3909
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  %3 = icmp sgt i32 %2, 28, !dbg !3911
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3913
  br i1 %3, label %for.body, label %for.done, !dbg !3906

for.body:                                         ; preds = %for.loop
  tail call fastcc void @strconv.leftShift(%strconv.decimal* nonnull %a, i32 28), !dbg !3914
  %4 = add nsw i32 %2, -28, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %4, metadata !3902, metadata !DIExpression()), !dbg !3915
  br label %for.loop, !dbg !3906

for.done:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3902, metadata !DIExpression()), !dbg !3916
  tail call fastcc void @strconv.leftShift(%strconv.decimal* nonnull %a, i32 %2), !dbg !3917
  br label %switch.done, !dbg !3906

switch.next1:                                     ; preds = %switch.next
  call void @llvm.dbg.value(metadata i32 %k, metadata !3902, metadata !DIExpression()), !dbg !3918
  %5 = icmp slt i32 %k, 0, !dbg !3919
  br i1 %5, label %for.loop2, label %switch.done, !dbg !3906

for.loop2:                                        ; preds = %switch.next1, %for.body3
  %6 = phi i32 [ %8, %for.body3 ], [ %k, %switch.next1 ], !dbg !3909
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  %7 = icmp slt i32 %6, -28, !dbg !3921
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !3901, metadata !DIExpression()), !dbg !3923
  br i1 %7, label %for.body3, label %for.done4, !dbg !3906

for.body3:                                        ; preds = %for.loop2
  tail call fastcc void @strconv.rightShift(%strconv.decimal* nonnull %a, i32 28), !dbg !3924
  %8 = add nuw nsw i32 %6, 28, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %8, metadata !3902, metadata !DIExpression()), !dbg !3925
  br label %for.loop2, !dbg !3906

for.done4:                                        ; preds = %for.loop2
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3902, metadata !DIExpression()), !dbg !3926
  %9 = sub nsw i32 0, %6, !dbg !3927
  tail call fastcc void @strconv.rightShift(%strconv.decimal* nonnull %a, i32 %9), !dbg !3928
  br label %switch.done, !dbg !3906

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !3905
  unreachable, !dbg !3905

gep.next:                                         ; preds = %entry
  %10 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !3905
  %11 = load i32, i32* %10, align 4, !dbg !3905
  %12 = icmp eq i32 %11, 0, !dbg !3929
  br i1 %12, label %switch.done, label %switch.next, !dbg !3906
}

; Function Attrs: optsize
define internal fastcc { i8*, i32, i32 } @strconv.formatDigits(i8* %dst.data, i1 %shortest, i1 %neg, %strconv.decimalSlice %digs, i32 %prec) unnamed_addr #2 section ".text.strconv.formatDigits" !dbg !3930 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !3942
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 48, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !3942
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3942
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !3942
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !3942
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !3942
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !3942
  %d9.i = alloca %strconv.decimalSlice, align 8, !dbg !3942
  %stackalloc.alloca199.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca197.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca195.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca193.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca191.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca189.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca187.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca185.i = alloca [1 x i32], align 4, !dbg !3956
  %stackalloc.alloca.i = alloca [1 x i32], align 4, !dbg !3956
  %d12.i = alloca %strconv.decimalSlice, align 8, !dbg !3956
  %digs15 = alloca %strconv.decimalSlice, align 8, !dbg !3971
  call void @llvm.dbg.value(metadata i8* %dst.data, metadata !3934, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3971
  call void @llvm.dbg.value(metadata i32 1, metadata !3934, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3971
  call void @llvm.dbg.value(metadata i32 68, metadata !3934, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3971
  call void @llvm.dbg.value(metadata i1 %shortest, metadata !3935, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3936, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata %strconv.decimalSlice %digs, metadata !3937, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 %prec, metadata !3938, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i8 103, metadata !3939, metadata !DIExpression()), !dbg !3971
  %.fca.0.0.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 0, i32 0, !dbg !3971
  %.fca.0.1.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 0, i32 1, !dbg !3971
  %.fca.0.2.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 0, i32 2, !dbg !3971
  %.fca.1.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 1, !dbg !3971
  %.fca.2.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 2, !dbg !3971
  %.fca.3.gep = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %digs15, i32 0, i32 3, !dbg !3971
  %3 = bitcast %strconv.decimalSlice* %digs15 to i8*, !dbg !3971
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !3971
  store i8* %3, i8** %4, align 4, !dbg !3971
  %5 = bitcast %strconv.decimalSlice* %digs15 to i8*, !dbg !3971
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %5, i8 0, i64 21, i1 false), !dbg !3971
  %digs.fca.0.0.extract = extractvalue %strconv.decimalSlice %digs, 0, 0, !dbg !3972
  %6 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 47, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %6, align 4, !dbg !3972
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 45, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %7, align 4, !dbg !3972
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 29, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %8, align 4, !dbg !3972
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 24, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %9, align 4, !dbg !3972
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 23, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %10, align 4, !dbg !3972
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %11, align 4, !dbg !3972
  store i8* %digs.fca.0.0.extract, i8** %.fca.0.0.gep, align 8, !dbg !3972
  %digs.fca.0.1.extract = extractvalue %strconv.decimalSlice %digs, 0, 1, !dbg !3972
  store i32 %digs.fca.0.1.extract, i32* %.fca.0.1.gep, align 4, !dbg !3972
  %digs.fca.0.2.extract = extractvalue %strconv.decimalSlice %digs, 0, 2, !dbg !3972
  store i32 %digs.fca.0.2.extract, i32* %.fca.0.2.gep, align 8, !dbg !3972
  %digs.fca.1.extract = extractvalue %strconv.decimalSlice %digs, 1, !dbg !3972
  store i32 %digs.fca.1.extract, i32* %.fca.1.gep, align 4, !dbg !3972
  %digs.fca.2.extract = extractvalue %strconv.decimalSlice %digs, 2, !dbg !3972
  store i32 %digs.fca.2.extract, i32* %.fca.2.gep, align 8, !dbg !3972
  %digs.fca.3.extract = extractvalue %strconv.decimalSlice %digs, 3, !dbg !3972
  store i1 %digs.fca.3.extract, i1* %.fca.3.gep, align 4, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %prec, metadata !3940, metadata !DIExpression()), !dbg !3973
  %12 = icmp slt i32 %digs.fca.1.extract, %prec, !dbg !3974
  %13 = icmp sge i32 %digs.fca.1.extract, %digs.fca.2.extract
  %or.cond125 = and i1 %12, %13, !dbg !3972
  %14 = select i1 %or.cond125, i32 %digs.fca.1.extract, i32 %prec, !dbg !3972
  %spec.select = select i1 %shortest, i32 6, i32 %14, !dbg !3972
  %15 = add i32 %digs.fca.2.extract, -1, !dbg !3975
  call void @llvm.dbg.value(metadata i32 %15, metadata !3941, metadata !DIExpression()), !dbg !3976
  %16 = icmp slt i32 %15, -4, !dbg !3977
  %17 = icmp sge i32 %15, %spec.select
  %or.cond = or i1 %16, %17, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !3940, metadata !DIExpression()), !dbg !3978
  br i1 %or.cond, label %deref.next39, label %deref.next49, !dbg !3972

deref.next39:                                     ; preds = %entry
  %18 = select i1 %12, i32 %digs.fca.1.extract, i32 %prec, !dbg !3972
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3934, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3936, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata %strconv.decimalSlice undef, metadata !3937, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %18, metadata !3938, metadata !DIExpression()), !dbg !3982
  %19 = add i32 %18, -1, !dbg !3983
  call void @llvm.dbg.value(metadata i8 103, metadata !3939, metadata !DIExpression()), !dbg !3984
  %20 = bitcast [1 x i32]* %stackalloc.alloca199.i to i8*, !dbg !3956
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !3956
  store i8* %20, i8** %21, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20), !dbg !3956
  %22 = bitcast [1 x i32]* %stackalloc.alloca197.i to i8*, !dbg !3956
  %23 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !3956
  store i8* %22, i8** %23, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22), !dbg !3956
  %24 = bitcast [1 x i32]* %stackalloc.alloca195.i to i8*, !dbg !3956
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !3956
  store i8* %24, i8** %25, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !3956
  %26 = bitcast [1 x i32]* %stackalloc.alloca193.i to i8*, !dbg !3956
  %27 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !3956
  store i8* %26, i8** %27, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26), !dbg !3956
  %28 = bitcast [1 x i32]* %stackalloc.alloca191.i to i8*, !dbg !3956
  %29 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !3956
  store i8* %28, i8** %29, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28), !dbg !3956
  %30 = bitcast [1 x i32]* %stackalloc.alloca189.i to i8*, !dbg !3956
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !3956
  store i8* %30, i8** %31, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30), !dbg !3956
  %32 = bitcast [1 x i32]* %stackalloc.alloca187.i to i8*, !dbg !3956
  %33 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 20, !dbg !3956
  store i8* %32, i8** %33, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32), !dbg !3956
  %34 = bitcast [1 x i32]* %stackalloc.alloca185.i to i8*, !dbg !3956
  %35 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 21, !dbg !3956
  store i8* %34, i8** %35, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34), !dbg !3956
  %36 = bitcast [1 x i32]* %stackalloc.alloca.i to i8*, !dbg !3956
  %37 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 22, !dbg !3956
  store i8* %36, i8** %37, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36), !dbg !3956
  %38 = bitcast %strconv.decimalSlice* %d12.i to i8*, !dbg !3956
  %39 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !3956
  store i8* %38, i8** %39, align 4, !dbg !3956
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38), !dbg !3956
  call void @llvm.dbg.value(metadata i8* %dst.data, metadata !3961, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3956
  call void @llvm.dbg.value(metadata i32 1, metadata !3961, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3956
  call void @llvm.dbg.value(metadata i32 68, metadata !3961, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3956
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3962, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata %strconv.decimalSlice undef, metadata !3963, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i32 %19, metadata !3964, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata i8 101, metadata !3965, metadata !DIExpression()), !dbg !3956
  %.fca.0.0.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 0, i32 0, !dbg !3956
  %.fca.0.1.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 0, i32 1, !dbg !3956
  %.fca.0.2.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 0, i32 2, !dbg !3956
  %.fca.1.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 1, !dbg !3956
  %.fca.2.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 2, !dbg !3956
  %.fca.3.gep.i = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d12.i, i32 0, i32 3, !dbg !3956
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %38, i8 0, i64 21, i1 false), !dbg !3956
  store i8* %digs.fca.0.0.extract, i8** %.fca.0.0.gep.i, align 8, !dbg !3985
  store i32 %digs.fca.0.1.extract, i32* %.fca.0.1.gep.i, align 4, !dbg !3985
  store i32 %digs.fca.0.2.extract, i32* %.fca.0.2.gep.i, align 8, !dbg !3985
  store i32 %digs.fca.1.extract, i32* %.fca.1.gep.i, align 4, !dbg !3985
  store i32 %digs.fca.2.extract, i32* %.fca.2.gep.i, align 8, !dbg !3985
  store i1 %digs.fca.3.extract, i1* %.fca.3.gep.i, align 4, !dbg !3985
  br i1 %neg, label %if.then.i, label %entry.if.done_crit_edge.i, !dbg !3985

entry.if.done_crit_edge.i:                        ; preds = %deref.next39
  %40 = insertvalue { i8*, i32, i32 } zeroinitializer, i8* %dst.data, 0, !dbg !3956
  %41 = insertvalue { i8*, i32, i32 } %40, i32 1, 1, !dbg !3956
  %42 = insertvalue { i8*, i32, i32 } %41, i32 68, 2, !dbg !3956
  br label %if.done.i, !dbg !3985

if.then.i:                                        ; preds = %deref.next39
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %42, metadata !3961, metadata !DIExpression()), !dbg !3986
  %.fca.0.gep209.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca199.i, i32 0, i32 0, !dbg !3987
  store i32 0, i32* %.fca.0.gep209.i, align 4, !dbg !3987
  store i8 45, i8* %20, align 4, !dbg !3985
  %append.new.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %dst.data, i8* nonnull %20, i32 1, i32 68, i32 1), !dbg !3988
  %append.newPtr.i = extractvalue { i8*, i32, i32 } %append.new.i, 0, !dbg !3988
  %43 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !3989
  store i8* %append.newPtr.i, i8** %43, align 4, !dbg !3989
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new.i, metadata !3961, metadata !DIExpression()), !dbg !3989
  br label %if.done.i, !dbg !3985

if.done.i:                                        ; preds = %if.then.i, %entry.if.done_crit_edge.i
  %.pre-phi6.i = phi i8* [ %dst.data, %entry.if.done_crit_edge.i ], [ %append.newPtr.i, %if.then.i ], !dbg !3990
  %44 = phi { i8*, i32, i32 } [ %42, %entry.if.done_crit_edge.i ], [ %append.new.i, %if.then.i ], !dbg !3991
  %45 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !3990
  store i8* %.pre-phi6.i, i8** %45, align 4, !dbg !3990
  call void @llvm.dbg.value(metadata i8 48, metadata !3966, metadata !DIExpression()), !dbg !3990
  %.not.i = icmp eq i32 %digs.fca.1.extract, 0, !dbg !3992
  br i1 %.not.i, label %if.done2.i, label %gep.next16.i, !dbg !3985

if.done2.i:                                       ; preds = %lookup.next.i, %if.done.i
  %46 = phi i8 [ 48, %if.done.i ], [ %93, %lookup.next.i ], !dbg !3990
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %44, metadata !3961, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i8 %46, metadata !3966, metadata !DIExpression()), !dbg !3994
  %.fca.0.gep208.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca197.i, i32 0, i32 0, !dbg !3995
  store i32 0, i32* %.fca.0.gep208.i, align 4, !dbg !3995
  store i8 %46, i8* %22, align 4, !dbg !3994
  %append.srcLen26.i = extractvalue { i8*, i32, i32 } %44, 1, !dbg !3996
  %append.srcCap27.i = extractvalue { i8*, i32, i32 } %44, 2, !dbg !3996
  %append.new30.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.pre-phi6.i, i8* nonnull %22, i32 %append.srcLen26.i, i32 %append.srcCap27.i, i32 1), !dbg !3996
  %append.newPtr31.i = extractvalue { i8*, i32, i32 } %append.new30.i, 0, !dbg !3996
  %47 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !3997
  store i8* %append.newPtr31.i, i8** %47, align 4, !dbg !3997
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new30.i, metadata !3961, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata i32 %19, metadata !3964, metadata !DIExpression()), !dbg !3998
  %48 = icmp sgt i32 %19, 0, !dbg !3999
  br i1 %48, label %if.then3.i, label %if.done5.i, !dbg !3985

if.then3.i:                                       ; preds = %if.done2.i
  %append.newCap33.i = extractvalue { i8*, i32, i32 } %append.new30.i, 2, !dbg !3996
  %append.newLen32.i = extractvalue { i8*, i32, i32 } %append.new30.i, 1, !dbg !3996
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new30.i, metadata !3961, metadata !DIExpression()), !dbg !4000
  %.fca.0.gep207.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca195.i, i32 0, i32 0, !dbg !4001
  store i32 0, i32* %.fca.0.gep207.i, align 4, !dbg !4001
  store i8 46, i8* %24, align 4, !dbg !3985
  %append.new45.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr31.i, i8* nonnull %24, i32 %append.newLen32.i, i32 %append.newCap33.i, i32 1), !dbg !4002
  %append.newPtr46.i = extractvalue { i8*, i32, i32 } %append.new45.i, 0, !dbg !4002
  %49 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !4002
  store i8* %append.newPtr46.i, i8** %49, align 4, !dbg !4002
  %append.newLen47.i = extractvalue { i8*, i32, i32 } %append.new45.i, 1, !dbg !4002
  %append.newCap48.i = extractvalue { i8*, i32, i32 } %append.new45.i, 2, !dbg !4002
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new45.i, metadata !3961, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 1, metadata !3967, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i32 %19, metadata !3964, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %digs.fca.1.extract, metadata !4006, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %18, metadata !4011, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.value(metadata i32 %18, metadata !3968, metadata !DIExpression()), !dbg !4015
  %50 = icmp sgt i32 %18, 1, !dbg !4016
  br i1 %50, label %gep.next54.i, label %for.loop.preheader.i, !dbg !3985

for.loop.preheader.i:                             ; preds = %slice.next58.i, %if.then3.i
  %.ph.i = phi { i8*, i32, i32 } [ %append.new64.i, %slice.next58.i ], [ %append.new45.i, %if.then3.i ]
  %.ph4.i = phi i32 [ %18, %slice.next58.i ], [ 1, %if.then3.i ]
  %.fca.0.gep206.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca193.i, i32 0, i32 0, !dbg !3985
  br label %for.loop.i, !dbg !3985

for.loop.i:                                       ; preds = %for.body.i, %for.loop.preheader.i
  %51 = phi { i8*, i32, i32 } [ %append.new79.i, %for.body.i ], [ %.ph.i, %for.loop.preheader.i ], !dbg !3991
  %52 = phi i32 [ %56, %for.body.i ], [ %.ph4.i, %for.loop.preheader.i ], !dbg !4004
  %53 = extractvalue { i8*, i32, i32 } %51, 0, !dbg !4017
  %54 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !4017
  store i8* %53, i8** %54, align 4, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %52, metadata !3967, metadata !DIExpression()), !dbg !4017
  call void @llvm.dbg.value(metadata i32 %19, metadata !3964, metadata !DIExpression()), !dbg !4018
  %.not1.i = icmp sgt i32 %52, %19, !dbg !4019
  br i1 %.not1.i, label %if.done5.i.loopexit, label %for.body.i, !dbg !3985

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %51, metadata !3961, metadata !DIExpression()), !dbg !4020
  store i32 0, i32* %.fca.0.gep206.i, align 4, !dbg !4021
  store i8 48, i8* %26, align 4, !dbg !3985
  %append.srcLen75.i = extractvalue { i8*, i32, i32 } %51, 1, !dbg !4022
  %append.srcCap76.i = extractvalue { i8*, i32, i32 } %51, 2, !dbg !4022
  %append.new79.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %53, i8* nonnull %26, i32 %append.srcLen75.i, i32 %append.srcCap76.i, i32 1), !dbg !4022
  %append.newPtr80.i = extractvalue { i8*, i32, i32 } %append.new79.i, 0, !dbg !4022
  %55 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !4023
  store i8* %append.newPtr80.i, i8** %55, align 4, !dbg !4023
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new79.i, metadata !3961, metadata !DIExpression()), !dbg !4023
  %56 = add i32 %52, 1, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %56, metadata !3967, metadata !DIExpression()), !dbg !4024
  br label %for.loop.i, !dbg !3985

if.done5.i.loopexit:                              ; preds = %for.loop.i
  %57 = extractvalue { i8*, i32, i32 } %51, 0, !dbg !4017
  br label %if.done5.i, !dbg !4025

if.done5.i:                                       ; preds = %if.done5.i.loopexit, %if.done2.i
  %.pre-phi.i = phi i8* [ %append.newPtr31.i, %if.done2.i ], [ %57, %if.done5.i.loopexit ], !dbg !4025
  %58 = phi { i8*, i32, i32 } [ %append.new30.i, %if.done2.i ], [ %51, %if.done5.i.loopexit ], !dbg !3991
  %59 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !4025
  store i8* %.pre-phi.i, i8** %59, align 4, !dbg !4025
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !3961, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i8 101, metadata !3965, metadata !DIExpression()), !dbg !4026
  %.fca.0.gep205.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca191.i, i32 0, i32 0, !dbg !4027
  store i32 0, i32* %.fca.0.gep205.i, align 4, !dbg !4027
  store i8 101, i8* %28, align 4, !dbg !4026
  %append.srcLen90.i = extractvalue { i8*, i32, i32 } %58, 1, !dbg !4028
  %append.srcCap91.i = extractvalue { i8*, i32, i32 } %58, 2, !dbg !4028
  %append.new94.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.pre-phi.i, i8* nonnull %28, i32 %append.srcLen90.i, i32 %append.srcCap91.i, i32 1), !dbg !4028
  %append.newPtr95.i = extractvalue { i8*, i32, i32 } %append.new94.i, 0, !dbg !4028
  %60 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !4028
  store i8* %append.newPtr95.i, i8** %60, align 4, !dbg !4028
  %append.newLen96.i = extractvalue { i8*, i32, i32 } %append.new94.i, 1, !dbg !4028
  %append.newCap97.i = extractvalue { i8*, i32, i32 } %append.new94.i, 2, !dbg !4028
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new94.i, metadata !3961, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %15, metadata !3969, metadata !DIExpression()), !dbg !4030
  %61 = select i1 %.not.i, i32 0, i32 %15, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %61, metadata !3969, metadata !DIExpression()), !dbg !4031
  %62 = icmp slt i32 %61, 0, !dbg !4032
  %63 = sub i32 0, %61, !dbg !3985
  %64 = select i1 %62, i8 45, i8 43, !dbg !3985
  %65 = select i1 %62, i32 %63, i32 %61, !dbg !3985
  call void @llvm.dbg.value(metadata i8 %64, metadata !3966, metadata !DIExpression()), !dbg !4033
  %.fca.0.gep204.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca189.i, i32 0, i32 0, !dbg !4034
  store i32 0, i32* %.fca.0.gep204.i, align 4, !dbg !4034
  store i8 %64, i8* %30, align 4, !dbg !4033
  %append.new117.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr95.i, i8* nonnull %30, i32 %append.newLen96.i, i32 %append.newCap97.i, i32 1), !dbg !4035
  %append.newPtr118.i = extractvalue { i8*, i32, i32 } %append.new117.i, 0, !dbg !4035
  %66 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 19, !dbg !4035
  store i8* %append.newPtr118.i, i8** %66, align 4, !dbg !4035
  %append.newLen119.i = extractvalue { i8*, i32, i32 } %append.new117.i, 1, !dbg !4035
  %append.newCap120.i = extractvalue { i8*, i32, i32 } %append.new117.i, 2, !dbg !4035
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new117.i, metadata !3961, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %65, metadata !3969, metadata !DIExpression()), !dbg !4037
  %67 = icmp slt i32 %65, 10, !dbg !4038
  br i1 %67, label %switch.body.i, label %switch.next.i, !dbg !3985

switch.body.i:                                    ; preds = %if.done5.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new117.i, metadata !3961, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32 %65, metadata !3969, metadata !DIExpression()), !dbg !4040
  %68 = trunc i32 %65 to i8, !dbg !4041
  %69 = add i8 %68, 48, !dbg !4042
  %.fca.0.gep203.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca187.i, i32 0, i32 0, !dbg !4043
  store i32 0, i32* %.fca.0.gep203.i, align 4, !dbg !4043
  %70 = bitcast [1 x i32]* %stackalloc.alloca187.i to [2 x i8]*, !dbg !4043
  store i8 48, i8* %32, align 4, !dbg !3985
  %71 = getelementptr inbounds [2 x i8], [2 x i8]* %70, i32 0, i32 1, !dbg !3985
  store i8 %69, i8* %71, align 1, !dbg !4042
  %append.new134.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr118.i, i8* nonnull %32, i32 %append.newLen119.i, i32 %append.newCap120.i, i32 2), !dbg !4044
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new134.i, metadata !3961, metadata !DIExpression()), !dbg !4045
  br label %strconv.fmtE.exit, !dbg !3985

switch.next.i:                                    ; preds = %if.done5.i
  call void @llvm.dbg.value(metadata i32 %65, metadata !3969, metadata !DIExpression()), !dbg !4046
  %72 = icmp slt i32 %65, 100, !dbg !4047
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new117.i, metadata !3961, metadata !DIExpression()), !dbg !4048
  br i1 %72, label %switch.body10.i, label %switch.next11.i, !dbg !3985

switch.body10.i:                                  ; preds = %switch.next.i
  %.lhs.trunc.i = trunc i32 %65 to i8, !dbg !4049
  %.lhs.trunc.i.frozen = freeze i8 %.lhs.trunc.i
  %73 = udiv i8 %.lhs.trunc.i.frozen, 10, !dbg !4049
  %74 = add nuw nsw i8 %73, 48, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %65, metadata !3969, metadata !DIExpression()), !dbg !4051
  %75 = mul i8 %73, 10
  %.decomposed = sub i8 %.lhs.trunc.i.frozen, %75
  %76 = or i8 %.decomposed, 48, !dbg !4052
  %.fca.0.gep202.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca185.i, i32 0, i32 0, !dbg !4053
  store i32 0, i32* %.fca.0.gep202.i, align 4, !dbg !4053
  %77 = bitcast [1 x i32]* %stackalloc.alloca185.i to [2 x i8]*, !dbg !4053
  store i8 %74, i8* %34, align 4, !dbg !4050
  %78 = getelementptr inbounds [2 x i8], [2 x i8]* %77, i32 0, i32 1, !dbg !3985
  store i8 %76, i8* %78, align 1, !dbg !4052
  %append.new151.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr118.i, i8* nonnull %34, i32 %append.newLen119.i, i32 %append.newCap120.i, i32 2), !dbg !4054
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new151.i, metadata !3961, metadata !DIExpression()), !dbg !4055
  br label %strconv.fmtE.exit, !dbg !3985

switch.next11.i:                                  ; preds = %switch.next.i
  %79 = udiv i32 %65, 100, !dbg !4056
  %80 = trunc i32 %79 to i8, !dbg !4057
  %81 = add i8 %80, 48, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %65, metadata !3969, metadata !DIExpression()), !dbg !4059
  %.frozen = freeze i32 %65
  %82 = udiv i32 %.frozen, 10, !dbg !4060
  %83 = trunc i32 %82 to i8, !dbg !4061
  %84 = urem i8 %83, 10, !dbg !4062
  %85 = or i8 %84, 48, !dbg !4063
  %86 = mul i32 %82, 10
  %.decomposed55 = sub i32 %.frozen, %86
  %87 = trunc i32 %.decomposed55 to i8, !dbg !4064
  %88 = or i8 %87, 48, !dbg !4065
  %.fca.0.gep201.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca.i, i32 0, i32 0, !dbg !4066
  store i32 0, i32* %.fca.0.gep201.i, align 4, !dbg !4066
  %89 = bitcast [1 x i32]* %stackalloc.alloca.i to [3 x i8]*, !dbg !4066
  store i8 %81, i8* %36, align 4, !dbg !4058
  %90 = getelementptr inbounds [3 x i8], [3 x i8]* %89, i32 0, i32 1, !dbg !3985
  store i8 %85, i8* %90, align 1, !dbg !4063
  %91 = getelementptr inbounds [3 x i8], [3 x i8]* %89, i32 0, i32 2, !dbg !3985
  store i8 %88, i8* %91, align 2, !dbg !4065
  %append.new170.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr118.i, i8* nonnull %36, i32 %append.newLen119.i, i32 %append.newCap120.i, i32 3), !dbg !4067
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new170.i, metadata !3961, metadata !DIExpression()), !dbg !4068
  br label %strconv.fmtE.exit, !dbg !3985

gep.next16.i:                                     ; preds = %if.done.i
  %92 = icmp eq i32 %digs.fca.0.1.extract, 0, !dbg !4069
  br i1 %92, label %lookup.throw.i, label %lookup.next.i, !dbg !4069

lookup.throw.i:                                   ; preds = %gep.next16.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !4069
  unreachable, !dbg !4069

lookup.next.i:                                    ; preds = %gep.next16.i
  %93 = load i8, i8* %digs.fca.0.0.extract, align 1, !dbg !4069
  call void @llvm.dbg.value(metadata i8 %93, metadata !3966, metadata !DIExpression()), !dbg !4070
  br label %if.done2.i, !dbg !3985

gep.next54.i:                                     ; preds = %if.then3.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new45.i, metadata !3961, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.value(metadata i32 %18, metadata !3968, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata i32 1, metadata !3967, metadata !DIExpression()), !dbg !4073
  %slice.highmax.i = icmp ugt i32 %18, %digs.fca.0.2.extract, !dbg !4074
  br i1 %slice.highmax.i, label %slice.throw57.i, label %slice.next58.i, !dbg !4074

slice.throw57.i:                                  ; preds = %gep.next54.i
  tail call fastcc void @runtime.slicePanic(), !dbg !4074
  unreachable, !dbg !4074

slice.next58.i:                                   ; preds = %gep.next54.i
  %94 = getelementptr inbounds i8, i8* %digs.fca.0.0.extract, i32 1, !dbg !4074
  %append.new64.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %append.newPtr46.i, i8* nonnull %94, i32 %append.newLen47.i, i32 %append.newCap48.i, i32 %19), !dbg !4075
  %append.newPtr65.i = extractvalue { i8*, i32, i32 } %append.new64.i, 0, !dbg !4075
  %95 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 25, !dbg !4076
  store i8* %append.newPtr65.i, i8** %95, align 4, !dbg !4076
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new64.i, metadata !3961, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i32 %18, metadata !3968, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %18, metadata !3967, metadata !DIExpression()), !dbg !4078
  br label %for.loop.preheader.i, !dbg !3985

strconv.fmtE.exit:                                ; preds = %switch.body.i, %switch.body10.i, %switch.next11.i
  %append.new134.i.sink = phi { i8*, i32, i32 } [ %append.new134.i, %switch.body.i ], [ %append.new151.i, %switch.body10.i ], [ %append.new170.i, %switch.next11.i ]
  %append.newPtr135.i = extractvalue { i8*, i32, i32 } %append.new134.i.sink, 0, !dbg !3985
  %96 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 28, !dbg !4079
  store i8* %append.newPtr135.i, i8** %96, align 4, !dbg !4079
  %97 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 27, !dbg !4079
  store i8* %append.newPtr135.i, i8** %97, align 4, !dbg !4079
  %98 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 26, !dbg !4079
  store i8* %append.newPtr135.i, i8** %98, align 4, !dbg !4079
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new134.i.sink, metadata !3961, metadata !DIExpression()), !dbg !4079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36), !dbg !4080
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38), !dbg !4080
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4081
  ret { i8*, i32, i32 } %append.new134.i.sink, !dbg !4081

deref.next49:                                     ; preds = %entry
  %99 = icmp slt i32 %digs.fca.2.extract, %prec, !dbg !4082
  %100 = select i1 %99, i32 %digs.fca.1.extract, i32 %prec, !dbg !3972
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !3934, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3936, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata %strconv.decimalSlice undef, metadata !3937, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %100, metadata !3938, metadata !DIExpression()), !dbg !4086
  %101 = sub i32 %100, %digs.fca.2.extract, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %101, metadata !4088, metadata !DIExpression()), !dbg !4092
  call void @llvm.dbg.value(metadata i32 0, metadata !4091, metadata !DIExpression()), !dbg !4094
  %102 = icmp sgt i32 %101, 0, !dbg !4095
  %spec.select.i = select i1 %102, i32 %101, i32 0, !dbg !4096
  %103 = bitcast [1 x i32]* %stackalloc.alloca199.i to i8*, !dbg !3942
  %104 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 31, !dbg !3942
  store i8* %103, i8** %104, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103), !dbg !3942
  %105 = bitcast [1 x i32]* %stackalloc.alloca197.i to i8*, !dbg !3942
  %106 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 35, !dbg !3942
  store i8* %105, i8** %106, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105), !dbg !3942
  %107 = bitcast [1 x i32]* %stackalloc.alloca195.i to i8*, !dbg !3942
  %108 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 38, !dbg !3942
  store i8* %107, i8** %108, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107), !dbg !3942
  %109 = bitcast [1 x i32]* %stackalloc.alloca193.i to i8*, !dbg !3942
  %110 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 41, !dbg !3942
  store i8* %109, i8** %110, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109), !dbg !3942
  %111 = bitcast [1 x i32]* %stackalloc.alloca191.i to i8*, !dbg !3942
  %112 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 43, !dbg !3942
  store i8* %111, i8** %112, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111), !dbg !3942
  %113 = bitcast %strconv.decimalSlice* %d9.i to i8*, !dbg !3942
  %114 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 30, !dbg !3942
  store i8* %113, i8** %114, align 4, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113), !dbg !3942
  call void @llvm.dbg.value(metadata i8* %dst.data, metadata !3947, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3942
  call void @llvm.dbg.value(metadata i32 1, metadata !3947, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3942
  call void @llvm.dbg.value(metadata i32 68, metadata !3947, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !3942
  call void @llvm.dbg.value(metadata i1 %neg, metadata !3948, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata %strconv.decimalSlice undef, metadata !3949, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.value(metadata i32 %spec.select.i, metadata !3950, metadata !DIExpression()), !dbg !3942
  %.fca.0.0.gep.i2 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 0, i32 0, !dbg !3942
  %.fca.0.1.gep.i3 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 0, i32 1, !dbg !3942
  %.fca.0.2.gep.i4 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 0, i32 2, !dbg !3942
  %.fca.1.gep.i5 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 1, !dbg !3942
  %.fca.2.gep.i6 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 2, !dbg !3942
  %.fca.3.gep.i7 = getelementptr inbounds %strconv.decimalSlice, %strconv.decimalSlice* %d9.i, i32 0, i32 3, !dbg !3942
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(21) %113, i8 0, i64 21, i1 false), !dbg !3942
  store i8* %digs.fca.0.0.extract, i8** %.fca.0.0.gep.i2, align 8, !dbg !4097
  store i32 %digs.fca.0.1.extract, i32* %.fca.0.1.gep.i3, align 4, !dbg !4097
  store i32 %digs.fca.0.2.extract, i32* %.fca.0.2.gep.i4, align 8, !dbg !4097
  store i32 %digs.fca.1.extract, i32* %.fca.1.gep.i5, align 4, !dbg !4097
  store i32 %digs.fca.2.extract, i32* %.fca.2.gep.i6, align 8, !dbg !4097
  store i1 %digs.fca.3.extract, i1* %.fca.3.gep.i7, align 4, !dbg !4097
  br i1 %neg, label %if.then.i11, label %entry.if.done_crit_edge.i8, !dbg !4097

entry.if.done_crit_edge.i8:                       ; preds = %deref.next49
  %115 = insertvalue { i8*, i32, i32 } zeroinitializer, i8* %dst.data, 0, !dbg !3942
  %116 = insertvalue { i8*, i32, i32 } %115, i32 1, 1, !dbg !3942
  %117 = insertvalue { i8*, i32, i32 } %116, i32 68, 2, !dbg !3942
  br label %if.done.i12, !dbg !4097

if.then.i11:                                      ; preds = %deref.next49
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %117, metadata !3947, metadata !DIExpression()), !dbg !4098
  %.fca.0.gep135.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca199.i, i32 0, i32 0, !dbg !4099
  store i32 0, i32* %.fca.0.gep135.i, align 4, !dbg !4099
  store i8 45, i8* %103, align 4, !dbg !4097
  %append.new.i9 = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %dst.data, i8* nonnull %103, i32 1, i32 68, i32 1), !dbg !4100
  %append.newPtr.i10 = extractvalue { i8*, i32, i32 } %append.new.i9, 0, !dbg !4100
  %118 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 32, !dbg !4101
  store i8* %append.newPtr.i10, i8** %118, align 4, !dbg !4101
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new.i9, metadata !3947, metadata !DIExpression()), !dbg !4101
  br label %if.done.i12, !dbg !4097

if.done.i12:                                      ; preds = %if.then.i11, %entry.if.done_crit_edge.i8
  %.pre-phi7.i = phi i8* [ %dst.data, %entry.if.done_crit_edge.i8 ], [ %append.newPtr.i10, %if.then.i11 ], !dbg !4102
  %119 = phi { i8*, i32, i32 } [ %117, %entry.if.done_crit_edge.i8 ], [ %append.new.i9, %if.then.i11 ], !dbg !4103
  %120 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 33, !dbg !4104
  store i8* %.pre-phi7.i, i8** %120, align 4, !dbg !4104
  %121 = icmp sgt i32 %digs.fca.2.extract, 0, !dbg !4104
  br i1 %121, label %deref.next15.i, label %if.else.i, !dbg !4097

for.loop.i13:                                     ; preds = %slice.next25.i, %for.body.i14
  %122 = phi { i8*, i32, i32 } [ %append.new31.i, %slice.next25.i ], [ %append.new50.i, %for.body.i14 ], !dbg !4103
  %123 = phi i32 [ %spec.select.i.i, %slice.next25.i ], [ %127, %for.body.i14 ], !dbg !4105
  %124 = extractvalue { i8*, i32, i32 } %122, 0, !dbg !4106
  %125 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 34, !dbg !4106
  store i8* %124, i8** %125, align 4, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %123, metadata !3951, metadata !DIExpression()), !dbg !4106
  %exitcond5.not.i = icmp eq i32 %123, %digs.fca.2.extract, !dbg !4107
  br i1 %exitcond5.not.i, label %if.done2.i16.loopexit, label %for.body.i14, !dbg !4097

for.body.i14:                                     ; preds = %for.loop.i13
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %122, metadata !3947, metadata !DIExpression()), !dbg !4108
  store i32 0, i32* %.fca.0.gep134.i, align 4, !dbg !4109
  store i8 48, i8* %105, align 4, !dbg !4097
  %append.srcLen46.i = extractvalue { i8*, i32, i32 } %122, 1, !dbg !4110
  %append.srcCap47.i = extractvalue { i8*, i32, i32 } %122, 2, !dbg !4110
  %append.new50.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %124, i8* nonnull %105, i32 %append.srcLen46.i, i32 %append.srcCap47.i, i32 1), !dbg !4110
  %append.newPtr51.i = extractvalue { i8*, i32, i32 } %append.new50.i, 0, !dbg !4110
  %126 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 36, !dbg !4111
  store i8* %append.newPtr51.i, i8** %126, align 4, !dbg !4111
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new50.i, metadata !3947, metadata !DIExpression()), !dbg !4111
  %127 = add i32 %123, 1, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %127, metadata !3951, metadata !DIExpression()), !dbg !4112
  br label %for.loop.i13, !dbg !4097

if.done2.i16.loopexit:                            ; preds = %for.loop.i13
  %128 = extractvalue { i8*, i32, i32 } %122, 0, !dbg !4106
  br label %if.done2.i16, !dbg !4113

if.done2.i16:                                     ; preds = %if.done2.i16.loopexit, %if.else.i
  %.pre-phi.i15 = phi i8* [ %append.newPtr108.i, %if.else.i ], [ %128, %if.done2.i16.loopexit ], !dbg !4113
  %129 = phi { i8*, i32, i32 } [ %append.new107.i, %if.else.i ], [ %122, %if.done2.i16.loopexit ], !dbg !4103
  %130 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 37, !dbg !4113
  store i8* %.pre-phi.i15, i8** %130, align 4, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %spec.select.i, metadata !3950, metadata !DIExpression()), !dbg !4113
  br i1 %102, label %if.then3.i17, label %if.done2.i16.strconv.fmtF.exit_crit_edge, !dbg !4097

if.done2.i16.strconv.fmtF.exit_crit_edge:         ; preds = %if.done2.i16
  %.pre = extractvalue { i8*, i32, i32 } %129, 0, !dbg !4114
  br label %strconv.fmtF.exit, !dbg !4097

if.then3.i17:                                     ; preds = %if.done2.i16
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %129, metadata !3947, metadata !DIExpression()), !dbg !4115
  %.fca.0.gep133.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca195.i, i32 0, i32 0, !dbg !4116
  store i32 0, i32* %.fca.0.gep133.i, align 4, !dbg !4116
  store i8 46, i8* %107, align 4, !dbg !4097
  %append.srcLen61.i = extractvalue { i8*, i32, i32 } %129, 1, !dbg !4117
  %append.srcCap62.i = extractvalue { i8*, i32, i32 } %129, 2, !dbg !4117
  %append.new65.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.pre-phi.i15, i8* nonnull %107, i32 %append.srcLen61.i, i32 %append.srcCap62.i, i32 1), !dbg !4117
  %append.newPtr66.i = extractvalue { i8*, i32, i32 } %append.new65.i, 0, !dbg !4117
  %131 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 39, !dbg !4118
  store i8* %append.newPtr66.i, i8** %131, align 4, !dbg !4118
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new65.i, metadata !3947, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i32 0, metadata !3952, metadata !DIExpression()), !dbg !4119
  %.fca.0.gep132.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca193.i, i32 0, i32 0, !dbg !4097
  br label %for.loop4.i, !dbg !4097

for.loop4.i:                                      ; preds = %if.done7.i, %if.then3.i17
  %132 = phi { i8*, i32, i32 } [ %append.new65.i, %if.then3.i17 ], [ %append.new92.i, %if.done7.i ], !dbg !4103
  %133 = phi i32 [ 0, %if.then3.i17 ], [ %138, %if.done7.i ], !dbg !4119
  %134 = extractvalue { i8*, i32, i32 } %132, 0, !dbg !4120
  %135 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 40, !dbg !4120
  store i8* %134, i8** %135, align 4, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %133, metadata !3952, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %spec.select.i, metadata !3950, metadata !DIExpression()), !dbg !4121
  %exitcond.not.i = icmp eq i32 %133, %spec.select.i, !dbg !4122
  br i1 %exitcond.not.i, label %strconv.fmtF.exit.loopexit, label %deref.next72.i, !dbg !4097

if.done7.i:                                       ; preds = %lookup.next.i23, %deref.next72.i
  %136 = phi i8 [ 48, %deref.next72.i ], [ %146, %lookup.next.i23 ], !dbg !4123
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %132, metadata !3947, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8 %136, metadata !3953, metadata !DIExpression()), !dbg !4125
  store i32 0, i32* %.fca.0.gep132.i, align 4, !dbg !4126
  store i8 %136, i8* %109, align 4, !dbg !4125
  %append.srcLen88.i = extractvalue { i8*, i32, i32 } %132, 1, !dbg !4127
  %append.srcCap89.i = extractvalue { i8*, i32, i32 } %132, 2, !dbg !4127
  %append.new92.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %134, i8* nonnull %109, i32 %append.srcLen88.i, i32 %append.srcCap89.i, i32 1), !dbg !4127
  %append.newPtr93.i = extractvalue { i8*, i32, i32 } %append.new92.i, 0, !dbg !4127
  %137 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 42, !dbg !4128
  store i8* %append.newPtr93.i, i8** %137, align 4, !dbg !4128
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new92.i, metadata !3947, metadata !DIExpression()), !dbg !4128
  %138 = add nuw i32 %133, 1, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %138, metadata !3952, metadata !DIExpression()), !dbg !4129
  br label %for.loop4.i, !dbg !4097

if.else.i:                                        ; preds = %if.done.i12
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %119, metadata !3947, metadata !DIExpression()), !dbg !4130
  %.fca.0.gep131.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca191.i, i32 0, i32 0, !dbg !4131
  store i32 0, i32* %.fca.0.gep131.i, align 4, !dbg !4131
  store i8 48, i8* %111, align 4, !dbg !4097
  %append.srcLen103.i = extractvalue { i8*, i32, i32 } %119, 1, !dbg !4132
  %append.srcCap104.i = extractvalue { i8*, i32, i32 } %119, 2, !dbg !4132
  %append.new107.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.pre-phi7.i, i8* nonnull %111, i32 %append.srcLen103.i, i32 %append.srcCap104.i, i32 1), !dbg !4132
  %append.newPtr108.i = extractvalue { i8*, i32, i32 } %append.new107.i, 0, !dbg !4132
  %139 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 44, !dbg !4133
  store i8* %append.newPtr108.i, i8** %139, align 4, !dbg !4133
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new107.i, metadata !3947, metadata !DIExpression()), !dbg !4133
  br label %if.done2.i16, !dbg !4097

deref.next15.i:                                   ; preds = %if.done.i12
  call void @llvm.dbg.value(metadata i32 %digs.fca.1.extract, metadata !4006, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %digs.fca.2.extract, metadata !4011, metadata !DIExpression()), !dbg !4136
  %140 = icmp slt i32 %digs.fca.1.extract, %digs.fca.2.extract, !dbg !4137
  %spec.select.i.i = select i1 %140, i32 %digs.fca.1.extract, i32 %digs.fca.2.extract, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i, metadata !3951, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %119, metadata !3947, metadata !DIExpression()), !dbg !4139
  %slice.highmax.i20 = icmp ugt i32 %spec.select.i.i, %digs.fca.0.2.extract, !dbg !4140
  br i1 %slice.highmax.i20, label %slice.throw24.i, label %slice.next25.i, !dbg !4140

slice.throw24.i:                                  ; preds = %deref.next15.i
  tail call fastcc void @runtime.slicePanic(), !dbg !4140
  unreachable, !dbg !4140

slice.next25.i:                                   ; preds = %deref.next15.i
  %append.srcLen27.i = extractvalue { i8*, i32, i32 } %119, 1, !dbg !4141
  %append.srcCap28.i = extractvalue { i8*, i32, i32 } %119, 2, !dbg !4141
  %append.new31.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.pre-phi7.i, i8* %digs.fca.0.0.extract, i32 %append.srcLen27.i, i32 %append.srcCap28.i, i32 %spec.select.i.i), !dbg !4141
  %append.newPtr32.i = extractvalue { i8*, i32, i32 } %append.new31.i, 0, !dbg !4141
  %141 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 46, !dbg !4142
  store i8* %append.newPtr32.i, i8** %141, align 4, !dbg !4142
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new31.i, metadata !3947, metadata !DIExpression()), !dbg !4142
  %.fca.0.gep134.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca197.i, i32 0, i32 0, !dbg !4097
  br label %for.loop.i13, !dbg !4097

deref.next72.i:                                   ; preds = %for.loop4.i
  call void @llvm.dbg.value(metadata i8 48, metadata !3953, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i32 %133, metadata !3952, metadata !DIExpression()), !dbg !4143
  %142 = add i32 %133, %digs.fca.2.extract, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %142, metadata !3954, metadata !DIExpression()), !dbg !4145
  %143 = icmp sgt i32 %142, -1, !dbg !4146
  %144 = icmp slt i32 %142, %digs.fca.1.extract
  %or.cond.i = and i1 %143, %144, !dbg !4097
  br i1 %or.cond.i, label %gep.next78.i, label %if.done7.i, !dbg !4097

gep.next78.i:                                     ; preds = %deref.next72.i
  call void @llvm.dbg.value(metadata i32 %142, metadata !3954, metadata !DIExpression()), !dbg !4147
  %.not.i21 = icmp ult i32 %142, %digs.fca.0.1.extract, !dbg !4148
  br i1 %.not.i21, label %lookup.next.i23, label %lookup.throw.i22, !dbg !4148

lookup.throw.i22:                                 ; preds = %gep.next78.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !4148
  unreachable, !dbg !4148

lookup.next.i23:                                  ; preds = %gep.next78.i
  %145 = getelementptr inbounds i8, i8* %digs.fca.0.0.extract, i32 %142, !dbg !4148
  %146 = load i8, i8* %145, align 1, !dbg !4148
  call void @llvm.dbg.value(metadata i8 %146, metadata !3953, metadata !DIExpression()), !dbg !4149
  br label %if.done7.i, !dbg !4097

strconv.fmtF.exit.loopexit:                       ; preds = %for.loop4.i
  %147 = extractvalue { i8*, i32, i32 } %132, 0, !dbg !4120
  br label %strconv.fmtF.exit, !dbg !4150

strconv.fmtF.exit:                                ; preds = %strconv.fmtF.exit.loopexit, %if.done2.i16.strconv.fmtF.exit_crit_edge
  %.pre-phi36 = phi i8* [ %.pre, %if.done2.i16.strconv.fmtF.exit_crit_edge ], [ %147, %strconv.fmtF.exit.loopexit ], !dbg !4114
  %.pre-phi6.i18 = phi i8* [ %.pre-phi.i15, %if.done2.i16.strconv.fmtF.exit_crit_edge ], [ %147, %strconv.fmtF.exit.loopexit ], !dbg !4150
  %148 = phi { i8*, i32, i32 } [ %129, %if.done2.i16.strconv.fmtF.exit_crit_edge ], [ %132, %strconv.fmtF.exit.loopexit ], !dbg !4103
  %149 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 49, !dbg !4150
  store i8* %.pre-phi36, i8** %149, align 4, !dbg !4150
  %150 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 48, !dbg !4150
  store i8* %.pre-phi6.i18, i8** %150, align 4, !dbg !4150
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %148, metadata !3947, metadata !DIExpression()), !dbg !4150
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111), !dbg !4151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113), !dbg !4151
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4152
  ret { i8*, i32, i32 } %148, !dbg !4152
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.decimal).Round"(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %nd) unnamed_addr #2 section ".text.(*strconv.decimal).Round" !dbg !4153 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4155, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4158
  %0 = icmp slt i32 %nd, 0, !dbg !4159
  br i1 %0, label %if.then, label %cond.false, !dbg !4160

if.then:                                          ; preds = %gep.next, %if.then1, %if.else, %entry
  ret void, !dbg !4161

cond.false:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4155, metadata !DIExpression()), !dbg !4163
  %1 = icmp eq %strconv.decimal* %a, null, !dbg !4164
  br i1 %1, label %gep.throw, label %gep.next, !dbg !4164

if.done3.i:                                       ; preds = %gep.next14.i
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4165, metadata !DIExpression()), !dbg !4169
  %2 = icmp sgt i32 %nd, 0, !dbg !4171
  br i1 %2, label %strconv.shouldRoundUp.exit, label %if.else, !dbg !4172

gep.next6.i:                                      ; preds = %gep.next
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4155, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4168, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4165, metadata !DIExpression()), !dbg !4176
  %3 = icmp ugt i32 %nd, 799, !dbg !4177
  br i1 %3, label %lookup.throw.i, label %lookup.next.i, !dbg !4177

lookup.throw.i:                                   ; preds = %gep.next6.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !4177
  unreachable, !dbg !4177

lookup.next.i:                                    ; preds = %gep.next6.i
  %4 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %nd, !dbg !4177
  %5 = load i8, i8* %4, align 1, !dbg !4177
  %6 = icmp eq i8 %5, 53, !dbg !4178
  %7 = add nuw nsw i32 %nd, 1
  %8 = icmp eq i32 %7, %17
  %or.cond.i = and i1 %8, %6, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4165, metadata !DIExpression()), !dbg !4179
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4168, metadata !DIExpression()), !dbg !4180
  br i1 %or.cond.i, label %gep.next14.i, label %lookup.next28.i, !dbg !4172

gep.next14.i:                                     ; preds = %lookup.next.i
  %9 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 4, !dbg !4181
  %10 = load i1, i1* %9, align 1, !dbg !4181
  br i1 %10, label %if.then1, label %if.done3.i, !dbg !4172

lookup.next28.i:                                  ; preds = %lookup.next.i
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4165, metadata !DIExpression()), !dbg !4182
  %11 = icmp ugt i8 %5, 52, !dbg !4183
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4155, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4185
  br i1 %11, label %if.then1, label %if.else, !dbg !4160

strconv.shouldRoundUp.exit:                       ; preds = %if.done3.i
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4168, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4165, metadata !DIExpression()), !dbg !4187
  %12 = add nsw i32 %nd, -1, !dbg !4188
  %13 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %12, !dbg !4189
  %14 = load i8, i8* %13, align 1, !dbg !4189
  %15 = and i8 %14, 1, !dbg !4190
  %.not2 = icmp eq i8 %15, 0, !dbg !4191
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4155, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4156, metadata !DIExpression()), !dbg !4185
  br i1 %.not2, label %if.else, label %if.then1, !dbg !4160

if.then1:                                         ; preds = %strconv.shouldRoundUp.exit, %gep.next14.i, %lookup.next28.i
  tail call fastcc void @"(*strconv.decimal).RoundUp"(%strconv.decimal* nonnull %a, i32 %nd), !dbg !4192
  br label %if.then, !dbg !4160

if.else:                                          ; preds = %strconv.shouldRoundUp.exit, %if.done3.i, %lookup.next28.i
  tail call fastcc void @"(*strconv.decimal).RoundDown"(%strconv.decimal* nonnull %a, i32 %nd), !dbg !4193
  br label %if.then, !dbg !4160

gep.throw:                                        ; preds = %cond.false
  tail call fastcc void @runtime.nilPanic(), !dbg !4164
  unreachable, !dbg !4164

gep.next:                                         ; preds = %cond.false
  %16 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4164
  %17 = load i32, i32* %16, align 4, !dbg !4164
  %.not = icmp sgt i32 %17, %nd, !dbg !4194
  br i1 %.not, label %gep.next6.i, label %if.then, !dbg !4160
}

; Function Attrs: optsize
define internal fastcc { i32, i32 } @"(*strconv.extFloat).frexp10"(%strconv.extFloat* nocapture dereferenceable_or_null(16) %f) unnamed_addr #2 section ".text.(*strconv.extFloat).frexp10" !dbg !4195 {
entry:
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4200, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4200, metadata !DIExpression()), !dbg !4205
  %0 = icmp eq %strconv.extFloat* %f, null, !dbg !4206
  br i1 %0, label %gep.throw, label %gep.next, !dbg !4206

for.body:                                         ; preds = %for.body.backedge, %gep.next
  %1 = phi i32 [ %11, %gep.next ], [ %3, %for.body.backedge ], !dbg !4207
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4200, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  %2 = icmp ugt i32 %1, 86, !dbg !4210
  br i1 %2, label %lookup.throw, label %lookup.next, !dbg !4210

for.body.backedge:                                ; preds = %lookup.next, %switch.next
  %.sink = phi i32 [ -1, %switch.next ], [ 1, %lookup.next ]
  %3 = add nsw i32 %1, %.sink, !dbg !4211
  br label %for.body, !dbg !4208

switch.next:                                      ; preds = %lookup.next
  call void @llvm.dbg.value(metadata i32 %15, metadata !4203, metadata !DIExpression()), !dbg !4212
  %4 = icmp sgt i32 %15, -32, !dbg !4213
  br i1 %4, label %for.body.backedge, label %lookup.next10, !dbg !4211

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4206
  unreachable, !dbg !4206

gep.next:                                         ; preds = %entry
  %5 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %f, i32 0, i32 1, !dbg !4206
  %6 = load i32, i32* %5, align 4, !dbg !4206
  %7 = sub i32 -46, %6, !dbg !4214
  %8 = mul i32 %7, 28, !dbg !4215
  %9 = sdiv i32 %8, 93, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %9, metadata !4201, metadata !DIExpression()), !dbg !4217
  %10 = add nsw i32 %9, 348, !dbg !4218
  %11 = sdiv i32 %10, 8, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %11, metadata !4202, metadata !DIExpression()), !dbg !4207
  %12 = add i32 %6, 64, !dbg !4211
  br label %for.body, !dbg !4211

lookup.throw:                                     ; preds = %for.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !4210
  unreachable, !dbg !4210

lookup.next:                                      ; preds = %for.body
  %13 = getelementptr inbounds [87 x %strconv.extFloat], [87 x %strconv.extFloat]* @strconv.powersOfTen, i32 0, i32 %1, i32 1, !dbg !4220
  %14 = load i32, i32* %13, align 8, !dbg !4220
  %15 = add i32 %12, %14, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %15, metadata !4203, metadata !DIExpression()), !dbg !4222
  %16 = icmp slt i32 %15, -60, !dbg !4223
  br i1 %16, label %for.body.backedge, label %switch.next, !dbg !4211

lookup.next10:                                    ; preds = %switch.next
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4209
  %17 = getelementptr inbounds [87 x %strconv.extFloat], [87 x %strconv.extFloat]* @strconv.powersOfTen, i32 0, i32 %1, !dbg !4210
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4200, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4225
  %18 = load %strconv.extFloat, %strconv.extFloat* %17, align 16, !dbg !4226
  %19 = extractvalue %strconv.extFloat %18, 0, !dbg !4227
  %20 = extractvalue %strconv.extFloat %18, 1, !dbg !4227
  %21 = extractvalue %strconv.extFloat %18, 2, !dbg !4227
  tail call fastcc void @"(*strconv.extFloat).Multiply"(%strconv.extFloat* nonnull %f, i64 %19, i32 %20, i1 %21), !dbg !4227
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4228
  %22 = shl nuw nsw i32 %1, 3, !dbg !4229
  %23 = add nsw i32 %22, -348, !dbg !4230
  %24 = sub nsw i32 0, %23, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4232
  %25 = insertvalue { i32, i32 } zeroinitializer, i32 %24, 0, !dbg !4233
  %26 = insertvalue { i32, i32 } %25, i32 %1, 1, !dbg !4233
  ret { i32, i32 } %26, !dbg !4233
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.extFloat).Multiply"(%strconv.extFloat* nocapture dereferenceable_or_null(16) %f, i64 %g.mant, i32 %g.exp, i1 %g.neg) unnamed_addr #2 section ".text.(*strconv.extFloat).Multiply" !dbg !4234 {
entry:
  %g = alloca %strconv.extFloat, align 8, !dbg !4244
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4238, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i64 %g.mant, metadata !4239, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %g.exp, metadata !4239, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4244
  call void @llvm.dbg.value(metadata i1 %g.neg, metadata !4239, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 8)), !dbg !4244
  %.fca.0.gep = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %g, i32 0, i32 0, !dbg !4244
  store i64 0, i64* %.fca.0.gep, align 8, !dbg !4244
  %.fca.1.gep = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %g, i32 0, i32 1, !dbg !4244
  store i32 0, i32* %.fca.1.gep, align 8, !dbg !4244
  %.fca.2.gep = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %g, i32 0, i32 2, !dbg !4244
  store i1 false, i1* %.fca.2.gep, align 4, !dbg !4244
  %0 = bitcast %strconv.extFloat* %g to i8*, !dbg !4244
  store i64 %g.mant, i64* %.fca.0.gep, align 8, !dbg !4245
  store i32 %g.exp, i32* %.fca.1.gep, align 8, !dbg !4245
  store i1 %g.neg, i1* %.fca.2.gep, align 4, !dbg !4245
  %1 = icmp eq %strconv.extFloat* %f, null, !dbg !4246
  br i1 %1, label %gep.throw, label %gep.next, !dbg !4246

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4246
  unreachable, !dbg !4246

gep.next:                                         ; preds = %entry
  %2 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %f, i32 0, i32 0, !dbg !4246
  %3 = load i64, i64* %2, align 8, !dbg !4246
  call void @llvm.dbg.value(metadata i64 %3, metadata !4247, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.value(metadata i64 %g.mant, metadata !4252, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.value(metadata i64 %3, metadata !4247, metadata !DIExpression()), !dbg !4265
  %4 = and i64 %3, 4294967295, !dbg !4266
  call void @llvm.dbg.value(metadata i64 %4, metadata !4253, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i64 %3, metadata !4247, metadata !DIExpression()), !dbg !4268
  %5 = lshr i64 %3, 32, !dbg !4269
  call void @llvm.dbg.value(metadata i64 %5, metadata !4254, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i64 %g.mant, metadata !4252, metadata !DIExpression()), !dbg !4271
  %6 = and i64 %g.mant, 4294967295, !dbg !4272
  call void @llvm.dbg.value(metadata i64 %6, metadata !4255, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata i64 %g.mant, metadata !4252, metadata !DIExpression()), !dbg !4274
  %7 = lshr i64 %g.mant, 32, !dbg !4275
  call void @llvm.dbg.value(metadata i64 %7, metadata !4256, metadata !DIExpression()), !dbg !4276
  call void @llvm.dbg.value(metadata i64 %4, metadata !4253, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i64 %6, metadata !4255, metadata !DIExpression()), !dbg !4278
  %8 = mul nuw i64 %4, %6, !dbg !4279
  call void @llvm.dbg.value(metadata i64 %8, metadata !4257, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i64 %5, metadata !4254, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i64 %6, metadata !4255, metadata !DIExpression()), !dbg !4282
  %9 = mul nuw i64 %5, %6, !dbg !4283
  call void @llvm.dbg.value(metadata i64 %8, metadata !4257, metadata !DIExpression()), !dbg !4284
  %10 = lshr i64 %8, 32, !dbg !4285
  %11 = add nuw i64 %10, %9, !dbg !4286
  call void @llvm.dbg.value(metadata i64 %11, metadata !4258, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i64 %11, metadata !4258, metadata !DIExpression()), !dbg !4288
  %12 = and i64 %11, 4294967295, !dbg !4289
  call void @llvm.dbg.value(metadata i64 %12, metadata !4259, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i64 %11, metadata !4258, metadata !DIExpression()), !dbg !4291
  %13 = lshr i64 %11, 32, !dbg !4292
  call void @llvm.dbg.value(metadata i64 %13, metadata !4260, metadata !DIExpression()), !dbg !4293
  call void @llvm.dbg.value(metadata i64 %4, metadata !4253, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i64 %7, metadata !4256, metadata !DIExpression()), !dbg !4295
  %14 = mul nuw i64 %4, %7, !dbg !4296
  %15 = add nuw i64 %12, %14, !dbg !4297
  call void @llvm.dbg.value(metadata i64 %15, metadata !4259, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i64 %5, metadata !4254, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i64 %7, metadata !4256, metadata !DIExpression()), !dbg !4299
  %16 = mul nuw i64 %5, %7, !dbg !4300
  call void @llvm.dbg.value(metadata i64 %13, metadata !4260, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.value(metadata i64 %15, metadata !4259, metadata !DIExpression()), !dbg !4302
  %17 = lshr i64 %15, 32, !dbg !4303
  call void @llvm.dbg.value(metadata i64 undef, metadata !4261, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.value(metadata i64 %3, metadata !4247, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i64 %g.mant, metadata !4252, metadata !DIExpression()), !dbg !4306
  %18 = mul i64 %3, %g.mant, !dbg !4307
  call void @llvm.dbg.value(metadata i64 %18, metadata !4262, metadata !DIExpression()), !dbg !4308
  call void @llvm.dbg.value(metadata i64 undef, metadata !4240, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !4238, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i64 %18, metadata !4241, metadata !DIExpression()), !dbg !4311
  %19 = lshr i64 %18, 63, !dbg !4312
  %20 = add nuw i64 %19, %16, !dbg !4313
  %21 = add nuw i64 %20, %13, !dbg !4314
  %22 = add nuw i64 %21, %17, !dbg !4315
  store i64 %22, i64* %2, align 8, !dbg !4316
  call void @llvm.dbg.value(metadata i64 %22, metadata !4242, metadata !DIExpression()), !dbg !4316
  %23 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %f, i32 0, i32 1, !dbg !4317
  %24 = load i32, i32* %23, align 4, !dbg !4318
  %25 = add i32 %g.exp, 64, !dbg !4319
  %26 = add i32 %25, %24, !dbg !4320
  store i32 %26, i32* %23, align 4, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %26, metadata !4243, metadata !DIExpression()), !dbg !4317
  ret void, !dbg !4245
}

; Function Attrs: optsize
define internal fastcc void @strconv.leftShift(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %k) unnamed_addr #2 section ".text.strconv.leftShift" !dbg !4321 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %k, metadata !4326, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata { %strconv.leftCheat*, i32, i32 } { %strconv.leftCheat* bitcast ({ [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 4) to %strconv.leftCheat*), i32 61, i32 61 }, metadata !4327, metadata !DIExpression()), !dbg !4340
  %0 = getelementptr inbounds %strconv.leftCheat, %strconv.leftCheat* bitcast ({ [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 4) to %strconv.leftCheat*), i32 %k, i32 0, !dbg !4341
  %1 = load i32, i32* %0, align 4, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %1, metadata !4328, metadata !DIExpression()), !dbg !4342
  %2 = icmp eq %strconv.decimal* %a, null, !dbg !4343
  br i1 %2, label %gep.throw, label %gep.next, !dbg !4343

for.loop:                                         ; preds = %for.loop.backedge, %strconv.prefixIsLessThan.exit
  %.in = phi i32 [ %25, %strconv.prefixIsLessThan.exit ], [ %5, %for.loop.backedge ]
  %3 = phi i32 [ %26, %strconv.prefixIsLessThan.exit ], [ %37, %for.loop.backedge ], !dbg !4344
  %4 = phi i32 [ 0, %strconv.prefixIsLessThan.exit ], [ %35, %for.loop.backedge ], !dbg !4345
  %5 = add i32 %.in, -1, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %5, metadata !4329, metadata !DIExpression()), !dbg !4347
  %6 = icmp sgt i32 %5, -1, !dbg !4348
  br i1 %6, label %gep.next35, label %for.loop4, !dbg !4349

if.else:                                          ; preds = %lookup.next37
  call void @llvm.dbg.value(metadata i32 %36, metadata !4333, metadata !DIExpression()), !dbg !4350
  %.not5 = icmp eq i32 %36, 0, !dbg !4351
  br i1 %.not5, label %for.loop.backedge, label %gep.next45, !dbg !4349

for.loop.backedge:                                ; preds = %if.else, %gep.next45, %lookup.next43
  br label %for.loop, !dbg !4346

for.loop4:                                        ; preds = %for.loop, %for.loop4.backedge
  %7 = phi i32 [ %11, %for.loop4.backedge ], [ %3, %for.loop ], !dbg !4344
  %8 = phi i32 [ %9, %for.loop4.backedge ], [ %4, %for.loop ], !dbg !4345
  call void @llvm.dbg.value(metadata i32 %8, metadata !4331, metadata !DIExpression()), !dbg !4352
  %.not = icmp eq i32 %8, 0, !dbg !4353
  br i1 %.not, label %deref.next59, label %for.body5, !dbg !4349

for.body5:                                        ; preds = %for.loop4
  call void @llvm.dbg.value(metadata i32 %8, metadata !4331, metadata !DIExpression()), !dbg !4354
  %9 = udiv i32 %8, 10, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %9, metadata !4335, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %8, metadata !4331, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 %9, metadata !4335, metadata !DIExpression()), !dbg !4358
  %.neg = mul i32 %9, -10, !dbg !4359
  %10 = add i32 %.neg, %8, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %10, metadata !4336, metadata !DIExpression()), !dbg !4361
  %11 = add i32 %7, -1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %11, metadata !4330, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata i32 %11, metadata !4330, metadata !DIExpression()), !dbg !4363
  %12 = icmp slt i32 %11, 800, !dbg !4364
  br i1 %12, label %gep.next49, label %if.else8, !dbg !4349

if.else8:                                         ; preds = %for.body5
  call void @llvm.dbg.value(metadata i32 %10, metadata !4336, metadata !DIExpression()), !dbg !4365
  %.not3 = icmp eq i32 %10, 0, !dbg !4366
  br i1 %.not3, label %for.loop4.backedge, label %gep.next53, !dbg !4349

for.loop4.backedge:                               ; preds = %if.else8, %gep.next53, %lookup.next51
  br label %for.loop4, !dbg !4352

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4343
  unreachable, !dbg !4343

gep.next:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4367
  %13 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4368
  %14 = load i32, i32* %13, align 4, !dbg !4368
  %slice.highmax = icmp ugt i32 %14, 800, !dbg !4369
  br i1 %slice.highmax, label %slice.throw16, label %slice.next17, !dbg !4369

slice.throw16:                                    ; preds = %gep.next
  tail call fastcc void @runtime.slicePanic(), !dbg !4369
  unreachable, !dbg !4369

slice.next17:                                     ; preds = %gep.next
  call void @llvm.dbg.value(metadata { %strconv.leftCheat*, i32, i32 } { %strconv.leftCheat* bitcast ({ [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 4) to %strconv.leftCheat*), i32 61, i32 61 }, metadata !4327, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 %k, metadata !4326, metadata !DIExpression()), !dbg !4371
  %.elt = getelementptr inbounds %strconv.leftCheat, %strconv.leftCheat* bitcast ({ [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 4) to %strconv.leftCheat*), i32 %k, i32 1, i32 0, !dbg !4372
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !4372
  %.elt1 = getelementptr inbounds %strconv.leftCheat, %strconv.leftCheat* bitcast ({ [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 4) to %strconv.leftCheat*), i32 %k, i32 1, i32 1, !dbg !4372
  %.unpack2 = load i32, i32* %.elt1, align 4, !dbg !4372
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4373, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %14, metadata !4373, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4380
  call void @llvm.dbg.value(metadata i32 undef, metadata !4373, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4380
  call void @llvm.dbg.value(metadata i8* %.unpack, metadata !4378, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4380
  call void @llvm.dbg.value(metadata i32 %.unpack2, metadata !4378, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4380
  call void @llvm.dbg.value(metadata i32 0, metadata !4379, metadata !DIExpression()), !dbg !4382
  %15 = icmp sgt i32 %.unpack2, 0, !dbg !4383
  %smax.i = select i1 %15, i32 %.unpack2, i32 0, !dbg !4383
  br label %for.loop.i, !dbg !4383

for.loop.i:                                       ; preds = %lookup.next6.i, %slice.next17
  %16 = phi i32 [ 0, %slice.next17 ], [ %21, %lookup.next6.i ], !dbg !4382
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !4378, metadata !DIExpression()), !dbg !4385
  %exitcond.not.i = icmp eq i32 %16, %smax.i, !dbg !4386
  br i1 %exitcond.not.i, label %strconv.prefixIsLessThan.exit, label %for.body.i, !dbg !4383

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4373, metadata !DIExpression()), !dbg !4388
  %exitcond9.not.i = icmp eq i32 %16, %14, !dbg !4389
  br i1 %exitcond9.not.i, label %strconv.prefixIsLessThan.exit, label %lookup.next.i, !dbg !4383

lookup.next.i:                                    ; preds = %for.body.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4373, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4391
  %17 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %16, !dbg !4392
  %18 = load i8, i8* %17, align 1, !dbg !4392
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !4378, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4394
  %exitcond11.not.i = icmp eq i32 %16, %.unpack2, !dbg !4395
  br i1 %exitcond11.not.i, label %lookup.throw5.i, label %lookup.next6.i, !dbg !4395

lookup.throw5.i:                                  ; preds = %lookup.next.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !4395
  unreachable, !dbg !4395

lookup.next6.i:                                   ; preds = %lookup.next.i
  %19 = getelementptr inbounds i8, i8* %.unpack, i32 %16, !dbg !4395
  %20 = load i8, i8* %19, align 1, !dbg !4395
  %.not3.i = icmp eq i8 %18, %20, !dbg !4396
  %21 = add nuw i32 %16, 1, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %21, metadata !4379, metadata !DIExpression()), !dbg !4397
  br i1 %.not3.i, label %for.loop.i, label %lookup.next13.i, !dbg !4383

lookup.next13.i:                                  ; preds = %lookup.next6.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4373, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !4378, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %16, metadata !4379, metadata !DIExpression()), !dbg !4400
  %22 = icmp ult i8 %18, %20, !dbg !4401
  %phi.cast = sext i1 %22 to i32, !dbg !4402
  br label %strconv.prefixIsLessThan.exit, !dbg !4402

strconv.prefixIsLessThan.exit:                    ; preds = %for.loop.i, %for.body.i, %lookup.next13.i
  %23 = phi i32 [ %phi.cast, %lookup.next13.i ], [ 0, %for.loop.i ], [ -1, %for.body.i ]
  %24 = add i32 %23, %1, !dbg !4349
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4403
  %25 = load i32, i32* %13, align 4, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %25, metadata !4329, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i32 %24, metadata !4328, metadata !DIExpression()), !dbg !4405
  %26 = add i32 %25, %24, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %26, metadata !4330, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4331, metadata !DIExpression()), !dbg !4345
  call void @llvm.dbg.value(metadata i32 %25, metadata !4329, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4407
  %27 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 4, !dbg !4349
  br label %for.loop, !dbg !4349

gep.next35:                                       ; preds = %for.loop
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %5, metadata !4329, metadata !DIExpression()), !dbg !4409
  %28 = icmp ugt i32 %5, 799, !dbg !4410
  br i1 %28, label %lookup.throw36, label %lookup.next37, !dbg !4410

lookup.throw36:                                   ; preds = %gep.next35
  tail call fastcc void @runtime.lookupPanic(), !dbg !4410
  unreachable, !dbg !4410

lookup.next37:                                    ; preds = %gep.next35
  %29 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %5, !dbg !4410
  %30 = load i8, i8* %29, align 1, !dbg !4410
  %31 = zext i8 %30 to i32, !dbg !4411
  %32 = add nsw i32 %31, -48, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %k, metadata !4326, metadata !DIExpression()), !dbg !4413
  %33 = shl i32 %32, %k, !dbg !4414
  %34 = add i32 %33, %4, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %34, metadata !4331, metadata !DIExpression()), !dbg !4416
  %35 = udiv i32 %34, 10, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %35, metadata !4332, metadata !DIExpression()), !dbg !4418
  %.neg4 = mul i32 %35, -10, !dbg !4419
  %36 = add i32 %.neg4, %34, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %36, metadata !4333, metadata !DIExpression()), !dbg !4421
  %37 = add i32 %3, -1, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %37, metadata !4330, metadata !DIExpression()), !dbg !4423
  %38 = icmp slt i32 %37, 800, !dbg !4424
  br i1 %38, label %gep.next41, label %if.else, !dbg !4349

gep.next41:                                       ; preds = %lookup.next37
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.value(metadata i32 %37, metadata !4330, metadata !DIExpression()), !dbg !4426
  %39 = icmp ugt i32 %37, 799, !dbg !4427
  br i1 %39, label %lookup.throw42, label %lookup.next43, !dbg !4427

lookup.throw42:                                   ; preds = %gep.next41
  tail call fastcc void @runtime.lookupPanic(), !dbg !4427
  unreachable, !dbg !4427

lookup.next43:                                    ; preds = %gep.next41
  %40 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %37, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %36, metadata !4333, metadata !DIExpression()), !dbg !4428
  %41 = trunc i32 %36 to i8, !dbg !4429
  %42 = add i8 %41, 48, !dbg !4429
  store i8 %42, i8* %40, align 1, !dbg !4427
  br label %for.loop.backedge, !dbg !4349

gep.next45:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4430
  store i1 true, i1* %27, align 1, !dbg !4431
  call void @llvm.dbg.value(metadata i1 true, metadata !4334, metadata !DIExpression()), !dbg !4431
  br label %for.loop.backedge, !dbg !4349

gep.next49:                                       ; preds = %for.body5
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4432
  call void @llvm.dbg.value(metadata i32 %11, metadata !4330, metadata !DIExpression()), !dbg !4433
  %43 = icmp ugt i32 %11, 799, !dbg !4434
  br i1 %43, label %lookup.throw50, label %lookup.next51, !dbg !4434

lookup.throw50:                                   ; preds = %gep.next49
  tail call fastcc void @runtime.lookupPanic(), !dbg !4434
  unreachable, !dbg !4434

lookup.next51:                                    ; preds = %gep.next49
  %44 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %11, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %10, metadata !4336, metadata !DIExpression()), !dbg !4435
  %45 = trunc i32 %10 to i8, !dbg !4436
  %46 = add i8 %45, 48, !dbg !4436
  store i8 %46, i8* %44, align 1, !dbg !4434
  br label %for.loop4.backedge, !dbg !4349

gep.next53:                                       ; preds = %if.else8
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4437
  store i1 true, i1* %27, align 1, !dbg !4438
  call void @llvm.dbg.value(metadata i1 true, metadata !4334, metadata !DIExpression()), !dbg !4438
  br label %for.loop4.backedge, !dbg !4349

deref.next59:                                     ; preds = %for.loop4
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4325, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %24, metadata !4328, metadata !DIExpression()), !dbg !4440
  %47 = load i32, i32* %13, align 4, !dbg !4441
  %48 = add i32 %47, %24, !dbg !4439
  call void @llvm.dbg.value(metadata i32 %48, metadata !4337, metadata !DIExpression()), !dbg !4441
  %.inv = icmp slt i32 %48, 800, !dbg !4349
  %spec.store.select = select i1 %.inv, i32 %48, i32 800, !dbg !4349
  store i32 %spec.store.select, i32* %13, align 4, !dbg !4349
  %49 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 2, !dbg !4442
  %50 = load i32, i32* %49, align 4, !dbg !4442
  %51 = add i32 %50, %24, !dbg !4443
  store i32 %51, i32* %49, align 4, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %51, metadata !4338, metadata !DIExpression()), !dbg !4442
  tail call fastcc void @strconv.trim(%strconv.decimal* nonnull %a), !dbg !4444
  ret void, !dbg !4349
}

; Function Attrs: optsize
define internal fastcc void @strconv.trim(%strconv.decimal* nocapture dereferenceable_or_null(812) %a) unnamed_addr #2 section ".text.strconv.trim" !dbg !4445 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4449, metadata !DIExpression()), !dbg !4452
  %0 = icmp eq %strconv.decimal* %a, null, !dbg !4453
  %1 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4453
  br i1 %0, label %gep.throw.split, label %for.loop.preheader, !dbg !4453

for.loop.preheader:                               ; preds = %entry
  %.pre = load i32, i32* %1, align 4, !dbg !4454
  br label %for.loop, !dbg !4453

for.loop:                                         ; preds = %for.loop.preheader, %deref.next12
  %2 = phi i32 [ %.pre, %for.loop.preheader ], [ %4, %deref.next12 ], !dbg !4454
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4449, metadata !DIExpression()), !dbg !4455
  %3 = icmp sgt i32 %2, 0, !dbg !4456
  br i1 %3, label %gep.next2, label %deref.next16, !dbg !4453

if.done:                                          ; preds = %lookup.next, %gep.next18, %deref.next16
  ret void, !dbg !4453

gep.throw.split:                                  ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4454
  unreachable, !dbg !4454

gep.next2:                                        ; preds = %for.loop
  %4 = add nsw i32 %2, -1, !dbg !4457
  %5 = icmp ugt i32 %4, 799, !dbg !4458
  br i1 %5, label %lookup.throw, label %lookup.next, !dbg !4458

lookup.throw:                                     ; preds = %gep.next2
  tail call fastcc void @runtime.lookupPanic(), !dbg !4458
  unreachable, !dbg !4458

lookup.next:                                      ; preds = %gep.next2
  %6 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %4, !dbg !4458
  %7 = load i8, i8* %6, align 1, !dbg !4458
  %8 = icmp eq i8 %7, 48, !dbg !4459
  br i1 %8, label %deref.next12, label %if.done, !dbg !4453

deref.next12:                                     ; preds = %lookup.next
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4449, metadata !DIExpression()), !dbg !4460
  store i32 %4, i32* %1, align 4, !dbg !4461
  call void @llvm.dbg.value(metadata i32 %4, metadata !4450, metadata !DIExpression()), !dbg !4461
  br label %for.loop, !dbg !4453

deref.next16:                                     ; preds = %for.loop
  %9 = icmp eq i32 %2, 0, !dbg !4462
  br i1 %9, label %gep.next18, label %if.done, !dbg !4453

gep.next18:                                       ; preds = %deref.next16
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4449, metadata !DIExpression()), !dbg !4463
  %10 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 2, !dbg !4464
  store i32 0, i32* %10, align 4, !dbg !4464
  call void @llvm.dbg.value(metadata i32 0, metadata !4451, metadata !DIExpression()), !dbg !4464
  br label %if.done, !dbg !4453
}

; Function Attrs: optsize
define internal fastcc void @strconv.rightShift(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %k) unnamed_addr #2 section ".text.strconv.rightShift" !dbg !4465 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.value(metadata i32 0, metadata !4469, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata i32 0, metadata !4470, metadata !DIExpression()), !dbg !4482
  call void @llvm.dbg.value(metadata i32 0, metadata !4471, metadata !DIExpression()), !dbg !4483
  %0 = icmp eq %strconv.decimal* %a, null, !dbg !4484
  %1 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4484
  br label %for.loop, !dbg !4484

for.loop:                                         ; preds = %lookup.next, %entry
  %2 = phi i32 [ 0, %entry ], [ %35, %lookup.next ], !dbg !4481
  %3 = phi i32 [ 0, %entry ], [ %34, %lookup.next ], !dbg !4483
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4486
  %4 = lshr i32 %3, %k, !dbg !4487
  %5 = icmp eq i32 %4, 0, !dbg !4488
  br i1 %5, label %for.body, label %for.done, !dbg !4484

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %2, metadata !4469, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4490
  br i1 %0, label %gep.throw, label %gep.next, !dbg !4491

if.then:                                          ; preds = %gep.next
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4492
  %6 = icmp eq i32 %3, 0, !dbg !4493
  br i1 %6, label %store.next, label %for.loop2, !dbg !4484

for.loop2:                                        ; preds = %if.then, %for.body3
  %7 = phi i32 [ %12, %for.body3 ], [ %2, %if.then ], !dbg !4481
  %8 = phi i32 [ %11, %for.body3 ], [ %3, %if.then ], !dbg !4483
  call void @llvm.dbg.value(metadata i32 %8, metadata !4471, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4495
  %9 = lshr i32 %8, %k, !dbg !4496
  %10 = icmp eq i32 %9, 0, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %8, metadata !4471, metadata !DIExpression()), !dbg !4498
  call void @llvm.dbg.value(metadata i32 %8, metadata !4471, metadata !DIExpression()), !dbg !4494
  br i1 %10, label %for.body3, label %for.done, !dbg !4484

for.body3:                                        ; preds = %for.loop2
  %11 = mul i32 %8, 10, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %11, metadata !4471, metadata !DIExpression()), !dbg !4500
  %12 = add i32 %7, 1, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %12, metadata !4469, metadata !DIExpression()), !dbg !4501
  br label %for.loop2, !dbg !4484

for.done:                                         ; preds = %for.loop, %for.loop2
  %13 = phi i32 [ %7, %for.loop2 ], [ %2, %for.loop ], !dbg !4481
  %14 = phi i32 [ %8, %for.loop2 ], [ %3, %for.loop ], !dbg !4483
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4502
  br i1 %0, label %gep.throw20, label %gep.next21, !dbg !4503

for.loop4:                                        ; preds = %lookup.next45, %gep.next21
  %15 = phi i32 [ %13, %gep.next21 ], [ %53, %lookup.next45 ], !dbg !4481
  %16 = phi i32 [ 0, %gep.next21 ], [ %49, %lookup.next45 ], !dbg !4482
  %17 = phi i32 [ %14, %gep.next21 ], [ %52, %lookup.next45 ], !dbg !4483
  call void @llvm.dbg.value(metadata i32 %15, metadata !4469, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4505
  %18 = load i32, i32* %1, align 4, !dbg !4506
  %19 = icmp slt i32 %15, %18, !dbg !4507
  br i1 %19, label %gep.next33, label %for.loop6.preheader, !dbg !4484

for.loop6.preheader:                              ; preds = %for.loop4
  %20 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 4, !dbg !4484
  br label %for.loop6, !dbg !4484

for.loop6:                                        ; preds = %for.loop6.preheader, %if.done9
  %21 = phi i32 [ %26, %if.done9 ], [ %16, %for.loop6.preheader ], !dbg !4482
  %22 = phi i32 [ %27, %if.done9 ], [ %17, %for.loop6.preheader ], !dbg !4483
  call void @llvm.dbg.value(metadata i32 %22, metadata !4471, metadata !DIExpression()), !dbg !4508
  %.not = icmp eq i32 %22, 0, !dbg !4509
  br i1 %.not, label %store.next61, label %for.body7, !dbg !4484

for.body7:                                        ; preds = %for.loop6
  call void @llvm.dbg.value(metadata i32 %22, metadata !4471, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4511
  %23 = lshr i32 %22, %k, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %23, metadata !4478, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i32 %39, metadata !4475, metadata !DIExpression()), !dbg !4514
  %24 = and i32 %22, %39, !dbg !4515
  call void @llvm.dbg.value(metadata i32 %24, metadata !4471, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i32 %21, metadata !4470, metadata !DIExpression()), !dbg !4516
  %25 = icmp slt i32 %21, 800, !dbg !4517
  br i1 %25, label %gep.next49, label %if.else, !dbg !4484

if.done9:                                         ; preds = %if.else, %gep.next55, %lookup.next53
  %26 = phi i32 [ %58, %lookup.next53 ], [ %21, %if.else ], [ %21, %gep.next55 ], !dbg !4482
  call void @llvm.dbg.value(metadata i32 %24, metadata !4471, metadata !DIExpression()), !dbg !4518
  %27 = mul i32 %24, 10, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %27, metadata !4471, metadata !DIExpression()), !dbg !4520
  br label %for.loop6, !dbg !4484

if.else:                                          ; preds = %for.body7
  call void @llvm.dbg.value(metadata i32 %23, metadata !4478, metadata !DIExpression()), !dbg !4521
  %.not1 = icmp eq i32 %23, 0, !dbg !4522
  br i1 %.not1, label %if.done9, label %gep.next55, !dbg !4484

gep.throw:                                        ; preds = %for.body
  tail call fastcc void @runtime.nilPanic(), !dbg !4491
  unreachable, !dbg !4491

gep.next:                                         ; preds = %for.body
  %28 = load i32, i32* %1, align 4, !dbg !4491
  %.not2 = icmp slt i32 %2, %28, !dbg !4523
  br i1 %.not2, label %gep.next17, label %if.then, !dbg !4484

store.next:                                       ; preds = %if.then
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4524
  store i32 0, i32* %1, align 4, !dbg !4525
  call void @llvm.dbg.value(metadata i32 0, metadata !4472, metadata !DIExpression()), !dbg !4525
  ret void, !dbg !4526

gep.next17:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.value(metadata i32 %2, metadata !4469, metadata !DIExpression()), !dbg !4528
  %exitcond46 = icmp eq i32 %2, 800, !dbg !4529
  br i1 %exitcond46, label %lookup.throw, label %lookup.next, !dbg !4529

lookup.throw:                                     ; preds = %gep.next17
  tail call fastcc void @runtime.lookupPanic(), !dbg !4529
  unreachable, !dbg !4529

lookup.next:                                      ; preds = %gep.next17
  %29 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %2, !dbg !4529
  %30 = load i8, i8* %29, align 1, !dbg !4529
  %31 = zext i8 %30 to i32, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %31, metadata !4473, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 %3, metadata !4471, metadata !DIExpression()), !dbg !4532
  %32 = mul i32 %3, 10, !dbg !4533
  %33 = add i32 %32, -48, !dbg !4534
  %34 = add i32 %33, %31, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %34, metadata !4471, metadata !DIExpression()), !dbg !4536
  %35 = add nuw nsw i32 %2, 1, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %35, metadata !4469, metadata !DIExpression()), !dbg !4537
  br label %for.loop, !dbg !4484

gep.throw20:                                      ; preds = %for.done
  tail call fastcc void @runtime.nilPanic(), !dbg !4503
  unreachable, !dbg !4503

gep.next21:                                       ; preds = %for.done
  %36 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 2, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %13, metadata !4469, metadata !DIExpression()), !dbg !4538
  %37 = load i32, i32* %36, align 4, !dbg !4503
  %.neg3 = sub i32 1, %13, !dbg !4539
  %38 = add i32 %.neg3, %37, !dbg !4502
  store i32 %38, i32* %36, align 4, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %38, metadata !4474, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4540
  %notmask = shl nsw i32 -1, %k, !dbg !4541
  %39 = xor i32 %notmask, -1, !dbg !4541
  call void @llvm.dbg.value(metadata i32 %39, metadata !4475, metadata !DIExpression()), !dbg !4542
  %40 = call i32 @llvm.usub.sat.i32(i32 800, i32 %13), !dbg !4484
  br label %for.loop4, !dbg !4484

gep.next33:                                       ; preds = %for.loop4
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %15, metadata !4469, metadata !DIExpression()), !dbg !4544
  %exitcond = icmp eq i32 %16, %40, !dbg !4545
  br i1 %exitcond, label %lookup.throw36, label %lookup.next37, !dbg !4545

lookup.throw36:                                   ; preds = %gep.next33
  tail call fastcc void @runtime.lookupPanic(), !dbg !4545
  unreachable, !dbg !4545

lookup.next37:                                    ; preds = %gep.next33
  call void @llvm.dbg.value(metadata i8 undef, metadata !4476, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %k, metadata !4468, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i32 undef, metadata !4477, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.value(metadata i32 %39, metadata !4475, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 %16, metadata !4470, metadata !DIExpression()), !dbg !4552
  %exitcond45 = icmp eq i32 %16, 800, !dbg !4553
  br i1 %exitcond45, label %lookup.throw44, label %lookup.next45, !dbg !4553

lookup.throw44:                                   ; preds = %lookup.next37
  tail call fastcc void @runtime.lookupPanic(), !dbg !4553
  unreachable, !dbg !4553

lookup.next45:                                    ; preds = %lookup.next37
  %41 = and i32 %17, %39, !dbg !4550
  call void @llvm.dbg.value(metadata i32 %41, metadata !4471, metadata !DIExpression()), !dbg !4550
  %42 = lshr i32 %17, %k, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %42, metadata !4477, metadata !DIExpression()), !dbg !4548
  %43 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %15, !dbg !4545
  %44 = load i8, i8* %43, align 1, !dbg !4545
  call void @llvm.dbg.value(metadata i8 %44, metadata !4476, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4546
  %45 = zext i8 %44 to i32, !dbg !4555
  call void @llvm.dbg.value(metadata i32 %45, metadata !4476, metadata !DIExpression()), !dbg !4546
  %46 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %16, !dbg !4553
  call void @llvm.dbg.value(metadata i32 undef, metadata !4477, metadata !DIExpression()), !dbg !4556
  %47 = trunc i32 %42 to i8, !dbg !4557
  %48 = add i8 %47, 48, !dbg !4557
  store i8 %48, i8* %46, align 1, !dbg !4553
  %49 = add nuw nsw i32 %16, 1, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %49, metadata !4470, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4559
  %50 = mul i32 %41, 10, !dbg !4560
  call void @llvm.dbg.value(metadata i8 undef, metadata !4476, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4561
  %51 = add i32 %50, -48, !dbg !4562
  %52 = add i32 %51, %45, !dbg !4563
  call void @llvm.dbg.value(metadata i32 %52, metadata !4471, metadata !DIExpression()), !dbg !4564
  %53 = add nuw nsw i32 %15, 1, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %53, metadata !4469, metadata !DIExpression()), !dbg !4565
  br label %for.loop4, !dbg !4484

gep.next49:                                       ; preds = %for.body7
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %21, metadata !4470, metadata !DIExpression()), !dbg !4567
  %54 = icmp ugt i32 %21, 799, !dbg !4568
  br i1 %54, label %lookup.throw52, label %lookup.next53, !dbg !4568

lookup.throw52:                                   ; preds = %gep.next49
  tail call fastcc void @runtime.lookupPanic(), !dbg !4568
  unreachable, !dbg !4568

lookup.next53:                                    ; preds = %gep.next49
  %55 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %21, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %23, metadata !4478, metadata !DIExpression()), !dbg !4569
  %56 = trunc i32 %23 to i8, !dbg !4570
  %57 = add i8 %56, 48, !dbg !4570
  store i8 %57, i8* %55, align 1, !dbg !4568
  %58 = add nuw nsw i32 %21, 1, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %58, metadata !4470, metadata !DIExpression()), !dbg !4571
  br label %if.done9, !dbg !4484

gep.next55:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4572
  store i1 true, i1* %20, align 1, !dbg !4573
  call void @llvm.dbg.value(metadata i1 true, metadata !4479, metadata !DIExpression()), !dbg !4573
  br label %if.done9, !dbg !4484

store.next61:                                     ; preds = %for.loop6
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4467, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 %21, metadata !4470, metadata !DIExpression()), !dbg !4575
  store i32 %21, i32* %1, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %21, metadata !4472, metadata !DIExpression()), !dbg !4576
  tail call fastcc void @strconv.trim(%strconv.decimal* nonnull %a), !dbg !4577
  ret void, !dbg !4484
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.decimal).RoundDown"(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %nd) unnamed_addr #2 section ".text.(*strconv.decimal).RoundDown" !dbg !4578 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4580, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4581, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4581, metadata !DIExpression()), !dbg !4584
  %0 = icmp slt i32 %nd, 0, !dbg !4585
  br i1 %0, label %if.then, label %cond.false, !dbg !4586

if.then:                                          ; preds = %gep.next, %entry
  ret void, !dbg !4587

cond.false:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4581, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4580, metadata !DIExpression()), !dbg !4589
  %1 = icmp eq %strconv.decimal* %a, null, !dbg !4590
  br i1 %1, label %gep.throw, label %gep.next, !dbg !4590

gep.throw:                                        ; preds = %cond.false
  tail call fastcc void @runtime.nilPanic(), !dbg !4590
  unreachable, !dbg !4590

gep.next:                                         ; preds = %cond.false
  %2 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4590
  %3 = load i32, i32* %2, align 4, !dbg !4590
  %.not = icmp sgt i32 %3, %nd, !dbg !4591
  br i1 %.not, label %store.next, label %if.then, !dbg !4586

store.next:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4580, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4581, metadata !DIExpression()), !dbg !4593
  store i32 %nd, i32* %2, align 4, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4582, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4580, metadata !DIExpression()), !dbg !4595
  tail call fastcc void @strconv.trim(%strconv.decimal* nonnull %a), !dbg !4596
  ret void, !dbg !4586
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.decimal).RoundUp"(%strconv.decimal* nocapture dereferenceable_or_null(812) %a, i32 %nd) unnamed_addr #2 section ".text.(*strconv.decimal).RoundUp" !dbg !4597 {
entry:
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4600, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4600, metadata !DIExpression()), !dbg !4606
  %0 = icmp slt i32 %nd, 0, !dbg !4607
  br i1 %0, label %if.then, label %cond.false, !dbg !4608

if.then:                                          ; preds = %gep.next, %entry
  ret void, !dbg !4609

cond.false:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %nd, metadata !4600, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4611
  %1 = icmp eq %strconv.decimal* %a, null, !dbg !4612
  br i1 %1, label %gep.throw, label %gep.next, !dbg !4612

for.loop:                                         ; preds = %gep.next, %lookup.next
  %.in = phi i32 [ %2, %lookup.next ], [ %nd, %gep.next ]
  %2 = add nsw i32 %.in, -1, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %2, metadata !4601, metadata !DIExpression()), !dbg !4614
  %3 = icmp sgt i32 %.in, 0, !dbg !4615
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4617
  br i1 %3, label %gep.next4, label %gep.next16, !dbg !4608

gep.throw:                                        ; preds = %cond.false
  tail call fastcc void @runtime.nilPanic(), !dbg !4612
  unreachable, !dbg !4612

gep.next:                                         ; preds = %cond.false
  %4 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 1, !dbg !4612
  %5 = load i32, i32* %4, align 4, !dbg !4612
  %.not = icmp sgt i32 %5, %nd, !dbg !4618
  br i1 %.not, label %for.loop, label %if.then, !dbg !4608

gep.next4:                                        ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %2, metadata !4601, metadata !DIExpression()), !dbg !4619
  %6 = icmp ugt i32 %2, 799, !dbg !4620
  br i1 %6, label %lookup.throw, label %lookup.next, !dbg !4620

lookup.throw:                                     ; preds = %gep.next4
  tail call fastcc void @runtime.lookupPanic(), !dbg !4620
  unreachable, !dbg !4620

lookup.next:                                      ; preds = %gep.next4
  %7 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %2, !dbg !4620
  %8 = load i8, i8* %7, align 1, !dbg !4620
  call void @llvm.dbg.value(metadata i8 %8, metadata !4602, metadata !DIExpression()), !dbg !4621
  call void @llvm.dbg.value(metadata i8 %8, metadata !4602, metadata !DIExpression()), !dbg !4622
  %9 = icmp ult i8 %8, 57, !dbg !4623
  br i1 %9, label %lookup.next12, label %for.loop, !dbg !4608

lookup.next12:                                    ; preds = %lookup.next
  %10 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 %2, !dbg !4620
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.value(metadata i32 %2, metadata !4601, metadata !DIExpression()), !dbg !4625
  %11 = add nuw nsw i8 %8, 1, !dbg !4624
  store i8 %11, i8* %10, align 1, !dbg !4626
  store i32 %.in, i32* %4, align 4, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %.in, metadata !4603, metadata !DIExpression()), !dbg !4627
  ret void, !dbg !4628

gep.next16:                                       ; preds = %for.loop
  %12 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 0, i32 0, !dbg !4629
  store i8 49, i8* %12, align 1, !dbg !4629
  call void @llvm.dbg.value(metadata %strconv.decimal* %a, metadata !4599, metadata !DIExpression()), !dbg !4630
  store i32 1, i32* %4, align 4, !dbg !4631
  call void @llvm.dbg.value(metadata i32 1, metadata !4603, metadata !DIExpression()), !dbg !4631
  %13 = getelementptr inbounds %strconv.decimal, %strconv.decimal* %a, i32 0, i32 2, !dbg !4632
  %14 = load i32, i32* %13, align 4, !dbg !4632
  %15 = add i32 %14, 1, !dbg !4633
  store i32 %15, i32* %13, align 4, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %15, metadata !4604, metadata !DIExpression()), !dbg !4632
  ret void, !dbg !4608
}

; Function Attrs: optsize
define internal fastcc { i32, %runtime._interface } @"(*os.File).Write"(%os.File* nocapture readonly dereferenceable_or_null(16) %f, i8* nocapture readonly %b.data, i32 %b.len) unnamed_addr #2 section ".text.(*os.File).Write" !dbg !4634 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !4643
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 6, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !4643
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4643
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !4643
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !4643
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !4643
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4643
  call void @llvm.dbg.value(metadata %os.File* %f, metadata !4639, metadata !DIExpression()), !dbg !4643
  call void @llvm.dbg.value(metadata i8* %b.data, metadata !4640, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4643
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !4640, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4643
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4643
  call void @llvm.dbg.value(metadata %os.File* %f, metadata !4639, metadata !DIExpression()), !dbg !4644
  %3 = icmp eq %os.File* %f, null, !dbg !4645
  br i1 %3, label %gep.throw, label %gep.next, !dbg !4645

if.then:                                          ; preds = %"(os.FileHandle).Write.exit"
  %complit = tail call fastcc i8* @runtime.alloc(i32 24), !dbg !4646
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !4647
  store i8* %complit, i8** %4, align 4, !dbg !4647
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !4647
  store i8* %complit, i8** %5, align 4, !dbg !4647
  %6 = getelementptr inbounds i8, i8* %complit, i32 8, !dbg !4647
  call void @llvm.dbg.value(metadata %os.File* %f, metadata !4639, metadata !DIExpression()), !dbg !4648
  %.elt3 = getelementptr inbounds %os.File, %os.File* %f, i32 0, i32 1, i32 0, !dbg !4649
  %.unpack4 = load i8*, i8** %.elt3, align 4, !dbg !4649
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !4649
  store i8* %.unpack4, i8** %7, align 4, !dbg !4649
  %.elt5 = getelementptr inbounds %os.File, %os.File* %f, i32 0, i32 1, i32 1, !dbg !4649
  %.unpack6 = load i32, i32* %.elt5, align 4, !dbg !4649
  %8 = getelementptr inbounds i8, i8* %complit, i32 16, !dbg !4647
  call void @llvm.dbg.value(metadata %runtime._interface %32, metadata !4642, metadata !DIExpression()), !dbg !4650
  %.repack = bitcast i8* %complit to i8**, !dbg !4651
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*os.File).Write$string", i32 0, i32 0), i8** %.repack, align 4, !dbg !4651
  %.repack7 = getelementptr inbounds i8, i8* %complit, i32 4, !dbg !4651
  %9 = bitcast i8* %.repack7 to i32*, !dbg !4651
  store i32 5, i32* %9, align 4, !dbg !4651
  %.repack8 = bitcast i8* %6 to i8**, !dbg !4648
  store i8* %.unpack4, i8** %.repack8, align 4, !dbg !4648
  %.repack10 = getelementptr inbounds i8, i8* %complit, i32 12, !dbg !4648
  %10 = bitcast i8* %.repack10 to i32*, !dbg !4648
  store i32 %.unpack6, i32* %10, align 4, !dbg !4648
  %.repack12 = bitcast i8* %8 to i32*, !dbg !4650
  store i32 %35, i32* %.repack12, align 4, !dbg !4650
  %.repack14 = getelementptr inbounds i8, i8* %complit, i32 20, !dbg !4650
  %11 = bitcast i8* %.repack14 to i8**, !dbg !4650
  store i8* %33, i8** %11, align 4, !dbg !4650
  %12 = insertvalue %runtime._interface { i32 3045, i8* undef }, i8* %complit, 1, !dbg !4647
  call void @llvm.dbg.value(metadata %runtime._interface %12, metadata !4642, metadata !DIExpression()), !dbg !4652
  br label %if.done, !dbg !4647

if.done:                                          ; preds = %"(os.FileHandle).Write.exit", %if.then
  %.pre-phi = phi i8* [ %33, %"(os.FileHandle).Write.exit" ], [ %complit, %if.then ], !dbg !4653
  %13 = phi %runtime._interface [ %32, %"(os.FileHandle).Write.exit" ], [ %12, %if.then ], !dbg !4654
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !4647
  store i8* %.pre-phi, i8** %14, align 4, !dbg !4647
  %15 = extractvalue { i32, %runtime._interface } %31, 0, !dbg !4647
  call void @llvm.dbg.value(metadata i32 %15, metadata !4641, metadata !DIExpression()), !dbg !4655
  %16 = insertvalue { i32, %runtime._interface } zeroinitializer, i32 %15, 0, !dbg !4653
  %17 = insertvalue { i32, %runtime._interface } %16, %runtime._interface %13, 1, !dbg !4653
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4653
  ret { i32, %runtime._interface } %17, !dbg !4653

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4645
  unreachable, !dbg !4645

gep.next:                                         ; preds = %entry
  %.elt = getelementptr inbounds %os.File, %os.File* %f, i32 0, i32 0, i32 0, !dbg !4645
  %.unpack = load i32, i32* %.elt, align 4, !dbg !4645
  %.elt1 = getelementptr inbounds %os.File, %os.File* %f, i32 0, i32 0, i32 1, !dbg !4645
  %.unpack2 = load i8*, i8** %.elt1, align 4, !dbg !4645
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !4656
  store i8* %.unpack2, i8** %18, align 4, !dbg !4656
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4640, metadata !DIExpression()), !dbg !4656
  switch i32 %.unpack, label %default.i [
    i32 208, label %"reflect/types.type:named:os.stdioFileHandle.i"
    i32 11237, label %"reflect/types.type:pointer:named:os.File.i"
  ], !dbg !4657

default.i:                                        ; preds = %gep.next
  tail call fastcc void @runtime.nilPanic(), !dbg !4657
  unreachable, !dbg !4657

"reflect/types.type:named:os.stdioFileHandle.i":  ; preds = %gep.next
  %19 = ptrtoint i8* %.unpack2 to i32, !dbg !4675
  %unpack.int.i.i = trunc i32 %19 to i8, !dbg !4675
  call void @llvm.dbg.value(metadata i8 %unpack.int.i.i, metadata !4681, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %b.data, metadata !4684, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4687
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !4684, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4687
  call void @llvm.dbg.value(metadata i32 undef, metadata !4684, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !4687
  call void @llvm.dbg.value(metadata i8 %unpack.int.i.i, metadata !4681, metadata !DIExpression()), !dbg !4689
  %f.off.i.i.i = add i8 %unpack.int.i.i, -1, !dbg !4690
  %switch.i.i.i = icmp ult i8 %f.off.i.i.i, 2, !dbg !4690
  br i1 %switch.i.i.i, label %rangeindex.loop.preheader.i.i.i, label %switch.next1.i.i.i, !dbg !4690

rangeindex.loop.preheader.i.i.i:                  ; preds = %"reflect/types.type:named:os.stdioFileHandle.i"
  %20 = icmp sgt i32 %b.len, 0, !dbg !4690
  %smax.i.i.i = select i1 %20, i32 %b.len, i32 0, !dbg !4690
  %21 = add nsw i32 %smax.i.i.i, -1, !dbg !4690
  %22 = add i32 %b.len, -1, !dbg !4690
  br label %rangeindex.loop.i.i.i, !dbg !4690

rangeindex.loop.i.i.i:                            ; preds = %lookup.next.i.i.i, %rangeindex.loop.preheader.i.i.i
  %23 = phi i32 [ %24, %lookup.next.i.i.i ], [ -1, %rangeindex.loop.preheader.i.i.i ], !dbg !4690
  %24 = add nsw i32 %23, 1, !dbg !4690
  %exitcond.not.i.i.i = icmp eq i32 %23, %21, !dbg !4690
  br i1 %exitcond.not.i.i.i, label %rangeindex.done.i.i.i, label %rangeindex.body.i.i.i, !dbg !4690

rangeindex.body.i.i.i:                            ; preds = %rangeindex.loop.i.i.i
  %exitcond1.not.i.i.i = icmp eq i32 %23, %22, !dbg !4691
  br i1 %exitcond1.not.i.i.i, label %lookup.throw.i.i.i, label %lookup.next.i.i.i, !dbg !4691

rangeindex.done.i.i.i:                            ; preds = %rangeindex.loop.i.i.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4684, metadata !DIExpression()), !dbg !4692
  %25 = insertvalue { i32, %runtime._interface } zeroinitializer, i32 %b.len, 0, !dbg !4693
  %26 = insertvalue { i32, %runtime._interface } %25, %runtime._interface zeroinitializer, 1, !dbg !4693
  br label %"(os.FileHandle).Write.exit", !dbg !4693

switch.next1.i.i.i:                               ; preds = %"reflect/types.type:named:os.stdioFileHandle.i"
  call void @llvm.dbg.value(metadata %runtime._interface { i32 10213, i8* bitcast ({ [23 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 2) to i8*) }, metadata !4686, metadata !DIExpression()), !dbg !4694
  br label %"(os.FileHandle).Write.exit", !dbg !4695

lookup.throw.i.i.i:                               ; preds = %rangeindex.body.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !4691
  unreachable, !dbg !4691

lookup.next.i.i.i:                                ; preds = %rangeindex.body.i.i.i
  %27 = getelementptr inbounds i8, i8* %b.data, i32 %24, !dbg !4691
  %28 = load i8, i8* %27, align 1, !dbg !4690
  call void @llvm.dbg.value(metadata i8 %28, metadata !4685, metadata !DIExpression()), !dbg !4696
  call void @llvm.dbg.value(metadata i8 %28, metadata !4685, metadata !DIExpression()), !dbg !4697
  tail call fastcc void @runtime.putchar(i8 %28), !dbg !4698
  br label %rangeindex.loop.i.i.i, !dbg !4690

"reflect/types.type:pointer:named:os.File.i":     ; preds = %gep.next
  %29 = bitcast i8* %.unpack2 to %os.File*, !dbg !4657
  %30 = tail call fastcc { i32, %runtime._interface } @"(*os.File).Write"(%os.File* %29, i8* %b.data, i32 %b.len), !dbg !4657
  br label %"(os.FileHandle).Write.exit", !dbg !4657

"(os.FileHandle).Write.exit":                     ; preds = %rangeindex.done.i.i.i, %switch.next1.i.i.i, %"reflect/types.type:pointer:named:os.File.i"
  %31 = phi { i32, %runtime._interface } [ %30, %"reflect/types.type:pointer:named:os.File.i" ], [ %26, %rangeindex.done.i.i.i ], [ { i32 0, %runtime._interface { i32 10213, i8* bitcast ({ [23 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 2) to i8*) } }, %switch.next1.i.i.i ]
  %32 = extractvalue { i32, %runtime._interface } %31, 1, !dbg !4699
  %33 = extractvalue %runtime._interface %32, 1, !dbg !4699
  %34 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !4655
  store i8* %33, i8** %34, align 4, !dbg !4655
  call void @llvm.dbg.value(metadata i32 undef, metadata !4641, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata %runtime._interface %32, metadata !4642, metadata !DIExpression()), !dbg !4700
  %35 = extractvalue %runtime._interface %32, 0, !dbg !4701
  %.not = icmp eq i32 %35, 0, !dbg !4701
  br i1 %.not, label %if.done, label %if.then, !dbg !4647
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).badVerb"(%fmt.pp* dereferenceable_or_null(140) %p) unnamed_addr #2 section ".text.(*fmt.pp).badVerb" !dbg !4702 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !4748
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 10, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !4748
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4748
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !4748
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !4748
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !4748
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4748
  %stackalloc.alloca29.i = alloca [1 x i32], align 4, !dbg !4748
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.value(metadata i32 118, metadata !4746, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4760
  %3 = icmp eq %fmt.pp* %p, null, !dbg !4761
  br i1 %3, label %gep.throw, label %"(*fmt.buffer).writeRune.exit", !dbg !4761

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4761
  unreachable, !dbg !4761

"(*fmt.buffer).writeRune.exit":                   ; preds = %entry
  %4 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 7, !dbg !4761
  store i1 true, i1* %4, align 1, !dbg !4761
  call void @llvm.dbg.value(metadata i1 true, metadata !4747, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4762
  %5 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !4763
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).badVerb$string", i32 0, i32 0), i32 2), !dbg !4764
  call void @llvm.dbg.value(metadata i32 118, metadata !4746, metadata !DIExpression()), !dbg !4765
  %6 = bitcast [1 x i32]* %stackalloc.alloca29.i to i8*, !dbg !4766
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !4766
  store i8* %6, i8** %7, align 4, !dbg !4766
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !4766
  call void @llvm.dbg.value(metadata i32 118, metadata !4754, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %5, metadata !4753, metadata !DIExpression()), !dbg !4767
  %.elt.i = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, i32 0, !dbg !4768
  %.unpack.i = load i8*, i8** %.elt.i, align 4, !dbg !4768
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !4768
  store i8* %.unpack.i, i8** %8, align 4, !dbg !4768
  %.elt1.i = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, i32 1, !dbg !4768
  %.unpack2.i = load i32, i32* %.elt1.i, align 4, !dbg !4768
  %.elt3.i = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, i32 2, !dbg !4768
  %.unpack4.i = load i32, i32* %.elt3.i, align 4, !dbg !4768
  %.fca.0.gep31.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca29.i, i32 0, i32 0, !dbg !4769
  store i32 0, i32* %.fca.0.gep31.i, align 4, !dbg !4769
  store i8 118, i8* %6, align 4, !dbg !4770
  %append.new.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.unpack.i, i8* nonnull %6, i32 %.unpack2.i, i32 %.unpack4.i, i32 1), !dbg !4771
  %append.newPtr.i = extractvalue { i8*, i32, i32 } %append.new.i, 0, !dbg !4771
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !4772
  store i8* %append.newPtr.i, i8** %9, align 4, !dbg !4772
  store i8* %append.newPtr.i, i8** %.elt.i, align 4, !dbg !4772
  %append.new.elt6.i = extractvalue { i8*, i32, i32 } %append.new.i, 1, !dbg !4772
  store i32 %append.new.elt6.i, i32* %.elt1.i, align 4, !dbg !4772
  %append.new.elt8.i = extractvalue { i8*, i32, i32 } %append.new.i, 2, !dbg !4772
  store i32 %append.new.elt8.i, i32* %.elt3.i, align 4, !dbg !4772
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !4773
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %5, i8 40), !dbg !4774
  %.elt = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 0, !dbg !4775
  %.unpack = load i32, i32* %.elt, align 4, !dbg !4775
  %.elt1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 1, !dbg !4775
  %.unpack2 = load i8*, i8** %.elt1, align 4, !dbg !4775
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !4776
  store i8* %.unpack2, i8** %10, align 4, !dbg !4776
  %.not = icmp eq i32 %.unpack, 0, !dbg !4776
  br i1 %.not, label %gep.next30, label %deref.next16, !dbg !4777

deref.next16:                                     ; preds = %"(*fmt.buffer).writeRune.exit"
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4778
  %.unpack4 = load i32, i32* %.elt, align 4, !dbg !4779
  %.unpack6 = load i8*, i8** %.elt1, align 4, !dbg !4779
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !4780
  store i8* %.unpack6, i8** %11, align 4, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %.unpack4, metadata !4783, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4780
  call void @llvm.dbg.value(metadata i8* %.unpack6, metadata !4783, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4780
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !4783, metadata !DIExpression()), !dbg !4786
  %12 = tail call fastcc { i32, i8* } @reflect.ValueOf(i32 %.unpack4, i8* %.unpack6), !dbg !4787
  %newret1.i = extractvalue { i32, i8* } %12, 1, !dbg !4787
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !4788
  store i8* %newret1.i, i8** %13, align 4, !dbg !4788
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4788
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !4789
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %5, i8 61), !dbg !4790
  %.unpack8 = load i32, i32* %.elt, align 4, !dbg !4791
  %.unpack10 = load i8*, i8** %.elt1, align 4, !dbg !4791
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !4792
  store i8* %.unpack10, i8** %14, align 4, !dbg !4792
  tail call fastcc void @"(*fmt.pp).printArg"(%fmt.pp* nonnull %p, i32 %.unpack8, i8* %.unpack10), !dbg !4792
  br label %gep.next24, !dbg !4777

gep.next24:                                       ; preds = %deref.next16, %deref.next38, %gep.next46
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4793
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %5, i8 41), !dbg !4794
  store i1 false, i1* %4, align 1, !dbg !4795
  call void @llvm.dbg.value(metadata i1 false, metadata !4747, metadata !DIExpression()), !dbg !4795
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4777
  ret void, !dbg !4777

gep.next30:                                       ; preds = %"(*fmt.buffer).writeRune.exit"
  %15 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 2, !dbg !4796
  %16 = load %reflect.Value, %reflect.Value* %15, align 4, !dbg !4796
  %17 = extractvalue %reflect.Value %16, 1, !dbg !4796
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !4797
  store i8* %17, i8** %18, align 4, !dbg !4797
  %19 = extractvalue %reflect.Value %16, 0, !dbg !4797
  %20 = extractvalue %reflect.Value %16, 2, !dbg !4797
  %21 = tail call fastcc i1 @"(reflect.Value).IsValid"(i32 %19, i8* %17, i8 %20), !dbg !4797
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4798
  br i1 %21, label %deref.next38, label %gep.next46, !dbg !4777

deref.next38:                                     ; preds = %gep.next30
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4745, metadata !DIExpression()), !dbg !4799
  %22 = load %reflect.Value, %reflect.Value* %15, align 4, !dbg !4800
  %23 = extractvalue %reflect.Value %22, 1, !dbg !4800
  %24 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !4801
  store i8* %23, i8** %24, align 4, !dbg !4801
  %25 = extractvalue %reflect.Value %22, 0, !dbg !4801
  %26 = extractvalue %reflect.Value %22, 2, !dbg !4801
  %27 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %25, i8* %23, i8 %26), !dbg !4801
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !4802
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %5, i8 61), !dbg !4803
  %28 = load %reflect.Value, %reflect.Value* %15, align 4, !dbg !4804
  %29 = extractvalue %reflect.Value %28, 1, !dbg !4804
  %30 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !4805
  store i8* %29, i8** %30, align 4, !dbg !4805
  %31 = extractvalue %reflect.Value %28, 0, !dbg !4805
  %32 = extractvalue %reflect.Value %28, 2, !dbg !4805
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %31, i8* %29, i8 %32, i32 0), !dbg !4805
  br label %gep.next24, !dbg !4777

gep.next46:                                       ; preds = %gep.next30
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !4806
  br label %gep.next24, !dbg !4777
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).catchPanic"() unnamed_addr #2 section ".text.(*fmt.pp).catchPanic" !dbg !4807 {
entry:
  call void @llvm.dbg.value(metadata %fmt.pp* undef, metadata !4811, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4812, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4821
  call void @llvm.dbg.value(metadata i8* undef, metadata !4812, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4813, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.value(metadata i8* undef, metadata !4814, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4814, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !4821
  call void @llvm.dbg.value(metadata %runtime._interface zeroinitializer, metadata !4815, metadata !DIExpression()), !dbg !4822
  ret void, !dbg !4823
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmt0x64"(%fmt.pp* dereferenceable_or_null(140) %p, i64 %v, i1 %leading0x) unnamed_addr #2 section ".text.(*fmt.pp).fmt0x64" !dbg !4824 {
entry:
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4828, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i64 %v, metadata !4829, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i1 %leading0x, metadata !4830, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4828, metadata !DIExpression()), !dbg !4834
  %0 = icmp eq %fmt.pp* %p, null, !dbg !4835
  br i1 %0, label %gep.throw, label %gep.next, !dbg !4835

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4835
  unreachable, !dbg !4835

gep.next:                                         ; preds = %entry
  %1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !4835
  %2 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 4, !dbg !4836
  %3 = load i1, i1* %2, align 1, !dbg !4836
  call void @llvm.dbg.value(metadata i1 %3, metadata !4831, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4828, metadata !DIExpression()), !dbg !4838
  call void @llvm.dbg.value(metadata i1 %leading0x, metadata !4830, metadata !DIExpression()), !dbg !4839
  store i1 %leading0x, i1* %2, align 1, !dbg !4840
  call void @llvm.dbg.value(metadata i1 %leading0x, metadata !4832, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i64 %v, metadata !4829, metadata !DIExpression()), !dbg !4841
  tail call fastcc void @"(*fmt.fmt).fmtInteger"(%fmt.fmt* nonnull %1, i64 %v, i32 16, i1 false, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"(*fmt.pp).fmtInteger$string", i32 0, i32 0)), !dbg !4842
  store i1 %3, i1* %2, align 1, !dbg !4843
  call void @llvm.dbg.value(metadata i1 %3, metadata !4832, metadata !DIExpression()), !dbg !4843
  ret void, !dbg !4844
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmtBool"(%fmt.pp* nocapture readonly dereferenceable_or_null(140) %p, i1 %v) unnamed_addr #2 section ".text.(*fmt.pp).fmtBool" !dbg !4845 {
entry:
  call void @llvm.dbg.value(metadata i1 %v, metadata !4850, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i32 118, metadata !4851, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4849, metadata !DIExpression()), !dbg !4854
  %0 = icmp eq %fmt.pp* %p, null, !dbg !4855
  br i1 %0, label %gep.throw, label %gep.next, !dbg !4855

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4855
  unreachable, !dbg !4855

gep.next:                                         ; preds = %entry
  %1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !4855
  call void @llvm.dbg.value(metadata i1 %v, metadata !4850, metadata !DIExpression()), !dbg !4856
  call void @llvm.dbg.value(metadata %fmt.fmt* %1, metadata !4857, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i1 %v, metadata !4863, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i1 %v, metadata !4863, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata %fmt.fmt* %1, metadata !4857, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata %fmt.fmt* %1, metadata !4857, metadata !DIExpression()), !dbg !4868
  br i1 %v, label %if.then.i, label %if.else.i, !dbg !4869

if.then.i:                                        ; preds = %gep.next
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"(*fmt.fmt).fmtBoolean$string", i32 0, i32 0), i32 4), !dbg !4870
  br label %"(*fmt.fmt).fmtBoolean.exit", !dbg !4869

if.else.i:                                        ; preds = %gep.next
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.fmt).fmtBoolean$string.768", i32 0, i32 0), i32 5), !dbg !4871
  br label %"(*fmt.fmt).fmtBoolean.exit", !dbg !4869

"(*fmt.fmt).fmtBoolean.exit":                     ; preds = %if.then.i, %if.else.i
  ret void, !dbg !4872
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmtComplex"(%fmt.pp* dereferenceable_or_null(140) %p, double %v.r, double %v.i, i32 %size) unnamed_addr #2 section ".text.(*fmt.pp).fmtComplex" !dbg !4873 {
entry:
  call void @llvm.dbg.value(metadata double %v.r, metadata !4879, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !4884
  call void @llvm.dbg.value(metadata double %v.i, metadata !4879, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !4884
  call void @llvm.dbg.value(metadata i32 %size, metadata !4880, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i32 118, metadata !4881, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4878, metadata !DIExpression()), !dbg !4886
  %0 = icmp eq %fmt.pp* %p, null, !dbg !4887
  br i1 %0, label %gep.throw, label %gep.next, !dbg !4887

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !4887
  unreachable, !dbg !4887

gep.next:                                         ; preds = %entry
  %1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 3, !dbg !4888
  %2 = load i1, i1* %1, align 1, !dbg !4888
  call void @llvm.dbg.value(metadata i1 %2, metadata !4882, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4878, metadata !DIExpression()), !dbg !4890
  %3 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !4891
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %3, i8 40), !dbg !4892
  call void @llvm.dbg.value(metadata { double, double } undef, metadata !4879, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i32 %size, metadata !4880, metadata !DIExpression()), !dbg !4894
  %4 = sdiv i32 %size, 2, !dbg !4895
  call void @llvm.dbg.value(metadata i32 118, metadata !4881, metadata !DIExpression()), !dbg !4896
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %v.r, i32 %4), !dbg !4897
  store i1 true, i1* %1, align 1, !dbg !4898
  call void @llvm.dbg.value(metadata i1 true, metadata !4883, metadata !DIExpression()), !dbg !4898
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %v.i, i32 %4), !dbg !4899
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).fmtComplex$string", i32 0, i32 0), i32 2), !dbg !4900
  store i1 %2, i1* %1, align 1, !dbg !4901
  call void @llvm.dbg.value(metadata i1 %2, metadata !4883, metadata !DIExpression()), !dbg !4901
  ret void, !dbg !4902
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* dereferenceable_or_null(140) %p, double %v, i32 %size) unnamed_addr #2 section ".text.(*fmt.pp).fmtFloat" !dbg !4903 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !4911
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 53, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !4911
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4911
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !4911
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !4911
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !4911
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !4911
  %stackalloc.alloca.i34.i.i.i = alloca double, align 8, !dbg !4911
  %buf.i16.i.i.i = alloca [32 x i8], align 1, !dbg !4969
  %buf.i.i.i.i = alloca [24 x i8], align 1, !dbg !5000
  %upper.i.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5035
  %lower.i.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5035
  %stackalloc.alloca.i.i.i.i = alloca [1 x i32], align 4, !dbg !5050
  %stackalloc.alloca131.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5057
  %stackalloc.alloca129.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5057
  %stackalloc.alloca127.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5057
  %stackalloc.alloca.i.i.i = alloca %strconv.extFloat, align 8, !dbg !5057
  %stackalloc.alloca274.i = alloca [1 x i32], align 4, !dbg !5058
  %stackalloc.alloca.i = alloca [1 x i32], align 4, !dbg !5058
  call void @llvm.dbg.value(metadata double %v, metadata !4908, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 %size, metadata !4909, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.value(metadata i32 118, metadata !4910, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !4907, metadata !DIExpression()), !dbg !5061
  %3 = icmp eq %fmt.pp* %p, null, !dbg !5062
  br i1 %3, label %gep.throw, label %gep.next, !dbg !5062

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !5062
  unreachable, !dbg !5062

gep.next:                                         ; preds = %entry
  %4 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !5062
  call void @llvm.dbg.value(metadata double %v, metadata !4908, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 %size, metadata !4909, metadata !DIExpression()), !dbg !5064
  %5 = bitcast [1 x i32]* %stackalloc.alloca274.i to i8*, !dbg !5058
  %6 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !5058
  store i8* %5, i8** %6, align 4, !dbg !5058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !5058
  %7 = bitcast [1 x i32]* %stackalloc.alloca.i to i8*, !dbg !5058
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !5058
  store i8* %7, i8** %8, align 4, !dbg !5058
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !5058
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata double %v, metadata !4957, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %size, metadata !4958, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 103, metadata !4959, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 -1, metadata !4960, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5065
  %9 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 1, !dbg !5066
  %10 = load i1, i1* %9, align 1, !dbg !5066
  br i1 %10, label %gep.next44.i, label %gep.next48.i, !dbg !5067

if.then1.i:                                       ; preds = %lookup.next.i, %lookup.next.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %466, metadata !4961, metadata !DIExpression()), !dbg !5068
  %11 = extractvalue { i8*, i32, i32 } %466, 2, !dbg !5069
  %slice.highmax.i = icmp ugt i32 %indexaddr.len.i, %11, !dbg !5069
  br i1 %slice.highmax.i, label %slice.throw49.i, label %slice.next50.i, !dbg !5069

if.done2.i:                                       ; preds = %lookup.next271.i, %slice.next50.i
  %.pre-phi133.i = phi i8* [ %.pre-phi.i, %lookup.next271.i ], [ %470, %slice.next50.i ], !dbg !5070
  %12 = phi { i8*, i32, i32 } [ %466, %lookup.next271.i ], [ %476, %slice.next50.i ], !dbg !5071
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !5070
  store i8* %.pre-phi133.i, i8** %13, align 4, !dbg !5070
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5070
  %14 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 5, !dbg !5072
  %15 = load i1, i1* %14, align 1, !dbg !5072
  %indexaddr.len58.i = extractvalue { i8*, i32, i32 } %12, 1, !dbg !5067
  br i1 %15, label %cond.true.i, label %if.done5.i, !dbg !5067

cond.true.i:                                      ; preds = %if.done2.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %12, metadata !4961, metadata !DIExpression()), !dbg !5073
  %16 = icmp eq i32 %indexaddr.len58.i, 0, !dbg !5074
  br i1 %16, label %lookup.throw59.i, label %lookup.next60.i, !dbg !5074

if.done5.i:                                       ; preds = %lookup.next70.i, %gep.next64.i, %lookup.next60.i, %if.done2.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %12, metadata !4961, metadata !DIExpression()), !dbg !5075
  %17 = icmp ult i32 %indexaddr.len58.i, 2, !dbg !5076
  br i1 %17, label %lookup.throw73.i, label %lookup.next74.i, !dbg !5076

if.then9.i:                                       ; preds = %gep.next98.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %12, metadata !4961, metadata !DIExpression()), !dbg !5077
  %18 = extractvalue { i8*, i32, i32 } %12, 2, !dbg !5078
  %slice.highmax102.i = icmp ugt i32 %indexaddr.len58.i, %18, !dbg !5078
  br i1 %slice.highmax102.i, label %slice.throw106.i, label %slice.next107.i, !dbg !5078

if.done10.i:                                      ; preds = %slice.next107.i, %gep.next98.i, %deref.next94.i, %gep.next78.i
  %.pre-phi139.i = phi i32 [ %490, %slice.next107.i ], [ %indexaddr.len58.i, %gep.next98.i ], [ %indexaddr.len58.i, %deref.next94.i ], [ %indexaddr.len58.i, %gep.next78.i ], !dbg !5079
  %.pre-phi137.i = phi i8* [ %481, %slice.next107.i ], [ %.pre-phi133.i, %gep.next98.i ], [ %.pre-phi133.i, %deref.next94.i ], [ %.pre-phi133.i, %gep.next78.i ], !dbg !5080
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !5080
  store i8* %.pre-phi137.i, i8** %19, align 4, !dbg !5080
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4961, metadata !DIExpression()), !dbg !5081
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %4, i8* nonnull %.pre-phi137.i, i32 %.pre-phi139.i), !dbg !5079
  call void @llvm.dbg.value(metadata i1 %484, metadata !4962, metadata !DIExpression()), !dbg !5082
  store i1 %484, i1* %483, align 1, !dbg !5083
  call void @llvm.dbg.value(metadata i1 %484, metadata !4963, metadata !DIExpression()), !dbg !5083
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5084
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5084
  br label %"(*fmt.fmt).fmtFloat.exit", !dbg !5084

switch.done.i:                                    ; preds = %gep.next121.i
  call void @llvm.dbg.value(metadata i32 0, metadata !4964, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.value(metadata i32 103, metadata !4959, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i32 %67, metadata !4960, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 %67, metadata !4964, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata i32 %67, metadata !4964, metadata !DIExpression()), !dbg !5089
  %20 = icmp eq i32 %67, -1, !dbg !5090
  %spec.select.i = select i1 %20, i32 6, i32 %67, !dbg !5067
  %tailBuf.i = tail call fastcc i8* @runtime.alloc(i32 6), !dbg !5091
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !5092
  store i8* %tailBuf.i, i8** %21, align 4, !dbg !5092
  %22 = insertvalue { i8*, i32, i32 } undef, i8* %tailBuf.i, 0, !dbg !5092
  %23 = insertvalue { i8*, i32, i32 } %22, i32 0, 1, !dbg !5092
  %24 = insertvalue { i8*, i32, i32 } %23, i32 6, 2, !dbg !5092
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %24, metadata !4965, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.value(metadata i1 false, metadata !4966, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.value(metadata i32 1, metadata !4967, metadata !DIExpression()), !dbg !5095
  br label %for.loop.i, !dbg !5067

for.loop.i:                                       ; preds = %switch.done16.i, %switch.done.i
  %25 = phi { i8*, i32, i32 } [ %12, %switch.done.i ], [ %35, %switch.done16.i ], !dbg !5071
  %26 = phi i32 [ %spec.select.i, %switch.done.i ], [ %36, %switch.done16.i ], !dbg !5085
  %27 = phi { i8*, i32, i32 } [ %24, %switch.done.i ], [ %37, %switch.done16.i ], !dbg !5093
  %28 = phi i1 [ false, %switch.done.i ], [ %38, %switch.done16.i ], !dbg !5094
  %29 = phi i32 [ 1, %switch.done.i ], [ %42, %switch.done16.i ], !dbg !5095
  %30 = extractvalue { i8*, i32, i32 } %27, 0, !dbg !5096
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !5096
  store i8* %30, i8** %31, align 4, !dbg !5096
  %32 = extractvalue { i8*, i32, i32 } %25, 0, !dbg !5096
  %33 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !5096
  store i8* %32, i8** %33, align 4, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  %len.i = extractvalue { i8*, i32, i32 } %25, 1, !dbg !5098
  %34 = icmp sgt i32 %len.i, %29, !dbg !5099
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  br i1 %34, label %for.body.i, label %for.done.i, !dbg !5067

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5101
  %.not1.i = icmp ugt i32 %len.i, %29, !dbg !5102
  br i1 %.not1.i, label %lookup.next130.i, label %lookup.throw129.i, !dbg !5102

switch.done16.i:                                  ; preds = %slice.next167.i, %slice.next144.i, %lookup.next130.i, %switch.body23.i
  %.pre-phi134.i = phi i8* [ %30, %lookup.next130.i ], [ %30, %switch.body23.i ], [ %append.newPtr158.i, %slice.next167.i ], [ %append.newPtr.i, %slice.next144.i ], !dbg !5103
  %35 = phi { i8*, i32, i32 } [ %25, %lookup.next130.i ], [ %25, %switch.body23.i ], [ %502, %slice.next167.i ], [ %498, %slice.next144.i ], !dbg !5071
  %36 = phi i32 [ %26, %lookup.next130.i ], [ %45, %switch.body23.i ], [ %26, %slice.next167.i ], [ %26, %slice.next144.i ], !dbg !5085
  %37 = phi { i8*, i32, i32 } [ %27, %lookup.next130.i ], [ %27, %switch.body23.i ], [ %append.new157.i, %slice.next167.i ], [ %append.new.i, %slice.next144.i ], !dbg !5093
  %38 = phi i1 [ true, %lookup.next130.i ], [ %28, %switch.body23.i ], [ %28, %slice.next167.i ], [ %28, %slice.next144.i ], !dbg !5094
  %39 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !5103
  store i8* %.pre-phi134.i, i8** %39, align 4, !dbg !5103
  %40 = extractvalue { i8*, i32, i32 } %35, 0, !dbg !5103
  %41 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !5103
  store i8* %40, i8** %41, align 4, !dbg !5103
  %42 = add i32 %29, 1, !dbg !5103
  call void @llvm.dbg.value(metadata i32 %42, metadata !4967, metadata !DIExpression()), !dbg !5103
  br label %for.loop.i, !dbg !5067

switch.body17.i:                                  ; preds = %lookup.next130.i, %lookup.next130.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %27, metadata !4965, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5106
  %43 = extractvalue { i8*, i32, i32 } %25, 2, !dbg !5107
  %slice.lowhigh131.i = icmp ult i32 %len.i, %29, !dbg !5107
  %slice.highmax132.i = icmp ugt i32 %len.i, %43, !dbg !5107
  %slice.lowmax134.i = or i1 %slice.highmax132.i, %slice.lowhigh131.i, !dbg !5107
  br i1 %slice.lowmax134.i, label %slice.throw136.i, label %slice.next137.i, !dbg !5107

if.then22.i:                                      ; preds = %lookup.next130.i, %lookup.next130.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %27, metadata !4965, metadata !DIExpression()), !dbg !5108
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5110
  %44 = extractvalue { i8*, i32, i32 } %25, 2, !dbg !5111
  %slice.lowhigh145.i = icmp ult i32 %len.i, %29, !dbg !5111
  %slice.highmax146.i = icmp ugt i32 %len.i, %44, !dbg !5111
  %slice.lowmax148.i = or i1 %slice.highmax146.i, %slice.lowhigh145.i, !dbg !5111
  br i1 %slice.lowmax148.i, label %slice.throw150.i, label %slice.next151.i, !dbg !5111

switch.body23.i:                                  ; preds = %lookup.next130.i
  %45 = add i32 %26, -1, !dbg !5112
  call void @llvm.dbg.value(metadata i32 %45, metadata !4964, metadata !DIExpression()), !dbg !5112
  br label %switch.done16.i, !dbg !5067

for.done.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  %46 = extractvalue { i8*, i32, i32 } %27, 0, !dbg !5096
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i1 %28, metadata !4966, metadata !DIExpression()), !dbg !5113
  br i1 %28, label %for.loop25.preheader.i, label %if.then28.i, !dbg !5067

for.loop25.preheader.i:                           ; preds = %if.then28.i, %for.done.i
  %.ph.i = phi { i8*, i32, i32 } [ %append.new202.i, %if.then28.i ], [ %25, %for.done.i ]
  %.fca.0.gep276.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca274.i, i32 0, i32 0, !dbg !5067
  br label %for.loop25.i, !dbg !5067

for.loop25.i:                                     ; preds = %for.body26.i, %for.loop25.preheader.i
  %47 = phi { i8*, i32, i32 } [ %append.new178.i, %for.body26.i ], [ %.ph.i, %for.loop25.preheader.i ], !dbg !5071
  %48 = phi i32 [ %53, %for.body26.i ], [ %26, %for.loop25.preheader.i ], !dbg !5085
  %49 = extractvalue { i8*, i32, i32 } %47, 0, !dbg !5114
  %50 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !5114
  store i8* %49, i8** %50, align 4, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %48, metadata !4964, metadata !DIExpression()), !dbg !5114
  %51 = icmp sgt i32 %48, 0, !dbg !5115
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5117
  br i1 %51, label %for.body26.i, label %for.done27.i, !dbg !5067

for.body26.i:                                     ; preds = %for.loop25.i
  store i32 0, i32* %.fca.0.gep276.i, align 4, !dbg !5118
  store i8 48, i8* %5, align 4, !dbg !5067
  %append.srcLen174.i = extractvalue { i8*, i32, i32 } %47, 1, !dbg !5119
  %append.srcCap175.i = extractvalue { i8*, i32, i32 } %47, 2, !dbg !5119
  %append.new178.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %49, i8* nonnull %5, i32 %append.srcLen174.i, i32 %append.srcCap175.i, i32 1), !dbg !5119
  %append.newPtr179.i = extractvalue { i8*, i32, i32 } %append.new178.i, 0, !dbg !5119
  %52 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !5120
  store i8* %append.newPtr179.i, i8** %52, align 4, !dbg !5120
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new178.i, metadata !4961, metadata !DIExpression()), !dbg !5120
  %53 = add nsw i32 %48, -1, !dbg !5121
  call void @llvm.dbg.value(metadata i32 %53, metadata !4964, metadata !DIExpression()), !dbg !5121
  br label %for.loop25.i, !dbg !5067

for.done27.i:                                     ; preds = %for.loop25.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  %54 = extractvalue { i8*, i32, i32 } %47, 0, !dbg !5114
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %47, metadata !4961, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %27, metadata !4965, metadata !DIExpression()), !dbg !5122
  %append.srcLen183.i = extractvalue { i8*, i32, i32 } %47, 1, !dbg !5123
  %append.srcCap184.i = extractvalue { i8*, i32, i32 } %47, 2, !dbg !5123
  %append.elemsLen186.i = extractvalue { i8*, i32, i32 } %27, 1, !dbg !5123
  %append.new187.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %54, i8* %46, i32 %append.srcLen183.i, i32 %append.srcCap184.i, i32 %append.elemsLen186.i), !dbg !5123
  %append.newPtr188.i = extractvalue { i8*, i32, i32 } %append.new187.i, 0, !dbg !5123
  %55 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !5124
  store i8* %append.newPtr188.i, i8** %55, align 4, !dbg !5124
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new187.i, metadata !4961, metadata !DIExpression()), !dbg !5124
  br label %if.done32.i, !dbg !5067

if.then28.i:                                      ; preds = %for.done.i
  %len.i.le = extractvalue { i8*, i32, i32 } %25, 1, !dbg !5098
  %56 = extractvalue { i8*, i32, i32 } %25, 0, !dbg !5096
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5125
  %.fca.0.gep.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca.i, i32 0, i32 0, !dbg !5126
  store i32 0, i32* %.fca.0.gep.i, align 4, !dbg !5126
  store i8 46, i8* %7, align 4, !dbg !5067
  %append.srcCap199.i = extractvalue { i8*, i32, i32 } %25, 2, !dbg !5127
  %append.new202.i = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %56, i8* nonnull %7, i32 %len.i.le, i32 %append.srcCap199.i, i32 1), !dbg !5127
  %append.newPtr203.i = extractvalue { i8*, i32, i32 } %append.new202.i, 0, !dbg !5127
  %57 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !5128
  store i8* %append.newPtr203.i, i8** %57, align 4, !dbg !5128
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new202.i, metadata !4961, metadata !DIExpression()), !dbg !5128
  br label %for.loop25.preheader.i, !dbg !5067

if.done32.i:                                      ; preds = %gep.next121.i, %for.done27.i
  %.pre-phi135.i = phi i8* [ %append.newPtr188.i, %for.done27.i ], [ %.pre-phi133.i, %gep.next121.i ], !dbg !5129
  %58 = phi { i8*, i32, i32 } [ %append.new187.i, %for.done27.i ], [ %12, %gep.next121.i ], !dbg !5071
  %59 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !5129
  store i8* %.pre-phi135.i, i8** %59, align 4, !dbg !5129
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5129
  %60 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 3, !dbg !5130
  %61 = load i1, i1* %60, align 1, !dbg !5130
  br i1 %61, label %gep.next215.i, label %cond.false38.i, !dbg !5067

if.done37.i:                                      ; preds = %gep.next225.i, %gep.next221.i, %gep.next215.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5132
  %62 = extractvalue { i8*, i32, i32 } %58, 1, !dbg !5133
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %4, i8* %.pre-phi135.i, i32 %62), !dbg !5133
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5134
  br label %"(*fmt.fmt).fmtFloat.exit", !dbg !5134

cond.false38.i:                                   ; preds = %if.done32.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5135
  %indexaddr.len254.i = extractvalue { i8*, i32, i32 } %58, 1, !dbg !5136
  %63 = icmp eq i32 %indexaddr.len254.i, 0, !dbg !5136
  br i1 %63, label %lookup.throw255.i, label %lookup.next256.i, !dbg !5136

if.done39.i:                                      ; preds = %lookup.next256.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5138
  %64 = extractvalue { i8*, i32, i32 } %58, 2, !dbg !5139
  %slice.highmax258.i = icmp ugt i32 %indexaddr.len254.i, %64, !dbg !5139
  br i1 %slice.highmax258.i, label %slice.throw262.i, label %slice.next263.i, !dbg !5139

gep.next44.i:                                     ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5140
  %65 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 3, !dbg !5141
  %66 = load i32, i32* %65, align 4, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %66, metadata !4960, metadata !DIExpression()), !dbg !5142
  br label %gep.next48.i, !dbg !5067

gep.next48.i:                                     ; preds = %gep.next44.i, %gep.next
  %67 = phi i32 [ -1, %gep.next ], [ %66, %gep.next44.i ], !dbg !5143
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5144
  %slice.ptr.i = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 4, i32 0, !dbg !5145
  call void @llvm.dbg.value(metadata double %v, metadata !4957, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 103, metadata !4959, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i32 %67, metadata !4960, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i32 %size, metadata !4958, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i8* %slice.ptr.i, metadata !4946, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5150
  call void @llvm.dbg.value(metadata i32 1, metadata !4946, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5150
  call void @llvm.dbg.value(metadata i32 68, metadata !4946, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !5150
  call void @llvm.dbg.value(metadata double %v, metadata !4947, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i8 103, metadata !4948, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i32 %67, metadata !4949, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata i32 %size, metadata !4950, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4946, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata double %v, metadata !4947, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata i8 103, metadata !4948, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i32 %67, metadata !4949, metadata !DIExpression()), !dbg !5154
  call void @llvm.dbg.value(metadata i32 %size, metadata !4950, metadata !DIExpression()), !dbg !5155
  %68 = bitcast %strconv.extFloat* %stackalloc.alloca131.i.i.i to i8*, !dbg !5057
  %69 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 23, !dbg !5057
  store i8* %68, i8** %69, align 4, !dbg !5057
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68), !dbg !5057
  %70 = bitcast %strconv.extFloat* %stackalloc.alloca129.i.i.i to i8*, !dbg !5057
  %71 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 24, !dbg !5057
  store i8* %70, i8** %71, align 4, !dbg !5057
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70), !dbg !5057
  %72 = bitcast %strconv.extFloat* %stackalloc.alloca127.i.i.i to i8*, !dbg !5057
  %73 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 25, !dbg !5057
  store i8* %72, i8** %73, align 4, !dbg !5057
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72), !dbg !5057
  %74 = bitcast %strconv.extFloat* %stackalloc.alloca.i.i.i to i8*, !dbg !5057
  %75 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 37, !dbg !5057
  store i8* %74, i8** %75, align 4, !dbg !5057
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74), !dbg !5057
  call void @llvm.dbg.value(metadata i8* %slice.ptr.i, metadata !4923, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5057
  call void @llvm.dbg.value(metadata i32 1, metadata !4923, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5057
  call void @llvm.dbg.value(metadata i32 68, metadata !4923, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !5057
  call void @llvm.dbg.value(metadata double %v, metadata !4924, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i32 %67, metadata !4926, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i32 %size, metadata !4927, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i64 0, metadata !4928, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata %strconv.floatInfo* null, metadata !4929, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i32 %size, metadata !4927, metadata !DIExpression()), !dbg !5158
  switch i32 %size, label %switch.next39.i.i.i [
    i32 32, label %switch.body.i.i.i
    i32 64, label %switch.body38.i.i.i
  ], !dbg !5159

switch.body.i.i.i:                                ; preds = %gep.next48.i
  call void @llvm.dbg.value(metadata double %v, metadata !4924, metadata !DIExpression()), !dbg !5160
  %76 = fptrunc double %v to float, !dbg !5161
  %77 = bitcast [1 x i32]* %stackalloc.alloca.i.i.i.i to i8*, !dbg !5050
  %78 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !5050
  store i8* %77, i8** %78, align 4, !dbg !5050
  %79 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !5050
  store i8* %77, i8** %79, align 4, !dbg !5050
  %80 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !5050
  store i8* %77, i8** %80, align 4, !dbg !5050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77), !dbg !5050
  call void @llvm.dbg.value(metadata float %76, metadata !5055, metadata !DIExpression()), !dbg !5050
  %.fca.0.gep.i.i.i.i = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca.i.i.i.i, i32 0, i32 0, !dbg !5162
  store i32 0, i32* %.fca.0.gep.i.i.i.i, align 4, !dbg !5162
  %81 = bitcast [1 x i32]* %stackalloc.alloca.i.i.i.i to float*, !dbg !5162
  store float %76, float* %81, align 4, !dbg !5163
  %.cast.i.i.i.i = bitcast float %76 to i32, !dbg !5164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77), !dbg !5165
  %82 = zext i32 %.cast.i.i.i.i to i64, !dbg !5166
  call void @llvm.dbg.value(metadata i64 %82, metadata !4928, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata %strconv.floatInfo* @strconv.float32info, metadata !4929, metadata !DIExpression()), !dbg !5168
  br label %switch.done.i.i.i, !dbg !5159

switch.done.i.i.i:                                ; preds = %switch.body38.i.i.i, %switch.body.i.i.i
  %83 = phi i64 [ %82, %switch.body.i.i.i ], [ %.cast.i38.i.i.i, %switch.body38.i.i.i ], !dbg !5156
  %84 = phi %strconv.floatInfo* [ @strconv.float32info, %switch.body.i.i.i ], [ @strconv.float64info, %switch.body38.i.i.i ], !dbg !5157
  %85 = bitcast %strconv.floatInfo* %84 to i8*, !dbg !5169
  %86 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 19, !dbg !5169
  store i8* %85, i8** %86, align 4, !dbg !5169
  call void @llvm.dbg.value(metadata i64 %83, metadata !4928, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5170
  %87 = getelementptr inbounds %strconv.floatInfo, %strconv.floatInfo* %84, i32 0, i32 1, !dbg !5171
  %88 = load i32, i32* %87, align 4, !dbg !5171
  %89 = getelementptr inbounds %strconv.floatInfo, %strconv.floatInfo* %84, i32 0, i32 0, !dbg !5172
  %90 = load i32, i32* %89, align 8, !dbg !5172
  %91 = add i32 %90, %88, !dbg !5173
  %shift.overflow.i.i.i = icmp ult i32 %91, 64, !dbg !5174
  %92 = zext i32 %91 to i64, !dbg !5174
  %93 = lshr i64 %83, %92, !dbg !5174
  %94 = icmp ne i64 %93, 0, !dbg !5175
  %95 = and i1 %shift.overflow.i.i.i, %94, !dbg !5175
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5176
  %shift.overflow48.i.i.i = icmp ugt i32 %90, 63, !dbg !5177
  %96 = zext i32 %90 to i64, !dbg !5177
  %97 = lshr i64 %83, %96, !dbg !5177
  %98 = trunc i64 %97 to i32, !dbg !5178
  %99 = select i1 %shift.overflow48.i.i.i, i32 0, i32 %98, !dbg !5178
  %shift.overflow54.i.i.i = icmp ugt i32 %88, 31, !dbg !5179
  %notmask.i.i.i = shl nsw i32 -1, %88, !dbg !5180
  %.op.i.i.i = xor i32 %notmask.i.i.i, -1, !dbg !5180
  %100 = select i1 %shift.overflow54.i.i.i, i32 -1, i32 %.op.i.i.i, !dbg !5180
  %101 = and i32 %99, %100, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %101, metadata !4931, metadata !DIExpression()), !dbg !5182
  %102 = shl nuw i64 1, %96, !dbg !5183
  %shift.result61.i.i.i = select i1 %shift.overflow48.i.i.i, i64 0, i64 %102, !dbg !5183
  %103 = add i64 %shift.result61.i.i.i, -1, !dbg !5184
  %104 = and i64 %103, %83, !dbg !5185
  call void @llvm.dbg.value(metadata i64 %104, metadata !4932, metadata !DIExpression()), !dbg !5186
  %105 = icmp eq i32 %101, %100, !dbg !5159
  br i1 %105, label %switch.body1.i.i.i, label %switch.next6.i.i.i, !dbg !5159

switch.body1.i.i.i:                               ; preds = %switch.done.i.i.i
  call void @llvm.dbg.value(metadata i64 %104, metadata !4932, metadata !DIExpression()), !dbg !5187
  %.not.i.i.i = icmp eq i64 %104, 0, !dbg !5188
  %..i.i.i = select i1 %95, %runtime._string { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"strconv.genericFtoa$string.475", i32 0, i32 0), i32 4 }, %runtime._string { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"strconv.genericFtoa$string.476", i32 0, i32 0), i32 4 }
  %spec.select126.i.i.i = select i1 %.not.i.i.i, %runtime._string %..i.i.i, %runtime._string { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"strconv.genericFtoa$string.474", i32 0, i32 0), i32 3 }, !dbg !5159
  %106 = extractvalue %runtime._string %spec.select126.i.i.i, 0, !dbg !5189
  %107 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 20, !dbg !5189
  store i8* %106, i8** %107, align 4, !dbg !5189
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata %runtime._string %spec.select126.i.i.i, metadata !4933, metadata !DIExpression()), !dbg !5190
  %append.elemsLen.i.i.i = extractvalue %runtime._string %spec.select126.i.i.i, 1, !dbg !5191
  %append.new.i.i.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* nonnull %slice.ptr.i, i8* %106, i32 1, i32 68, i32 %append.elemsLen.i.i.i), !dbg !5191
  %append.newPtr.i.i.i = extractvalue { i8*, i32, i32 } %append.new.i.i.i, 0, !dbg !5191
  %108 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 21, !dbg !5192
  store i8* %append.newPtr.i.i.i, i8** %108, align 4, !dbg !5192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68), !dbg !5192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70), !dbg !5192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72), !dbg !5192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74), !dbg !5192
  br label %strconv.AppendFloat.exit.i, !dbg !5192

switch.next6.i.i.i:                               ; preds = %switch.done.i.i.i
  %109 = icmp eq i32 %101, 0, !dbg !5159
  %110 = zext i1 %109 to i32, !dbg !5159
  %111 = add i32 %101, %110, !dbg !5159
  %112 = select i1 %109, i64 0, i64 %shift.result61.i.i.i, !dbg !5159
  %113 = or i64 %112, %104, !dbg !5159
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5193
  %114 = getelementptr inbounds %strconv.floatInfo, %strconv.floatInfo* %84, i32 0, i32 2, !dbg !5194
  %115 = load i32, i32* %114, align 8, !dbg !5194
  %116 = add i32 %111, %115, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %116, metadata !4931, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i1 true, metadata !4934, metadata !DIExpression()), !dbg !5197
  %digs.i.i.i = tail call fastcc i8* @runtime.alloc(i32 24), !dbg !5198
  %117 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 22, !dbg !5198
  store i8* %digs.i.i.i, i8** %117, align 4, !dbg !5198
  %118 = bitcast i8* %digs.i.i.i to %strconv.decimalSlice*, !dbg !5198
  call void @llvm.dbg.value(metadata i1 false, metadata !4935, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %67, metadata !4926, metadata !DIExpression()), !dbg !5200
  %119 = icmp slt i32 %67, 0, !dbg !5201
  call void @llvm.dbg.value(metadata i1 %119, metadata !4936, metadata !DIExpression()), !dbg !5202
  br i1 %119, label %if.then12.i.i.i, label %switch.body31.i.i.i, !dbg !5159

if.then12.i.i.i:                                  ; preds = %switch.next6.i.i.i
  %120 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca131.i.i.i, i32 0, i32 1, !dbg !5203
  %.fca.3.gep153.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca131.i.i.i, i32 0, i32 2, !dbg !5203
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %68, i8 0, i64 16, i1 false), !dbg !5203
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !4937, metadata !DIExpression()), !dbg !5204
  %121 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca129.i.i.i, i32 0, i32 1, !dbg !5205
  %.fca.3.gep143.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca129.i.i.i, i32 0, i32 2, !dbg !5205
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %70, i8 0, i64 16, i1 false), !dbg !5205
  %122 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca127.i.i.i, i32 0, i32 1, !dbg !5206
  %.fca.3.gep136.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca127.i.i.i, i32 0, i32 2, !dbg !5206
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %72, i8 0, i64 16, i1 false), !dbg !5206
  call void @llvm.dbg.value(metadata i64 %113, metadata !4932, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i32 %116, metadata !4931, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5210
  %123 = bitcast %strconv.extFloat* %upper.i.i.i.i to i8*, !dbg !5035
  %124 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 27, !dbg !5035
  store i8* %123, i8** %124, align 4, !dbg !5035
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123), !dbg !5035
  %125 = bitcast %strconv.extFloat* %lower.i.i.i.i to i8*, !dbg !5035
  %126 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 26, !dbg !5035
  store i8* %125, i8** %126, align 4, !dbg !5035
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125), !dbg !5035
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i64 %113, metadata !5041, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %116, metadata !5042, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i1 %95, metadata !5043, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !5044, metadata !DIExpression()), !dbg !5035
  %.fca.0.gep.i13.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %lower.i.i.i.i, i32 0, i32 0, !dbg !5035
  store i64 0, i64* %.fca.0.gep.i13.i.i.i, align 8, !dbg !5035
  %.fca.1.gep.i.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %lower.i.i.i.i, i32 0, i32 1, !dbg !5035
  store i32 0, i32* %.fca.1.gep.i.i.i.i, align 8, !dbg !5035
  %.fca.2.gep.i.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %lower.i.i.i.i, i32 0, i32 2, !dbg !5035
  store i1 false, i1* %.fca.2.gep.i.i.i.i, align 4, !dbg !5035
  %.fca.0.gep156.i.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %upper.i.i.i.i, i32 0, i32 0, !dbg !5035
  store i64 0, i64* %.fca.0.gep156.i.i.i.i, align 8, !dbg !5035
  %.fca.1.gep157.i.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %upper.i.i.i.i, i32 0, i32 1, !dbg !5035
  store i32 0, i32* %.fca.1.gep157.i.i.i.i, align 8, !dbg !5035
  %.fca.2.gep158.i.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %upper.i.i.i.i, i32 0, i32 2, !dbg !5035
  store i1 false, i1* %.fca.2.gep158.i.i.i.i, align 4, !dbg !5035
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5211
  %127 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca131.i.i.i, i32 0, i32 0, !dbg !5212
  call void @llvm.dbg.value(metadata i64 %113, metadata !5041, metadata !DIExpression()), !dbg !5213
  store i64 %113, i64* %127, align 8, !dbg !5212
  call void @llvm.dbg.value(metadata i64 %113, metadata !5045, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i32 %116, metadata !5042, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !5044, metadata !DIExpression()), !dbg !5216
  %128 = load i32, i32* %89, align 8, !dbg !5217
  %129 = sub i32 %116, %128, !dbg !5218
  store i32 %129, i32* %120, align 8, !dbg !5219
  call void @llvm.dbg.value(metadata i32 %129, metadata !5046, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i1 %95, metadata !5043, metadata !DIExpression()), !dbg !5221
  store i1 %95, i1* %.fca.3.gep153.i.i.i, align 4, !dbg !5222
  call void @llvm.dbg.value(metadata i1 %95, metadata !5047, metadata !DIExpression()), !dbg !5222
  %130 = icmp slt i32 %129, 1, !dbg !5223
  br i1 %130, label %deref.next20.i.i.i.i, label %gep.next56.i.i.i.i, !dbg !5224

deref.next20.i.i.i.i:                             ; preds = %if.then12.i.i.i
  call void @llvm.dbg.value(metadata i64 %113, metadata !5041, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5226
  %131 = sub i32 0, %129, !dbg !5227
  %shift.overflow.i.i.i.i = icmp ugt i32 %131, 63, !dbg !5228
  %132 = zext i32 %131 to i64, !dbg !5228
  %133 = shl nsw i64 -1, %132, !dbg !5229
  %134 = and i64 %133, %113, !dbg !5229
  %shift.result26.i.i.i.i = select i1 %shift.overflow.i.i.i.i, i64 0, i64 %134, !dbg !5229
  %135 = icmp eq i64 %shift.result26.i.i.i.i, %113, !dbg !5230
  br i1 %135, label %deref.next34.i.i.i.i, label %gep.next56.i.i.i.i, !dbg !5224

deref.next34.i.i.i.i:                             ; preds = %deref.next20.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5231
  %136 = lshr i64 %113, %132, !dbg !5232
  %shift.result36.i.i.i.i = select i1 %shift.overflow.i.i.i.i, i64 0, i64 %136, !dbg !5232
  store i64 %shift.result36.i.i.i.i, i64* %127, align 8, !dbg !5233
  call void @llvm.dbg.value(metadata i64 %shift.result36.i.i.i.i, metadata !5045, metadata !DIExpression()), !dbg !5233
  store i32 0, i32* %120, align 8, !dbg !5234
  call void @llvm.dbg.value(metadata i32 0, metadata !5046, metadata !DIExpression()), !dbg !5234
  %.fca.0.insert52.i.i.i = insertvalue %strconv.extFloat undef, i64 %shift.result36.i.i.i.i, 0, !dbg !5235
  %.fca.1.insert55.i.i.i = insertvalue %strconv.extFloat %.fca.0.insert52.i.i.i, i32 0, 1, !dbg !5235
  %.fca.2.insert58.i.i.i = insertvalue %strconv.extFloat %.fca.1.insert55.i.i.i, i1 %95, 2, !dbg !5235
  %137 = insertvalue { %strconv.extFloat, %strconv.extFloat } zeroinitializer, %strconv.extFloat %.fca.2.insert58.i.i.i, 0, !dbg !5236
  %138 = insertvalue { %strconv.extFloat, %strconv.extFloat } %137, %strconv.extFloat %.fca.2.insert58.i.i.i, 1, !dbg !5236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123), !dbg !5236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125), !dbg !5236
  br label %"(*strconv.extFloat).AssignComputeBounds.exit.i.i.i", !dbg !5236

gep.next56.i.i.i.i:                               ; preds = %deref.next20.i.i.i.i, %if.then12.i.i.i
  call void @llvm.dbg.value(metadata i32 %116, metadata !5042, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !5044, metadata !DIExpression()), !dbg !5238
  %139 = load i32, i32* %114, align 8, !dbg !5239
  %140 = sub i32 %116, %139, !dbg !5240
  call void @llvm.dbg.value(metadata i32 %140, metadata !5048, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5040, metadata !DIExpression()), !dbg !5242
  %141 = shl i64 %113, 1, !dbg !5243
  %142 = or i64 %141, 1, !dbg !5244
  %143 = add i32 %129, -1, !dbg !5245
  call void @llvm.dbg.value(metadata i64 %113, metadata !5041, metadata !DIExpression()), !dbg !5246
  %shift.overflow87.i.i.i.i = icmp ugt i32 %128, 63, !dbg !5247
  %144 = zext i32 %128 to i64, !dbg !5247
  %145 = shl nuw i64 1, %144, !dbg !5247
  %shift.result88.i.i.i.i = select i1 %shift.overflow87.i.i.i.i, i64 0, i64 %145, !dbg !5247
  %146 = icmp ne i64 %shift.result88.i.i.i.i, %113, !dbg !5248
  %147 = icmp eq i32 %140, 1
  %or.cond.i.i.i.i = or i1 %146, %147, !dbg !5224
  %148 = shl i64 %113, 2, !dbg !5224
  %149 = add i32 %129, -2, !dbg !5224
  %storemerge2.in.i.i.i.i = select i1 %or.cond.i.i.i.i, i64 %141, i64 %148, !dbg !5224
  %storemerge1.i.i.i.i = select i1 %or.cond.i.i.i.i, i32 %143, i32 %149, !dbg !5224
  %storemerge2.i.i.i.i = add i64 %storemerge2.in.i.i.i.i, -1, !dbg !5224
  %.fca.0.insert149.i.i.i.i = insertvalue %strconv.extFloat undef, i64 %storemerge2.i.i.i.i, 0, !dbg !5224
  %.fca.1.insert152.i.i.i.i = insertvalue %strconv.extFloat %.fca.0.insert149.i.i.i.i, i32 %storemerge1.i.i.i.i, 1, !dbg !5224
  %.fca.2.insert155.i.i.i.i = insertvalue %strconv.extFloat %.fca.1.insert152.i.i.i.i, i1 %95, 2, !dbg !5224
  %.fca.0.insert176.i.i.i.i = insertvalue %strconv.extFloat undef, i64 %142, 0, !dbg !5224
  %.fca.1.insert179.i.i.i.i = insertvalue %strconv.extFloat %.fca.0.insert176.i.i.i.i, i32 %143, 1, !dbg !5224
  %.fca.2.insert182.i.i.i.i = insertvalue %strconv.extFloat %.fca.1.insert179.i.i.i.i, i1 %95, 2, !dbg !5224
  %150 = insertvalue { %strconv.extFloat, %strconv.extFloat } zeroinitializer, %strconv.extFloat %.fca.2.insert155.i.i.i.i, 0, !dbg !5249
  %151 = insertvalue { %strconv.extFloat, %strconv.extFloat } %150, %strconv.extFloat %.fca.2.insert182.i.i.i.i, 1, !dbg !5249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123), !dbg !5249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125), !dbg !5249
  br label %"(*strconv.extFloat).AssignComputeBounds.exit.i.i.i", !dbg !5249

"(*strconv.extFloat).AssignComputeBounds.exit.i.i.i": ; preds = %gep.next56.i.i.i.i, %deref.next34.i.i.i.i
  %152 = phi i32 [ 0, %deref.next34.i.i.i.i ], [ %129, %gep.next56.i.i.i.i ]
  %153 = phi i64 [ %shift.result36.i.i.i.i, %deref.next34.i.i.i.i ], [ %113, %gep.next56.i.i.i.i ], !dbg !5250
  %154 = phi { %strconv.extFloat, %strconv.extFloat } [ %138, %deref.next34.i.i.i.i ], [ %151, %gep.next56.i.i.i.i ]
  %155 = extractvalue { %strconv.extFloat, %strconv.extFloat } %154, 0, !dbg !5159
  %.fca.0.extract144.i.i.i = extractvalue %strconv.extFloat %155, 0, !dbg !5205
  %.fca.0.gep145.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca129.i.i.i, i32 0, i32 0, !dbg !5205
  store i64 %.fca.0.extract144.i.i.i, i64* %.fca.0.gep145.i.i.i, align 8, !dbg !5205
  %.fca.1.extract146.i.i.i = extractvalue %strconv.extFloat %155, 1, !dbg !5205
  store i32 %.fca.1.extract146.i.i.i, i32* %121, align 8, !dbg !5205
  %.fca.2.extract148.i.i.i = extractvalue %strconv.extFloat %155, 2, !dbg !5205
  store i1 %.fca.2.extract148.i.i.i, i1* %.fca.3.gep143.i.i.i, align 4, !dbg !5205
  call void @llvm.dbg.value(metadata %strconv.extFloat %155, metadata !4938, metadata !DIExpression()), !dbg !5205
  %156 = extractvalue { %strconv.extFloat, %strconv.extFloat } %154, 1, !dbg !5159
  %.fca.0.extract.i.i.i = extractvalue %strconv.extFloat %156, 0, !dbg !5206
  %.fca.0.gep137.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca127.i.i.i, i32 0, i32 0, !dbg !5206
  store i64 %.fca.0.extract.i.i.i, i64* %.fca.0.gep137.i.i.i, align 8, !dbg !5206
  %.fca.1.extract.i.i.i = extractvalue %strconv.extFloat %156, 1, !dbg !5206
  store i32 %.fca.1.extract.i.i.i, i32* %122, align 8, !dbg !5206
  %.fca.2.extract.i.i.i = extractvalue %strconv.extFloat %156, 2, !dbg !5206
  store i1 %.fca.2.extract.i.i.i, i1* %.fca.3.gep136.i.i.i, align 4, !dbg !5206
  call void @llvm.dbg.value(metadata %strconv.extFloat %156, metadata !4939, metadata !DIExpression()), !dbg !5206
  %buf.i.i.i = tail call fastcc i8* @runtime.alloc(i32 32), !dbg !5251
  %157 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 28, !dbg !5252
  store i8* %buf.i.i.i, i8** %157, align 4, !dbg !5252
  %.repack8.i.i.i = bitcast i8* %digs.i.i.i to i8**, !dbg !5252
  store i8* %buf.i.i.i, i8** %.repack8.i.i.i, align 4, !dbg !5252
  %.repack9.i.i.i = getelementptr inbounds i8, i8* %digs.i.i.i, i32 4, !dbg !5252
  %158 = bitcast i8* %.repack9.i.i.i to i32*, !dbg !5252
  store i32 32, i32* %158, align 4, !dbg !5252
  %.repack11.i.i.i = getelementptr inbounds i8, i8* %digs.i.i.i, i32 8, !dbg !5252
  %159 = bitcast i8* %.repack11.i.i.i to i32*, !dbg !5252
  store i32 32, i32* %159, align 4, !dbg !5252
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4940, metadata !DIExpression()), !dbg !5252
  %160 = getelementptr inbounds [24 x i8], [24 x i8]* %buf.i.i.i.i, i32 0, i32 0, !dbg !5000
  %161 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 29, !dbg !5000
  store i8* %160, i8** %161, align 4, !dbg !5000
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160), !dbg !5000
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5253
  %162 = icmp eq i64 %153, 0, !dbg !5254
  br i1 %162, label %if.then.i.i.i.i, label %gep.next44.i.i.i.i, !dbg !5255

if.then.i.i.i.i:                                  ; preds = %"(*strconv.extFloat).AssignComputeBounds.exit.i.i.i"
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5256
  %163 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5257
  %164 = bitcast i8* %163 to i32*, !dbg !5257
  store i32 0, i32* %164, align 4, !dbg !5257
  call void @llvm.dbg.value(metadata i32 0, metadata !5009, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5258
  %165 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5259
  %166 = bitcast i8* %165 to i32*, !dbg !5259
  store i32 0, i32* %166, align 4, !dbg !5259
  call void @llvm.dbg.value(metadata i32 0, metadata !5010, metadata !DIExpression()), !dbg !5259
  %167 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 20, !dbg !5260
  %168 = bitcast i8* %167 to i1*, !dbg !5260
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5261
  store i1 %95, i1* %168, align 1, !dbg !5260
  call void @llvm.dbg.value(metadata i1 %95, metadata !5011, metadata !DIExpression()), !dbg !5260
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160), !dbg !5262
  br label %if.done22.thread.i.i.i, !dbg !5262

cond.true.i.i.i.i:                                ; preds = %gep.next44.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5264
  %169 = icmp eq i64 %.fca.0.extract144.i.i.i, %153, !dbg !5265
  %170 = icmp eq i32 %.fca.1.extract146.i.i.i, 0, !dbg !5265
  %171 = and i1 %169, %170, !dbg !5265
  %172 = xor i1 %95, %.fca.2.extract148.i.i.i, !dbg !5265
  %173 = xor i1 %172, true, !dbg !5265
  %174 = and i1 %171, %173, !dbg !5265
  br i1 %174, label %deref.next52.i.i.i.i, label %gep.next122.i.i.i.i, !dbg !5255

if.then2.i.i.i.i:                                 ; preds = %deref.next52.i.i.i.i
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(24) %160, i8 0, i64 24, i1 false), !dbg !5000
  call void @llvm.dbg.value(metadata i32 23, metadata !5012, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i64 %153, metadata !5013, metadata !DIExpression()), !dbg !5268
  br label %for.loop.i.i.i.i, !dbg !5255

for.loop.i.i.i.i:                                 ; preds = %lookup.next.i.i.i.i, %if.then2.i.i.i.i
  %175 = phi i32 [ 23, %if.then2.i.i.i.i ], [ %257, %lookup.next.i.i.i.i ], !dbg !5266
  %176 = phi i64 [ %153, %if.then2.i.i.i.i ], [ %177, %lookup.next.i.i.i.i ], !dbg !5268
  call void @llvm.dbg.value(metadata i64 %176, metadata !5013, metadata !DIExpression()), !dbg !5269
  %.not12.i.i.i.i = icmp eq i64 %176, 0, !dbg !5270
  br i1 %.not12.i.i.i.i, label %for.done.i.i.i.i, label %for.body.i.i.i.i, !dbg !5255

for.body.i.i.i.i:                                 ; preds = %for.loop.i.i.i.i
  call void @llvm.dbg.value(metadata i64 %176, metadata !5013, metadata !DIExpression()), !dbg !5271
  %177 = udiv i64 %176, 10, !dbg !5272
  call void @llvm.dbg.value(metadata i64 %177, metadata !5014, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata i64 undef, metadata !5013, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i32 %175, metadata !5012, metadata !DIExpression()), !dbg !5275
  %178 = icmp ugt i32 %175, 23, !dbg !5276
  br i1 %178, label %lookup.throw.i.i.i.i, label %lookup.next.i.i.i.i, !dbg !5276

for.done.i.i.i.i:                                 ; preds = %for.loop.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %175, metadata !5012, metadata !DIExpression()), !dbg !5277
  %179 = sub nsw i32 23, %175, !dbg !5278
  call void @llvm.dbg.value(metadata i32 %179, metadata !5015, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i32 0, metadata !5016, metadata !DIExpression()), !dbg !5280
  br label %for.loop3.i.i.i.i, !dbg !5255

for.loop3.i.i.i.i:                                ; preds = %lookup.next70.i.i.i.i, %for.done.i.i.i.i
  %180 = phi i32 [ 0, %for.done.i.i.i.i ], [ %258, %lookup.next70.i.i.i.i ], !dbg !5280
  call void @llvm.dbg.value(metadata i32 %180, metadata !5016, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata i32 %179, metadata !5015, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5284
  %exitcond.not.i.i.i.i = icmp eq i32 %180, %179, !dbg !5285
  br i1 %exitcond.not.i.i.i.i, label %for.done5.i.i.i.i, label %for.body4.i.i.i.i, !dbg !5255

for.body4.i.i.i.i:                                ; preds = %for.loop3.i.i.i.i
  %.unpack21.i.i.i.i = load i8*, i8** %.repack8.i.i.i, align 4, !dbg !5286
  %181 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 30, !dbg !5286
  store i8* %.unpack21.i.i.i.i, i8** %181, align 4, !dbg !5286
  %.unpack23.i.i.i.i = load i32, i32* %158, align 4, !dbg !5286
  call void @llvm.dbg.value(metadata i32 %180, metadata !5016, metadata !DIExpression()), !dbg !5287
  %.not26.i.i.i.i = icmp ult i32 %180, %.unpack23.i.i.i.i, !dbg !5288
  br i1 %.not26.i.i.i.i, label %lookup.next70.i.i.i.i, label %lookup.throw65.i.i.i.i, !dbg !5288

for.done5.i.i.i.i:                                ; preds = %for.loop3.i.i.i.i
  %182 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5289
  %183 = bitcast i8* %182 to i32*, !dbg !5289
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5290
  %184 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5291
  %185 = bitcast i8* %184 to i32*, !dbg !5291
  call void @llvm.dbg.value(metadata i32 %179, metadata !5015, metadata !DIExpression()), !dbg !5292
  store i32 %179, i32* %183, align 4, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %179, metadata !5009, metadata !DIExpression()), !dbg !5289
  store i32 %179, i32* %185, align 4, !dbg !5291
  call void @llvm.dbg.value(metadata i32 %179, metadata !5010, metadata !DIExpression()), !dbg !5291
  br label %for.loop6.i.i.i.i, !dbg !5255

for.loop6.i.i.i.i:                                ; preds = %deref.next98.i.i.i.i, %for.done5.i.i.i.i
  %186 = phi i32 [ %265, %deref.next98.i.i.i.i ], [ %179, %for.done5.i.i.i.i ], !dbg !5293
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5294
  %187 = icmp sgt i32 %186, 0, !dbg !5295
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5297
  br i1 %187, label %deref.next86.i.i.i.i, label %deref.next104.i.i.i.i, !dbg !5255

if.done14.i.i.i.i:                                ; preds = %deref.next134.i.i.i.i, %gep.next122.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5299
  %188 = icmp sgt i32 %.fca.1.extract146.i.i.i, %272, !dbg !5300
  br i1 %188, label %gep.next156.i.i.i.i, label %if.done16.i.i.i.i, !dbg !5255

if.done16.i.i.i.i:                                ; preds = %gep.next156.i.i.i.i, %if.done14.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5304, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5309, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5310, metadata !DIExpression()), !dbg !5315
  %189 = call fastcc { i32, i32 } @"(*strconv.extFloat).frexp10"(%strconv.extFloat* nonnull %stackalloc.alloca127.i.i.i), !dbg !5316
  call void @llvm.dbg.value(metadata i32 undef, metadata !5311, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5318
  %190 = extractvalue { i32, i32 } %189, 1, !dbg !5319
  call void @llvm.dbg.value(metadata i32 %190, metadata !5312, metadata !DIExpression()), !dbg !5320
  %191 = extractvalue { i32, i32 } %189, 0, !dbg !5319
  call void @llvm.dbg.value(metadata i32 %191, metadata !5311, metadata !DIExpression()), !dbg !5317
  %192 = getelementptr inbounds [87 x %strconv.extFloat], [87 x %strconv.extFloat]* @strconv.powersOfTen, i32 0, i32 %190, !dbg !5321
  %193 = load %strconv.extFloat, %strconv.extFloat* %192, align 16, !dbg !5321
  %194 = extractvalue %strconv.extFloat %193, 0, !dbg !5322
  %195 = extractvalue %strconv.extFloat %193, 1, !dbg !5322
  %196 = extractvalue %strconv.extFloat %193, 2, !dbg !5322
  call fastcc void @"(*strconv.extFloat).Multiply"(%strconv.extFloat* nonnull %stackalloc.alloca129.i.i.i, i64 %194, i32 %195, i1 %196), !dbg !5322
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()), !dbg !5323
  call fastcc void @"(*strconv.extFloat).Multiply"(%strconv.extFloat* nonnull %stackalloc.alloca131.i.i.i, i64 %194, i32 %195, i1 %196), !dbg !5324
  call void @llvm.dbg.value(metadata i32 %191, metadata !5019, metadata !DIExpression()), !dbg !5325
  %197 = load i64, i64* %.fca.0.gep137.i.i.i, align 8, !dbg !5326
  %198 = add i64 %197, 1, !dbg !5327
  store i64 %198, i64* %.fca.0.gep137.i.i.i, align 8, !dbg !5326
  call void @llvm.dbg.value(metadata i64 %198, metadata !5017, metadata !DIExpression()), !dbg !5326
  %199 = load i64, i64* %.fca.0.gep145.i.i.i, align 8, !dbg !5328
  %200 = add i64 %199, -1, !dbg !5329
  store i64 %200, i64* %.fca.0.gep145.i.i.i, align 8, !dbg !5328
  call void @llvm.dbg.value(metadata i64 %200, metadata !5017, metadata !DIExpression()), !dbg !5328
  %201 = load i32, i32* %122, align 8, !dbg !5330
  %202 = sub i32 0, %201, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5332
  %shift.overflow199.i.i.i.i = icmp ugt i32 %202, 63, !dbg !5333
  %203 = zext i32 %202 to i64, !dbg !5333
  %204 = lshr i64 %198, %203, !dbg !5333
  %205 = trunc i64 %204 to i32, !dbg !5334
  %206 = select i1 %shift.overflow199.i.i.i.i, i32 0, i32 %205, !dbg !5334
  call void @llvm.dbg.value(metadata i32 %206, metadata !5021, metadata !DIExpression()), !dbg !5335
  %207 = zext i32 %206 to i64, !dbg !5336
  %208 = shl i64 %207, %203, !dbg !5337
  %shift.result206.i.i.i.i = select i1 %shift.overflow199.i.i.i.i, i64 0, i64 %208, !dbg !5337
  %209 = sub i64 %198, %shift.result206.i.i.i.i, !dbg !5338
  call void @llvm.dbg.value(metadata i64 %209, metadata !5022, metadata !DIExpression()), !dbg !5339
  %210 = sub i64 %198, %200, !dbg !5340
  call void @llvm.dbg.value(metadata i64 %210, metadata !5023, metadata !DIExpression()), !dbg !5341
  %211 = load i64, i64* %127, align 8, !dbg !5342
  %212 = sub i64 %198, %211, !dbg !5343
  call void @llvm.dbg.value(metadata i64 %212, metadata !5024, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata i32 0, metadata !5025, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.value(metadata i32 0, metadata !5026, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i64 1, metadata !5027, metadata !DIExpression()), !dbg !5347
  br label %for.loop17.i.i.i.i, !dbg !5255

for.loop17.i.i.i.i:                               ; preds = %if.done20.i.i.i.i, %if.done16.i.i.i.i
  %213 = phi i32 [ 0, %if.done16.i.i.i.i ], [ %217, %if.done20.i.i.i.i ], !dbg !5346
  %214 = phi i64 [ 1, %if.done16.i.i.i.i ], [ %216, %if.done20.i.i.i.i ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %213, metadata !5026, metadata !DIExpression()), !dbg !5348
  %exitcond64.not.i.i.i.i = icmp eq i32 %213, 20, !dbg !5349
  br i1 %exitcond64.not.i.i.i.i, label %for.done21.i.i.i.i, label %for.body18.i.i.i.i, !dbg !5255

for.body18.i.i.i.i:                               ; preds = %for.loop17.i.i.i.i
  call void @llvm.dbg.value(metadata i64 %214, metadata !5027, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.value(metadata i32 %206, metadata !5021, metadata !DIExpression()), !dbg !5351
  %215 = icmp ugt i64 %214, %207, !dbg !5352
  br i1 %215, label %for.done21.i.i.i.i, label %if.done20.i.i.i.i, !dbg !5255

if.done20.i.i.i.i:                                ; preds = %for.body18.i.i.i.i
  %216 = mul i64 %214, 10, !dbg !5353
  call void @llvm.dbg.value(metadata i64 %216, metadata !5027, metadata !DIExpression()), !dbg !5353
  %217 = add nuw nsw i32 %213, 1, !dbg !5354
  call void @llvm.dbg.value(metadata i32 %217, metadata !5026, metadata !DIExpression()), !dbg !5354
  br label %for.loop17.i.i.i.i, !dbg !5255

for.done21.i.i.i.i:                               ; preds = %for.body18.i.i.i.i, %for.loop17.i.i.i.i
  %218 = phi i32 [ 0, %for.loop17.i.i.i.i ], [ %213, %for.body18.i.i.i.i ], !dbg !5345
  call void @llvm.dbg.value(metadata i32 0, metadata !5028, metadata !DIExpression()), !dbg !5355
  br label %for.loop22.i.i.i.i, !dbg !5255

for.loop22.i.i.i.i:                               ; preds = %if.done25.i.i.i.i, %for.done21.i.i.i.i
  %219 = phi i32 [ %206, %for.done21.i.i.i.i ], [ %289, %if.done25.i.i.i.i ], !dbg !5356
  %220 = phi i32 [ 0, %for.done21.i.i.i.i ], [ %224, %if.done25.i.i.i.i ], !dbg !5355
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %218, metadata !5025, metadata !DIExpression()), !dbg !5358
  %exitcond63.not.i.i.i.i = icmp eq i32 %220, %218, !dbg !5359
  br i1 %exitcond63.not.i.i.i.i, label %for.done26.i.i.i.i, label %for.body23.i.i.i.i, !dbg !5255

for.body23.i.i.i.i:                               ; preds = %for.loop22.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %218, metadata !5025, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5361
  %221 = xor i32 %220, -1, !dbg !5362
  %222 = add nsw i32 %218, %221, !dbg !5362
  %223 = icmp ugt i32 %222, 19, !dbg !5363
  br i1 %223, label %lookup.throw223.i.i.i.i, label %lookup.next224.i.i.i.i, !dbg !5363

if.done25.i.i.i.i:                                ; preds = %lookup.next232.i.i.i.i
  %224 = add nuw nsw i32 %220, 1, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %224, metadata !5028, metadata !DIExpression()), !dbg !5364
  br label %for.loop22.i.i.i.i, !dbg !5255

for.done26.i.i.i.i:                               ; preds = %for.loop22.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5365
  %225 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5366
  %226 = bitcast i8* %225 to i32*, !dbg !5366
  call void @llvm.dbg.value(metadata i32 %218, metadata !5025, metadata !DIExpression()), !dbg !5367
  store i32 %218, i32* %226, align 4, !dbg !5366
  call void @llvm.dbg.value(metadata i32 %218, metadata !5009, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5368
  %227 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5369
  %228 = bitcast i8* %227 to i32*, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %191, metadata !5019, metadata !DIExpression()), !dbg !5370
  %229 = add i32 %218, %191, !dbg !5371
  store i32 %229, i32* %228, align 4, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %229, metadata !5010, metadata !DIExpression()), !dbg !5369
  %230 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 20, !dbg !5372
  %231 = bitcast i8* %230 to i1*, !dbg !5372
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5373
  %232 = load i1, i1* %.fca.3.gep153.i.i.i, align 4, !dbg !5374
  store i1 %232, i1* %231, align 1, !dbg !5372
  call void @llvm.dbg.value(metadata i1 %232, metadata !5011, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 0, metadata !5032, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.value(metadata i64 1, metadata !5033, metadata !DIExpression()), !dbg !5376
  br label %for.body27.i.i.i.i, !dbg !5255

for.body27.i.i.i.i:                               ; preds = %lookup.next286.i.i.i.i, %for.done26.i.i.i.i
  %233 = phi i64 [ %209, %for.done26.i.i.i.i ], [ %301, %lookup.next286.i.i.i.i ], !dbg !5339
  %234 = phi i64 [ 1, %for.done26.i.i.i.i ], [ %236, %lookup.next286.i.i.i.i ], !dbg !5376
  %235 = mul i64 %233, 10, !dbg !5377
  call void @llvm.dbg.value(metadata i64 %235, metadata !5022, metadata !DIExpression()), !dbg !5377
  %236 = mul i64 %234, 10, !dbg !5378
  call void @llvm.dbg.value(metadata i64 %236, metadata !5033, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5379
  %237 = lshr i64 %235, %203, !dbg !5380
  %238 = trunc i64 %237 to i32, !dbg !5381
  %239 = select i1 %shift.overflow199.i.i.i.i, i32 0, i32 %238, !dbg !5381
  call void @llvm.dbg.value(metadata i32 %239, metadata !5032, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5383
  %.unpack.i.i.i.i = load i8*, i8** %.repack8.i.i.i, align 4, !dbg !5384
  %240 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 31, !dbg !5384
  store i8* %.unpack.i.i.i.i, i8** %240, align 4, !dbg !5384
  %.unpack2.i.i.i.i = load i32, i32* %158, align 4, !dbg !5384
  %241 = load i32, i32* %226, align 4, !dbg !5385
  %.not.i.i.i.i = icmp ult i32 %241, %.unpack2.i.i.i.i, !dbg !5386
  br i1 %.not.i.i.i.i, label %lookup.next286.i.i.i.i, label %lookup.throw285.i.i.i.i, !dbg !5386

if.then28.i.i.i.i:                                ; preds = %lookup.next286.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.value(metadata i64 %301, metadata !5022, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.value(metadata i64 %212, metadata !5024, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i64 %236, metadata !5033, metadata !DIExpression()), !dbg !5390
  %242 = mul i64 %236, %212, !dbg !5391
  call void @llvm.dbg.value(metadata i64 %210, metadata !5023, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5393
  %243 = shl nuw i64 1, %203, !dbg !5394
  %shift.result296.i.i.i.i = select i1 %shift.overflow199.i.i.i.i, i64 0, i64 %243, !dbg !5394
  %244 = mul i64 %234, 20, !dbg !5395
  %245 = tail call fastcc i1 @strconv.adjustLastDigit(%strconv.decimalSlice* nonnull %118, i64 %301, i64 %242, i64 %302, i64 %shift.result296.i.i.i.i, i64 %244), !dbg !5396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160), !dbg !5397
  call void @llvm.dbg.value(metadata i1 %314, metadata !4935, metadata !DIExpression()), !dbg !5398
  br i1 %245, label %if.done22.thread.i.i.i, label %if.then21.i.i.i, !dbg !5159

gep.next44.i.i.i.i:                               ; preds = %"(*strconv.extFloat).AssignComputeBounds.exit.i.i.i"
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5399
  %246 = icmp eq i32 %152, 0, !dbg !5400
  br i1 %246, label %cond.true.i.i.i.i, label %gep.next122.i.i.i.i, !dbg !5255

deref.next52.i.i.i.i:                             ; preds = %cond.true.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5402
  %247 = icmp eq i64 %153, %.fca.0.extract.i.i.i, !dbg !5403
  %248 = icmp eq i32 %.fca.1.extract.i.i.i, 0, !dbg !5403
  %249 = and i1 %247, %248, !dbg !5403
  %250 = xor i1 %.fca.2.extract148.i.i.i, %.fca.2.extract.i.i.i, !dbg !5403
  %251 = xor i1 %250, true, !dbg !5403
  %252 = and i1 %249, %251, !dbg !5403
  br i1 %252, label %if.then2.i.i.i.i, label %gep.next122.i.i.i.i, !dbg !5255

lookup.throw.i.i.i.i:                             ; preds = %for.body.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5276
  unreachable, !dbg !5276

lookup.next.i.i.i.i:                              ; preds = %for.body.i.i.i.i
  %.neg.i.i.i.i = mul i64 %177, -10, !dbg !5404
  %253 = add i64 %.neg.i.i.i.i, %176, !dbg !5274
  call void @llvm.dbg.value(metadata i64 %253, metadata !5013, metadata !DIExpression()), !dbg !5274
  %254 = getelementptr inbounds [24 x i8], [24 x i8]* %buf.i.i.i.i, i32 0, i32 %175, !dbg !5276
  call void @llvm.dbg.value(metadata i64 undef, metadata !5013, metadata !DIExpression()), !dbg !5405
  %255 = trunc i64 %253 to i8, !dbg !5406
  %256 = add i8 %255, 48, !dbg !5406
  store i8 %256, i8* %254, align 1, !dbg !5276
  %257 = add nsw i32 %175, -1, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %257, metadata !5012, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i64 %177, metadata !5014, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.value(metadata i64 %177, metadata !5013, metadata !DIExpression()), !dbg !5409
  br label %for.loop.i.i.i.i, !dbg !5255

lookup.throw65.i.i.i.i:                           ; preds = %for.body4.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5288
  unreachable, !dbg !5288

lookup.next70.i.i.i.i:                            ; preds = %for.body4.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %175, metadata !5012, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.value(metadata i32 %180, metadata !5016, metadata !DIExpression()), !dbg !5411
  %258 = add nuw nsw i32 %180, 1, !dbg !5412
  %259 = add nsw i32 %258, %175, !dbg !5413
  %260 = getelementptr inbounds i8, i8* %.unpack21.i.i.i.i, i32 %180, !dbg !5288
  %261 = getelementptr inbounds [24 x i8], [24 x i8]* %buf.i.i.i.i, i32 0, i32 %259, !dbg !5414
  %262 = load i8, i8* %261, align 1, !dbg !5414
  store i8 %262, i8* %260, align 1, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %258, metadata !5016, metadata !DIExpression()), !dbg !5415
  br label %for.loop3.i.i.i.i, !dbg !5255

deref.next86.i.i.i.i:                             ; preds = %for.loop6.i.i.i.i
  %.unpack14.i.i.i.i = load i8*, i8** %.repack8.i.i.i, align 4, !dbg !5416
  %263 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 32, !dbg !5416
  store i8* %.unpack14.i.i.i.i, i8** %263, align 4, !dbg !5416
  %.unpack16.i.i.i.i = load i32, i32* %158, align 4, !dbg !5416
  %264 = load i32, i32* %183, align 4, !dbg !5417
  %265 = add i32 %264, -1, !dbg !5418
  %.not19.i.i.i.i = icmp ult i32 %265, %.unpack16.i.i.i.i, !dbg !5419
  br i1 %.not19.i.i.i.i, label %lookup.next94.i.i.i.i, label %lookup.throw93.i.i.i.i, !dbg !5419

lookup.throw93.i.i.i.i:                           ; preds = %deref.next86.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5419
  unreachable, !dbg !5419

lookup.next94.i.i.i.i:                            ; preds = %deref.next86.i.i.i.i
  %266 = getelementptr inbounds i8, i8* %.unpack14.i.i.i.i, i32 %265, !dbg !5419
  %267 = load i8, i8* %266, align 1, !dbg !5419
  %268 = icmp eq i8 %267, 48, !dbg !5420
  br i1 %268, label %deref.next98.i.i.i.i, label %gep.next110.i.i.i.i, !dbg !5255

deref.next98.i.i.i.i:                             ; preds = %lookup.next94.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5421
  store i32 %265, i32* %183, align 4, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %265, metadata !5009, metadata !DIExpression()), !dbg !5422
  br label %for.loop6.i.i.i.i, !dbg !5255

deref.next104.i.i.i.i:                            ; preds = %for.loop6.i.i.i.i
  %269 = icmp eq i32 %186, 0, !dbg !5423
  br i1 %269, label %store.next108.i.i.i.i, label %gep.next110.i.i.i.i, !dbg !5255

store.next108.i.i.i.i:                            ; preds = %deref.next104.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5424
  store i32 0, i32* %185, align 4, !dbg !5425
  call void @llvm.dbg.value(metadata i32 0, metadata !5010, metadata !DIExpression()), !dbg !5425
  br label %gep.next110.i.i.i.i, !dbg !5255

gep.next110.i.i.i.i:                              ; preds = %lookup.next94.i.i.i.i, %store.next108.i.i.i.i, %deref.next104.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5426
  %270 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 20, !dbg !5427
  %271 = bitcast i8* %270 to i1*, !dbg !5427
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5428
  store i1 %95, i1* %271, align 1, !dbg !5427
  call void @llvm.dbg.value(metadata i1 %95, metadata !5011, metadata !DIExpression()), !dbg !5427
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160), !dbg !5429
  br label %if.done22.thread.i.i.i, !dbg !5429

gep.next122.i.i.i.i:                              ; preds = %deref.next52.i.i.i.i, %cond.true.i.i.i.i, %gep.next44.i.i.i.i
  call fastcc void @"(*strconv.extFloat).Normalize"(%strconv.extFloat* nonnull %stackalloc.alloca127.i.i.i), !dbg !5430
  %272 = load i32, i32* %122, align 8, !dbg !5431
  %273 = icmp sgt i32 %152, %272, !dbg !5432
  br i1 %273, label %deref.next134.i.i.i.i, label %if.done14.i.i.i.i, !dbg !5255

deref.next134.i.i.i.i:                            ; preds = %gep.next122.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5434
  %274 = sub i32 %152, %272, !dbg !5435
  %275 = zext i32 %274 to i64, !dbg !5255
  %shift.overflow.i15.i.i.i = icmp ugt i32 %274, 63, !dbg !5436
  %276 = shl i64 %153, %275, !dbg !5436
  %shift.result.i.i.i.i = select i1 %shift.overflow.i15.i.i.i, i64 0, i64 %276, !dbg !5436
  store i64 %shift.result.i.i.i.i, i64* %127, align 8, !dbg !5437
  call void @llvm.dbg.value(metadata i64 %shift.result.i.i.i.i, metadata !5017, metadata !DIExpression()), !dbg !5437
  store i32 %272, i32* %120, align 8, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %272, metadata !5018, metadata !DIExpression()), !dbg !5438
  br label %if.done14.i.i.i.i, !dbg !5255

gep.next156.i.i.i.i:                              ; preds = %if.done14.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca129.i.i.i, metadata !5007, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca127.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5440
  %277 = sub i32 %.fca.1.extract146.i.i.i, %272, !dbg !5441
  %278 = zext i32 %277 to i64, !dbg !5255
  %shift.overflow167.i.i.i.i = icmp ugt i32 %277, 63, !dbg !5439
  %279 = shl i64 %.fca.0.extract144.i.i.i, %278, !dbg !5439
  %shift.result168.i.i.i.i = select i1 %shift.overflow167.i.i.i.i, i64 0, i64 %279, !dbg !5439
  store i64 %shift.result168.i.i.i.i, i64* %.fca.0.gep145.i.i.i, align 8, !dbg !5442
  call void @llvm.dbg.value(metadata i64 %shift.result168.i.i.i.i, metadata !5017, metadata !DIExpression()), !dbg !5442
  store i32 %272, i32* %121, align 8, !dbg !5443
  call void @llvm.dbg.value(metadata i32 %272, metadata !5018, metadata !DIExpression()), !dbg !5443
  br label %if.done16.i.i.i.i, !dbg !5255

lookup.throw223.i.i.i.i:                          ; preds = %for.body23.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5363
  unreachable, !dbg !5363

lookup.next224.i.i.i.i:                           ; preds = %for.body23.i.i.i.i
  %280 = getelementptr inbounds [20 x i64], [20 x i64]* @strconv.uint64pow10, i32 0, i32 %222, !dbg !5363
  %281 = load i64, i64* %280, align 8, !dbg !5363
  call void @llvm.dbg.value(metadata i32 %219, metadata !5021, metadata !DIExpression()), !dbg !5444
  call void @llvm.dbg.value(metadata i64 %281, metadata !5029, metadata !DIExpression()), !dbg !5445
  %282 = trunc i64 %281 to i32, !dbg !5446
  %283 = udiv i32 %219, %282, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %283, metadata !5030, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5449
  %.unpack6.i.i.i.i = load i8*, i8** %.repack8.i.i.i, align 4, !dbg !5450
  %284 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 33, !dbg !5450
  store i8* %.unpack6.i.i.i.i, i8** %284, align 4, !dbg !5450
  %.unpack8.i.i.i.i = load i32, i32* %158, align 4, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5451
  %.not11.i.i.i.i = icmp ult i32 %220, %.unpack8.i.i.i.i, !dbg !5452
  br i1 %.not11.i.i.i.i, label %lookup.next232.i.i.i.i, label %lookup.throw231.i.i.i.i, !dbg !5452

lookup.throw231.i.i.i.i:                          ; preds = %lookup.next224.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5452
  unreachable, !dbg !5452

lookup.next232.i.i.i.i:                           ; preds = %lookup.next224.i.i.i.i
  %285 = getelementptr inbounds i8, i8* %.unpack6.i.i.i.i, i32 %220, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %283, metadata !5030, metadata !DIExpression()), !dbg !5453
  %286 = trunc i32 %283 to i8, !dbg !5454
  %287 = add i8 %286, 48, !dbg !5454
  store i8 %287, i8* %285, align 1, !dbg !5452
  call void @llvm.dbg.value(metadata i64 %281, metadata !5029, metadata !DIExpression()), !dbg !5455
  %288 = mul i32 %283, %282, !dbg !5456
  %289 = sub nuw i32 %219, %288, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %289, metadata !5021, metadata !DIExpression()), !dbg !5458
  %290 = zext i32 %289 to i64, !dbg !5459
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5460
  %291 = shl i64 %290, %203, !dbg !5461
  %shift.result234.i.i.i.i = select i1 %shift.overflow199.i.i.i.i, i64 0, i64 %291, !dbg !5461
  call void @llvm.dbg.value(metadata i64 %209, metadata !5022, metadata !DIExpression()), !dbg !5462
  %292 = add i64 %shift.result234.i.i.i.i, %209, !dbg !5463
  call void @llvm.dbg.value(metadata i64 %292, metadata !5031, metadata !DIExpression()), !dbg !5464
  call void @llvm.dbg.value(metadata i64 %210, metadata !5023, metadata !DIExpression()), !dbg !5465
  %293 = icmp ult i64 %292, %210, !dbg !5466
  br i1 %293, label %"(*strconv.extFloat).ShortestDecimal.exit.i.i.i", label %if.done25.i.i.i.i, !dbg !5255

lookup.throw285.i.i.i.i:                          ; preds = %for.body27.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5386
  unreachable, !dbg !5386

lookup.next286.i.i.i.i:                           ; preds = %for.body27.i.i.i.i
  %294 = getelementptr inbounds i8, i8* %.unpack.i.i.i.i, i32 %241, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %239, metadata !5032, metadata !DIExpression()), !dbg !5467
  %295 = trunc i32 %239 to i8, !dbg !5468
  %296 = add i8 %295, 48, !dbg !5468
  store i8 %296, i8* %294, align 1, !dbg !5386
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5469
  %297 = load i32, i32* %226, align 4, !dbg !5470
  %298 = add i32 %297, 1, !dbg !5469
  store i32 %298, i32* %226, align 4, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %298, metadata !5009, metadata !DIExpression()), !dbg !5470
  %299 = sext i32 %239 to i64, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5472
  %300 = shl i64 %299, %203, !dbg !5473
  %shift.result294.i.i.i.i = select i1 %shift.overflow199.i.i.i.i, i64 0, i64 %300, !dbg !5473
  %301 = sub i64 %235, %shift.result294.i.i.i.i, !dbg !5474
  call void @llvm.dbg.value(metadata i64 %301, metadata !5022, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i64 %210, metadata !5023, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i64 %236, metadata !5033, metadata !DIExpression()), !dbg !5477
  %302 = mul i64 %236, %210, !dbg !5478
  %303 = icmp ult i64 %301, %302, !dbg !5479
  br i1 %303, label %if.then28.i.i.i.i, label %for.body27.i.i.i.i, !dbg !5255

"(*strconv.extFloat).ShortestDecimal.exit.i.i.i": ; preds = %lookup.next232.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %220, metadata !5028, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5006, metadata !DIExpression()), !dbg !5480
  %304 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5481
  %305 = bitcast i8* %304 to i32*, !dbg !5481
  %306 = add nuw i32 %220, 1, !dbg !5482
  store i32 %306, i32* %305, align 4, !dbg !5481
  call void @llvm.dbg.value(metadata i32 %306, metadata !5009, metadata !DIExpression()), !dbg !5481
  %307 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5483
  %308 = bitcast i8* %307 to i32*, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %218, metadata !5025, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %191, metadata !5019, metadata !DIExpression()), !dbg !5485
  %309 = add i32 %218, %191, !dbg !5486
  store i32 %309, i32* %308, align 4, !dbg !5483
  call void @llvm.dbg.value(metadata i32 %309, metadata !5010, metadata !DIExpression()), !dbg !5483
  %310 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 20, !dbg !5487
  %311 = bitcast i8* %310 to i1*, !dbg !5487
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca131.i.i.i, metadata !5005, metadata !DIExpression()), !dbg !5488
  %312 = load i1, i1* %.fca.3.gep153.i.i.i, align 4, !dbg !5489
  store i1 %312, i1* %311, align 1, !dbg !5487
  call void @llvm.dbg.value(metadata i1 %312, metadata !5011, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i64 %292, metadata !5031, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.value(metadata i64 %212, metadata !5024, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i64 %210, metadata !5023, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i64 %281, metadata !5029, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %202, metadata !5020, metadata !DIExpression()), !dbg !5494
  %313 = shl i64 %281, %203, !dbg !5495
  %shift.result252.i.i.i.i = select i1 %shift.overflow199.i.i.i.i, i64 0, i64 %313, !dbg !5495
  %314 = tail call fastcc i1 @strconv.adjustLastDigit(%strconv.decimalSlice* nonnull %118, i64 %292, i64 %212, i64 %210, i64 %shift.result252.i.i.i.i, i64 2), !dbg !5496
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160), !dbg !5497
  call void @llvm.dbg.value(metadata i1 %314, metadata !4935, metadata !DIExpression()), !dbg !5398
  br i1 %314, label %if.done22.thread.i.i.i, label %if.then21.i.i.i, !dbg !5159

if.then21.i.i.i:                                  ; preds = %"(*strconv.extFloat).ShortestDecimal.exit.i.i.i", %if.then28.i.i.i.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.value(metadata i32 %67, metadata !4926, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i64 %113, metadata !4932, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %116, metadata !4931, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5504
  %315 = tail call fastcc { i8*, i32, i32 } @strconv.bigFtoa(i8* nonnull %slice.ptr.i, i32 %67, i1 %95, i64 %113, i32 %116, %strconv.floatInfo* %84), !dbg !5505
  %316 = extractvalue { i8*, i32, i32 } %315, 0, !dbg !5505
  %317 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 34, !dbg !5506
  store i8* %316, i8** %317, align 4, !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74), !dbg !5506
  br label %strconv.AppendFloat.exit.i, !dbg !5506

if.done22.thread70.i.i.i:                         ; preds = %for.loop22.i28.i.i.i, %gep.next111.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328), !dbg !5507
  call void @llvm.dbg.value(metadata i1 false, metadata !4935, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5509
  br label %deref.next95.i.i.i, !dbg !5159

if.done22.i.i.i:                                  ; preds = %for.body16.i.i.i.i, %if.done4.i.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328), !dbg !5507
  call void @llvm.dbg.value(metadata i1 false, metadata !4935, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5509
  br label %if.then24.i.i.i, !dbg !5159

if.then24.i.i.i:                                  ; preds = %switch.body31.i.i.i, %if.done22.i.i.i
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4926, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.value(metadata i64 %113, metadata !4932, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 %116, metadata !4931, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5515
  %318 = tail call fastcc { i8*, i32, i32 } @strconv.bigFtoa(i8* nonnull %slice.ptr.i, i32 %spec.select.i.i.i, i1 %95, i64 %113, i32 %116, %strconv.floatInfo* %84), !dbg !5516
  %319 = extractvalue { i8*, i32, i32 } %318, 0, !dbg !5516
  %320 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 35, !dbg !5517
  store i8* %319, i8** %320, align 4, !dbg !5517
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68), !dbg !5517
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70), !dbg !5517
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72), !dbg !5517
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74), !dbg !5517
  br label %strconv.AppendFloat.exit.i, !dbg !5517

if.then28.i.i.i:                                  ; preds = %switch.body31.i.i.i
  %buf96.i.i.i = tail call fastcc i8* @runtime.alloc(i32 24), !dbg !5518
  %321 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 36, !dbg !5519
  store i8* %buf96.i.i.i, i8** %321, align 4, !dbg !5519
  %.repack.i.i.i = bitcast i8* %digs.i.i.i to i8**, !dbg !5519
  store i8* %buf96.i.i.i, i8** %.repack.i.i.i, align 4, !dbg !5519
  %.repack1.i.i.i = getelementptr inbounds i8, i8* %digs.i.i.i, i32 4, !dbg !5519
  %322 = bitcast i8* %.repack1.i.i.i to i32*, !dbg !5519
  store i32 24, i32* %322, align 4, !dbg !5519
  %.repack3.i.i.i = getelementptr inbounds i8, i8* %digs.i.i.i, i32 8, !dbg !5519
  %323 = bitcast i8* %.repack3.i.i.i to i32*, !dbg !5519
  store i32 24, i32* %323, align 4, !dbg !5519
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4940, metadata !DIExpression()), !dbg !5519
  %324 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca.i.i.i, i32 0, i32 1, !dbg !5520
  %.fca.3.gep.i.i.i = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca.i.i.i, i32 0, i32 2, !dbg !5520
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %74, i8 0, i64 16, i1 false), !dbg !5520
  %325 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %stackalloc.alloca.i.i.i, i32 0, i32 0, !dbg !5159
  call void @llvm.dbg.value(metadata i64 %113, metadata !4932, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %116, metadata !4931, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata %strconv.floatInfo* %84, metadata !4929, metadata !DIExpression()), !dbg !5523
  %326 = load i32, i32* %89, align 8, !dbg !5524
  %327 = sub i32 %116, %326, !dbg !5525
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5526
  store i64 %113, i64* %325, align 8, !dbg !5521
  store i32 %327, i32* %324, align 8, !dbg !5522
  store i1 %95, i1* %.fca.3.gep.i.i.i, align 4, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4942, metadata !DIExpression()), !dbg !5527
  %328 = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i16.i.i.i, i32 0, i32 0, !dbg !4969
  %329 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 38, !dbg !4969
  store i8* %328, i8** %329, align 4, !dbg !4969
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %328), !dbg !4969
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4976, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca.i.i.i, metadata !4974, metadata !DIExpression()), !dbg !5528
  %330 = icmp eq i64 %113, 0, !dbg !5529
  br i1 %330, label %if.done22.thread69.i.i.i, label %if.done.i.i.i.i, !dbg !5530

if.done22.thread69.i.i.i:                         ; preds = %if.then28.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5531
  %331 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5532
  %332 = bitcast i8* %331 to i32*, !dbg !5532
  store i32 0, i32* %332, align 4, !dbg !5532
  call void @llvm.dbg.value(metadata i32 0, metadata !4977, metadata !DIExpression()), !dbg !5532
  %333 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5533
  %334 = bitcast i8* %333 to i32*, !dbg !5533
  store i32 0, i32* %334, align 4, !dbg !5533
  call void @llvm.dbg.value(metadata i32 0, metadata !4978, metadata !DIExpression()), !dbg !5533
  %335 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 20, !dbg !5534
  %336 = bitcast i8* %335 to i1*, !dbg !5534
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca.i.i.i, metadata !4974, metadata !DIExpression()), !dbg !5535
  store i1 %95, i1* %336, align 1, !dbg !5534
  call void @llvm.dbg.value(metadata i1 %95, metadata !4979, metadata !DIExpression()), !dbg !5534
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328), !dbg !5536
  call void @llvm.dbg.value(metadata i1 false, metadata !4935, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5509
  br label %deref.next95.i.i.i, !dbg !5159

if.done.i.i.i.i:                                  ; preds = %if.then28.i.i.i
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4976, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.value(metadata %strconv.extFloat* %stackalloc.alloca.i.i.i, metadata !4974, metadata !DIExpression()), !dbg !5538
  call fastcc void @"(*strconv.extFloat).Normalize"(%strconv.extFloat* nonnull %stackalloc.alloca.i.i.i), !dbg !5539
  %337 = call fastcc { i32, i32 } @"(*strconv.extFloat).frexp10"(%strconv.extFloat* nonnull %stackalloc.alloca.i.i.i), !dbg !5540
  %338 = extractvalue { i32, i32 } %337, 0, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %338, metadata !4980, metadata !DIExpression()), !dbg !5541
  %339 = load i32, i32* %324, align 8, !dbg !5542
  %340 = sub i32 0, %339, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %340, metadata !4981, metadata !DIExpression()), !dbg !5544
  %341 = load i64, i64* %325, align 8, !dbg !5545
  %shift.overflow.i18.i.i.i = icmp ugt i32 %340, 63, !dbg !5546
  %342 = zext i32 %340 to i64, !dbg !5546
  %343 = lshr i64 %341, %342, !dbg !5546
  %344 = trunc i64 %343 to i32, !dbg !5547
  %345 = select i1 %shift.overflow.i18.i.i.i, i32 0, i32 %344, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %345, metadata !4982, metadata !DIExpression()), !dbg !5548
  %346 = zext i32 %345 to i64, !dbg !5549
  %347 = shl i64 %346, %342, !dbg !5550
  %shift.result55.i.i.i.i = select i1 %shift.overflow.i18.i.i.i, i64 0, i64 %347, !dbg !5550
  %348 = sub i64 %341, %shift.result55.i.i.i.i, !dbg !5551
  call void @llvm.dbg.value(metadata i64 %348, metadata !4983, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i64 1, metadata !4984, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4985, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.value(metadata i32 0, metadata !4986, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.value(metadata i64 1, metadata !4987, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.value(metadata i32 0, metadata !4988, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i64 1, metadata !4989, metadata !DIExpression()), !dbg !5558
  br label %for.loop.i19.i.i.i, !dbg !5530

for.loop.i19.i.i.i:                               ; preds = %if.done4.i.i.i.i, %if.done.i.i.i.i
  %349 = phi i32 [ 0, %if.done.i.i.i.i ], [ %353, %if.done4.i.i.i.i ], !dbg !5557
  %350 = phi i64 [ 1, %if.done.i.i.i.i ], [ %352, %if.done4.i.i.i.i ], !dbg !5558
  call void @llvm.dbg.value(metadata i32 %349, metadata !4988, metadata !DIExpression()), !dbg !5559
  %exitcond48.not.i.i.i.i = icmp eq i32 %349, 20, !dbg !5560
  br i1 %exitcond48.not.i.i.i.i, label %for.done.i21.i.i.i, label %for.body.i20.i.i.i, !dbg !5530

for.body.i20.i.i.i:                               ; preds = %for.loop.i19.i.i.i
  call void @llvm.dbg.value(metadata i64 %350, metadata !4989, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i32 %345, metadata !4982, metadata !DIExpression()), !dbg !5562
  %351 = icmp ugt i64 %350, %346, !dbg !5563
  br i1 %351, label %for.done.i21.i.i.i, label %if.done4.i.i.i.i, !dbg !5530

if.done4.i.i.i.i:                                 ; preds = %for.body.i20.i.i.i
  %352 = mul i64 %350, 10, !dbg !5564
  call void @llvm.dbg.value(metadata i64 %352, metadata !4989, metadata !DIExpression()), !dbg !5564
  %353 = add nuw nsw i32 %349, 1, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %353, metadata !4988, metadata !DIExpression()), !dbg !5565
  br label %for.loop.i19.i.i.i, !dbg !5530

for.done.i21.i.i.i:                               ; preds = %for.body.i20.i.i.i, %for.loop.i19.i.i.i
  %354 = phi i32 [ 0, %for.loop.i19.i.i.i ], [ %349, %for.body.i20.i.i.i ], !dbg !5555
  call void @llvm.dbg.value(metadata i32 %345, metadata !4982, metadata !DIExpression()), !dbg !5566
  call void @llvm.dbg.value(metadata i32 %345, metadata !4990, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.value(metadata i32 %354, metadata !4986, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4985, metadata !DIExpression()), !dbg !5569
  %355 = icmp sgt i32 %354, %spec.select.i.i.i, !dbg !5570
  br i1 %355, label %if.then5.i.i.i.i, label %if.done6.i.i.i.i, !dbg !5530

if.then5.i.i.i.i:                                 ; preds = %for.done.i21.i.i.i
  call void @llvm.dbg.value(metadata i32 %354, metadata !4986, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4985, metadata !DIExpression()), !dbg !5572
  %356 = sub i32 %354, %spec.select.i.i.i, !dbg !5573
  %357 = icmp ugt i32 %356, 19, !dbg !5574
  br i1 %357, label %lookup.throw.i29.i.i.i, label %lookup.next.i30.i.i.i, !dbg !5574

if.done6.i.i.i.i:                                 ; preds = %lookup.next.i30.i.i.i, %for.done.i21.i.i.i
  %358 = phi i32 [ %430, %lookup.next.i30.i.i.i ], [ %345, %for.done.i21.i.i.i ], !dbg !5575
  %359 = phi i64 [ %428, %lookup.next.i30.i.i.i ], [ 1, %for.done.i21.i.i.i ], !dbg !5556
  %360 = phi i32 [ %432, %lookup.next.i30.i.i.i ], [ 0, %for.done.i21.i.i.i ], !dbg !5567
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(32) %328, i8 0, i64 32, i1 false), !dbg !4969
  call void @llvm.dbg.value(metadata i32 32, metadata !4991, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.value(metadata i32 %358, metadata !4982, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 %358, metadata !4992, metadata !DIExpression()), !dbg !5578
  br label %for.loop7.i.i.i.i, !dbg !5530

for.loop7.i.i.i.i:                                ; preds = %lookup.next59.i.i.i.i, %if.done6.i.i.i.i
  %361 = phi i32 [ 32, %if.done6.i.i.i.i ], [ %364, %lookup.next59.i.i.i.i ], !dbg !5576
  %362 = phi i32 [ %358, %if.done6.i.i.i.i ], [ %363, %lookup.next59.i.i.i.i ], !dbg !5578
  call void @llvm.dbg.value(metadata i32 %362, metadata !4992, metadata !DIExpression()), !dbg !5579
  %.not.i23.i.i.i = icmp eq i32 %362, 0, !dbg !5580
  br i1 %.not.i23.i.i.i, label %for.loop10.i.i.i.i, label %for.body8.i.i.i.i, !dbg !5530

for.body8.i.i.i.i:                                ; preds = %for.loop7.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %362, metadata !4992, metadata !DIExpression()), !dbg !5581
  %363 = udiv i32 %362, 10, !dbg !5582
  call void @llvm.dbg.value(metadata i32 %363, metadata !4993, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4992, metadata !DIExpression()), !dbg !5584
  %364 = add nsw i32 %361, -1, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %364, metadata !4991, metadata !DIExpression()), !dbg !5586
  %365 = icmp ugt i32 %364, 31, !dbg !5587
  br i1 %365, label %lookup.throw58.i.i.i.i, label %lookup.next59.i.i.i.i, !dbg !5587

for.loop10.i.i.i.i:                               ; preds = %for.loop7.i.i.i.i, %lookup.next69.i.i.i.i
  %366 = phi i32 [ %440, %lookup.next69.i.i.i.i ], [ %361, %for.loop7.i.i.i.i ], !dbg !5588
  call void @llvm.dbg.value(metadata i32 %366, metadata !4994, metadata !DIExpression()), !dbg !5589
  %exitcond.not.i24.i.i.i = icmp eq i32 %366, 32, !dbg !5590
  br i1 %exitcond.not.i24.i.i.i, label %for.done12.i.i.i.i, label %for.body11.i.i.i.i, !dbg !5530

for.body11.i.i.i.i:                               ; preds = %for.loop10.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5591
  %.unpack15.i.i.i.i = load i8*, i8** %.repack.i.i.i, align 4, !dbg !5592
  %367 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 39, !dbg !5592
  store i8* %.unpack15.i.i.i.i, i8** %367, align 4, !dbg !5592
  %.unpack17.i.i.i.i = load i32, i32* %322, align 4, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %366, metadata !4994, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata i32 %361, metadata !4991, metadata !DIExpression()), !dbg !5594
  %368 = sub nuw nsw i32 %366, %361, !dbg !5595
  %.not20.i.i.i.i = icmp ult i32 %368, %.unpack17.i.i.i.i, !dbg !5596
  br i1 %.not20.i.i.i.i, label %lookup.next69.i.i.i.i, label %lookup.throw64.i.i.i.i, !dbg !5596

for.done12.i.i.i.i:                               ; preds = %for.loop10.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %361, metadata !4991, metadata !DIExpression()), !dbg !5597
  %369 = sub i32 32, %361, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %369, metadata !4995, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5600
  %370 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 12, !dbg !5601
  %371 = bitcast i8* %370 to i32*, !dbg !5601
  store i32 %369, i32* %371, align 4, !dbg !5601
  call void @llvm.dbg.value(metadata i32 %369, metadata !4977, metadata !DIExpression()), !dbg !5601
  %372 = getelementptr inbounds i8, i8* %digs.i.i.i, i32 16, !dbg !5602
  %373 = bitcast i8* %372 to i32*, !dbg !5602
  call void @llvm.dbg.value(metadata i32 %354, metadata !4986, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.value(metadata i32 %338, metadata !4980, metadata !DIExpression()), !dbg !5604
  %374 = add i32 %354, %338, !dbg !5605
  store i32 %374, i32* %373, align 4, !dbg !5602
  call void @llvm.dbg.value(metadata i32 %374, metadata !4978, metadata !DIExpression()), !dbg !5602
  %375 = sub i32 %spec.select.i.i.i, %369, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %375, metadata !4985, metadata !DIExpression()), !dbg !5607
  %376 = icmp sgt i32 %375, 0, !dbg !5608
  br i1 %376, label %if.then13.i.i.i.i, label %if.done20.i27.i.i.i, !dbg !5530

if.then13.i.i.i.i:                                ; preds = %for.done12.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %360, metadata !4990, metadata !DIExpression()), !dbg !5609
  %377 = icmp ne i32 %360, 0, !dbg !5610
  %378 = icmp ne i64 %359, 1
  %or.cond.i25.i.i.i = or i1 %378, %377, !dbg !5530
  call void @llvm.dbg.value(metadata i64 %359, metadata !4987, metadata !DIExpression()), !dbg !5611
  br i1 %or.cond.i25.i.i.i, label %if.then14.i.i.i.i, label %for.loop15.preheader.i.i.i.i, !dbg !5530

for.loop15.preheader.i.i.i.i:                     ; preds = %if.then13.i.i.i.i
  %379 = shl nuw i64 1, %342, !dbg !5530
  %shift.result79.i.i.i.i = select i1 %shift.overflow.i18.i.i.i, i64 0, i64 %379, !dbg !5530
  br label %for.loop15.i.i.i.i, !dbg !5530

if.then14.i.i.i.i:                                ; preds = %if.then13.i.i.i.i
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(*strconv.extFloat).FixedDecimal$pack.767" to i8*)), !dbg !5612
  unreachable, !dbg !5612

for.loop15.i.i.i.i:                               ; preds = %lookup.next89.i.i.i.i, %for.loop15.preheader.i.i.i.i
  %380 = phi i64 [ %445, %lookup.next89.i.i.i.i ], [ %348, %for.loop15.preheader.i.i.i.i ], !dbg !5552
  %381 = phi i64 [ %386, %lookup.next89.i.i.i.i ], [ 1, %for.loop15.preheader.i.i.i.i ], !dbg !5553
  %382 = phi i32 [ %447, %lookup.next89.i.i.i.i ], [ %375, %for.loop15.preheader.i.i.i.i ], !dbg !5554
  %383 = phi i32 [ %446, %lookup.next89.i.i.i.i ], [ %369, %for.loop15.preheader.i.i.i.i ], !dbg !5599
  call void @llvm.dbg.value(metadata i32 %382, metadata !4985, metadata !DIExpression()), !dbg !5613
  %384 = icmp sgt i32 %382, 0, !dbg !5614
  br i1 %384, label %for.body16.i.i.i.i, label %store.next95.i.i.i.i, !dbg !5530

for.body16.i.i.i.i:                               ; preds = %for.loop15.i.i.i.i
  %385 = mul i64 %380, 10, !dbg !5615
  call void @llvm.dbg.value(metadata i64 %385, metadata !4983, metadata !DIExpression()), !dbg !5615
  %386 = mul i64 %381, 10, !dbg !5616
  call void @llvm.dbg.value(metadata i64 %386, metadata !4984, metadata !DIExpression()), !dbg !5617
  %387 = mul i64 %381, 20, !dbg !5618
  call void @llvm.dbg.value(metadata i32 %340, metadata !4981, metadata !DIExpression()), !dbg !5619
  %388 = icmp ugt i64 %387, %shift.result79.i.i.i.i, !dbg !5620
  br i1 %388, label %if.done22.i.i.i, label %if.done18.i.i.i.i, !dbg !5530

if.done18.i.i.i.i:                                ; preds = %for.body16.i.i.i.i
  call void @llvm.dbg.value(metadata i64 %385, metadata !4983, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i32 %340, metadata !4981, metadata !DIExpression()), !dbg !5622
  %389 = lshr i64 %385, %342, !dbg !5623
  call void @llvm.dbg.value(metadata i64 undef, metadata !4996, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5625
  %.unpack8.i26.i.i.i = load i8*, i8** %.repack.i.i.i, align 4, !dbg !5626
  %390 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 40, !dbg !5626
  store i8* %.unpack8.i26.i.i.i, i8** %390, align 4, !dbg !5626
  %.unpack10.i.i.i.i = load i32, i32* %322, align 4, !dbg !5626
  call void @llvm.dbg.value(metadata i32 %383, metadata !4995, metadata !DIExpression()), !dbg !5627
  %.not13.i.i.i.i = icmp ult i32 %383, %.unpack10.i.i.i.i, !dbg !5628
  br i1 %.not13.i.i.i.i, label %lookup.next89.i.i.i.i, label %lookup.throw88.i.i.i.i, !dbg !5628

if.done20.i27.i.i.i:                              ; preds = %store.next95.i.i.i.i, %for.done12.i.i.i.i
  %391 = phi i32 [ %369, %for.done12.i.i.i.i ], [ %383, %store.next95.i.i.i.i ]
  %392 = phi i64 [ %348, %for.done12.i.i.i.i ], [ %380, %store.next95.i.i.i.i ], !dbg !5552
  %393 = phi i64 [ 1, %for.done12.i.i.i.i ], [ %381, %store.next95.i.i.i.i ], !dbg !5553
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.value(metadata i32 %360, metadata !4990, metadata !DIExpression()), !dbg !5630
  %394 = zext i32 %360 to i64, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %340, metadata !4981, metadata !DIExpression()), !dbg !5632
  %395 = shl i64 %394, %342, !dbg !5633
  %shift.result97.i.i.i.i = select i1 %shift.overflow.i18.i.i.i, i64 0, i64 %395, !dbg !5633
  call void @llvm.dbg.value(metadata i64 %392, metadata !4983, metadata !DIExpression()), !dbg !5634
  %396 = or i64 %392, %shift.result97.i.i.i.i, !dbg !5635
  call void @llvm.dbg.value(metadata i64 %359, metadata !4987, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i64 %393, metadata !4984, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i64 %393, metadata !5646, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i64 %396, metadata !5643, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i64 %359, metadata !5644, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata i32 %340, metadata !5645, metadata !DIExpression()), !dbg !5654
  %397 = shl i64 %359, %342, !dbg !5655
  %shift.result.i.i.i.i.i = select i1 %shift.overflow.i18.i.i.i, i64 0, i64 %397, !dbg !5655
  %398 = icmp ult i64 %shift.result.i.i.i.i.i, %396, !dbg !5656
  br i1 %398, label %if.then.i.i.i.i.i, label %if.done.i.i.i.i.i, !dbg !5657

if.then.i.i.i.i.i:                                ; preds = %if.done20.i27.i.i.i
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"strconv.adjustLastDigitFixed$pack" to i8*)), !dbg !5658
  unreachable, !dbg !5658

if.done.i.i.i.i.i:                                ; preds = %if.done20.i27.i.i.i
  call void @llvm.dbg.value(metadata i64 %393, metadata !5646, metadata !DIExpression()), !dbg !5659
  %399 = shl i64 %393, 1, !dbg !5660
  call void @llvm.dbg.value(metadata i64 %359, metadata !5644, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.value(metadata i32 %340, metadata !5645, metadata !DIExpression()), !dbg !5662
  %400 = icmp ugt i64 %399, %shift.result.i.i.i.i.i, !dbg !5663
  br i1 %400, label %if.then1.i.i.i.i.i, label %if.done2.i.i.i.i.i, !dbg !5657

if.then1.i.i.i.i.i:                               ; preds = %if.done.i.i.i.i.i
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"strconv.adjustLastDigitFixed$pack.433" to i8*)), !dbg !5664
  unreachable, !dbg !5664

if.done2.i.i.i.i.i:                               ; preds = %if.done.i.i.i.i.i
  call void @llvm.dbg.value(metadata i64 %396, metadata !5643, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.value(metadata i64 %393, metadata !5646, metadata !DIExpression()), !dbg !5666
  %401 = add i64 %393, %396, !dbg !5667
  %402 = shl i64 %401, 1, !dbg !5668
  call void @llvm.dbg.value(metadata i64 %359, metadata !5644, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i32 %340, metadata !5645, metadata !DIExpression()), !dbg !5670
  %403 = icmp ult i64 %402, %shift.result.i.i.i.i.i, !dbg !5671
  br i1 %403, label %for.loop22.i28.i.i.i.preheader, label %if.done4.i.i.i.i.i, !dbg !5657

if.done4.i.i.i.i.i:                               ; preds = %if.done2.i.i.i.i.i
  call void @llvm.dbg.value(metadata i64 %396, metadata !5643, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i64 %393, metadata !5646, metadata !DIExpression()), !dbg !5673
  %404 = sub i64 %396, %393, !dbg !5674
  %405 = shl i64 %404, 1, !dbg !5675
  call void @llvm.dbg.value(metadata i64 %359, metadata !5644, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.value(metadata i32 %340, metadata !5645, metadata !DIExpression()), !dbg !5677
  %406 = icmp ugt i64 %405, %shift.result.i.i.i.i.i, !dbg !5678
  br i1 %406, label %gep.next.i.i.i.i.i, label %if.done22.i.i.i, !dbg !5657

for.loop.i.i.i.i.i:                               ; preds = %deref.next23.i.i.i.i.i, %gep.next.i.i.i.i.i
  %.in.i.i.i.i.i = phi i32 [ %391, %gep.next.i.i.i.i.i ], [ %407, %deref.next23.i.i.i.i.i ]
  %407 = add i32 %.in.i.i.i.i.i, -1, !dbg !5679
  call void @llvm.dbg.value(metadata i32 %407, metadata !5647, metadata !DIExpression()), !dbg !5680
  %408 = icmp sgt i32 %407, -1, !dbg !5681
  br i1 %408, label %gep.next17.i.i.i.i.i, label %for.done.i.i.i.i.i, !dbg !5657

for.done.i.i.i.i.i:                               ; preds = %lookup.next.i.i.i.i.i, %for.loop.i.i.i.i.i
  %.lcssa.i.i.i.i.i = phi i32 [ %407, %lookup.next.i.i.i.i.i ], [ %smin.i.i.i.i.i, %for.loop.i.i.i.i.i ], !dbg !5679
  call void @llvm.dbg.value(metadata i32 %.lcssa.i.i.i.i.i, metadata !5647, metadata !DIExpression()), !dbg !5682
  %409 = icmp slt i32 %.lcssa.i.i.i.i.i, 0, !dbg !5683
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5684
  %.unpack.i.i.i.i.i = load i8*, i8** %.repack.i.i.i, align 4, !dbg !5657
  %410 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 41, !dbg !5657
  store i8* %.unpack.i.i.i.i.i, i8** %410, align 4, !dbg !5657
  %.unpack2.i.i.i.i.i = load i32, i32* %322, align 4, !dbg !5657
  br i1 %409, label %gep.next25.i.i.i.i.i, label %gep.next43.i.i.i.i.i, !dbg !5657

gep.next.i.i.i.i.i:                               ; preds = %if.done4.i.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %391, metadata !5647, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5679
  %411 = add i32 %391, -1, !dbg !5657
  %412 = icmp slt i32 %411, -1, !dbg !5657
  %smin.i.i.i.i.i = select i1 %412, i32 %411, i32 -1, !dbg !5657
  br label %for.loop.i.i.i.i.i, !dbg !5657

gep.next17.i.i.i.i.i:                             ; preds = %for.loop.i.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5686
  %.unpack6.i.i.i.i.i = load i8*, i8** %.repack.i.i.i, align 4, !dbg !5687
  %413 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 42, !dbg !5687
  store i8* %.unpack6.i.i.i.i.i, i8** %413, align 4, !dbg !5687
  %.unpack8.i.i.i.i.i = load i32, i32* %322, align 4, !dbg !5687
  call void @llvm.dbg.value(metadata i32 %407, metadata !5647, metadata !DIExpression()), !dbg !5688
  %.not11.i.i.i.i.i = icmp ult i32 %407, %.unpack8.i.i.i.i.i, !dbg !5689
  br i1 %.not11.i.i.i.i.i, label %lookup.next.i.i.i.i.i, label %lookup.throw.i.i.i.i.i, !dbg !5689

lookup.throw.i.i.i.i.i:                           ; preds = %gep.next17.i.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5689
  unreachable, !dbg !5689

lookup.next.i.i.i.i.i:                            ; preds = %gep.next17.i.i.i.i.i
  %414 = getelementptr inbounds i8, i8* %.unpack6.i.i.i.i.i, i32 %407, !dbg !5689
  %415 = load i8, i8* %414, align 1, !dbg !5689
  %416 = icmp eq i8 %415, 57, !dbg !5690
  br i1 %416, label %deref.next23.i.i.i.i.i, label %for.done.i.i.i.i.i, !dbg !5657

deref.next23.i.i.i.i.i:                           ; preds = %lookup.next.i.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5691
  %417 = load i32, i32* %371, align 4, !dbg !5692
  %418 = add i32 %417, -1, !dbg !5691
  store i32 %418, i32* %371, align 4, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %418, metadata !5648, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %407, metadata !5647, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5693
  br label %for.loop.i.i.i.i.i, !dbg !5657

gep.next25.i.i.i.i.i:                             ; preds = %for.done.i.i.i.i.i
  %419 = icmp eq i32 %.unpack2.i.i.i.i.i, 0, !dbg !5694
  br i1 %419, label %lookup.throw30.i.i.i.i.i, label %lookup.next31.i.i.i.i.i, !dbg !5694

lookup.throw30.i.i.i.i.i:                         ; preds = %gep.next25.i.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5694
  unreachable, !dbg !5694

lookup.next31.i.i.i.i.i:                          ; preds = %gep.next25.i.i.i.i.i
  store i8 49, i8* %.unpack.i.i.i.i.i, align 1, !dbg !5694
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !5638, metadata !DIExpression()), !dbg !5695
  store i32 1, i32* %371, align 4, !dbg !5696
  call void @llvm.dbg.value(metadata i32 1, metadata !5648, metadata !DIExpression()), !dbg !5696
  %420 = load i32, i32* %373, align 4, !dbg !5697
  %421 = add i32 %420, 1, !dbg !5698
  store i32 %421, i32* %373, align 4, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %421, metadata !5649, metadata !DIExpression()), !dbg !5697
  br label %for.loop22.i28.i.i.i.preheader, !dbg !5657

gep.next43.i.i.i.i.i:                             ; preds = %for.done.i.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %.lcssa.i.i.i.i.i, metadata !5647, metadata !DIExpression()), !dbg !5699
  %.not.i.i.i.i.i = icmp ult i32 %.lcssa.i.i.i.i.i, %.unpack2.i.i.i.i.i, !dbg !5700
  br i1 %.not.i.i.i.i.i, label %lookup.next49.i.i.i.i.i, label %lookup.throw48.i.i.i.i.i, !dbg !5700

lookup.throw48.i.i.i.i.i:                         ; preds = %gep.next43.i.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5700
  unreachable, !dbg !5700

lookup.next49.i.i.i.i.i:                          ; preds = %gep.next43.i.i.i.i.i
  %422 = getelementptr inbounds i8, i8* %.unpack.i.i.i.i.i, i32 %.lcssa.i.i.i.i.i, !dbg !5700
  %423 = load i8, i8* %422, align 1, !dbg !5700
  %424 = add i8 %423, 1, !dbg !5684
  store i8 %424, i8* %422, align 1, !dbg !5700
  %.pre.i.i.i.i = load i32, i32* %371, align 4, !dbg !5701
  br label %for.loop22.i28.i.i.i.preheader, !dbg !5657

for.loop22.i28.i.i.i.preheader:                   ; preds = %lookup.next49.i.i.i.i.i, %lookup.next31.i.i.i.i.i, %if.done2.i.i.i.i.i
  %.in.i.i.i.i.ph = phi i32 [ %391, %if.done2.i.i.i.i.i ], [ %.pre.i.i.i.i, %lookup.next49.i.i.i.i.i ], [ 1, %lookup.next31.i.i.i.i.i ]
  br label %for.loop22.i28.i.i.i, !dbg !5530

for.loop22.i28.i.i.i:                             ; preds = %for.loop22.i28.i.i.i.preheader, %lookup.next109.i.i.i.i
  %.in.i.i.i.i = phi i32 [ %425, %lookup.next109.i.i.i.i ], [ %.in.i.i.i.i.ph, %for.loop22.i28.i.i.i.preheader ]
  %425 = add i32 %.in.i.i.i.i, -1, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %425, metadata !4998, metadata !DIExpression()), !dbg !5703
  %426 = icmp sgt i32 %425, -1, !dbg !5704
  br i1 %426, label %gep.next103.i.i.i.i, label %if.done22.thread70.i.i.i, !dbg !5530

lookup.throw.i29.i.i.i:                           ; preds = %if.then5.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5574
  unreachable, !dbg !5574

lookup.next.i30.i.i.i:                            ; preds = %if.then5.i.i.i.i
  %427 = getelementptr inbounds [20 x i64], [20 x i64]* @strconv.uint64pow10, i32 0, i32 %356, !dbg !5574
  %428 = load i64, i64* %427, align 8, !dbg !5574
  call void @llvm.dbg.value(metadata i64 %428, metadata !4987, metadata !DIExpression()), !dbg !5705
  %429 = trunc i64 %428 to i32, !dbg !5706
  %430 = udiv i32 %345, %429, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %430, metadata !4982, metadata !DIExpression()), !dbg !5708
  %431 = mul i32 %430, %429, !dbg !5709
  %432 = sub i32 %345, %431, !dbg !5710
  call void @llvm.dbg.value(metadata i32 %432, metadata !4990, metadata !DIExpression()), !dbg !5710
  br label %if.done6.i.i.i.i, !dbg !5530

lookup.throw58.i.i.i.i:                           ; preds = %for.body8.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5587
  unreachable, !dbg !5587

lookup.next59.i.i.i.i:                            ; preds = %for.body8.i.i.i.i
  %.neg.i31.i.i.i = mul i32 %363, -10, !dbg !5711
  %433 = add i32 %.neg.i31.i.i.i, %362, !dbg !5584
  call void @llvm.dbg.value(metadata i32 %433, metadata !4992, metadata !DIExpression()), !dbg !5584
  %434 = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i16.i.i.i, i32 0, i32 %364, !dbg !5587
  call void @llvm.dbg.value(metadata i32 undef, metadata !4992, metadata !DIExpression()), !dbg !5712
  %435 = trunc i32 %433 to i8, !dbg !5713
  %436 = add i8 %435, 48, !dbg !5713
  store i8 %436, i8* %434, align 1, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %363, metadata !4993, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 %363, metadata !4992, metadata !DIExpression()), !dbg !5715
  br label %for.loop7.i.i.i.i, !dbg !5530

lookup.throw64.i.i.i.i:                           ; preds = %for.body11.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5596
  unreachable, !dbg !5596

lookup.next69.i.i.i.i:                            ; preds = %for.body11.i.i.i.i
  call void @llvm.dbg.value(metadata i32 %366, metadata !4994, metadata !DIExpression()), !dbg !5716
  %437 = getelementptr inbounds i8, i8* %.unpack15.i.i.i.i, i32 %368, !dbg !5596
  %438 = getelementptr inbounds [32 x i8], [32 x i8]* %buf.i16.i.i.i, i32 0, i32 %366, !dbg !5717
  %439 = load i8, i8* %438, align 1, !dbg !5717
  store i8 %439, i8* %437, align 1, !dbg !5596
  %440 = add nuw nsw i32 %366, 1, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %440, metadata !4994, metadata !DIExpression()), !dbg !5718
  br label %for.loop10.i.i.i.i, !dbg !5530

lookup.throw88.i.i.i.i:                           ; preds = %if.done18.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5628
  unreachable, !dbg !5628

lookup.next89.i.i.i.i:                            ; preds = %if.done18.i.i.i.i
  call void @llvm.dbg.value(metadata i64 undef, metadata !4996, metadata !DIExpression()), !dbg !5624
  %441 = getelementptr inbounds i8, i8* %.unpack8.i26.i.i.i, i32 %383, !dbg !5628
  %442 = trunc i64 %389 to i8, !dbg !5719
  %.op.i.i.i.i = add i8 %442, 48, !dbg !5719
  %443 = select i1 %shift.overflow.i18.i.i.i, i8 48, i8 %.op.i.i.i.i, !dbg !5719
  store i8 %443, i8* %441, align 1, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %340, metadata !4981, metadata !DIExpression()), !dbg !5720
  %444 = shl i64 %389, %342, !dbg !5721
  %shift.result91.i.i.i.i = select i1 %shift.overflow.i18.i.i.i, i64 0, i64 %444, !dbg !5721
  %445 = sub i64 %385, %shift.result91.i.i.i.i, !dbg !5722
  call void @llvm.dbg.value(metadata i64 %445, metadata !4983, metadata !DIExpression()), !dbg !5722
  %446 = add nuw i32 %383, 1, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %446, metadata !4995, metadata !DIExpression()), !dbg !5723
  %447 = add nsw i32 %382, -1, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %447, metadata !4985, metadata !DIExpression()), !dbg !5724
  br label %for.loop15.i.i.i.i, !dbg !5530

store.next95.i.i.i.i:                             ; preds = %for.loop15.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i32 %383, metadata !4995, metadata !DIExpression()), !dbg !5726
  store i32 %383, i32* %371, align 4, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %383, metadata !4977, metadata !DIExpression()), !dbg !5727
  br label %if.done20.i27.i.i.i, !dbg !5530

gep.next103.i.i.i.i:                              ; preds = %for.loop22.i28.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5728
  %.unpack.i32.i.i.i = load i8*, i8** %.repack.i.i.i, align 4, !dbg !5729
  %448 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 43, !dbg !5729
  store i8* %.unpack.i32.i.i.i, i8** %448, align 4, !dbg !5729
  %.unpack2.i33.i.i.i = load i32, i32* %322, align 4, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %425, metadata !4998, metadata !DIExpression()), !dbg !5730
  %.not5.i.i.i.i = icmp ult i32 %425, %.unpack2.i33.i.i.i, !dbg !5731
  br i1 %.not5.i.i.i.i, label %lookup.next109.i.i.i.i, label %lookup.throw108.i.i.i.i, !dbg !5731

lookup.throw108.i.i.i.i:                          ; preds = %gep.next103.i.i.i.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5731
  unreachable, !dbg !5731

lookup.next109.i.i.i.i:                           ; preds = %gep.next103.i.i.i.i
  %449 = getelementptr inbounds i8, i8* %.unpack.i32.i.i.i, i32 %425, !dbg !5731
  %450 = load i8, i8* %449, align 1, !dbg !5731
  %.not6.i.i.i.i = icmp eq i8 %450, 48, !dbg !5732
  br i1 %.not6.i.i.i.i, label %for.loop22.i28.i.i.i, label %gep.next111.i.i.i.i, !dbg !5530

gep.next111.i.i.i.i:                              ; preds = %lookup.next109.i.i.i.i
  call void @llvm.dbg.value(metadata %strconv.decimalSlice* %118, metadata !4975, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata i32 %425, metadata !4998, metadata !DIExpression()), !dbg !5734
  store i32 %.in.i.i.i.i, i32* %371, align 4, !dbg !5735
  call void @llvm.dbg.value(metadata i32 %.in.i.i.i.i, metadata !4977, metadata !DIExpression()), !dbg !5735
  br label %if.done22.thread70.i.i.i, !dbg !5530

switch.body31.i.i.i:                              ; preds = %switch.next6.i.i.i
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 %67, metadata !4926, metadata !DIExpression()), !dbg !5737
  %451 = icmp eq i32 %67, 0, !dbg !5738
  %spec.select.i.i.i = select i1 %451, i32 1, i32 %67, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4926, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4942, metadata !DIExpression()), !dbg !5740
  %452 = icmp slt i32 %spec.select.i.i.i, 16, !dbg !5741
  br i1 %452, label %if.then28.i.i.i, label %if.then24.i.i.i, !dbg !5159

switch.body38.i.i.i:                              ; preds = %gep.next48.i
  call void @llvm.dbg.value(metadata double %v, metadata !4924, metadata !DIExpression()), !dbg !5742
  %453 = bitcast double* %stackalloc.alloca.i34.i.i.i to i8*, !dbg !4911
  %454 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 46, !dbg !4911
  store i8* %453, i8** %454, align 4, !dbg !4911
  %455 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 45, !dbg !4911
  store i8* %453, i8** %455, align 4, !dbg !4911
  %456 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 44, !dbg !4911
  store i8* %453, i8** %456, align 4, !dbg !4911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453), !dbg !4911
  %tmpcast.i.i.i.i = bitcast double* %stackalloc.alloca.i34.i.i.i to [2 x i32]*, !dbg !4911
  call void @llvm.dbg.value(metadata double %v, metadata !4917, metadata !DIExpression()), !dbg !4911
  %.fca.0.gep.i35.i.i.i = bitcast double* %stackalloc.alloca.i34.i.i.i to i32*, !dbg !5743
  store i32 0, i32* %.fca.0.gep.i35.i.i.i, align 8, !dbg !5743
  %.fca.1.gep.i36.i.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %tmpcast.i.i.i.i, i32 0, i32 1, !dbg !5743
  store i32 0, i32* %.fca.1.gep.i36.i.i.i, align 4, !dbg !5743
  store double %v, double* %stackalloc.alloca.i34.i.i.i, align 8, !dbg !5744
  %.cast.i38.i.i.i = bitcast double %v to i64, !dbg !5745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453), !dbg !5746
  call void @llvm.dbg.value(metadata i64 %.cast.i38.i.i.i, metadata !4928, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata %strconv.floatInfo* @strconv.float64info, metadata !4929, metadata !DIExpression()), !dbg !5748
  br label %switch.done.i.i.i, !dbg !5159

switch.next39.i.i.i:                              ; preds = %gep.next48.i
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"strconv.genericFtoa$pack" to i8*)), !dbg !5749
  unreachable, !dbg !5749

if.done22.thread.i.i.i:                           ; preds = %"(*strconv.extFloat).ShortestDecimal.exit.i.i.i", %gep.next110.i.i.i.i, %if.then28.i.i.i.i, %if.then.i.i.i.i
  %.pre-phi.i.i.i = phi i32* [ %183, %gep.next110.i.i.i.i ], [ %164, %if.then.i.i.i.i ], [ %305, %"(*strconv.extFloat).ShortestDecimal.exit.i.i.i" ], [ %226, %if.then28.i.i.i.i ], !dbg !5750
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5751
  %457 = load i32, i32* %.pre-phi.i.i.i, align 4, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %457, metadata !4926, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.value(metadata i1 false, metadata !4935, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4923, metadata !DIExpression()), !dbg !5509
  br label %deref.next95.i.i.i, !dbg !5159

deref.next95.i.i.i:                               ; preds = %if.done22.thread.i.i.i, %if.done22.thread69.i.i.i, %if.done22.thread70.i.i.i
  %458 = phi i32 [ %457, %if.done22.thread.i.i.i ], [ %spec.select.i.i.i, %if.done22.thread69.i.i.i ], [ %spec.select.i.i.i, %if.done22.thread70.i.i.i ]
  call void @llvm.dbg.value(metadata i1 %119, metadata !4936, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i1 %95, metadata !4930, metadata !DIExpression()), !dbg !5754
  %459 = load %strconv.decimalSlice, %strconv.decimalSlice* %118, align 4, !dbg !5755
  %460 = extractvalue %strconv.decimalSlice %459, 0, !dbg !5755
  %461 = extractvalue { i8*, i32, i32 } %460, 0, !dbg !5755
  %462 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 47, !dbg !5755
  store i8* %461, i8** %462, align 4, !dbg !5755
  call void @llvm.dbg.value(metadata %strconv.decimalSlice %459, metadata !4941, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.value(metadata i32 %spec.select.i.i.i, metadata !4926, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.value(metadata i8 103, metadata !4925, metadata !DIExpression()), !dbg !5757
  %463 = tail call fastcc { i8*, i32, i32 } @strconv.formatDigits(i8* nonnull %slice.ptr.i, i1 %119, i1 %95, %strconv.decimalSlice %459, i32 %458), !dbg !5758
  %464 = extractvalue { i8*, i32, i32 } %463, 0, !dbg !5758
  %465 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 48, !dbg !5759
  store i8* %464, i8** %465, align 4, !dbg !5759
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68), !dbg !5759
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70), !dbg !5759
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72), !dbg !5759
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74), !dbg !5759
  br label %strconv.AppendFloat.exit.i, !dbg !5759

strconv.AppendFloat.exit.i:                       ; preds = %deref.next95.i.i.i, %if.then24.i.i.i, %if.then21.i.i.i, %switch.body1.i.i.i
  %.pre-phi.i = phi i8* [ %append.newPtr.i.i.i, %switch.body1.i.i.i ], [ %316, %if.then21.i.i.i ], [ %319, %if.then24.i.i.i ], [ %464, %deref.next95.i.i.i ], !dbg !5760
  %466 = phi { i8*, i32, i32 } [ %append.new.i.i.i, %switch.body1.i.i.i ], [ %315, %if.then21.i.i.i ], [ %318, %if.then24.i.i.i ], [ %463, %deref.next95.i.i.i ]
  %467 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 50, !dbg !5761
  store i8* %.pre-phi.i, i8** %467, align 4, !dbg !5761
  %468 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 49, !dbg !5761
  store i8* %.pre-phi.i, i8** %468, align 4, !dbg !5761
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %466, metadata !4961, metadata !DIExpression()), !dbg !5761
  %indexaddr.len.i = extractvalue { i8*, i32, i32 } %466, 1, !dbg !5762
  %469 = icmp ult i32 %indexaddr.len.i, 2, !dbg !5762
  br i1 %469, label %lookup.throw.i, label %lookup.next.i, !dbg !5762

lookup.throw.i:                                   ; preds = %strconv.AppendFloat.exit.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5762
  unreachable, !dbg !5762

lookup.next.i:                                    ; preds = %strconv.AppendFloat.exit.i
  %470 = getelementptr inbounds i8, i8* %.pre-phi.i, i32 1, !dbg !5762
  %471 = load i8, i8* %470, align 1, !dbg !5762
  switch i8 %471, label %lookup.next271.i [
    i8 45, label %if.then1.i
    i8 43, label %if.then1.i
  ], !dbg !5067

slice.throw49.i:                                  ; preds = %if.then1.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5069
  unreachable, !dbg !5069

slice.next50.i:                                   ; preds = %if.then1.i
  %472 = add i32 %indexaddr.len.i, -1, !dbg !5069
  %473 = add i32 %11, -1, !dbg !5069
  %474 = insertvalue { i8*, i32, i32 } undef, i8* %470, 0, !dbg !5069
  %475 = insertvalue { i8*, i32, i32 } %474, i32 %472, 1, !dbg !5069
  %476 = insertvalue { i8*, i32, i32 } %475, i32 %473, 2, !dbg !5069
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %476, metadata !4961, metadata !DIExpression()), !dbg !5763
  br label %if.done2.i, !dbg !5067

lookup.throw59.i:                                 ; preds = %cond.true.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5074
  unreachable, !dbg !5074

lookup.next60.i:                                  ; preds = %cond.true.i
  %477 = load i8, i8* %.pre-phi133.i, align 1, !dbg !5074
  %478 = icmp eq i8 %477, 43, !dbg !5764
  br i1 %478, label %gep.next64.i, label %if.done5.i, !dbg !5067

gep.next64.i:                                     ; preds = %lookup.next60.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5765
  %479 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 3, !dbg !5766
  %480 = load i1, i1* %479, align 1, !dbg !5766
  br i1 %480, label %if.done5.i, label %lookup.next70.i, !dbg !5067

lookup.next70.i:                                  ; preds = %gep.next64.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %12, metadata !4961, metadata !DIExpression()), !dbg !5767
  store i8 32, i8* %.pre-phi133.i, align 1, !dbg !5768
  br label %if.done5.i, !dbg !5067

lookup.throw73.i:                                 ; preds = %if.done5.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5076
  unreachable, !dbg !5076

lookup.next74.i:                                  ; preds = %if.done5.i
  %481 = getelementptr inbounds i8, i8* %.pre-phi133.i, i32 1, !dbg !5076
  %482 = load i8, i8* %481, align 1, !dbg !5076
  switch i8 %482, label %gep.next121.i [
    i8 73, label %gep.next78.i
    i8 78, label %gep.next78.i
  ], !dbg !5067

gep.next78.i:                                     ; preds = %lookup.next74.i, %lookup.next74.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5769
  %483 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 6, !dbg !5770
  %484 = load i1, i1* %483, align 1, !dbg !5770
  call void @llvm.dbg.value(metadata i1 %484, metadata !4962, metadata !DIExpression()), !dbg !5771
  store i1 false, i1* %483, align 1, !dbg !5772
  call void @llvm.dbg.value(metadata i1 false, metadata !4963, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %12, metadata !4961, metadata !DIExpression()), !dbg !5773
  %485 = load i8, i8* %481, align 1, !dbg !5774
  %486 = icmp eq i8 %485, 78, !dbg !5775
  br i1 %486, label %deref.next94.i, label %if.done10.i, !dbg !5067

deref.next94.i:                                   ; preds = %gep.next78.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5776
  %487 = load i1, i1* %14, align 1, !dbg !5777
  br i1 %487, label %if.done10.i, label %gep.next98.i, !dbg !5067

gep.next98.i:                                     ; preds = %deref.next94.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5778
  %488 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 3, !dbg !5779
  %489 = load i1, i1* %488, align 1, !dbg !5779
  br i1 %489, label %if.done10.i, label %if.then9.i, !dbg !5067

slice.throw106.i:                                 ; preds = %if.then9.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5078
  unreachable, !dbg !5078

slice.next107.i:                                  ; preds = %if.then9.i
  %490 = add i32 %indexaddr.len58.i, -1, !dbg !5078
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !4961, metadata !DIExpression()), !dbg !5780
  br label %if.done10.i, !dbg !5067

gep.next121.i:                                    ; preds = %lookup.next74.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5781
  %491 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 4, !dbg !5782
  %492 = load i1, i1* %491, align 1, !dbg !5782
  call void @llvm.dbg.value(metadata i32 103, metadata !4959, metadata !DIExpression()), !dbg !5783
  br i1 %492, label %switch.done.i, label %if.done32.i, !dbg !5067

lookup.throw129.i:                                ; preds = %for.body.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5102
  unreachable, !dbg !5102

lookup.next130.i:                                 ; preds = %for.body.i
  %493 = getelementptr inbounds i8, i8* %32, i32 %29, !dbg !5102
  %494 = load i8, i8* %493, align 1, !dbg !5102
  switch i8 %494, label %switch.body23.i [
    i8 46, label %switch.done16.i
    i8 112, label %switch.body17.i
    i8 80, label %switch.body17.i
    i8 101, label %if.then22.i
    i8 69, label %if.then22.i
  ], !dbg !5067

slice.throw136.i:                                 ; preds = %switch.body17.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5107
  unreachable, !dbg !5107

slice.next137.i:                                  ; preds = %switch.body17.i
  %495 = sub i32 %len.i, %29, !dbg !5107
  %append.srcLen.i = extractvalue { i8*, i32, i32 } %27, 1, !dbg !5784
  %append.srcCap.i = extractvalue { i8*, i32, i32 } %27, 2, !dbg !5784
  %append.new.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %30, i8* nonnull %493, i32 %append.srcLen.i, i32 %append.srcCap.i, i32 %495), !dbg !5784
  %append.newPtr.i = extractvalue { i8*, i32, i32 } %append.new.i, 0, !dbg !5784
  %496 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 51, !dbg !5785
  store i8* %append.newPtr.i, i8** %496, align 4, !dbg !5785
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new.i, metadata !4965, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5787
  %slice.highmax139.i = icmp ugt i32 %29, %43, !dbg !5788
  br i1 %slice.highmax139.i, label %slice.throw143.i, label %slice.next144.i, !dbg !5788

slice.throw143.i:                                 ; preds = %slice.next137.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5788
  unreachable, !dbg !5788

slice.next144.i:                                  ; preds = %slice.next137.i
  %497 = insertvalue { i8*, i32, i32 } %25, i32 %29, 1, !dbg !5788
  %498 = insertvalue { i8*, i32, i32 } %497, i32 %43, 2, !dbg !5788
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %498, metadata !4961, metadata !DIExpression()), !dbg !5789
  br label %switch.done16.i, !dbg !5067

slice.throw150.i:                                 ; preds = %if.then22.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5111
  unreachable, !dbg !5111

slice.next151.i:                                  ; preds = %if.then22.i
  %499 = sub i32 %len.i, %29, !dbg !5111
  %append.srcLen153.i = extractvalue { i8*, i32, i32 } %27, 1, !dbg !5790
  %append.srcCap154.i = extractvalue { i8*, i32, i32 } %27, 2, !dbg !5790
  %append.new157.i = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %30, i8* nonnull %493, i32 %append.srcLen153.i, i32 %append.srcCap154.i, i32 %499), !dbg !5790
  %append.newPtr158.i = extractvalue { i8*, i32, i32 } %append.new157.i, 0, !dbg !5790
  %500 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 52, !dbg !5791
  store i8* %append.newPtr158.i, i8** %500, align 4, !dbg !5791
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %append.new157.i, metadata !4965, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %25, metadata !4961, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %29, metadata !4967, metadata !DIExpression()), !dbg !5793
  %slice.highmax162.i = icmp ugt i32 %29, %44, !dbg !5794
  br i1 %slice.highmax162.i, label %slice.throw166.i, label %slice.next167.i, !dbg !5794

slice.throw166.i:                                 ; preds = %slice.next151.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5794
  unreachable, !dbg !5794

slice.next167.i:                                  ; preds = %slice.next151.i
  %501 = insertvalue { i8*, i32, i32 } %25, i32 %29, 1, !dbg !5794
  %502 = insertvalue { i8*, i32, i32 } %501, i32 %44, 2, !dbg !5794
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %502, metadata !4961, metadata !DIExpression()), !dbg !5795
  br label %switch.done16.i, !dbg !5067

gep.next215.i:                                    ; preds = %lookup.next256.i, %if.done32.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5796
  %503 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 6, !dbg !5797
  %504 = load i1, i1* %503, align 1, !dbg !5797
  br i1 %504, label %gep.next221.i, label %if.done37.i, !dbg !5067

gep.next221.i:                                    ; preds = %gep.next215.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5798
  %505 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 0, !dbg !5799
  %506 = load i1, i1* %505, align 1, !dbg !5799
  br i1 %506, label %gep.next225.i, label %if.done37.i, !dbg !5067

gep.next225.i:                                    ; preds = %gep.next221.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5800
  %507 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 2, !dbg !5801
  %508 = load i32, i32* %507, align 4, !dbg !5801
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5802
  %len228.i = extractvalue { i8*, i32, i32 } %58, 1, !dbg !5803
  %509 = icmp sgt i32 %508, %len228.i, !dbg !5804
  br i1 %509, label %gep.next230.i, label %if.done37.i, !dbg !5067

gep.next230.i:                                    ; preds = %gep.next225.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5805
  %510 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %4, i32 0, i32 0, !dbg !5806
  %511 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %510, align 4, !dbg !5806
  %512 = bitcast { i8*, i32, i32 }* %511 to i8*, !dbg !5806
  %513 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 53, !dbg !5807
  store i8* %512, i8** %513, align 4, !dbg !5807
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5807
  %514 = icmp eq i32 %len228.i, 0, !dbg !5808
  br i1 %514, label %lookup.throw235.i, label %lookup.next236.i, !dbg !5808

lookup.throw235.i:                                ; preds = %gep.next230.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5808
  unreachable, !dbg !5808

lookup.next236.i:                                 ; preds = %gep.next230.i
  %515 = load i8, i8* %.pre-phi135.i, align 1, !dbg !5808
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* %511, i8 %515), !dbg !5809
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !4956, metadata !DIExpression()), !dbg !5810
  %516 = load i32, i32* %507, align 4, !dbg !5811
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %58, metadata !4961, metadata !DIExpression()), !dbg !5812
  %517 = sub i32 %516, %len228.i, !dbg !5813
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %4, i32 %517), !dbg !5814
  %518 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %510, align 4, !dbg !5815
  %519 = bitcast { i8*, i32, i32 }* %518 to i8*, !dbg !5815
  %520 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 54, !dbg !5816
  store i8* %519, i8** %520, align 4, !dbg !5816
  %521 = extractvalue { i8*, i32, i32 } %58, 2, !dbg !5816
  %slice.highmax247.i = icmp ugt i32 %len228.i, %521, !dbg !5816
  br i1 %slice.highmax247.i, label %slice.throw251.i, label %slice.next252.i, !dbg !5816

slice.throw251.i:                                 ; preds = %lookup.next236.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5816
  unreachable, !dbg !5816

slice.next252.i:                                  ; preds = %lookup.next236.i
  %522 = getelementptr inbounds i8, i8* %.pre-phi135.i, i32 1, !dbg !5816
  %523 = add i32 %len228.i, -1, !dbg !5816
  tail call fastcc void @"(*fmt.buffer).write"({ i8*, i32, i32 }* %518, i8* nonnull %522, i32 %523), !dbg !5817
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5818
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5818
  br label %"(*fmt.fmt).fmtFloat.exit", !dbg !5818

lookup.throw255.i:                                ; preds = %cond.false38.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !5136
  unreachable, !dbg !5136

lookup.next256.i:                                 ; preds = %cond.false38.i
  %524 = load i8, i8* %.pre-phi135.i, align 1, !dbg !5136
  %.not.i = icmp eq i8 %524, 43, !dbg !5819
  br i1 %.not.i, label %if.done39.i, label %gep.next215.i, !dbg !5067

slice.throw262.i:                                 ; preds = %if.done39.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5139
  unreachable, !dbg !5139

slice.next263.i:                                  ; preds = %if.done39.i
  %525 = getelementptr inbounds i8, i8* %.pre-phi135.i, i32 1, !dbg !5139
  %526 = add i32 %indexaddr.len254.i, -1, !dbg !5139
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %4, i8* nonnull %525, i32 %526), !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5067
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5067
  br label %"(*fmt.fmt).fmtFloat.exit", !dbg !5067

lookup.next271.i:                                 ; preds = %lookup.next.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %466, metadata !4961, metadata !DIExpression()), !dbg !5821
  store i8 43, i8* %.pre-phi.i, align 1, !dbg !5822
  br label %if.done2.i, !dbg !5067

"(*fmt.fmt).fmtFloat.exit":                       ; preds = %slice.next263.i, %slice.next252.i, %if.done37.i, %if.done10.i
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5823
  ret void, !dbg !5823
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* dereferenceable_or_null(140) %p, i64 %v, i1 %isSigned) unnamed_addr #2 section ".text.(*fmt.pp).fmtInteger" !dbg !5824 {
entry:
  call void @llvm.dbg.value(metadata i64 %v, metadata !5829, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.value(metadata i1 %isSigned, metadata !5830, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.value(metadata i32 118, metadata !5831, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5828, metadata !DIExpression()), !dbg !5834
  %0 = icmp eq %fmt.pp* %p, null, !dbg !5835
  br i1 %0, label %gep.throw, label %gep.next, !dbg !5835

if.then:                                          ; preds = %gep.next
  tail call fastcc void @"(*fmt.pp).fmt0x64"(%fmt.pp* nonnull %p, i64 %v, i1 true), !dbg !5836
  br label %switch.done, !dbg !5837

switch.done:                                      ; preds = %gep.next25, %if.then
  ret void, !dbg !5837

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !5835
  unreachable, !dbg !5835

gep.next:                                         ; preds = %entry
  %1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !5838
  %2 = load i1, i1* %1, align 1, !dbg !5838
  %.not = xor i1 %2, true, !dbg !5837
  %brmerge = or i1 %.not, %isSigned, !dbg !5837
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5828, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i64 %v, metadata !5829, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.value(metadata i64 %v, metadata !5829, metadata !DIExpression()), !dbg !5841
  br i1 %brmerge, label %gep.next25, label %if.then, !dbg !5837

gep.next25:                                       ; preds = %gep.next
  %3 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !5835
  call void @llvm.dbg.value(metadata i1 %isSigned, metadata !5830, metadata !DIExpression()), !dbg !5842
  call void @llvm.dbg.value(metadata i32 118, metadata !5831, metadata !DIExpression()), !dbg !5843
  tail call fastcc void @"(*fmt.fmt).fmtInteger"(%fmt.fmt* nonnull %3, i64 %v, i32 10, i1 %isSigned, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"(*fmt.pp).fmtInteger$string", i32 0, i32 0)), !dbg !5844
  br label %switch.done, !dbg !5837
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).fmtString"(%fmt.pp* dereferenceable_or_null(140) %p, i8* %v.data, i32 %v.len) unnamed_addr #2 section ".text.(*fmt.pp).fmtString" !dbg !5845 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !5852
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !5852
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5852
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !5852
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !5852
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !5852
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %v.data, metadata !5850, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5852
  call void @llvm.dbg.value(metadata i32 %v.len, metadata !5850, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5852
  call void @llvm.dbg.value(metadata i32 118, metadata !5851, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5849, metadata !DIExpression()), !dbg !5854
  %3 = icmp eq %fmt.pp* %p, null, !dbg !5855
  br i1 %3, label %gep.throw, label %gep.next, !dbg !5855

switch.done:                                      ; preds = %if.then.i, %if.else.i, %if.then1.i, %gep.next16
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5856
  ret void, !dbg !5856

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !5855
  unreachable, !dbg !5855

gep.next:                                         ; preds = %entry
  %4 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !5855
  %5 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !5857
  %6 = load i1, i1* %5, align 1, !dbg !5857
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5849, metadata !DIExpression()), !dbg !5858
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5850, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5850, metadata !DIExpression()), !dbg !5860
  %7 = tail call fastcc { i8*, i32 } @"(*fmt.fmt).truncateString"(%fmt.fmt* nonnull %4, i8* %v.data, i32 %v.len), !dbg !5856
  %newret1.i = extractvalue { i8*, i32 } %7, 0, !dbg !5856
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !5856
  store i8* %newret1.i, i8** %8, align 4, !dbg !5856
  %newret3.i = extractvalue { i8*, i32 } %7, 1, !dbg !5856
  br i1 %6, label %gep.next14, label %gep.next16, !dbg !5856

gep.next14:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5861, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8* %v.data, metadata !5866, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5868
  call void @llvm.dbg.value(metadata i32 %v.len, metadata !5866, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5868
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5861, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5866, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5866, metadata !DIExpression()), !dbg !5872
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5861, metadata !DIExpression()), !dbg !5873
  %9 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 4, !dbg !5874
  %10 = load i1, i1* %9, align 1, !dbg !5874
  br i1 %10, label %cond.true.i, label %gep.next6.i, !dbg !5875

cond.true.i:                                      ; preds = %gep.next14
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5866, metadata !DIExpression()), !dbg !5876
  %11 = insertvalue %runtime._string zeroinitializer, i8* %newret1.i, 0, !dbg !5877
  %12 = insertvalue %runtime._string %11, i32 %newret3.i, 1, !dbg !5877
  call void @llvm.dbg.value(metadata i8* %newret1.i, metadata !5880, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5877
  call void @llvm.dbg.value(metadata i32 %newret3.i, metadata !5880, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5877
  br label %for.loop.i.i, !dbg !5884

for.loop.i.i:                                     ; preds = %for.loop.i.i.backedge, %cond.true.i
  %13 = phi %runtime._string [ %12, %cond.true.i ], [ %27, %for.loop.i.i.backedge ], !dbg !5885
  %14 = extractvalue %runtime._string %13, 0, !dbg !5886
  %15 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !5886
  store i8* %14, i8** %15, align 4, !dbg !5886
  call void @llvm.dbg.value(metadata %runtime._string %13, metadata !5880, metadata !DIExpression()), !dbg !5886
  %len.i.i = extractvalue %runtime._string %13, 1, !dbg !5887
  %16 = icmp sgt i32 %len.i.i, 0, !dbg !5888
  br i1 %16, label %for.body.i.i, label %if.then.i, !dbg !5884

for.body.i.i:                                     ; preds = %for.loop.i.i
  call void @llvm.dbg.value(metadata %runtime._string %13, metadata !5880, metadata !DIExpression()), !dbg !5889
  %17 = tail call fastcc { i32, i32 } @"unicode/utf8.DecodeRuneInString"(i8* %14, i32 %len.i.i), !dbg !5890
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5891
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %19, metadata !5882, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata %runtime._string %13, metadata !5880, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.value(metadata i32 %19, metadata !5882, metadata !DIExpression()), !dbg !5894
  %slice.lowhigh.i.i = icmp ult i32 %len.i.i, %19, !dbg !5895
  br i1 %slice.lowhigh.i.i, label %slice.throw.i.i, label %slice.next.i.i, !dbg !5895

if.then.i.i:                                      ; preds = %slice.next.i.i
  %20 = icmp eq i32 %18, 65279, !dbg !5896
  br i1 %20, label %gep.next6.i, label %for.loop.i.i.backedge, !dbg !5884

if.done.i.i:                                      ; preds = %slice.next.i.i
  %21 = icmp eq i32 %18, 65533, !dbg !5897
  br i1 %21, label %gep.next6.i, label %if.done3.i.i, !dbg !5884

if.done3.i.i:                                     ; preds = %if.done.i.i
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5898
  %22 = icmp slt i32 %18, 32, !dbg !5899
  %23 = icmp ne i32 %18, 9
  %or.cond.i.i = and i1 %22, %23, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5901
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5902
  br i1 %or.cond.i.i, label %gep.next6.i, label %switch.early.test.i.i, !dbg !5884

switch.early.test.i.i:                            ; preds = %if.done3.i.i
  switch i32 %18, label %for.loop.i.i.backedge [
    i32 127, label %gep.next6.i
    i32 96, label %gep.next6.i
  ], !dbg !5884

for.loop.i.i.backedge:                            ; preds = %switch.early.test.i.i, %if.then.i.i
  br label %for.loop.i.i, !dbg !5886

slice.throw.i.i:                                  ; preds = %for.body.i.i
  tail call fastcc void @runtime.slicePanic(), !dbg !5895
  unreachable, !dbg !5895

slice.next.i.i:                                   ; preds = %for.body.i.i
  %24 = getelementptr inbounds i8, i8* %14, i32 %19, !dbg !5895
  %25 = sub i32 %len.i.i, %19, !dbg !5895
  %26 = insertvalue %runtime._string undef, i8* %24, 0, !dbg !5895
  %27 = insertvalue %runtime._string %26, i32 %25, 1, !dbg !5895
  call void @llvm.dbg.value(metadata %runtime._string %27, metadata !5880, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.value(metadata i32 %19, metadata !5882, metadata !DIExpression()), !dbg !5904
  %28 = icmp sgt i32 %19, 1, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.value(metadata i32 %18, metadata !5881, metadata !DIExpression()), !dbg !5907
  br i1 %28, label %if.then.i.i, label %if.done.i.i, !dbg !5884

if.then.i:                                        ; preds = %for.loop.i.i
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5861, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5866, metadata !DIExpression()), !dbg !5909
  %29 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(*fmt.fmt).fmtQ$string.764", i32 0, i32 0), i32 1, i8* %newret1.i, i32 %newret3.i), !dbg !5910
  %newret15.i = extractvalue { i8*, i32 } %29, 0, !dbg !5910
  %30 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !5910
  store i8* %newret15.i, i8** %30, align 4, !dbg !5910
  %newret17.i = extractvalue { i8*, i32 } %29, 1, !dbg !5910
  %31 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret15.i, i32 %newret17.i, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(*fmt.fmt).fmtQ$string.764", i32 0, i32 0), i32 1), !dbg !5911
  %newret.i = extractvalue { i8*, i32 } %31, 0, !dbg !5911
  %32 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !5911
  store i8* %newret.i, i8** %32, align 4, !dbg !5911
  %newret13.i = extractvalue { i8*, i32 } %31, 1, !dbg !5911
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %4, i8* %newret.i, i32 %newret13.i), !dbg !5912
  br label %switch.done, !dbg !5913

if.then1.i:                                       ; preds = %gep.next6.i
  call void @llvm.dbg.value(metadata i8* %slice.ptr.i, metadata !5914, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5918
  call void @llvm.dbg.value(metadata i32 0, metadata !5914, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5918
  call void @llvm.dbg.value(metadata i32 68, metadata !5914, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !5918
  call void @llvm.dbg.value(metadata i8* %newret1.i, metadata !5917, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5918
  call void @llvm.dbg.value(metadata i32 %newret3.i, metadata !5917, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5918
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !5914, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5917, metadata !DIExpression()), !dbg !5921
  %33 = tail call fastcc { i8*, i32, i32 } @strconv.appendQuotedWith(i8* nonnull %slice.ptr.i, i8* %newret1.i, i32 %newret3.i, i1 true), !dbg !5922
  %34 = extractvalue { i8*, i32, i32 } %33, 0, !dbg !5922
  %35 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !5923
  store i8* %34, i8** %35, align 4, !dbg !5923
  %36 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !5923
  store i8* %34, i8** %36, align 4, !dbg !5923
  %oldret1.i.i = extractvalue { i8*, i32, i32 } %33, 1, !dbg !5923
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %4, i8* %34, i32 %oldret1.i.i), !dbg !5924
  br label %switch.done, !dbg !5875

if.else.i:                                        ; preds = %gep.next6.i
  call void @llvm.dbg.value(metadata i8* %slice.ptr.i, metadata !5925, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5929
  call void @llvm.dbg.value(metadata i32 0, metadata !5925, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5929
  call void @llvm.dbg.value(metadata i32 68, metadata !5925, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !5929
  call void @llvm.dbg.value(metadata i8* %newret1.i, metadata !5928, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5929
  call void @llvm.dbg.value(metadata i32 %newret3.i, metadata !5928, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5929
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !5925, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5928, metadata !DIExpression()), !dbg !5932
  %37 = tail call fastcc { i8*, i32, i32 } @strconv.appendQuotedWith(i8* nonnull %slice.ptr.i, i8* %newret1.i, i32 %newret3.i, i1 false), !dbg !5933
  %38 = extractvalue { i8*, i32, i32 } %37, 0, !dbg !5933
  %39 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !5934
  store i8* %38, i8** %39, align 4, !dbg !5934
  %40 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !5934
  store i8* %38, i8** %40, align 4, !dbg !5934
  %oldret1.i6.i = extractvalue { i8*, i32, i32 } %37, 1, !dbg !5934
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %4, i8* %38, i32 %oldret1.i6.i), !dbg !5935
  br label %switch.done, !dbg !5875

gep.next6.i:                                      ; preds = %switch.early.test.i.i, %switch.early.test.i.i, %if.done3.i.i, %if.done.i.i, %if.then.i.i, %gep.next14
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5861, metadata !DIExpression()), !dbg !5936
  %slice.ptr.i = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 4, i32 0, !dbg !5937
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !5867, metadata !DIExpression()), !dbg !5938
  %41 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 3, !dbg !5939
  %42 = load i1, i1* %41, align 1, !dbg !5939
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5866, metadata !DIExpression()), !dbg !5940
  br i1 %42, label %if.then1.i, label %if.else.i, !dbg !5875

gep.next16:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata i8* %v.data, metadata !5941, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5945
  call void @llvm.dbg.value(metadata i32 %v.len, metadata !5941, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !5945
  call void @llvm.dbg.value(metadata %fmt.fmt* %4, metadata !5944, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !5941, metadata !DIExpression()), !dbg !5948
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %4, i8* %newret1.i, i32 %newret3.i), !dbg !5949
  br label %switch.done, !dbg !5856
}

; Function Attrs: optsize
define internal fastcc i1 @"(*fmt.pp).handleMethods"(%fmt.pp* dereferenceable_or_null(140) %p) unnamed_addr #2 section ".text.(*fmt.pp).handleMethods" !dbg !5950 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !5968
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 9, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !5968
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5968
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !5968
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !5968
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !5968
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5968
  %defer.alloca211 = alloca { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, align 8, !dbg !5968
  %defer.alloca173 = alloca { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, align 8, !dbg !5968
  %handled = alloca i1, align 1, !dbg !5968
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 118, metadata !5953, metadata !DIExpression()), !dbg !5968
  store i1 false, i1* %handled, align 1, !dbg !5968
  %3 = bitcast i1* %handled to i8*, !dbg !5968
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !5969
  store i8* %3, i8** %4, align 4, !dbg !5969
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5969
  %5 = icmp eq %fmt.pp* %p, null, !dbg !5970
  br i1 %5, label %gep.throw, label %gep.next, !dbg !5970

typeswitch.next:                                  ; preds = %deref.next161
  %cond.i = icmp eq i32 %.unpack, 88, !dbg !5971
  br i1 %cond.i, label %"(fmt.Stringer).String.exit", label %deref.next16, !dbg !5973

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !5970
  unreachable, !dbg !5970

gep.next:                                         ; preds = %entry
  %6 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 7, !dbg !5970
  %7 = load i1, i1* %6, align 1, !dbg !5970
  br i1 %7, label %deref.next16, label %gep.next53, !dbg !5973

deref.next16:                                     ; preds = %rundefers.loophead217, %rundefers.loophead179, %typeswitch.next, %deref.next94, %gep.next
  %merge = phi i1 [ false, %gep.next ], [ false, %deref.next94 ], [ false, %typeswitch.next ], [ true, %rundefers.loophead179 ], [ true, %rundefers.loophead217 ]
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !5974
  ret i1 %merge, !dbg !5974

gep.next53:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata i32 118, metadata !5953, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5976
  %.elt3 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 1, !dbg !5977
  %.unpack4 = load i8*, i8** %.elt3, align 4, !dbg !5977
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !5978
  store i8* %.unpack4, i8** %8, align 4, !dbg !5978
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !5958, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i1 false, metadata !5960, metadata !DIExpression()), !dbg !5979
  %9 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !5980
  %10 = load i1, i1* %9, align 1, !dbg !5980
  br i1 %10, label %deref.next94, label %deref.next161, !dbg !5973

deref.next94:                                     ; preds = %gep.next53
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5981
  %.unpack18 = load i8*, i8** %.elt3, align 4, !dbg !5982
  %11 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !5983
  store i8* %.unpack18, i8** %11, align 4, !dbg !5983
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !5962, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.value(metadata i1 false, metadata !5964, metadata !DIExpression()), !dbg !5984
  br label %deref.next16, !dbg !5973

deref.next161:                                    ; preds = %gep.next53
  call void @llvm.dbg.value(metadata i32 118, metadata !5953, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5986
  %.elt = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 0, !dbg !5987
  %.unpack = load i32, i32* %.elt, align 4, !dbg !5987
  %12 = insertvalue %runtime._interface undef, i32 %.unpack, 0, !dbg !5987
  %.unpack6 = load i8*, i8** %.elt3, align 4, !dbg !5987
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !5987
  store i8* %.unpack6, i8** %13, align 4, !dbg !5987
  %14 = insertvalue %runtime._interface %12, i8* %.unpack6, 1, !dbg !5987
  %typeassert.ok298 = tail call fastcc i1 @"error$typeassert"(i32 %.unpack), !dbg !5988
  %spec.select243 = select i1 %typeassert.ok298, %runtime._interface %14, %runtime._interface zeroinitializer, !dbg !5988
  br i1 %typeassert.ok298, label %store.next167, label %typeswitch.next, !dbg !5973

store.next167:                                    ; preds = %deref.next161
  store i1 true, i1* %handled, align 1, !dbg !5989
  call void @llvm.dbg.value(metadata i1 true, metadata !5961, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5990
  %.unpack12 = load i32, i32* %.elt, align 4, !dbg !5991
  %.unpack14 = load i8*, i8** %.elt3, align 4, !dbg !5991
  %15 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !5992
  store i8* %.unpack14, i8** %15, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i32 118, metadata !5953, metadata !DIExpression()), !dbg !5992
  %16 = bitcast { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173 to i8*, !dbg !5968
  %17 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !5968
  store i8* %16, i8** %17, align 4, !dbg !5968
  %.fca.0.gep267 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 0, !dbg !5968
  store i32 0, i32* %.fca.0.gep267, align 8, !dbg !5968
  %.fca.1.gep269 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 1, !dbg !5968
  store %runtime._defer* null, %runtime._defer** %.fca.1.gep269, align 4, !dbg !5968
  %.fca.2.gep271 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 2, !dbg !5968
  store %fmt.pp* %p, %fmt.pp** %.fca.2.gep271, align 8, !dbg !5968
  %.fca.3.0.gep273 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 3, i32 0, !dbg !5968
  store i32 %.unpack12, i32* %.fca.3.0.gep273, align 4, !dbg !5968
  %.fca.3.1.gep275 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 3, i32 1, !dbg !5968
  store i8* %.unpack14, i8** %.fca.3.1.gep275, align 4, !dbg !5968
  %.fca.4.gep277 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 4, !dbg !5968
  store i32 118, i32* %.fca.4.gep277, align 4, !dbg !5968
  %.fca.5.0.gep279 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 5, i32 0, !dbg !5968
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).handleMethods$string.750", i32 0, i32 0), i8** %.fca.5.0.gep279, align 8, !dbg !5968
  %.fca.5.1.gep281 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173, i32 0, i32 5, i32 1, !dbg !5968
  store i32 5, i32* %.fca.5.1.gep281, align 4, !dbg !5968
  %defer.alloca.cast174 = bitcast { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca173 to %runtime._defer*, !dbg !5968
  call void @llvm.dbg.value(metadata %runtime._interface %spec.select243, metadata !5965, metadata !DIExpression()), !dbg !5993
  %invoke.typecode175 = extractvalue %runtime._interface %spec.select243, 0, !dbg !5994
  %invoke.func.receiver178 = extractvalue %runtime._interface %spec.select243, 1, !dbg !5994
  %18 = tail call fastcc { i8*, i32 } @"(error).Error"(i8* %invoke.func.receiver178, i32 %invoke.typecode175), !dbg !5994
  %newret = extractvalue { i8*, i32 } %18, 0, !dbg !5994
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !5994
  store i8* %newret, i8** %19, align 4, !dbg !5994
  %newret1 = extractvalue { i8*, i32 } %18, 1, !dbg !5994
  tail call fastcc void @"(*fmt.pp).fmtString"(%fmt.pp* nonnull %p, i8* %newret, i32 %newret1), !dbg !5995
  br label %rundefers.loophead179, !dbg !5973

rundefers.loophead179:                            ; preds = %rundefers.loop180, %store.next167
  %deferPtr.3 = phi %runtime._defer* [ %defer.alloca.cast174, %store.next167 ], [ %stack.next185, %rundefers.loop180 ], !dbg !5973
  %stackIsNil183 = icmp eq %runtime._defer* %deferPtr.3, null, !dbg !5973
  br i1 %stackIsNil183, label %deref.next16, label %rundefers.loop180, !dbg !5973

rundefers.loop180:                                ; preds = %rundefers.loophead179
  %stack.next.gep184 = getelementptr inbounds %runtime._defer, %runtime._defer* %deferPtr.3, i32 0, i32 1, !dbg !5973
  %stack.next185 = load %runtime._defer*, %runtime._defer** %stack.next.gep184, align 4, !dbg !5973
  call fastcc void @"(*fmt.pp).catchPanic"(), !dbg !5973
  br label %rundefers.loophead179, !dbg !5973

"(fmt.Stringer).String.exit":                     ; preds = %typeswitch.next
  store i1 true, i1* %handled, align 1, !dbg !5996
  call void @llvm.dbg.value(metadata i1 true, metadata !5961, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !5952, metadata !DIExpression()), !dbg !5997
  %.unpack8 = load i32, i32* %.elt, align 4, !dbg !5998
  %.unpack10 = load i8*, i8** %.elt3, align 4, !dbg !5998
  %20 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !5999
  store i8* %.unpack10, i8** %20, align 4, !dbg !5999
  call void @llvm.dbg.value(metadata i32 118, metadata !5953, metadata !DIExpression()), !dbg !5999
  %21 = bitcast { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211 to i8*, !dbg !5968
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !5968
  store i8* %21, i8** %22, align 4, !dbg !5968
  %.fca.0.gep283 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 0, !dbg !5968
  store i32 0, i32* %.fca.0.gep283, align 8, !dbg !5968
  %.fca.1.gep285 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 1, !dbg !5968
  store %runtime._defer* null, %runtime._defer** %.fca.1.gep285, align 4, !dbg !5968
  %.fca.2.gep287 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 2, !dbg !5968
  store %fmt.pp* %p, %fmt.pp** %.fca.2.gep287, align 8, !dbg !5968
  %.fca.3.0.gep289 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 3, i32 0, !dbg !5968
  store i32 %.unpack8, i32* %.fca.3.0.gep289, align 4, !dbg !5968
  %.fca.3.1.gep291 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 3, i32 1, !dbg !5968
  store i8* %.unpack10, i8** %.fca.3.1.gep291, align 4, !dbg !5968
  %.fca.4.gep293 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 4, !dbg !5968
  store i32 118, i32* %.fca.4.gep293, align 4, !dbg !5968
  %.fca.5.0.gep295 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 5, i32 0, !dbg !5968
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"(*fmt.pp).handleMethods$string.751", i32 0, i32 0), i8** %.fca.5.0.gep295, align 8, !dbg !5968
  %.fca.5.1.gep297 = getelementptr inbounds { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }, { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211, i32 0, i32 5, i32 1, !dbg !5968
  store i32 6, i32* %.fca.5.1.gep297, align 4, !dbg !5968
  %defer.alloca.cast212 = bitcast { i32, %runtime._defer*, %fmt.pp*, %runtime._interface, i32, %runtime._string }* %defer.alloca211 to %runtime._defer*, !dbg !5968
  call void @llvm.dbg.value(metadata %runtime._interface %14, metadata !5966, metadata !DIExpression()), !dbg !6000
  tail call fastcc void @"(*fmt.pp).fmtString"(%fmt.pp* nonnull %p, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6001
  br label %rundefers.loophead217, !dbg !5973

rundefers.loophead217:                            ; preds = %rundefers.loop218, %"(fmt.Stringer).String.exit"
  %deferPtr.4 = phi %runtime._defer* [ %defer.alloca.cast212, %"(fmt.Stringer).String.exit" ], [ %stack.next223, %rundefers.loop218 ], !dbg !5973
  %stackIsNil221 = icmp eq %runtime._defer* %deferPtr.4, null, !dbg !5973
  br i1 %stackIsNil221, label %deref.next16, label %rundefers.loop218, !dbg !5973

rundefers.loop218:                                ; preds = %rundefers.loophead217
  %stack.next.gep222 = getelementptr inbounds %runtime._defer, %runtime._defer* %deferPtr.4, i32 0, i32 1, !dbg !5973
  %stack.next223 = load %runtime._defer*, %runtime._defer** %stack.next.gep222, align 4, !dbg !5973
  call fastcc void @"(*fmt.pp).catchPanic"(), !dbg !5973
  br label %rundefers.loophead217, !dbg !5973
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).printArg"(%fmt.pp* dereferenceable_or_null(140) %p, i32 %arg.typecode, i8* %arg.value) unnamed_addr #2 section ".text.(*fmt.pp).printArg" !dbg !6002 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !6033
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 8, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !6033
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6033
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !6033
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !6033
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !6033
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6033
  %f = alloca %reflect.Value, align 8, !dbg !6033
  %3 = alloca %reflect.Value, align 8, !dbg !6033
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %arg.typecode, metadata !6007, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %arg.value, metadata !6007, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6033
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6034
  %4 = icmp eq %fmt.pp* %p, null, !dbg !6035
  br i1 %4, label %gep.throw, label %gep.next, !dbg !6035

switch.done:                                      ; preds = %gep.next25.i, %gep.next44.i, %gep.next31.i, %deref.next183, %typeswitch.body, %typeswitch.body6, %typeswitch.body8, %typeswitch.body10, %typeswitch.body12, %typeswitch.body14, %typeswitch.body16, %typeswitch.body18, %typeswitch.body20, %typeswitch.body22, %typeswitch.body24, %typeswitch.body26, %typeswitch.body28, %typeswitch.body30, %typeswitch.body32, %typeswitch.body34, %typeswitch.body36, %deref.next191, %typeswitch.next44, %if.then45, %gep.next51
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6036
  ret void, !dbg !6036

typeswitch.body:                                  ; preds = %gep.next
  %5 = ptrtoint i8* %arg.value to i32, !dbg !6037
  %6 = and i32 %5, 1, !dbg !6037
  %unpack.int = icmp ne i32 %6, 0, !dbg !6037
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i1 %unpack.int, metadata !6010, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6040
  tail call fastcc void @"(*fmt.pp).fmtBool"(%fmt.pp* nonnull %p, i1 %unpack.int), !dbg !6041
  br label %switch.done, !dbg !6042

typeswitch.body6:                                 ; preds = %gep.next
  %7 = ptrtoint i8* %arg.value to i32, !dbg !6033
  %8 = bitcast i32 %7 to float, !dbg !6033
  %phi.cast = fpext float %8 to double, !dbg !6033
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.value(metadata float undef, metadata !6011, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6045
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %phi.cast, i32 32), !dbg !6046
  br label %switch.done, !dbg !6042

typeswitch.body8:                                 ; preds = %gep.next
  %9 = bitcast i8* %arg.value to double*, !dbg !6047
  %10 = load double, double* %9, align 8, !dbg !6047
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6048
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !6012, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6050
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %10, i32 64), !dbg !6051
  br label %switch.done, !dbg !6042

typeswitch.body10:                                ; preds = %gep.next
  %.elt19 = bitcast i8* %arg.value to float*, !dbg !6052
  %.unpack20 = load float, float* %.elt19, align 4, !dbg !6052
  %.elt21 = getelementptr inbounds i8, i8* %arg.value, i32 4, !dbg !6052
  %11 = bitcast i8* %.elt21 to float*, !dbg !6052
  %.unpack22 = load float, float* %11, align 4, !dbg !6052
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata { float, float } zeroinitializer, metadata !6013, metadata !DIExpression()), !dbg !6054
  %real.f64 = fpext float %.unpack20 to double, !dbg !6055
  %imag.f64 = fpext float %.unpack22 to double, !dbg !6055
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6056
  tail call fastcc void @"(*fmt.pp).fmtComplex"(%fmt.pp* nonnull %p, double %real.f64, double %imag.f64, i32 64), !dbg !6057
  br label %switch.done, !dbg !6042

typeswitch.body12:                                ; preds = %gep.next
  %.elt15 = bitcast i8* %arg.value to double*, !dbg !6058
  %.unpack16 = load double, double* %.elt15, align 8, !dbg !6058
  %.elt17 = getelementptr inbounds i8, i8* %arg.value, i32 8, !dbg !6058
  %12 = bitcast i8* %.elt17 to double*, !dbg !6058
  %.unpack18 = load double, double* %12, align 8, !dbg !6058
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata { double, double } zeroinitializer, metadata !6015, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6061
  tail call fastcc void @"(*fmt.pp).fmtComplex"(%fmt.pp* nonnull %p, double %.unpack16, double %.unpack18, i32 128), !dbg !6062
  br label %switch.done, !dbg !6042

typeswitch.next13:                                ; preds = %gep.next
  %unpack.int85 = ptrtoint i8* %arg.value to i32, !dbg !6063
  switch i32 %arg.typecode, label %typeswitch.next44 [
    i32 4, label %typeswitch.body14
    i32 6, label %typeswitch.body16
    i32 8, label %typeswitch.body18
    i32 10, label %typeswitch.body20
    i32 12, label %typeswitch.body22
    i32 14, label %typeswitch.body24
    i32 16, label %typeswitch.body26
    i32 18, label %typeswitch.body28
    i32 20, label %typeswitch.body30
    i32 22, label %typeswitch.body32
    i32 24, label %typeswitch.body34
    i32 34, label %typeswitch.body36
    i32 519, label %gep.next.i
    i32 223, label %typeswitch.body40
  ], !dbg !6042

typeswitch.body14:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6016, metadata !DIExpression()), !dbg !6065
  %13 = sext i32 %unpack.int85 to i64, !dbg !6066
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6067
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %13, i1 true), !dbg !6068
  br label %switch.done, !dbg !6042

typeswitch.body16:                                ; preds = %typeswitch.next13
  %unpack.int92 = zext i32 %unpack.int85 to i64, !dbg !6069
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6017, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6071
  %sext14 = shl i64 %unpack.int92, 56, !dbg !6072
  %14 = ashr exact i64 %sext14, 56, !dbg !6072
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6073
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %14, i1 true), !dbg !6074
  br label %switch.done, !dbg !6042

typeswitch.body18:                                ; preds = %typeswitch.next13
  %unpack.int99 = zext i32 %unpack.int85 to i64, !dbg !6075
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6019, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6077
  %sext = shl i64 %unpack.int99, 48, !dbg !6078
  %15 = ashr exact i64 %sext, 48, !dbg !6078
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6079
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %15, i1 true), !dbg !6080
  br label %switch.done, !dbg !6042

typeswitch.body20:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6021, metadata !DIExpression()), !dbg !6082
  %16 = sext i32 %unpack.int85 to i64, !dbg !6083
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6084
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %16, i1 true), !dbg !6085
  br label %switch.done, !dbg !6042

typeswitch.body22:                                ; preds = %typeswitch.next13
  %17 = bitcast i8* %arg.value to i64*, !dbg !6086
  %18 = load i64, i64* %17, align 8, !dbg !6086
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.value(metadata i64 0, metadata !6022, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6089
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %18, i1 true), !dbg !6090
  br label %switch.done, !dbg !6042

typeswitch.body24:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6023, metadata !DIExpression()), !dbg !6092
  %19 = zext i32 %unpack.int85 to i64, !dbg !6093
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6094
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %19, i1 false), !dbg !6095
  br label %switch.done, !dbg !6042

typeswitch.body26:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6024, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6097
  %unpack.int92.mask = and i32 %unpack.int85, 255, !dbg !6098
  %20 = zext i32 %unpack.int92.mask to i64, !dbg !6098
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6099
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %20, i1 false), !dbg !6100
  br label %switch.done, !dbg !6042

typeswitch.body28:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6025, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6102
  %unpack.int99.mask = and i32 %unpack.int85, 65535, !dbg !6103
  %21 = zext i32 %unpack.int99.mask to i64, !dbg !6103
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6104
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %21, i1 false), !dbg !6105
  br label %switch.done, !dbg !6042

typeswitch.body30:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6026, metadata !DIExpression()), !dbg !6107
  %22 = zext i32 %unpack.int85 to i64, !dbg !6108
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6109
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %22, i1 false), !dbg !6110
  br label %switch.done, !dbg !6042

typeswitch.body32:                                ; preds = %typeswitch.next13
  %23 = bitcast i8* %arg.value to i64*, !dbg !6111
  %24 = load i64, i64* %23, align 8, !dbg !6111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i64 0, metadata !6027, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6114
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %24, i1 false), !dbg !6115
  br label %switch.done, !dbg !6042

typeswitch.body34:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %unpack.int85, metadata !6028, metadata !DIExpression()), !dbg !6117
  %25 = zext i32 %unpack.int85 to i64, !dbg !6118
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6119
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %25, i1 false), !dbg !6120
  br label %switch.done, !dbg !6042

typeswitch.body36:                                ; preds = %typeswitch.next13
  %.elt10 = bitcast i8* %arg.value to i8**, !dbg !6121
  %.unpack11 = load i8*, i8** %.elt10, align 4, !dbg !6121
  %.elt12 = getelementptr inbounds i8, i8* %arg.value, i32 4, !dbg !6121
  %26 = bitcast i8* %.elt12 to i32*, !dbg !6121
  %.unpack13 = load i32, i32* %26, align 4, !dbg !6121
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata %runtime._string zeroinitializer, metadata !6029, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6124
  tail call fastcc void @"(*fmt.pp).fmtString"(%fmt.pp* nonnull %p, i8* %.unpack11, i32 %.unpack13), !dbg !6125
  br label %switch.done, !dbg !6042

rangeindex.loop.i:                                ; preds = %gep.next27.i, %if.done3.i
  %27 = phi i32 [ -1, %gep.next27.i ], [ %28, %if.done3.i ], !dbg !6126
  %28 = add nsw i32 %27, 1, !dbg !6126
  %exitcond.not.i = icmp eq i32 %27, %39, !dbg !6126
  br i1 %exitcond.not.i, label %gep.next31.i, label %rangeindex.body.i, !dbg !6126

rangeindex.body.i:                                ; preds = %rangeindex.loop.i
  %exitcond2.not.i = icmp eq i32 %27, %40, !dbg !6140
  br i1 %exitcond2.not.i, label %lookup.throw.i, label %lookup.next.i, !dbg !6140

if.done3.i:                                       ; preds = %gep.next29.i, %lookup.next.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8 %42, metadata !6136, metadata !DIExpression()), !dbg !6142
  %29 = zext i8 %42 to i64, !dbg !6143
  tail call fastcc void @"(*fmt.pp).fmt0x64"(%fmt.pp* nonnull %p, i64 %29, i1 true), !dbg !6144
  br label %rangeindex.loop.i, !dbg !6126

rangeindex.loop4.i:                               ; preds = %gep.next42.i, %gep.next33.i
  %30 = phi i32 [ -1, %gep.next33.i ], [ %31, %gep.next42.i ], !dbg !6126
  %31 = add nsw i32 %30, 1, !dbg !6126
  %exitcond4.not.i = icmp eq i32 %30, %44, !dbg !6126
  br i1 %exitcond4.not.i, label %gep.next44.i, label %rangeindex.body5.i, !dbg !6126

rangeindex.body5.i:                               ; preds = %rangeindex.loop4.i
  %exitcond5.not.i = icmp eq i32 %30, %45, !dbg !6145
  br i1 %exitcond5.not.i, label %lookup.throw37.i, label %lookup.next38.i, !dbg !6145

gep.next.i:                                       ; preds = %typeswitch.next13
  %.elt = bitcast i8* %arg.value to i8**, !dbg !6146
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !6146
  %.elt6 = getelementptr inbounds i8, i8* %arg.value, i32 4, !dbg !6146
  %32 = bitcast i8* %.elt6 to i32*, !dbg !6146
  %.unpack7 = load i32, i32* %32, align 4, !dbg !6146
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } zeroinitializer, metadata !6030, metadata !DIExpression()), !dbg !6148
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.value(metadata i8* %.unpack, metadata !6132, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6150
  call void @llvm.dbg.value(metadata i32 %.unpack7, metadata !6132, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6150
  call void @llvm.dbg.value(metadata i32 undef, metadata !6132, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6150
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"(*fmt.pp).printArg$string.753", i32 0, i32 0), metadata !6134, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6150
  call void @llvm.dbg.value(metadata i32 6, metadata !6134, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6150
  call void @llvm.dbg.value(metadata i32 118, metadata !6133, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6152
  %33 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !6153
  %34 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6154
  %35 = load i1, i1* %34, align 1, !dbg !6154
  %36 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6126
  br i1 %35, label %gep.next23.i, label %gep.next33.i, !dbg !6126

gep.next23.i:                                     ; preds = %gep.next.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !6134, metadata !DIExpression()), !dbg !6155
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"(*fmt.pp).printArg$string.753", i32 0, i32 0), i32 6), !dbg !6156
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !6132, metadata !DIExpression()), !dbg !6157
  %37 = icmp eq i8* %.unpack, null, !dbg !6158
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6159
  br i1 %37, label %gep.next25.i, label %gep.next27.i, !dbg !6126

gep.next25.i:                                     ; preds = %gep.next23.i
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).printValue$string.762", i32 0, i32 0), i32 5), !dbg !6160
  br label %switch.done, !dbg !6161

gep.next27.i:                                     ; preds = %gep.next23.i
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 123), !dbg !6162
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !6132, metadata !DIExpression()), !dbg !6140
  %38 = icmp sgt i32 %.unpack7, 0, !dbg !6126
  %smax.i = select i1 %38, i32 %.unpack7, i32 0, !dbg !6126
  %39 = add nsw i32 %smax.i, -1, !dbg !6126
  %40 = add i32 %.unpack7, -1, !dbg !6126
  br label %rangeindex.loop.i, !dbg !6126

lookup.throw.i:                                   ; preds = %rangeindex.body.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !6140
  unreachable, !dbg !6140

lookup.next.i:                                    ; preds = %rangeindex.body.i
  %41 = getelementptr inbounds i8, i8* %.unpack, i32 %28, !dbg !6140
  %42 = load i8, i8* %41, align 1, !dbg !6126
  call void @llvm.dbg.value(metadata i8 %42, metadata !6136, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.value(metadata i32 %28, metadata !6135, metadata !DIExpression()), !dbg !6164
  %.not6.i = icmp eq i32 %28, 0, !dbg !6165
  br i1 %.not6.i, label %if.done3.i, label %gep.next29.i, !dbg !6126

gep.next29.i:                                     ; preds = %lookup.next.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6166
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).printValue$string.763", i32 0, i32 0), i32 2), !dbg !6167
  br label %if.done3.i, !dbg !6126

gep.next31.i:                                     ; preds = %rangeindex.loop.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6168
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 125), !dbg !6169
  br label %switch.done, !dbg !6126

gep.next33.i:                                     ; preds = %gep.next.i
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 91), !dbg !6170
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !6132, metadata !DIExpression()), !dbg !6145
  %43 = icmp sgt i32 %.unpack7, 0, !dbg !6126
  %smax3.i = select i1 %43, i32 %.unpack7, i32 0, !dbg !6126
  %44 = add nsw i32 %smax3.i, -1, !dbg !6126
  %45 = add i32 %.unpack7, -1, !dbg !6126
  br label %rangeindex.loop4.i, !dbg !6126

lookup.throw37.i:                                 ; preds = %rangeindex.body5.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !6145
  unreachable, !dbg !6145

lookup.next38.i:                                  ; preds = %rangeindex.body5.i
  %46 = getelementptr inbounds i8, i8* %.unpack, i32 %31, !dbg !6145
  %47 = load i8, i8* %46, align 1, !dbg !6126
  call void @llvm.dbg.value(metadata i8 %47, metadata !6138, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.value(metadata i32 %31, metadata !6137, metadata !DIExpression()), !dbg !6172
  %.not.i = icmp eq i32 %31, 0, !dbg !6173
  br i1 %.not.i, label %gep.next42.i, label %gep.next40.i, !dbg !6126

gep.next40.i:                                     ; preds = %lookup.next38.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6174
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 32), !dbg !6175
  br label %gep.next42.i, !dbg !6126

gep.next42.i:                                     ; preds = %gep.next40.i, %lookup.next38.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i8 %47, metadata !6138, metadata !DIExpression()), !dbg !6177
  %48 = zext i8 %47 to i64, !dbg !6178
  call void @llvm.dbg.value(metadata i32 118, metadata !6133, metadata !DIExpression()), !dbg !6179
  tail call fastcc void @"(*fmt.fmt).fmtInteger"(%fmt.fmt* nonnull %33, i64 %48, i32 10, i1 false, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @"(*fmt.pp).fmtInteger$string", i32 0, i32 0)), !dbg !6180
  br label %rangeindex.loop4.i, !dbg !6126

gep.next44.i:                                     ; preds = %rangeindex.loop4.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6131, metadata !DIExpression()), !dbg !6181
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 93), !dbg !6182
  br label %switch.done, !dbg !6126

typeswitch.body40:                                ; preds = %typeswitch.next13
  %49 = bitcast i8* %arg.value to %reflect.Value*, !dbg !6183
  %50 = load %reflect.Value, %reflect.Value* %49, align 4, !dbg !6183
  %.fca.0.gep197 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 0, !dbg !6033
  %.fca.1.gep198 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 1, !dbg !6033
  %.fca.2.gep199 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 2, !dbg !6033
  %51 = bitcast %reflect.Value* %f to i8*, !dbg !6033
  %52 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !6033
  store i8* %51, i8** %52, align 4, !dbg !6033
  %53 = bitcast %reflect.Value* %f to i8*, !dbg !6033
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %53, i8 0, i64 9, i1 false), !dbg !6033
  %.fca.0.extract = extractvalue %reflect.Value %50, 0, !dbg !6184
  store i32 %.fca.0.extract, i32* %.fca.0.gep197, align 8, !dbg !6184
  %.fca.1.extract = extractvalue %reflect.Value %50, 1, !dbg !6184
  %54 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !6184
  store i8* %.fca.1.extract, i8** %54, align 4, !dbg !6184
  %55 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !6184
  store i8* %.fca.1.extract, i8** %55, align 4, !dbg !6184
  %56 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !6184
  store i8* %.fca.1.extract, i8** %56, align 4, !dbg !6184
  %57 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !6184
  store i8* %.fca.1.extract, i8** %57, align 4, !dbg !6184
  store i8* %.fca.1.extract, i8** %.fca.1.gep198, align 4, !dbg !6184
  %.fca.2.extract = extractvalue %reflect.Value %50, 2, !dbg !6184
  store i8 %.fca.2.extract, i8* %.fca.2.gep199, align 8, !dbg !6184
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6031, metadata !DIExpression()), !dbg !6185
  %58 = tail call fastcc i1 @"(reflect.Value).IsValid"(i32 %.fca.0.extract, i8* %.fca.1.extract, i8 %.fca.2.extract), !dbg !6186
  br i1 %58, label %deref.next183, label %deref.next191, !dbg !6042

typeswitch.next44:                                ; preds = %typeswitch.next13
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6188
  %59 = tail call fastcc i1 @"(*fmt.pp).handleMethods"(%fmt.pp* nonnull %p), !dbg !6189
  br i1 %59, label %switch.done, label %if.then45, !dbg !6042

if.then45:                                        ; preds = %typeswitch.next44
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6032, metadata !DIExpression()), !dbg !6191
  %60 = tail call fastcc { i32, i8* } @reflect.ValueOf(i32 %arg.typecode, i8* %arg.value), !dbg !6192
  %newret = extractvalue { i32, i8* } %60, 0, !dbg !6192
  %newret260 = extractvalue { i32, i8* } %60, 1, !dbg !6192
  %61 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !6193
  store i8* %newret260, i8** %61, align 4, !dbg !6193
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6193
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %newret, i8* %newret260, i8 2, i32 0), !dbg !6194
  br label %switch.done, !dbg !6042

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !6035
  unreachable, !dbg !6035

gep.next:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6007, metadata !DIExpression()), !dbg !6195
  %.repack = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 0, !dbg !6035
  store i32 %arg.typecode, i32* %.repack, align 4, !dbg !6035
  %.repack1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 1, !dbg !6035
  store i8* %arg.value, i8** %.repack1, align 4, !dbg !6035
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6009, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6196
  %62 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 2, !dbg !6197
  %63 = bitcast %reflect.Value* %3 to i8*, !dbg !6033
  %64 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !6033
  store i8* %63, i8** %64, align 4, !dbg !6033
  %65 = bitcast %reflect.Value* %3 to i8*, !dbg !6033
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %65, i8 0, i64 9, i1 false), !dbg !6033
  %66 = bitcast %reflect.Value* %62 to i8*, !dbg !6198
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(12) %66, i8 0, i64 12, i1 false), !dbg !6198
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6199
  switch i32 %arg.typecode, label %typeswitch.next13 [
    i32 0, label %gep.next51
    i32 2, label %typeswitch.body
    i32 26, label %typeswitch.body6
    i32 28, label %typeswitch.body8
    i32 30, label %typeswitch.body10
    i32 32, label %typeswitch.body12
  ], !dbg !6042

gep.next51:                                       ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6200
  %67 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !6201
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !6202
  br label %switch.done, !dbg !6042

deref.next183:                                    ; preds = %typeswitch.body40
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6031, metadata !DIExpression()), !dbg !6203
  tail call fastcc void @"(reflect.Value).CanInterface"(i32 %.fca.0.extract, i8* %.fca.1.extract, i8 %.fca.2.extract), !dbg !6204
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6205
  %68 = tail call fastcc { i32, i8* } @"(reflect.Value).Interface"(i32 %.fca.0.extract, i8* %.fca.1.extract, i8 %.fca.2.extract), !dbg !6206
  %newret262 = extractvalue { i32, i8* } %68, 0, !dbg !6206
  %newret264 = extractvalue { i32, i8* } %68, 1, !dbg !6206
  %69 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !6207
  store i8* %newret264, i8** %69, align 4, !dbg !6207
  store i32 %newret262, i32* %.repack, align 4, !dbg !6207
  store i8* %newret264, i8** %.repack1, align 4, !dbg !6207
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6009, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6208
  %70 = tail call fastcc i1 @"(*fmt.pp).handleMethods"(%fmt.pp* nonnull %p), !dbg !6209
  br i1 %70, label %switch.done, label %deref.next191, !dbg !6042

deref.next191:                                    ; preds = %typeswitch.body40, %deref.next183
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6006, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6031, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.value(metadata i32 118, metadata !6008, metadata !DIExpression()), !dbg !6212
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %.fca.0.extract, i8* %.fca.1.extract, i8 %.fca.2.extract, i32 0), !dbg !6213
  br label %switch.done, !dbg !6042
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.pp).printValue"(%fmt.pp* dereferenceable_or_null(140) %p, i32 %value.typecode, i8* %value.value, i8 %value.flags, i32 %depth) unnamed_addr #2 section ".text.(*fmt.pp).printValue" !dbg !6214 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !6248
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 39, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !6248
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6248
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !6248
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !6248
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !6248
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6248
  %value.i = alloca %reflect.Value, align 8, !dbg !6248
  %v.i21 = alloca %reflect.Value, align 8, !dbg !6258
  %val.i = alloca %reflect.Value, align 8, !dbg !6266
  %v.i = alloca %reflect.Value, align 8, !dbg !6266
  %mapValue.i = alloca %reflect.Value, align 8, !dbg !6273
  %a = alloca %reflect.Value, align 8, !dbg !6287
  %value264 = alloca %reflect.Value, align 8, !dbg !6287
  %key = alloca %reflect.Value, align 8, !dbg !6287
  %f = alloca %reflect.Value, align 8, !dbg !6287
  %value = alloca %reflect.Value, align 8, !dbg !6287
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %value.typecode, metadata !6219, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6287
  call void @llvm.dbg.value(metadata i8* %value.value, metadata !6219, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6287
  call void @llvm.dbg.value(metadata i8 %value.flags, metadata !6219, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !6287
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6287
  %.fca.0.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %value, i32 0, i32 0, !dbg !6287
  %.fca.1.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %value, i32 0, i32 1, !dbg !6287
  %.fca.2.gep = getelementptr inbounds %reflect.Value, %reflect.Value* %value, i32 0, i32 2, !dbg !6287
  %3 = bitcast %reflect.Value* %value to i8*, !dbg !6287
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !6287
  store i8* %3, i8** %4, align 4, !dbg !6287
  %5 = bitcast %reflect.Value* %value to i8*, !dbg !6287
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %5, i8 0, i64 9, i1 false), !dbg !6287
  store i32 %value.typecode, i32* %.fca.0.gep, align 8, !dbg !6288
  store i8* %value.value, i8** %.fca.1.gep, align 4, !dbg !6288
  store i8 %value.flags, i8* %.fca.2.gep, align 8, !dbg !6288
  %6 = icmp sgt i32 %depth, 0, !dbg !6289
  br i1 %6, label %deref.next, label %if.done, !dbg !6288

if.then2:                                         ; preds = %gep.next.i, %gep.next8.i, %switch.done.i, %switch.next19.i, %gep.next127, %gep.next129, %deref.next131, %deref.next133, %deref.next135, %deref.next137, %deref.next139, %deref.next141, %deref.next143, %deref.next145, %gep.next263, %deref.next272, %gep.next282, %gep.next288, %gep.next337, %gep.next347, %gep.next
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6290
  ret void, !dbg !6290

if.done:                                          ; preds = %deref.next, %entry
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6291
  %7 = icmp eq %fmt.pp* %p, null, !dbg !6292
  br i1 %7, label %gep.throw110, label %gep.next111, !dbg !6292

switch.body:                                      ; preds = %gep.next111
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6293
  %8 = icmp eq i32 %depth, 0, !dbg !6294
  %9 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6288
  br i1 %8, label %gep.next127, label %gep.next129, !dbg !6288

for.loop:                                         ; preds = %fmt.getField.exit, %gep.next223
  %10 = phi i32 [ 0, %gep.next223 ], [ %111, %fmt.getField.exit ], !dbg !6295
  call void @llvm.dbg.value(metadata i32 %10, metadata !6238, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6297
  %11 = tail call fastcc i32 @"(reflect.Value).NumField"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6298
  %12 = icmp slt i32 %10, %11, !dbg !6299
  br i1 %12, label %for.body, label %gep.next263, !dbg !6288

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %10, metadata !6238, metadata !DIExpression()), !dbg !6300
  %.not32 = icmp eq i32 %10, 0, !dbg !6301
  br i1 %.not32, label %gep.next243, label %deref.next233, !dbg !6288

switch.body55:                                    ; preds = %gep.next111
  %.fca.0.gep760 = getelementptr inbounds %reflect.Value, %reflect.Value* %value264, i32 0, i32 0, !dbg !6287
  %.fca.1.gep761 = getelementptr inbounds %reflect.Value, %reflect.Value* %value264, i32 0, i32 1, !dbg !6287
  %.fca.2.gep762 = getelementptr inbounds %reflect.Value, %reflect.Value* %value264, i32 0, i32 2, !dbg !6287
  %13 = bitcast %reflect.Value* %value264 to i8*, !dbg !6287
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !6287
  store i8* %13, i8** %14, align 4, !dbg !6287
  %15 = bitcast %reflect.Value* %value264 to i8*, !dbg !6287
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %15, i8 0, i64 9, i1 false), !dbg !6287
  %.fca.0.load554 = load i32, i32* %.fca.0.gep415, align 8, !dbg !6302
  %.fca.1.load557 = load i8*, i8** %.fca.1.gep416, align 4, !dbg !6302
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 31, !dbg !6302
  store i8* %.fca.1.load557, i8** %16, align 4, !dbg !6302
  %17 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !6302
  store i8* %.fca.1.load557, i8** %17, align 4, !dbg !6302
  %.fca.2.load560 = load i8, i8* %.fca.2.gep417, align 8, !dbg !6302
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6302
  %18 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Elem"(i32 %.fca.0.load554, i8* %.fca.1.load557, i8 %.fca.2.load560), !dbg !6303
  %newret836 = extractvalue { i32, i8*, i8 } %18, 0, !dbg !6303
  %newret838 = extractvalue { i32, i8*, i8 } %18, 1, !dbg !6303
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 30, !dbg !6303
  store i8* %newret838, i8** %19, align 4, !dbg !6303
  %20 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !6303
  store i8* %newret838, i8** %20, align 4, !dbg !6303
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !6303
  store i8* %newret838, i8** %21, align 4, !dbg !6303
  %newret840 = extractvalue { i32, i8*, i8 } %18, 2, !dbg !6303
  store i32 %newret836, i32* %.fca.0.gep760, align 8, !dbg !6304
  store i8* %newret838, i8** %.fca.1.gep761, align 4, !dbg !6304
  store i8 %newret840, i8* %.fca.2.gep762, align 8, !dbg !6304
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6241, metadata !DIExpression()), !dbg !6304
  %22 = tail call fastcc i1 @"(reflect.Value).IsValid"(i32 %newret836, i8* %newret838, i8 %newret840), !dbg !6305
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6306
  br i1 %22, label %deref.next272, label %gep.next274, !dbg !6288

for.loop76:                                       ; preds = %deref.next335, %gep.next329
  %23 = phi i32 [ 0, %gep.next329 ], [ %128, %deref.next335 ], !dbg !6307
  call void @llvm.dbg.value(metadata i32 %23, metadata !6245, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6309
  %24 = tail call fastcc i32 @"(reflect.Value).Len"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6310
  %25 = icmp slt i32 %23, %24, !dbg !6311
  br i1 %25, label %for.body77, label %gep.next337, !dbg !6288

for.body77:                                       ; preds = %for.loop76
  call void @llvm.dbg.value(metadata i32 %23, metadata !6245, metadata !DIExpression()), !dbg !6312
  %.not31 = icmp eq i32 %23, 0, !dbg !6313
  br i1 %.not31, label %deref.next335, label %gep.next333, !dbg !6288

for.loop82:                                       ; preds = %deref.next345, %gep.next339
  %26 = phi i32 [ 0, %gep.next339 ], [ %132, %deref.next345 ], !dbg !6314
  call void @llvm.dbg.value(metadata i32 %26, metadata !6246, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6316
  %27 = tail call fastcc i32 @"(reflect.Value).Len"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6317
  %28 = icmp slt i32 %26, %27, !dbg !6318
  br i1 %28, label %for.body83, label %gep.next347, !dbg !6288

for.body83:                                       ; preds = %for.loop82
  call void @llvm.dbg.value(metadata i32 %26, metadata !6246, metadata !DIExpression()), !dbg !6319
  %.not30 = icmp eq i32 %26, 0, !dbg !6320
  br i1 %.not30, label %deref.next345, label %gep.next343, !dbg !6288

switch.body92:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6321
  %29 = icmp eq i32 %depth, 0, !dbg !6322
  br i1 %29, label %deref.next349, label %deref.next361, !dbg !6288

if.then94:                                        ; preds = %deref.next349
  %.fca.0.gep787 = getelementptr inbounds %reflect.Value, %reflect.Value* %a, i32 0, i32 0, !dbg !6287
  %.fca.1.gep788 = getelementptr inbounds %reflect.Value, %reflect.Value* %a, i32 0, i32 1, !dbg !6287
  %.fca.2.gep789 = getelementptr inbounds %reflect.Value, %reflect.Value* %a, i32 0, i32 2, !dbg !6287
  %30 = bitcast %reflect.Value* %a to i8*, !dbg !6287
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !6287
  store i8* %30, i8** %31, align 4, !dbg !6287
  %32 = bitcast %reflect.Value* %a to i8*, !dbg !6287
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %32, i8 0, i64 9, i1 false), !dbg !6287
  %.fca.0.load716 = load i32, i32* %.fca.0.gep415, align 8, !dbg !6323
  %.fca.1.load719 = load i8*, i8** %.fca.1.gep416, align 4, !dbg !6323
  %33 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !6323
  store i8* %.fca.1.load719, i8** %33, align 4, !dbg !6323
  %.fca.2.load722 = load i8, i8* %.fca.2.gep417, align 8, !dbg !6323
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6323
  %34 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Elem"(i32 %.fca.0.load716, i8* %.fca.1.load719, i8 %.fca.2.load722), !dbg !6324
  %newret830 = extractvalue { i32, i8*, i8 } %34, 0, !dbg !6324
  %newret832 = extractvalue { i32, i8*, i8 } %34, 1, !dbg !6324
  %35 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 34, !dbg !6324
  store i8* %newret832, i8** %35, align 4, !dbg !6324
  %36 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !6324
  store i8* %newret832, i8** %36, align 4, !dbg !6324
  %37 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !6324
  store i8* %newret832, i8** %37, align 4, !dbg !6324
  %newret834 = extractvalue { i32, i8*, i8 } %34, 2, !dbg !6324
  store i32 %newret830, i32* %.fca.0.gep787, align 8, !dbg !6325
  store i8* %newret832, i8** %.fca.1.gep788, align 4, !dbg !6325
  store i8 %newret834, i8* %.fca.2.gep789, align 8, !dbg !6325
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6247, metadata !DIExpression()), !dbg !6325
  %38 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %newret830, i8* %newret832, i8 %newret834), !dbg !6326
  switch i32 %38, label %deref.next361 [
    i32 23, label %gep.next357
    i32 22, label %gep.next357
    i32 26, label %gep.next357
    i32 25, label %gep.next357
  ], !dbg !6288

deref.next:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6219, metadata !DIExpression()), !dbg !6327
  %39 = tail call fastcc i1 @"(reflect.Value).IsValid"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6328
  br i1 %39, label %deref.next105, label %if.done, !dbg !6288

deref.next105:                                    ; preds = %deref.next
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6219, metadata !DIExpression()), !dbg !6329
  tail call fastcc void @"(reflect.Value).CanInterface"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6330
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6331
  %40 = icmp eq %fmt.pp* %p, null, !dbg !6332
  br i1 %40, label %gep.throw, label %gep.next, !dbg !6332

gep.throw:                                        ; preds = %deref.next105
  tail call fastcc void @runtime.nilPanic(), !dbg !6332
  unreachable, !dbg !6332

gep.next:                                         ; preds = %deref.next105
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6219, metadata !DIExpression()), !dbg !6333
  %41 = tail call fastcc { i32, i8* } @"(reflect.Value).Interface"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6334
  %newret854 = extractvalue { i32, i8* } %41, 0, !dbg !6334
  %newret856 = extractvalue { i32, i8* } %41, 1, !dbg !6334
  %42 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !6332
  store i8* %newret856, i8** %42, align 4, !dbg !6332
  %.repack14 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 0, !dbg !6332
  store i32 %newret854, i32* %.repack14, align 4, !dbg !6332
  %.repack15 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 1, !dbg !6332
  store i8* %newret856, i8** %.repack15, align 4, !dbg !6332
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6222, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6336
  %43 = tail call fastcc i1 @"(*fmt.pp).handleMethods"(%fmt.pp* nonnull %p), !dbg !6337
  br i1 %43, label %if.then2, label %gep.next111, !dbg !6288

gep.throw110:                                     ; preds = %if.done
  tail call fastcc void @runtime.nilPanic(), !dbg !6292
  unreachable, !dbg !6292

gep.next111:                                      ; preds = %gep.next, %if.done
  %.repack = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 0, !dbg !6292
  store i32 0, i32* %.repack, align 4, !dbg !6292
  %.repack1 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 1, i32 1, !dbg !6292
  store i8* null, i8** %.repack1, align 4, !dbg !6292
  call void @llvm.dbg.value(metadata %runtime._interface zeroinitializer, metadata !6222, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6338
  %44 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 2, !dbg !6339
  %.fca.0.insert390 = insertvalue %reflect.Value undef, i32 %value.typecode, 0, !dbg !6340
  %.fca.1.insert393 = insertvalue %reflect.Value %.fca.0.insert390, i8* %value.value, 1, !dbg !6340
  %.fca.2.insert396 = insertvalue %reflect.Value %.fca.1.insert393, i8 %value.flags, 2, !dbg !6340
  call void @llvm.dbg.value(metadata %reflect.Value %.fca.2.insert396, metadata !6219, metadata !DIExpression()), !dbg !6340
  store %reflect.Value %.fca.2.insert396, %reflect.Value* %44, align 4, !dbg !6339
  call void @llvm.dbg.value(metadata %reflect.Value %.fca.2.insert396, metadata !6223, metadata !DIExpression()), !dbg !6339
  %.fca.0.gep415 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 0, !dbg !6287
  %.fca.1.gep416 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 1, !dbg !6287
  %.fca.2.gep417 = getelementptr inbounds %reflect.Value, %reflect.Value* %f, i32 0, i32 2, !dbg !6287
  %45 = bitcast %reflect.Value* %f to i8*, !dbg !6287
  %46 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !6287
  store i8* %45, i8** %46, align 4, !dbg !6287
  %47 = bitcast %reflect.Value* %f to i8*, !dbg !6287
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %47, i8 0, i64 9, i1 false), !dbg !6287
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6219, metadata !DIExpression()), !dbg !6341
  store i32 %value.typecode, i32* %.fca.0.gep415, align 8, !dbg !6342
  store i8* %value.value, i8** %.fca.1.gep416, align 4, !dbg !6342
  store i8 %value.flags, i8* %.fca.2.gep417, align 8, !dbg !6342
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6342
  %48 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6343
  switch i32 %48, label %deref.next363 [
    i32 0, label %switch.body
    i32 1, label %deref.next131
    i32 2, label %deref.next133
    i32 3, label %deref.next133
    i32 4, label %deref.next133
    i32 5, label %deref.next133
    i32 6, label %deref.next133
    i32 7, label %deref.next135
    i32 8, label %deref.next135
    i32 9, label %deref.next135
    i32 10, label %deref.next135
    i32 11, label %deref.next135
    i32 12, label %deref.next135
    i32 13, label %deref.next137
    i32 14, label %deref.next139
    i32 15, label %deref.next141
    i32 16, label %deref.next143
    i32 17, label %deref.next145
    i32 25, label %gep.next147
    i32 26, label %gep.next211
    i32 20, label %switch.body55
    i32 23, label %gep.next311
    i32 22, label %gep.next311
    i32 21, label %switch.body92
    i32 19, label %deref.next361
    i32 24, label %deref.next361
    i32 18, label %deref.next361
  ], !dbg !6288

gep.next127:                                      ; preds = %switch.body
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6344
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @"(*fmt.pp).printValue$string", i32 0, i32 0), i32 23), !dbg !6345
  br label %if.then2, !dbg !6288

gep.next129:                                      ; preds = %switch.body
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6347
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !6348
  br label %if.then2, !dbg !6288

deref.next131:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6350
  %49 = tail call fastcc i1 @"(reflect.Value).Bool"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6351
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6352
  tail call fastcc void @"(*fmt.pp).fmtBool"(%fmt.pp* nonnull %p, i1 %49), !dbg !6353
  br label %if.then2, !dbg !6288

deref.next133:                                    ; preds = %gep.next111, %gep.next111, %gep.next111, %gep.next111, %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6355
  %50 = tail call fastcc i64 @"(reflect.Value).Int"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6356
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6357
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %50, i1 true), !dbg !6358
  br label %if.then2, !dbg !6288

deref.next135:                                    ; preds = %gep.next111, %gep.next111, %gep.next111, %gep.next111, %gep.next111, %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6360
  %51 = tail call fastcc i64 @"(reflect.Value).Uint"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6361
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6362
  tail call fastcc void @"(*fmt.pp).fmtInteger"(%fmt.pp* nonnull %p, i64 %51, i1 false), !dbg !6363
  br label %if.then2, !dbg !6288

deref.next137:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6365
  %52 = tail call fastcc double @"(reflect.Value).Float"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6366
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6367
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %52, i32 32), !dbg !6368
  br label %if.then2, !dbg !6288

deref.next139:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6370
  %53 = tail call fastcc double @"(reflect.Value).Float"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6371
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6372
  tail call fastcc void @"(*fmt.pp).fmtFloat"(%fmt.pp* nonnull %p, double %53, i32 64), !dbg !6373
  br label %if.then2, !dbg !6288

deref.next141:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6375
  %54 = tail call fastcc { double, double } @"(reflect.Value).Complex"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6376
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6377
  %55 = extractvalue { double, double } %54, 0, !dbg !6378
  %56 = extractvalue { double, double } %54, 1, !dbg !6378
  tail call fastcc void @"(*fmt.pp).fmtComplex"(%fmt.pp* nonnull %p, double %55, double %56, i32 64), !dbg !6378
  br label %if.then2, !dbg !6288

deref.next143:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6380
  %57 = tail call fastcc { double, double } @"(reflect.Value).Complex"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6381
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6382
  %58 = extractvalue { double, double } %57, 0, !dbg !6383
  %59 = extractvalue { double, double } %57, 1, !dbg !6383
  tail call fastcc void @"(*fmt.pp).fmtComplex"(%fmt.pp* nonnull %p, double %58, double %59, i32 128), !dbg !6383
  br label %if.then2, !dbg !6288

deref.next145:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6385
  %60 = tail call fastcc { i8*, i32 } @"(reflect.Value).String"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6386
  %newret858 = extractvalue { i8*, i32 } %60, 0, !dbg !6386
  %61 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !6386
  store i8* %newret858, i8** %61, align 4, !dbg !6386
  %newret860 = extractvalue { i8*, i32 } %60, 1, !dbg !6386
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6387
  tail call fastcc void @"(*fmt.pp).fmtString"(%fmt.pp* nonnull %p, i8* %newret858, i32 %newret860), !dbg !6388
  br label %if.then2, !dbg !6288

gep.next147:                                      ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6389
  %62 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6390
  %63 = load i1, i1* %62, align 1, !dbg !6390
  %64 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6288
  br i1 %63, label %gep.next155, label %gep.next209, !dbg !6288

gep.next155:                                      ; preds = %gep.next147
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6391
  %65 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6392
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6393
  %66 = tail call fastcc i1 @"(reflect.Value).IsNil"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6394
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6395
  br i1 %66, label %gep.next161, label %gep.next163, !dbg !6288

gep.next161:                                      ; preds = %gep.next155
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).printValue$string.762", i32 0, i32 0), i32 5), !dbg !6396
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6397
  ret void, !dbg !6397

gep.next163:                                      ; preds = %gep.next155
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %64, i8 123), !dbg !6398
  br label %deref.next165, !dbg !6288

deref.next165:                                    ; preds = %gep.next163, %gep.next209
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6399
  %67 = bitcast %reflect.Value* %mapValue.i to i8*, !dbg !6273
  %68 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !6273
  store i8* %67, i8** %68, align 4, !dbg !6273
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %67), !dbg !6273
  call void @llvm.dbg.value(metadata i32 %value.typecode, metadata !6277, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6273
  call void @llvm.dbg.value(metadata i8* %value.value, metadata !6277, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6273
  call void @llvm.dbg.value(metadata i8 %value.flags, metadata !6277, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !6273
  %.fca.0.gep.i = getelementptr inbounds %reflect.Value, %reflect.Value* %mapValue.i, i32 0, i32 0, !dbg !6273
  %.fca.1.gep.i = getelementptr inbounds %reflect.Value, %reflect.Value* %mapValue.i, i32 0, i32 1, !dbg !6273
  %.fca.2.gep.i = getelementptr inbounds %reflect.Value, %reflect.Value* %mapValue.i, i32 0, i32 2, !dbg !6273
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %67, i8 0, i64 9, i1 false), !dbg !6273
  store i32 %value.typecode, i32* %.fca.0.gep.i, align 8, !dbg !6400
  store i8* %value.value, i8** %.fca.1.gep.i, align 4, !dbg !6400
  store i8 %value.flags, i8* %.fca.2.gep.i, align 8, !dbg !6400
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6277, metadata !DIExpression()), !dbg !6401
  %69 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6402
  %70 = tail call fastcc i32 @"(reflect.Type).Kind"(i32 %value.typecode), !dbg !6403
  %.not.i = icmp eq i32 %70, 25, !dbg !6404
  br i1 %.not.i, label %deref.next2.i, label %gep.throw166, !dbg !6400

deref.next2.i:                                    ; preds = %deref.next165
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6277, metadata !DIExpression()), !dbg !6405
  %71 = tail call fastcc i32 @"(reflect.Value).Len"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6406
  call void @llvm.dbg.value(metadata i32 %71, metadata !6278, metadata !DIExpression()), !dbg !6407
  %slice.maxcap.i = icmp slt i32 %71, 0, !dbg !6408
  br i1 %slice.maxcap.i, label %slice.throw.i, label %slice.next.i, !dbg !6408

slice.throw.i:                                    ; preds = %deref.next2.i
  tail call fastcc void @runtime.slicePanic(), !dbg !6408
  unreachable, !dbg !6408

slice.next.i:                                     ; preds = %deref.next2.i
  %makeslice.cap.i = mul i32 %71, 12, !dbg !6408
  %makeslice.buf.i = tail call fastcc i8* @runtime.alloc(i32 %makeslice.cap.i), !dbg !6408
  %72 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !6409
  store i8* %makeslice.buf.i, i8** %72, align 4, !dbg !6409
  call void @llvm.dbg.value(metadata { %reflect.Value*, i32, i32 } undef, metadata !6279, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.value(metadata i32 %71, metadata !6278, metadata !DIExpression()), !dbg !6410
  %makeslice.buf11.i = tail call fastcc i8* @runtime.alloc(i32 %makeslice.cap.i), !dbg !6411
  %73 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !6412
  store i8* %makeslice.buf11.i, i8** %73, align 4, !dbg !6412
  call void @llvm.dbg.value(metadata { %reflect.Value*, i32, i32 } undef, metadata !6280, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6277, metadata !DIExpression()), !dbg !6413
  tail call fastcc void @"(reflect.Value).MapRange"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6414
  unreachable

gep.throw166:                                     ; preds = %deref.next165
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %67), !dbg !6415
  call void @llvm.dbg.value(metadata %"internal/fmtsort.SortedMap"* null, metadata !6225, metadata !DIExpression()), !dbg !6416
  %74 = bitcast %reflect.Value* %key to i8*, !dbg !6287
  %75 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !6287
  store i8* %74, i8** %75, align 4, !dbg !6287
  %76 = bitcast %reflect.Value* %key to i8*, !dbg !6287
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %76, i8 0, i64 9, i1 false), !dbg !6287
  tail call fastcc void @runtime.nilPanic(), !dbg !6417
  unreachable, !dbg !6417

gep.next209:                                      ; preds = %gep.next147
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"(*fmt.pp).printValue$string.757", i32 0, i32 0), i32 4), !dbg !6418
  br label %deref.next165, !dbg !6288

gep.next211:                                      ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6419
  %77 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6420
  %78 = load i1, i1* %77, align 1, !dbg !6420
  br i1 %78, label %gep.next219, label %gep.next223, !dbg !6288

gep.next219:                                      ; preds = %gep.next211
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6421
  %79 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6422
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6423
  %80 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6424
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %79, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6425
  br label %gep.next223, !dbg !6288

gep.next223:                                      ; preds = %gep.next211, %gep.next219
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6426
  %81 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6427
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %81, i8 123), !dbg !6428
  call void @llvm.dbg.value(metadata i32 0, metadata !6238, metadata !DIExpression()), !dbg !6295
  %82 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 7, !dbg !6288
  %83 = bitcast %reflect.Value* %val.i to i8*, !dbg !6429
  %84 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 22, !dbg !6429
  store i8* %83, i8** %84, align 4, !dbg !6429
  %85 = bitcast %reflect.Value* %v.i to i8*, !dbg !6429
  %86 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 21, !dbg !6429
  store i8* %85, i8** %86, align 4, !dbg !6429
  %.fca.0.gep.i18 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i, i32 0, i32 0, !dbg !6429
  %.fca.1.gep.i19 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i, i32 0, i32 1, !dbg !6429
  %.fca.2.gep.i20 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i, i32 0, i32 2, !dbg !6429
  %.fca.0.gep19.i = getelementptr inbounds %reflect.Value, %reflect.Value* %val.i, i32 0, i32 0, !dbg !6429
  %.fca.1.gep20.i = getelementptr inbounds %reflect.Value, %reflect.Value* %val.i, i32 0, i32 1, !dbg !6429
  %.fca.2.gep21.i = getelementptr inbounds %reflect.Value, %reflect.Value* %val.i, i32 0, i32 2, !dbg !6429
  %87 = add i32 %depth, 1, !dbg !6288
  br label %for.loop, !dbg !6288

deref.next233:                                    ; preds = %for.body
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6430
  %88 = load i1, i1* %77, align 1, !dbg !6431
  br i1 %88, label %gep.next235, label %gep.next237, !dbg !6288

gep.next235:                                      ; preds = %deref.next233
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).printValue$string.763", i32 0, i32 0), i32 2), !dbg !6432
  br label %gep.next243, !dbg !6288

gep.next237:                                      ; preds = %deref.next233
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %81, i8 32), !dbg !6433
  br label %gep.next243, !dbg !6288

gep.next243:                                      ; preds = %for.body, %gep.next235, %gep.next237
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6434
  %89 = load i1, i1* %82, align 1, !dbg !6435
  br i1 %89, label %deref.next247, label %deref.next261, !dbg !6288

deref.next247:                                    ; preds = %gep.next243, %deref.next261
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6436
  %90 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %10, metadata !6238, metadata !DIExpression()), !dbg !6438
  %91 = tail call fastcc { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } @"(reflect.Type).Field"(i32 %value.typecode, i32 %10), !dbg !6439
  %newret = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %91, 0, !dbg !6439
  %newret820 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %91, 1, !dbg !6439
  %newret824 = extractvalue { %runtime._string, %runtime._string, i32, %runtime._string, i1, i32 } %91, 3, !dbg !6439
  %92 = extractvalue %runtime._string %newret, 0, !dbg !6439
  %93 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !6439
  store i8* %92, i8** %93, align 4, !dbg !6439
  %94 = extractvalue %runtime._string %newret820, 0, !dbg !6439
  %95 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 19, !dbg !6439
  store i8* %94, i8** %95, align 4, !dbg !6439
  %96 = extractvalue %runtime._string %newret824, 0, !dbg !6439
  %97 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 20, !dbg !6440
  store i8* %96, i8** %97, align 4, !dbg !6440
  call void @llvm.dbg.value(metadata %runtime._string %newret, metadata !6239, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata %runtime._string %newret, metadata !6240, metadata !DIExpression()), !dbg !6441
  %98 = extractvalue %runtime._string %newret, 1, !dbg !6442
  call void @llvm.dbg.value(metadata i8* %92, metadata !2495, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6443
  call void @llvm.dbg.value(metadata i32 %98, metadata !2495, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6443
  call void @llvm.dbg.value(metadata i32 0, metadata !2501, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6443
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2495, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !2501, metadata !DIExpression()), !dbg !6446
  %.not.i17 = icmp eq i32 %98, 0, !dbg !6447
  br i1 %.not.i17, label %deref.next253, label %gep.next249, !dbg !6288

gep.next249:                                      ; preds = %deref.next247
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %runtime._string %newret, metadata !6240, metadata !DIExpression()), !dbg !6449
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %81, i8* %92, i32 %98), !dbg !6450
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %81, i8 58), !dbg !6451
  br label %deref.next253, !dbg !6288

deref.next253:                                    ; preds = %deref.next247, %gep.next249, %deref.next261
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i32 %10, metadata !6238, metadata !DIExpression()), !dbg !6454
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %83), !dbg !6266
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %85), !dbg !6266
  call void @llvm.dbg.value(metadata i32 %value.typecode, metadata !6269, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6266
  call void @llvm.dbg.value(metadata i8* %value.value, metadata !6269, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6266
  call void @llvm.dbg.value(metadata i8 %value.flags, metadata !6269, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !6266
  call void @llvm.dbg.value(metadata i32 %10, metadata !6270, metadata !DIExpression()), !dbg !6266
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %85, i8 0, i64 9, i1 false), !dbg !6266
  store i32 %value.typecode, i32* %.fca.0.gep.i18, align 8, !dbg !6429
  store i8* %value.value, i8** %.fca.1.gep.i19, align 4, !dbg !6429
  store i8 %value.flags, i8* %.fca.2.gep.i20, align 8, !dbg !6429
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %83, i8 0, i64 9, i1 false), !dbg !6266
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6269, metadata !DIExpression()), !dbg !6455
  %99 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Field"(i32 %value.typecode, i8* %value.value, i8 %value.flags, i32 %10), !dbg !6456
  %newret74.i = extractvalue { i32, i8*, i8 } %99, 0, !dbg !6456
  %newret76.i = extractvalue { i32, i8*, i8 } %99, 1, !dbg !6456
  %100 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 26, !dbg !6456
  store i8* %newret76.i, i8** %100, align 4, !dbg !6456
  %101 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 25, !dbg !6456
  store i8* %newret76.i, i8** %101, align 4, !dbg !6456
  %102 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 24, !dbg !6456
  store i8* %newret76.i, i8** %102, align 4, !dbg !6456
  %103 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 23, !dbg !6456
  store i8* %newret76.i, i8** %103, align 4, !dbg !6456
  %newret78.i = extractvalue { i32, i8*, i8 } %99, 2, !dbg !6456
  store i32 %newret74.i, i32* %.fca.0.gep19.i, align 8, !dbg !6457
  store i8* %newret76.i, i8** %.fca.1.gep20.i, align 4, !dbg !6457
  store i8 %newret78.i, i8* %.fca.2.gep21.i, align 8, !dbg !6457
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6271, metadata !DIExpression()), !dbg !6457
  %104 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %newret74.i, i8* %newret76.i, i8 %newret78.i), !dbg !6458
  %105 = icmp eq i32 %104, 20, !dbg !6459
  br i1 %105, label %deref.next6.i, label %fmt.getField.exit, !dbg !6429

deref.next6.i:                                    ; preds = %deref.next253
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6271, metadata !DIExpression()), !dbg !6460
  %106 = tail call fastcc i1 @"(reflect.Value).IsNil"(i32 %newret74.i, i8* %newret76.i, i8 %newret78.i), !dbg !6461
  br i1 %106, label %fmt.getField.exit, label %deref.next8.i, !dbg !6429

deref.next8.i:                                    ; preds = %deref.next6.i
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6271, metadata !DIExpression()), !dbg !6462
  %107 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Elem"(i32 %newret74.i, i8* %newret76.i, i8 %newret78.i), !dbg !6463
  %newret.i = extractvalue { i32, i8*, i8 } %107, 0, !dbg !6463
  %newret70.i = extractvalue { i32, i8*, i8 } %107, 1, !dbg !6463
  %108 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 27, !dbg !6463
  store i8* %newret70.i, i8** %108, align 4, !dbg !6463
  %newret72.i = extractvalue { i32, i8*, i8 } %107, 2, !dbg !6463
  store i32 %newret.i, i32* %.fca.0.gep19.i, align 8, !dbg !6464
  store i8* %newret70.i, i8** %.fca.1.gep20.i, align 4, !dbg !6464
  store i8 %newret72.i, i8* %.fca.2.gep21.i, align 8, !dbg !6464
  br label %fmt.getField.exit, !dbg !6429

fmt.getField.exit:                                ; preds = %deref.next253, %deref.next6.i, %deref.next8.i
  %.fca.2.load68.i = phi i8 [ %newret78.i, %deref.next253 ], [ %newret78.i, %deref.next6.i ], [ %newret72.i, %deref.next8.i ], !dbg !6465
  %.fca.1.load65.i = phi i8* [ %newret76.i, %deref.next253 ], [ %newret76.i, %deref.next6.i ], [ %newret70.i, %deref.next8.i ], !dbg !6465
  %.fca.0.load62.i = phi i32 [ %newret74.i, %deref.next253 ], [ %newret74.i, %deref.next6.i ], [ %newret.i, %deref.next8.i ], !dbg !6465
  %109 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 29, !dbg !6465
  store i8* %.fca.1.load65.i, i8** %109, align 4, !dbg !6465
  %110 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 28, !dbg !6465
  store i8* %.fca.1.load65.i, i8** %110, align 4, !dbg !6465
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6271, metadata !DIExpression()), !dbg !6465
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %83), !dbg !6466
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %85), !dbg !6466
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6468
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %.fca.0.load62.i, i8* %.fca.1.load65.i, i8 %.fca.2.load68.i, i32 %87), !dbg !6469
  %111 = add nuw nsw i32 %10, 1, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %111, metadata !6238, metadata !DIExpression()), !dbg !6470
  br label %for.loop, !dbg !6288

deref.next261:                                    ; preds = %gep.next243
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6471
  %112 = load i1, i1* %77, align 1, !dbg !6472
  br i1 %112, label %deref.next247, label %deref.next253, !dbg !6288

gep.next263:                                      ; preds = %for.loop
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6473
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %81, i8 125), !dbg !6474
  br label %if.then2, !dbg !6288

deref.next272:                                    ; preds = %switch.body55
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6241, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6477
  %113 = add i32 %depth, 1, !dbg !6478
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %newret836, i8* %newret838, i8 %newret840, i32 %113), !dbg !6479
  br label %if.then2, !dbg !6288

gep.next274:                                      ; preds = %switch.body55
  %114 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6480
  %115 = load i1, i1* %114, align 1, !dbg !6480
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6481
  %116 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6288
  br i1 %115, label %gep.next282, label %gep.next288, !dbg !6288

gep.next282:                                      ; preds = %gep.next274
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6482
  %117 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %.fca.0.load554, i8* %.fca.1.load557, i8 %.fca.2.load560), !dbg !6483
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %116, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6484
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6485
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).printValue$string.762", i32 0, i32 0), i32 5), !dbg !6486
  br label %if.then2, !dbg !6288

gep.next288:                                      ; preds = %gep.next274
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !6487
  br label %if.then2, !dbg !6288

gep.next311:                                      ; preds = %gep.next111, %gep.next111
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6489
  %118 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6490
  %119 = load i1, i1* %118, align 1, !dbg !6490
  %120 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6288
  br i1 %119, label %gep.next319, label %gep.next339, !dbg !6288

gep.next319:                                      ; preds = %gep.next311
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6491
  %121 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6492
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %120, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6493
  %122 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6494
  %123 = icmp eq i32 %122, 22, !dbg !6495
  br i1 %123, label %deref.next325, label %gep.next329, !dbg !6288

deref.next325:                                    ; preds = %gep.next319
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6496
  %124 = tail call fastcc i1 @"(reflect.Value).IsNil"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6497
  br i1 %124, label %gep.next327, label %gep.next329, !dbg !6288

gep.next327:                                      ; preds = %deref.next325
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6498
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).printValue$string.762", i32 0, i32 0), i32 5), !dbg !6499
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6500
  ret void, !dbg !6500

gep.next329:                                      ; preds = %gep.next319, %deref.next325
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6501
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %120, i8 123), !dbg !6502
  call void @llvm.dbg.value(metadata i32 0, metadata !6245, metadata !DIExpression()), !dbg !6307
  %125 = add i32 %depth, 1, !dbg !6288
  br label %for.loop76, !dbg !6288

gep.next333:                                      ; preds = %for.body77
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6503
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).printValue$string.763", i32 0, i32 0), i32 2), !dbg !6504
  br label %deref.next335, !dbg !6288

deref.next335:                                    ; preds = %for.body77, %gep.next333
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 %23, metadata !6245, metadata !DIExpression()), !dbg !6507
  %126 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Index"(i32 %value.typecode, i8* %value.value, i8 %value.flags, i32 %23), !dbg !6508
  %newret848 = extractvalue { i32, i8*, i8 } %126, 0, !dbg !6508
  %newret850 = extractvalue { i32, i8*, i8 } %126, 1, !dbg !6508
  %127 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 32, !dbg !6508
  store i8* %newret850, i8** %127, align 4, !dbg !6508
  %newret852 = extractvalue { i32, i8*, i8 } %126, 2, !dbg !6508
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6510
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %newret848, i8* %newret850, i8 %newret852, i32 %125), !dbg !6511
  %128 = add nuw nsw i32 %23, 1, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %128, metadata !6245, metadata !DIExpression()), !dbg !6512
  br label %for.loop76, !dbg !6288

gep.next337:                                      ; preds = %for.loop76
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6513
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %120, i8 125), !dbg !6514
  br label %if.then2, !dbg !6288

gep.next339:                                      ; preds = %gep.next311
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %120, i8 91), !dbg !6515
  call void @llvm.dbg.value(metadata i32 0, metadata !6246, metadata !DIExpression()), !dbg !6314
  %129 = add i32 %depth, 1, !dbg !6288
  br label %for.loop82, !dbg !6288

gep.next343:                                      ; preds = %for.body83
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6516
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %120, i8 32), !dbg !6517
  br label %deref.next345, !dbg !6288

deref.next345:                                    ; preds = %for.body83, %gep.next343
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.value(metadata i32 %26, metadata !6246, metadata !DIExpression()), !dbg !6520
  %130 = tail call fastcc { i32, i8*, i8 } @"(reflect.Value).Index"(i32 %value.typecode, i8* %value.value, i8 %value.flags, i32 %26), !dbg !6521
  %newret842 = extractvalue { i32, i8*, i8 } %130, 0, !dbg !6521
  %newret844 = extractvalue { i32, i8*, i8 } %130, 1, !dbg !6521
  %131 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 33, !dbg !6521
  store i8* %newret844, i8** %131, align 4, !dbg !6521
  %newret846 = extractvalue { i32, i8*, i8 } %130, 2, !dbg !6521
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6523
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %newret842, i8* %newret844, i8 %newret846, i32 %129), !dbg !6524
  %132 = add nuw nsw i32 %26, 1, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %132, metadata !6246, metadata !DIExpression()), !dbg !6525
  br label %for.loop82, !dbg !6288

gep.next347:                                      ; preds = %for.loop82
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6526
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %120, i8 93), !dbg !6527
  br label %if.then2, !dbg !6288

deref.next349:                                    ; preds = %switch.body92
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6528
  %133 = tail call fastcc i32 @"(reflect.Value).Pointer"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6529
  %.not = icmp eq i32 %133, 0, !dbg !6530
  br i1 %.not, label %deref.next361, label %if.then94, !dbg !6288

gep.next357:                                      ; preds = %if.then94, %if.then94, %if.then94, %if.then94
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6531
  %134 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6532
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %134, i8 38), !dbg !6533
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6247, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 %depth, metadata !6221, metadata !DIExpression()), !dbg !6536
  tail call fastcc void @"(*fmt.pp).printValue"(%fmt.pp* nonnull %p, i32 %newret830, i8* %newret832, i8 %newret834, i32 1), !dbg !6537
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6538
  ret void, !dbg !6538

deref.next361:                                    ; preds = %deref.next349, %switch.body92, %if.then94, %gep.next111, %gep.next111, %gep.next111
  %.fca.2.load731 = phi i8 [ %value.flags, %deref.next349 ], [ %value.flags, %switch.body92 ], [ %.fca.2.load722, %if.then94 ], [ %value.flags, %gep.next111 ], [ %value.flags, %gep.next111 ], [ %value.flags, %gep.next111 ], !dbg !6539
  %.fca.1.load728 = phi i8* [ %value.value, %deref.next349 ], [ %value.value, %switch.body92 ], [ %.fca.1.load719, %if.then94 ], [ %value.value, %gep.next111 ], [ %value.value, %gep.next111 ], [ %value.value, %gep.next111 ], !dbg !6539
  %.fca.0.load725 = phi i32 [ %value.typecode, %deref.next349 ], [ %value.typecode, %switch.body92 ], [ %.fca.0.load716, %if.then94 ], [ %value.typecode, %gep.next111 ], [ %value.typecode, %gep.next111 ], [ %value.typecode, %gep.next111 ], !dbg !6539
  %135 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 39, !dbg !6540
  store i8* %.fca.1.load728, i8** %135, align 4, !dbg !6540
  %136 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 38, !dbg !6540
  store i8* %.fca.1.load728, i8** %136, align 4, !dbg !6540
  %137 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 37, !dbg !6540
  store i8* %.fca.1.load728, i8** %137, align 4, !dbg !6540
  %138 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 35, !dbg !6540
  store i8* %.fca.1.load728, i8** %138, align 4, !dbg !6540
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 118, metadata !6220, metadata !DIExpression()), !dbg !6541
  %139 = bitcast %reflect.Value* %value.i to i8*, !dbg !6248
  %140 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 36, !dbg !6248
  store i8* %139, i8** %140, align 4, !dbg !6248
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139), !dbg !6248
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i32 %.fca.0.load725, metadata !6254, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %.fca.1.load728, metadata !6254, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6248
  call void @llvm.dbg.value(metadata i8 %.fca.2.load731, metadata !6254, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !6248
  call void @llvm.dbg.value(metadata i32 118, metadata !6255, metadata !DIExpression()), !dbg !6248
  %.fca.0.gep.i25 = getelementptr inbounds %reflect.Value, %reflect.Value* %value.i, i32 0, i32 0, !dbg !6248
  %.fca.1.gep.i26 = getelementptr inbounds %reflect.Value, %reflect.Value* %value.i, i32 0, i32 1, !dbg !6248
  %.fca.2.gep.i27 = getelementptr inbounds %reflect.Value, %reflect.Value* %value.i, i32 0, i32 2, !dbg !6248
  %141 = bitcast %reflect.Value* %value.i to i8*, !dbg !6248
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %141, i8 0, i64 9, i1 false), !dbg !6248
  store i32 %.fca.0.load725, i32* %.fca.0.gep.i25, align 8, !dbg !6542
  store i8* %.fca.1.load728, i8** %.fca.1.gep.i26, align 4, !dbg !6542
  store i8 %.fca.2.load731, i8* %.fca.2.gep.i27, align 8, !dbg !6542
  call void @llvm.dbg.value(metadata i32 0, metadata !6256, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6254, metadata !DIExpression()), !dbg !6544
  %142 = tail call fastcc i32 @"(reflect.Value).Kind"(i32 %.fca.0.load725, i8* %.fca.1.load728, i8 %.fca.2.load731), !dbg !6545
  switch i32 %142, label %switch.next19.i [
    i32 19, label %gep.next.i29
    i32 24, label %gep.next.i29
    i32 25, label %gep.next.i29
    i32 21, label %gep.next.i29
    i32 22, label %gep.next.i29
    i32 18, label %gep.next.i29
  ], !dbg !6542

if.else.i:                                        ; preds = %gep.next29.i
  call void @llvm.dbg.value(metadata i32 %149, metadata !6256, metadata !DIExpression()), !dbg !6546
  %143 = zext i32 %149 to i64, !dbg !6547
  tail call fastcc void @"(*fmt.pp).fmt0x64"(%fmt.pp* nonnull %p, i64 %143, i1 true), !dbg !6548
  br label %gep.next39.i, !dbg !6542

if.else3.i:                                       ; preds = %gep.next.i29
  call void @llvm.dbg.value(metadata i32 %149, metadata !6256, metadata !DIExpression()), !dbg !6549
  %144 = icmp eq i32 %149, 0, !dbg !6550
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6551
  br i1 %144, label %gep.next41.i, label %if.else5.i, !dbg !6542

if.else5.i:                                       ; preds = %if.else3.i
  call void @llvm.dbg.value(metadata i32 %149, metadata !6256, metadata !DIExpression()), !dbg !6552
  %145 = zext i32 %149 to i64, !dbg !6553
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6554
  %146 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 4, !dbg !6555
  %147 = load i1, i1* %146, align 1, !dbg !6555
  %148 = xor i1 %147, true, !dbg !6556
  tail call fastcc void @"(*fmt.pp).fmt0x64"(%fmt.pp* nonnull %p, i64 %145, i1 %148), !dbg !6557
  br label %switch.done.i, !dbg !6542

switch.done.i:                                    ; preds = %gep.next41.i, %gep.next39.i, %if.else5.i
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139), !dbg !6542
  br label %if.then2, !dbg !6542

switch.next19.i:                                  ; preds = %deref.next361
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.value(metadata i32 118, metadata !6255, metadata !DIExpression()), !dbg !6559
  tail call fastcc void @"(*fmt.pp).badVerb"(%fmt.pp* nonnull %p), !dbg !6560
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139), !dbg !6561
  br label %if.then2, !dbg !6561

gep.next.i29:                                     ; preds = %deref.next361, %deref.next361, %deref.next361, %deref.next361, %deref.next361, %deref.next361
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6254, metadata !DIExpression()), !dbg !6562
  %149 = tail call fastcc i32 @"(reflect.Value).Pointer"(i32 %.fca.0.load725, i8* %.fca.1.load728, i8 %.fca.2.load731), !dbg !6563
  call void @llvm.dbg.value(metadata i32 %149, metadata !6256, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.value(metadata i32 118, metadata !6255, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6566
  %150 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, !dbg !6567
  %151 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 3, i32 1, i32 8, !dbg !6568
  %152 = load i1, i1* %151, align 1, !dbg !6568
  br i1 %152, label %gep.next29.i, label %if.else3.i, !dbg !6542

gep.next29.i:                                     ; preds = %gep.next.i29
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6569
  %153 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6570
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %153, i8 40), !dbg !6571
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6254, metadata !DIExpression()), !dbg !6572
  %154 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %.fca.0.load725, i8* %.fca.1.load728, i8 %.fca.2.load731), !dbg !6573
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %153, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6574
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*fmt.pp).fmtPointer$string", i32 0, i32 0), i32 2), !dbg !6575
  call void @llvm.dbg.value(metadata i32 %149, metadata !6256, metadata !DIExpression()), !dbg !6576
  %155 = icmp eq i32 %149, 0, !dbg !6577
  br i1 %155, label %gep.next37.i, label %if.else.i, !dbg !6542

gep.next37.i:                                     ; preds = %gep.next29.i
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(*fmt.pp).fmtPointer$string.746", i32 0, i32 0), i32 3), !dbg !6578
  br label %gep.next39.i, !dbg !6542

gep.next39.i:                                     ; preds = %gep.next37.i, %if.else.i
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6253, metadata !DIExpression()), !dbg !6579
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %153, i8 41), !dbg !6580
  br label %switch.done.i, !dbg !6542

gep.next41.i:                                     ; preds = %if.else3.i
  tail call fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nonnull %150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !6581
  br label %switch.done.i, !dbg !6542

deref.next363:                                    ; preds = %gep.next111
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6218, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6224, metadata !DIExpression()), !dbg !6583
  %156 = bitcast %reflect.Value* %v.i21 to i8*, !dbg !6258
  %157 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 40, !dbg !6258
  store i8* %156, i8** %157, align 4, !dbg !6258
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %156), !dbg !6258
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6263, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i32 %value.typecode, metadata !6264, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6258
  call void @llvm.dbg.value(metadata i8* %value.value, metadata !6264, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6258
  call void @llvm.dbg.value(metadata i8 %value.flags, metadata !6264, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 8)), !dbg !6258
  %.fca.0.gep.i22 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i21, i32 0, i32 0, !dbg !6258
  %.fca.1.gep.i23 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i21, i32 0, i32 1, !dbg !6258
  %.fca.2.gep.i24 = getelementptr inbounds %reflect.Value, %reflect.Value* %v.i21, i32 0, i32 2, !dbg !6258
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %156, i8 0, i64 9, i1 false), !dbg !6258
  store i32 %value.typecode, i32* %.fca.0.gep.i22, align 8, !dbg !6584
  store i8* %value.value, i8** %.fca.1.gep.i23, align 4, !dbg !6584
  store i8 %value.flags, i8* %.fca.2.gep.i24, align 8, !dbg !6584
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6264, metadata !DIExpression()), !dbg !6585
  %158 = tail call fastcc i1 @"(reflect.Value).IsValid"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6586
  %159 = getelementptr inbounds %fmt.pp, %fmt.pp* %p, i32 0, i32 0, !dbg !6584
  br i1 %158, label %gep.next.i, label %gep.next8.i, !dbg !6584

gep.next.i:                                       ; preds = %deref.next363
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %159, i8 63), !dbg !6587
  call void @llvm.dbg.value(metadata %fmt.pp* %p, metadata !6263, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata %reflect.Value undef, metadata !6264, metadata !DIExpression()), !dbg !6589
  %160 = tail call fastcc i32 @"(reflect.Value).Type"(i32 %value.typecode, i8* %value.value, i8 %value.flags), !dbg !6590
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %159, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6591
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %159, i8 63), !dbg !6592
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %156), !dbg !6584
  br label %if.then2, !dbg !6584

gep.next8.i:                                      ; preds = %deref.next363
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nonnull %159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"(*fmt.pp).unknownType$string", i32 0, i32 0), i32 5), !dbg !6593
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %156), !dbg !6594
  br label %if.then2, !dbg !6594
}

; Function Attrs: optsize
define internal fastcc void @runtime.printstring(i8* nocapture readonly %s.data, i32 %s.len) unnamed_addr #2 section ".text.runtime.printstring" !dbg !6595 {
entry:
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !6598, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6600
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !6598, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6600
  call void @llvm.dbg.value(metadata i32 0, metadata !6599, metadata !DIExpression()), !dbg !6601
  %0 = icmp sgt i32 %s.len, 0, !dbg !6602
  %smax = select i1 %0, i32 %s.len, i32 0, !dbg !6602
  br label %for.loop, !dbg !6602

for.loop:                                         ; preds = %for.body, %entry
  %1 = phi i32 [ 0, %entry ], [ %4, %for.body ], !dbg !6601
  call void @llvm.dbg.value(metadata i32 %1, metadata !6599, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !6598, metadata !DIExpression()), !dbg !6604
  %exitcond.not = icmp eq i32 %1, %smax, !dbg !6605
  br i1 %exitcond.not, label %for.done, label %for.body, !dbg !6602

for.body:                                         ; preds = %for.loop
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !6598, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.value(metadata i32 %1, metadata !6599, metadata !DIExpression()), !dbg !6607
  %2 = getelementptr inbounds i8, i8* %s.data, i32 %1, !dbg !6608
  %3 = load i8, i8* %2, align 1, !dbg !6608
  tail call fastcc void @runtime.putchar(i8 %3), !dbg !6609
  %4 = add nuw i32 %1, 1, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %4, metadata !6599, metadata !DIExpression()), !dbg !6610
  br label %for.loop, !dbg !6602

for.done:                                         ; preds = %for.loop
  ret void, !dbg !6602
}

; Function Attrs: optsize
define internal fastcc void @runtime.printnl() unnamed_addr #2 section ".text.runtime.printnl" !dbg !6611 {
entry:
  tail call fastcc void @runtime.putchar(i8 13), !dbg !6612
  tail call fastcc void @runtime.putchar(i8 10), !dbg !6613
  ret void, !dbg !6614
}

; Function Attrs: optsize
define internal fastcc void @runtime.markRoot(i32 %root) unnamed_addr #2 section ".text.runtime.markRoot" !dbg !6615 {
entry:
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i32 %root, metadata !6618, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i32 %root, metadata !6618, metadata !DIExpression()), !dbg !6622
  %0 = tail call fastcc i1 @runtime.looksLikePointer(i32 %root), !dbg !6623
  br i1 %0, label %if.then, label %if.then1, !dbg !6624

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %root, metadata !6618, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 %root, metadata !6626, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !6629, metadata !DIExpression()), !dbg !6633
  %1 = sub i32 %root, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !6634
  %2 = lshr i32 %1, 4, !dbg !6635
  call void @llvm.dbg.value(metadata i32 %2, metadata !6619, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.value(metadata i32 %2, metadata !6619, metadata !DIExpression()), !dbg !6637
  %3 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %2), !dbg !6638
  %4 = icmp eq i8 %3, 0, !dbg !6639
  br i1 %4, label %if.then1, label %if.done, !dbg !6624

if.then1:                                         ; preds = %if.done, %entry, %if.done4, %if.then
  ret void, !dbg !6640

if.done:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 %2, metadata !6619, metadata !DIExpression()), !dbg !6641
  %5 = tail call fastcc i32 @"(runtime.gcBlock).findHead"(i32 %2), !dbg !6642
  call void @llvm.dbg.value(metadata i32 %5, metadata !6620, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %5, metadata !6620, metadata !DIExpression()), !dbg !6644
  %6 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %5), !dbg !6645
  %.not = icmp eq i8 %6, 3, !dbg !6646
  br i1 %.not, label %if.then1, label %if.done4, !dbg !6624

if.done4:                                         ; preds = %if.done
  call void @llvm.dbg.value(metadata i32 %5, metadata !6620, metadata !DIExpression()), !dbg !6647
  tail call fastcc void @runtime.startMark(i32 %5), !dbg !6648
  br label %if.then1, !dbg !6624
}

; Function Attrs: optsize
define internal fastcc void @runtime.printitf(i32 %msg.typecode, i8* %msg.value) unnamed_addr #2 section ".text.runtime.printitf" !dbg !6649 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !6673
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 6, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !6673
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6673
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !6673
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !6673
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !6673
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6673
  %digits.i.i = alloca [20 x i8], align 1, !dbg !6673
  %stackalloc.alloca = alloca [2 x i32], align 4, !dbg !6691
  %itf = alloca %runtime._interface, align 8, !dbg !6691
  call void @llvm.dbg.value(metadata i32 %msg.typecode, metadata !6651, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6691
  call void @llvm.dbg.value(metadata i8* %msg.value, metadata !6651, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6691
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6651, metadata !DIExpression()), !dbg !6692
  %typeassert.ok182 = icmp eq i32 %msg.typecode, 34, !dbg !6693
  br i1 %typeassert.ok182, label %typeswitch.body31, label %typeswitch.next32, !dbg !6693

typeswitch.done:                                  ; preds = %runtime.printptr.exit, %"(runtime.stringer).String.exit", %typeswitch.body33, %typeswitch.body31
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6694
  ret void, !dbg !6694

typeswitch.body31:                                ; preds = %entry
  %.elt = bitcast i8* %msg.value to i8**, !dbg !6693
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !6693
  %.elt3 = getelementptr inbounds i8, i8* %msg.value, i32 4, !dbg !6693
  %3 = bitcast i8* %.elt3 to i32*, !dbg !6693
  %.unpack4 = load i32, i32* %3, align 4, !dbg !6693
  call void @llvm.dbg.value(metadata %runtime._string zeroinitializer, metadata !6668, metadata !DIExpression()), !dbg !6695
  tail call fastcc void @runtime.printstring(i8* %.unpack, i32 %.unpack4), !dbg !6696
  br label %typeswitch.done, !dbg !6694

typeswitch.next32:                                ; preds = %entry
  %4 = insertvalue %runtime._interface zeroinitializer, i32 %msg.typecode, 0, !dbg !6691
  %5 = insertvalue %runtime._interface %4, i8* %msg.value, 1, !dbg !6691
  call void @llvm.dbg.value(metadata %runtime._interface %5, metadata !6651, metadata !DIExpression()), !dbg !6692
  %typeassert.ok181 = tail call fastcc i1 @"error$typeassert"(i32 %msg.typecode), !dbg !6697
  %spec.select = select i1 %typeassert.ok181, %runtime._interface %5, %runtime._interface zeroinitializer, !dbg !6697
  br i1 %typeassert.ok181, label %typeswitch.body33, label %typeswitch.next34, !dbg !6694

typeswitch.body33:                                ; preds = %typeswitch.next32
  call void @llvm.dbg.value(metadata %runtime._interface %spec.select, metadata !6669, metadata !DIExpression()), !dbg !6698
  %invoke.typecode = extractvalue %runtime._interface %spec.select, 0, !dbg !6699
  %invoke.func.receiver = extractvalue %runtime._interface %spec.select, 1, !dbg !6699
  %6 = tail call fastcc { i8*, i32 } @"(error).Error"(i8* %invoke.func.receiver, i32 %invoke.typecode), !dbg !6699
  %newret = extractvalue { i8*, i32 } %6, 0, !dbg !6699
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !6699
  store i8* %newret, i8** %7, align 4, !dbg !6699
  %newret1 = extractvalue { i8*, i32 } %6, 1, !dbg !6699
  tail call fastcc void @runtime.printstring(i8* %newret, i32 %newret1), !dbg !6700
  br label %typeswitch.done, !dbg !6694

typeswitch.next34:                                ; preds = %typeswitch.next32
  %cond.i = icmp eq i32 %msg.typecode, 88, !dbg !6701
  br i1 %cond.i, label %"(runtime.stringer).String.exit", label %typeswitch.next36, !dbg !6694

"(runtime.stringer).String.exit":                 ; preds = %typeswitch.next34
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6670, metadata !DIExpression()), !dbg !6703
  tail call fastcc void @runtime.printstring(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(reflect.Type).String$string", i32 0, i32 0), i32 1), !dbg !6704
  br label %typeswitch.done, !dbg !6694

typeswitch.next36:                                ; preds = %typeswitch.next34
  %.fca.0.gep202 = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !6705
  store i32 0, i32* %.fca.0.gep202, align 4, !dbg !6705
  %.fca.1.gep203 = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca, i32 0, i32 1, !dbg !6705
  store i32 0, i32* %.fca.1.gep203, align 4, !dbg !6705
  %stackalloc = bitcast [2 x i32]* %stackalloc.alloca to i8*, !dbg !6705
  %8 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !6705
  store i8* %stackalloc, i8** %8, align 4, !dbg !6705
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !6705
  store i8* %stackalloc, i8** %9, align 4, !dbg !6705
  %10 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !6705
  store i8* %stackalloc, i8** %10, align 4, !dbg !6705
  store i32 %msg.typecode, i32* %.fca.0.gep202, align 4, !dbg !6705
  %11 = bitcast i32* %.fca.1.gep203 to i8**, !dbg !6705
  store i8* %msg.value, i8** %11, align 4, !dbg !6705
  %.fca.0.gep = getelementptr inbounds %runtime._interface, %runtime._interface* %itf, i32 0, i32 0, !dbg !6691
  store i32 0, i32* %.fca.0.gep, align 8, !dbg !6691
  %.fca.1.gep = getelementptr inbounds %runtime._interface, %runtime._interface* %itf, i32 0, i32 1, !dbg !6691
  store i8* null, i8** %.fca.1.gep, align 4, !dbg !6691
  %12 = bitcast %runtime._interface* %itf to i8*, !dbg !6691
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !6706
  store i8* %12, i8** %13, align 4, !dbg !6706
  store i32 %msg.typecode, i32* %.fca.0.gep, align 8, !dbg !6706
  store i8* %msg.value, i8** %.fca.1.gep, align 4, !dbg !6706
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6672, metadata !DIExpression()), !dbg !6706
  tail call fastcc void @runtime.putchar(i8 40), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %msg.typecode, metadata !6688, metadata !DIExpression()), !dbg !6708
  %14 = zext i32 %msg.typecode to i64, !dbg !6709
  %15 = getelementptr inbounds [20 x i8], [20 x i8]* %digits.i.i, i32 0, i32 0, !dbg !6673
  %16 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !6673
  store i8* %15, i8** %16, align 4, !dbg !6673
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15), !dbg !6673
  call void @llvm.dbg.value(metadata i64 %14, metadata !6678, metadata !DIExpression()), !dbg !6673
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(20) %15, i8 0, i64 20, i1 false), !dbg !6673
  call void @llvm.dbg.value(metadata i32 19, metadata !6679, metadata !DIExpression()), !dbg !6710
  call void @llvm.dbg.value(metadata i32 19, metadata !6680, metadata !DIExpression()), !dbg !6711
  br label %for.loop.i.i, !dbg !6712

for.loop.i.i:                                     ; preds = %for.body.i.i, %typeswitch.next36
  %17 = phi i64 [ %14, %typeswitch.next36 ], [ %22, %for.body.i.i ], !dbg !6713
  %18 = phi i32 [ 19, %typeswitch.next36 ], [ %27, %for.body.i.i ], !dbg !6710
  %19 = phi i32 [ 19, %typeswitch.next36 ], [ %28, %for.body.i.i ], !dbg !6711
  call void @llvm.dbg.value(metadata i32 %19, metadata !6680, metadata !DIExpression()), !dbg !6714
  %20 = icmp sgt i32 %19, -1, !dbg !6715
  br i1 %20, label %for.body.i.i, label %for.loop1.preheader.i.i, !dbg !6712

for.loop1.preheader.i.i:                          ; preds = %for.loop.i.i
  %21 = icmp sgt i32 %18, 20, !dbg !6712
  %smax.i.i = select i1 %21, i32 %18, i32 20, !dbg !6712
  br label %for.loop1.i.i, !dbg !6712

for.body.i.i:                                     ; preds = %for.loop.i.i
  call void @llvm.dbg.value(metadata i64 %17, metadata !6678, metadata !DIExpression()), !dbg !6716
  %.frozen = freeze i64 %17
  %22 = udiv i64 %.frozen, 10, !dbg !6717
  %23 = mul i64 %22, 10
  %.decomposed = sub i64 %.frozen, %23
  %24 = trunc i64 %.decomposed to i8, !dbg !6718
  %25 = or i8 %24, 48, !dbg !6718
  call void @llvm.dbg.value(metadata i8 %25, metadata !6681, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.value(metadata i32 %19, metadata !6680, metadata !DIExpression()), !dbg !6720
  %26 = getelementptr inbounds [20 x i8], [20 x i8]* %digits.i.i, i32 0, i32 %19, !dbg !6721
  store i8 %25, i8* %26, align 1, !dbg !6721
  %.not.i.i = icmp eq i8 %25, 48, !dbg !6722
  %27 = select i1 %.not.i.i, i32 %18, i32 %19, !dbg !6712
  call void @llvm.dbg.value(metadata i64 %22, metadata !6678, metadata !DIExpression()), !dbg !6717
  %28 = add nsw i32 %19, -1, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %28, metadata !6680, metadata !DIExpression()), !dbg !6723
  br label %for.loop.i.i, !dbg !6712

for.loop1.i.i:                                    ; preds = %gep.next5.i.i, %for.loop1.preheader.i.i
  %29 = phi i32 [ %32, %gep.next5.i.i ], [ %18, %for.loop1.preheader.i.i ], !dbg !6724
  call void @llvm.dbg.value(metadata i32 %29, metadata !6682, metadata !DIExpression()), !dbg !6725
  %exitcond.not.i.i = icmp eq i32 %29, %smax.i.i, !dbg !6726
  br i1 %exitcond.not.i.i, label %runtime.printuint32.exit, label %gep.next5.i.i, !dbg !6712

gep.next5.i.i:                                    ; preds = %for.loop1.i.i
  call void @llvm.dbg.value(metadata i32 %29, metadata !6682, metadata !DIExpression()), !dbg !6727
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* %digits.i.i, i32 0, i32 %29, !dbg !6728
  %31 = load i8, i8* %30, align 1, !dbg !6728
  tail call fastcc void @runtime.putchar(i8 %31), !dbg !6729
  %32 = add i32 %29, 1, !dbg !6730
  call void @llvm.dbg.value(metadata i32 %32, metadata !6682, metadata !DIExpression()), !dbg !6730
  br label %for.loop1.i.i, !dbg !6712

runtime.printuint32.exit:                         ; preds = %for.loop1.i.i
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15), !dbg !6712
  tail call fastcc void @runtime.putchar(i8 58), !dbg !6731
  call void @llvm.dbg.value(metadata i8* %msg.value, metadata !6732, metadata !DIExpression()), !dbg !6737
  %33 = icmp eq i8* %msg.value, null, !dbg !6739
  br i1 %33, label %if.then.i, label %if.done.i, !dbg !6740

if.then.i:                                        ; preds = %runtime.printuint32.exit
  tail call fastcc void @runtime.printstring(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"(*fmt.pp).fmtPointer$string.746", i32 0, i32 0), i32 3), !dbg !6741
  br label %runtime.printptr.exit, !dbg !6742

if.done.i:                                        ; preds = %runtime.printuint32.exit
  %34 = ptrtoint i8* %msg.value to i32, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %34, metadata !6732, metadata !DIExpression()), !dbg !6737
  tail call fastcc void @runtime.putchar(i8 48), !dbg !6744
  tail call fastcc void @runtime.putchar(i8 120), !dbg !6745
  call void @llvm.dbg.value(metadata i32 0, metadata !6735, metadata !DIExpression()), !dbg !6746
  br label %for.loop.i, !dbg !6740

for.loop.i:                                       ; preds = %for.body.i, %if.done.i
  %35 = phi i32 [ %34, %if.done.i ], [ %42, %for.body.i ], !dbg !6747
  %36 = phi i32 [ 0, %if.done.i ], [ %43, %for.body.i ], !dbg !6746
  call void @llvm.dbg.value(metadata i32 %36, metadata !6735, metadata !DIExpression()), !dbg !6748
  %exitcond.not.i = icmp eq i32 %36, 8, !dbg !6749
  br i1 %exitcond.not.i, label %runtime.printptr.exit, label %for.body.i, !dbg !6740

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %35, metadata !6732, metadata !DIExpression()), !dbg !6750
  %37 = lshr i32 %35, 28, !dbg !6751
  %38 = trunc i32 %37 to i8, !dbg !6752
  call void @llvm.dbg.value(metadata i8 %38, metadata !6736, metadata !DIExpression()), !dbg !6753
  %39 = icmp ult i8 %38, 10, !dbg !6754
  %40 = add nuw nsw i8 %38, 87, !dbg !6740
  %41 = or i8 %38, 48, !dbg !6740
  %.sink = select i1 %39, i8 %41, i8 %40, !dbg !6740
  tail call fastcc void @runtime.putchar(i8 %.sink), !dbg !6740
  %42 = shl i32 %35, 4, !dbg !6755
  call void @llvm.dbg.value(metadata i32 %42, metadata !6732, metadata !DIExpression()), !dbg !6755
  %43 = add nuw nsw i32 %36, 1, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %43, metadata !6735, metadata !DIExpression()), !dbg !6756
  br label %for.loop.i, !dbg !6740

runtime.printptr.exit:                            ; preds = %for.loop.i, %if.then.i
  tail call fastcc void @runtime.putchar(i8 41), !dbg !6757
  br label %typeswitch.done, !dbg !6694
}

; Function Attrs: optsize
define void @_start() local_unnamed_addr #2 section ".text._start" !dbg !6758 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !6762
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 17, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !6762
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6762
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !6762
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !6762
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !6762
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6762
  %3 = alloca %reflect.Value, align 8, !dbg !6762
  %4 = alloca [9 x i8], align 8, !dbg !6799
  %stackalloc.alloca.i.i.i = alloca [2 x i32], align 4, !dbg !6821
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !6760, metadata !DIExpression()), !dbg !6822
  %5 = tail call i32 @llvm.wasm.memory.size.i32(i32 0), !dbg !6823
  %6 = shl i32 %5, 16, !dbg !6824
  store i32 %6, i32* @runtime.heapEnd, align 4, !dbg !6825
  call void @llvm.dbg.value(metadata i32 %6, metadata !6761, metadata !DIExpression()), !dbg !6825
  tail call fastcc void @runtime.calculateHeapAddresses(), !dbg !6826
  %7 = load i32, i32* @runtime.heapEnd, align 4, !dbg !6833
  call void @llvm.dbg.value(metadata i32 %7, metadata !6829, metadata !DIExpression()), !dbg !6833
  %8 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !6834
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !6834
  store i8* %8, i8** %9, align 4, !dbg !6834
  call void @llvm.dbg.value(metadata i8* %8, metadata !6830, metadata !DIExpression()), !dbg !6834
  %10 = ptrtoint i8* %8 to i32, !dbg !6835
  %11 = sub i32 %7, %10, !dbg !6836
  call void @llvm.dbg.value(metadata i32 %11, metadata !6831, metadata !DIExpression()), !dbg !6837
  %12 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !6838
  %13 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !6838
  store i8* %12, i8** %13, align 4, !dbg !6838
  call void @llvm.dbg.value(metadata i8* %12, metadata !6830, metadata !DIExpression()), !dbg !6838
  tail call void @llvm.memset.p0i8.i32(i8* align 1 %12, i8 0, i32 %11, i1 false), !dbg !6839
  %14 = tail call fastcc i32 @"(reflect.Type).Elem"(i32 3685), !dbg !6840
  %15 = tail call i32 @llvm.wasm.memory.size.i32(i32 0), !dbg !6840
  %16 = shl i32 %15, 16, !dbg !6840
  store i32 %16, i32* @runtime.heapEnd, align 4, !dbg !6840
  %17 = bitcast [2 x i32]* %stackalloc.alloca.i.i.i to i8*, !dbg !6821
  %18 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !6821
  store i8* %17, i8** %18, align 4, !dbg !6821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17), !dbg !6821
  %19 = tail call i32 @wasm_import_fastly_http_body_write(i32* null, i32* null, i32* null, i32* null, i32* null), !dbg !6821
  %.fca.0.gep.i.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca.i.i.i, i32 0, i32 0, !dbg !6843
  store i32 0, i32* %.fca.0.gep.i.i.i, align 4, !dbg !6843
  %.fca.1.gep.i.i.i = getelementptr inbounds [2 x i32], [2 x i32]* %stackalloc.alloca.i.i.i, i32 0, i32 1, !dbg !6843
  store i32 0, i32* %.fca.1.gep.i.i.i, align 4, !dbg !6843
  store i32 34, i32* %.fca.0.gep.i.i.i, align 4, !dbg !6844
  %20 = bitcast i32* %.fca.1.gep.i.i.i to i8**, !dbg !6844
  store i8* bitcast ({ %runtime._string }* @"main.main$pack" to i8*), i8** %20, align 4, !dbg !6844
  call void @llvm.dbg.value(metadata [2 x i32]* %stackalloc.alloca.i.i.i, metadata !6787, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6845
  call void @llvm.dbg.value(metadata i32 1, metadata !6787, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6845
  call void @llvm.dbg.value(metadata i32 1, metadata !6787, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6845
  call void @llvm.dbg.value(metadata { %runtime._interface*, i32, i32 } undef, metadata !6787, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.value(metadata i32 11237, metadata !6777, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6847
  call void @llvm.dbg.value(metadata i8* bitcast ({ i32, [4 x i8], [11 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 3) to i8*), metadata !6777, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6847
  call void @llvm.dbg.value(metadata [2 x i32]* %stackalloc.alloca.i.i.i, metadata !6778, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6847
  call void @llvm.dbg.value(metadata i32 1, metadata !6778, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6847
  call void @llvm.dbg.value(metadata i32 1, metadata !6778, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6847
  %new.i.i.i.i.i.i.i.i = tail call fastcc i8* @runtime.alloc(i32 140), !dbg !6848
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %21, align 4, !dbg !6859
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %22, align 4, !dbg !6859
  %23 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %23, align 4, !dbg !6859
  %24 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %24, align 4, !dbg !6859
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %25, align 4, !dbg !6859
  %26 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !6859
  store i8* %new.i.i.i.i.i.i.i.i, i8** %26, align 4, !dbg !6859
  call void @llvm.dbg.value(metadata i1 true, metadata !6864, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata %fmt.pp* undef, metadata !6816, metadata !DIExpression()), !dbg !6866
  %unpack.ptr.i.i.i.i.i.i = bitcast i8* %new.i.i.i.i.i.i.i.i to %fmt.pp*, !dbg !6867
  %27 = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 126, !dbg !6868
  %28 = bitcast i8* %27 to i1*, !dbg !6868
  store i1 false, i1* %28, align 1, !dbg !6868
  call void @llvm.dbg.value(metadata i1 false, metadata !6817, metadata !DIExpression()), !dbg !6868
  %29 = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 127, !dbg !6869
  %30 = bitcast i8* %29 to i1*, !dbg !6869
  store i1 false, i1* %30, align 1, !dbg !6869
  call void @llvm.dbg.value(metadata i1 false, metadata !6818, metadata !DIExpression()), !dbg !6869
  %31 = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 128, !dbg !6870
  %32 = bitcast i8* %31 to i1*, !dbg !6870
  store i1 false, i1* %32, align 1, !dbg !6870
  call void @llvm.dbg.value(metadata i1 false, metadata !6819, metadata !DIExpression()), !dbg !6870
  %33 = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 32, !dbg !6871
  call void @llvm.dbg.value(metadata i8* %new.i.i.i.i.i.i.i.i, metadata !6811, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %33, metadata !6810, metadata !DIExpression()), !dbg !6873
  %.sub.i.i.i.i.i.i.i = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 0
  %34 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !6874
  store i8* %.sub.i.i.i.i.i.i.i, i8** %34, align 4, !dbg !6874
  %35 = bitcast i8* %33 to i8**, !dbg !6874
  store i8* %new.i.i.i.i.i.i.i.i, i8** %35, align 4, !dbg !6874
  call void @llvm.dbg.value(metadata i8* %new.i.i.i.i.i.i.i.i, metadata !6812, metadata !DIExpression()), !dbg !6874
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %.sub.i.i.i.i.i.i.i), !dbg !6799
  call void @llvm.dbg.value(metadata i8* %33, metadata !6804, metadata !DIExpression()), !dbg !6875
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %.sub.i.i.i.i.i.i.i, i8 0, i64 9, i1 false), !dbg !6799
  %.repack.i.i.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 36, !dbg !6876
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 dereferenceable(9) %.repack.i.i.i.i.i.i.i.i, i8 0, i64 9, i1 false), !dbg !6876
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %.sub.i.i.i.i.i.i.i), !dbg !6877
  call void @llvm.dbg.value(metadata %fmt.pp* %unpack.ptr.i.i.i.i.i.i, metadata !6779, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata { %runtime._interface*, i32, i32 } undef, metadata !6778, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata %fmt.pp* %unpack.ptr.i.i.i.i.i.i, metadata !6880, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.value(metadata [2 x i32]* %stackalloc.alloca.i.i.i, metadata !6885, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6888
  call void @llvm.dbg.value(metadata i32 1, metadata !6885, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6888
  call void @llvm.dbg.value(metadata i32 undef, metadata !6885, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6888
  call void @llvm.dbg.value(metadata { %runtime._interface*, i32, i32 } undef, metadata !6885, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.value(metadata i32 undef, metadata !6886, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6887, metadata !DIExpression()), !dbg !6892
  tail call fastcc void @"(*fmt.pp).printArg"(%fmt.pp* nonnull %unpack.ptr.i.i.i.i.i.i, i32 34, i8* bitcast ({ %runtime._string }* @"main.main$pack" to i8*)), !dbg !6893
  %36 = bitcast i8* %new.i.i.i.i.i.i.i.i to { i8*, i32, i32 }*, !dbg !6894
  tail call fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nonnull %36, i8 10), !dbg !6895
  call void @llvm.dbg.value(metadata %runtime._interface undef, metadata !6777, metadata !DIExpression()), !dbg !6896
  %.elt.i.i.i.i.i = bitcast i8* %new.i.i.i.i.i.i.i.i to i8**, !dbg !6897
  %.unpack.i.i.i.i.i = load i8*, i8** %.elt.i.i.i.i.i, align 4, !dbg !6897
  %37 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !6897
  store i8* %.unpack.i.i.i.i.i, i8** %37, align 4, !dbg !6897
  %.elt2.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 4, !dbg !6897
  %38 = bitcast i8* %.elt2.i.i.i.i.i to i32*, !dbg !6897
  %.unpack3.i.i.i.i.i = load i32, i32* %38, align 4, !dbg !6897
  %39 = tail call fastcc { i32, %runtime._interface } @"(*os.File).Write"(%os.File* bitcast ({ i32, [4 x i8], [11 x i8]*, [4 x i8] }* getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 3) to %os.File*), i8* %.unpack.i.i.i.i.i, i32 %.unpack3.i.i.i.i.i), !dbg !6898
  %oldret.i.i.i.i.i.i = extractvalue { i32, %runtime._interface } %39, 1, !dbg !6898
  %40 = extractvalue %runtime._interface %oldret.i.i.i.i.i.i, 1, !dbg !6900
  %41 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 18, !dbg !6901
  store i8* %40, i8** %41, align 4, !dbg !6901
  %42 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 17, !dbg !6901
  store i8* %40, i8** %42, align 4, !dbg !6901
  %43 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !6901
  store i8* %40, i8** %43, align 4, !dbg !6901
  call void @llvm.dbg.value(metadata i32 undef, metadata !6780, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata %runtime._interface %oldret.i.i.i.i.i.i, metadata !6781, metadata !DIExpression()), !dbg !6902
  %44 = bitcast %reflect.Value* %3 to i8*, !dbg !6762
  %45 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !6762
  store i8* %44, i8** %45, align 4, !dbg !6762
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %44), !dbg !6762
  call void @llvm.dbg.value(metadata %fmt.pp* %unpack.ptr.i.i.i.i.i.i, metadata !6767, metadata !DIExpression()), !dbg !6903
  %.unpack.i8.i.i.i.i.i = load i8*, i8** %.elt.i.i.i.i.i, align 4, !dbg !6904
  %46 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !6904
  store i8* %.unpack.i8.i.i.i.i.i, i8** %46, align 4, !dbg !6904
  %.elt3.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 8, !dbg !6904
  %47 = bitcast i8* %.elt3.i.i.i.i.i.i to i32*, !dbg !6904
  %.unpack4.i.i.i.i.i.i = load i32, i32* %47, align 4, !dbg !6904
  %48 = icmp sgt i32 %.unpack4.i.i.i.i.i.i, 65536, !dbg !6905
  br i1 %48, label %if.then.i.i.i.i.i.i, label %deref.next6.i.i.i.i.i.i, !dbg !6906

if.then.i.i.i.i.i.i:                              ; preds = %entry
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44), !dbg !6907
  br label %runtime.run.exit, !dbg !6907

deref.next6.i.i.i.i.i.i:                          ; preds = %entry
  call void @llvm.dbg.value(metadata %fmt.pp* %unpack.ptr.i.i.i.i.i.i, metadata !6767, metadata !DIExpression()), !dbg !6908
  %.unpack6.i.i.i.i.i.i = load i8*, i8** %.elt.i.i.i.i.i, align 4, !dbg !6909
  %49 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !6909
  store i8* %.unpack6.i.i.i.i.i.i, i8** %49, align 4, !dbg !6909
  %.unpack10.i.i.i.i.i.i = load i32, i32* %47, align 4, !dbg !6909
  store i8* %.unpack6.i.i.i.i.i.i, i8** %.elt.i.i.i.i.i, align 4, !dbg !6910
  store i32 0, i32* %38, align 4, !dbg !6910
  store i32 %.unpack10.i.i.i.i.i.i, i32* %47, align 4, !dbg !6910
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !6768, metadata !DIExpression()), !dbg !6910
  %.repack16.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 12, !dbg !6911
  %50 = bitcast i8* %.repack16.i.i.i.i.i.i to i32*, !dbg !6911
  store i32 0, i32* %50, align 4, !dbg !6911
  %.repack17.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 16, !dbg !6911
  %51 = bitcast i8* %.repack17.i.i.i.i.i.i to i8**, !dbg !6911
  store i8* null, i8** %51, align 4, !dbg !6911
  call void @llvm.dbg.value(metadata %runtime._interface zeroinitializer, metadata !6769, metadata !DIExpression()), !dbg !6911
  %52 = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 20, !dbg !6912
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(9) %44, i8 0, i64 9, i1 false), !dbg !6762
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(12) %52, i8 0, i64 12, i1 false), !dbg !6913
  %.repack18.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 132, !dbg !6914
  %53 = bitcast i8* %.repack18.i.i.i.i.i.i to i32*, !dbg !6914
  store i32 0, i32* %53, align 4, !dbg !6914
  %.repack19.i.i.i.i.i.i = getelementptr inbounds i8, i8* %new.i.i.i.i.i.i.i.i, i32 136, !dbg !6914
  %54 = bitcast i8* %.repack19.i.i.i.i.i.i to i8**, !dbg !6914
  store i8* null, i8** %54, align 4, !dbg !6914
  call void @llvm.dbg.value(metadata %runtime._interface zeroinitializer, metadata !6770, metadata !DIExpression()), !dbg !6914
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44), !dbg !6906
  br label %runtime.run.exit, !dbg !6906

runtime.run.exit:                                 ; preds = %if.then.i.i.i.i.i.i, %deref.next6.i.i.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17), !dbg !6844
  call void @llvm.dbg.value(metadata i1 true, metadata !6795, metadata !DIExpression()), !dbg !6915
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !6916
  ret void, !dbg !6916
}

; Function Attrs: nounwind optsize readonly
declare i32 @llvm.wasm.memory.size.i32(i32) #7

; Function Attrs: cold noreturn nounwind optsize
declare void @llvm.trap() #8

; Function Attrs: optsize
define internal fastcc void @runtime.runtimePanic(i8* nocapture readonly %msg.data, i32 %msg.len) unnamed_addr #2 section ".text.runtime.runtimePanic" !dbg !6917 {
entry:
  call void @llvm.dbg.value(metadata i8* %msg.data, metadata !6919, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %msg.len, metadata !6919, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6920
  tail call fastcc void @runtime.printstring(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @"runtime.runtimePanic$string", i32 0, i32 0), i32 22), !dbg !6921
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !6919, metadata !DIExpression()), !dbg !6922
  tail call fastcc void @runtime.printstring(i8* %msg.data, i32 %msg.len), !dbg !6923
  tail call fastcc void @runtime.printnl(), !dbg !6923
  tail call void @llvm.trap() #15, !dbg !6924
  unreachable, !dbg !6926
}

; Function Attrs: optsize
define internal fastcc i8 @"(runtime.gcBlock).state"(i32 %b) unnamed_addr #2 section ".text.(runtime.gcBlock).state" !dbg !6927 {
entry:
  call void @llvm.dbg.value(metadata i32 %b, metadata !6929, metadata !DIExpression()), !dbg !6932
  %0 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !6933
  call void @llvm.dbg.value(metadata i8* %0, metadata !6930, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 %b, metadata !6929, metadata !DIExpression()), !dbg !6934
  %1 = lshr i32 %b, 2, !dbg !6935
  %2 = getelementptr inbounds i8, i8* %0, i32 %1, !dbg !6936
  call void @llvm.dbg.value(metadata i8* %2, metadata !6931, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i8* %2, metadata !6931, metadata !DIExpression()), !dbg !6938
  %3 = load i8, i8* %2, align 1, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %b, metadata !6929, metadata !DIExpression()), !dbg !6940
  %b.tr = trunc i32 %b to i8, !dbg !6941
  %4 = shl i8 %b.tr, 1, !dbg !6941
  %5 = and i8 %4, 6, !dbg !6941
  %6 = lshr i8 %3, %5, !dbg !6941
  %7 = and i8 %6, 3, !dbg !6942
  ret i8 %7, !dbg !6943
}

; Function Attrs: optsize
define internal fastcc void @"(runtime.gcBlock).setState"(i32 %b, i8 %newState) unnamed_addr #2 section ".text.(runtime.gcBlock).setState" !dbg !6944 {
entry:
  call void @llvm.dbg.value(metadata i32 %b, metadata !6948, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i8 %newState, metadata !6949, metadata !DIExpression()), !dbg !6952
  %0 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !6953
  call void @llvm.dbg.value(metadata i8* %0, metadata !6950, metadata !DIExpression()), !dbg !6953
  %1 = lshr i32 %b, 2, !dbg !6954
  %2 = getelementptr inbounds i8, i8* %0, i32 %1, !dbg !6955
  call void @llvm.dbg.value(metadata i8* %2, metadata !6951, metadata !DIExpression()), !dbg !6956
  %b.tr = trunc i32 %b to i8, !dbg !6957
  %3 = shl i8 %b.tr, 1, !dbg !6957
  %4 = and i8 %3, 6, !dbg !6957
  %5 = shl i8 %newState, %4, !dbg !6957
  %6 = load i8, i8* %2, align 1, !dbg !6958
  %7 = or i8 %6, %5, !dbg !6958
  store i8 %7, i8* %2, align 1, !dbg !6958
  ret void, !dbg !6959
}

; Function Attrs: argmemonly nounwind optsize willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #9

; Function Attrs: optsize
define internal fastcc void @runtime.calculateHeapAddresses() unnamed_addr #2 section ".text.runtime.calculateHeapAddresses" !dbg !6960 {
entry:
  %0 = load i32, i32* @runtime.heapEnd, align 4, !dbg !6969
  call void @llvm.dbg.value(metadata i32 %0, metadata !6962, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !6963, metadata !DIExpression()), !dbg !6970
  %1 = sub i32 %0, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !6971
  call void @llvm.dbg.value(metadata i32 %1, metadata !6964, metadata !DIExpression()), !dbg !6972
  %2 = lshr i32 %1, 6, !dbg !6973
  call void @llvm.dbg.value(metadata i32 %2, metadata !6965, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.value(metadata i32 %0, metadata !6962, metadata !DIExpression()), !dbg !6975
  %3 = sub i32 %0, %2, !dbg !6976
  %4 = inttoptr i32 %3 to i8*, !dbg !6977
  store i8* %4, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !6978
  call void @llvm.dbg.value(metadata i8* %4, metadata !6966, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.value(metadata i8* %4, metadata !6966, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !6963, metadata !DIExpression()), !dbg !6980
  %5 = sub i32 %3, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !6981
  %6 = lshr i32 %5, 4, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %6, metadata !6967, metadata !DIExpression()), !dbg !6983
  store i32 %6, i32* @runtime.endBlock, align 4, !dbg !6984
  call void @llvm.dbg.value(metadata i32 %6, metadata !6968, metadata !DIExpression()), !dbg !6984
  ret void, !dbg !6985
}

; Function Attrs: optsize
define internal fastcc void @runtime.startMark(i32 %root) unnamed_addr #2 section ".text.runtime.startMark" !dbg !6986 {
entry:
  %stack = alloca [16 x i32], align 4, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %root, metadata !6988, metadata !DIExpression()), !dbg !6997
  %.fca.0.gep = getelementptr inbounds [16 x i32], [16 x i32]* %stack, i32 0, i32 0, !dbg !6997
  %0 = bitcast [16 x i32]* %stack to i8*, !dbg !6997
  %1 = bitcast [16 x i32]* %stack to i8*, !dbg !6997
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(64) %1, i8 0, i64 64, i1 false), !dbg !6997
  store i32 %root, i32* %.fca.0.gep, align 4, !dbg !6998
  tail call fastcc void @"(runtime.gcBlock).setState"(i32 %root, i8 3), !dbg !6999
  call void @llvm.dbg.value(metadata i32 1, metadata !6989, metadata !DIExpression()), !dbg !7000
  br label %for.loop, !dbg !7001

for.loop:                                         ; preds = %for.loop1, %entry
  %2 = phi i32 [ 1, %entry ], [ %6, %for.loop1 ], !dbg !7000
  call void @llvm.dbg.value(metadata i32 %2, metadata !6989, metadata !DIExpression()), !dbg !7002
  %3 = icmp sgt i32 %2, 0, !dbg !7003
  br i1 %3, label %for.body, label %for.done, !dbg !7001

for.body:                                         ; preds = %for.loop
  %4 = add nsw i32 %2, -1, !dbg !7004
  call void @llvm.dbg.value(metadata i32 %4, metadata !6989, metadata !DIExpression()), !dbg !7005
  %5 = icmp ugt i32 %4, 15, !dbg !7006
  br i1 %5, label %lookup.throw, label %lookup.next, !dbg !7006

for.loop1:                                        ; preds = %for.post, %"(runtime.gcBlock).findNext.exit"
  %6 = phi i32 [ %4, %"(runtime.gcBlock).findNext.exit" ], [ %20, %for.post ], !dbg !7000
  %7 = phi i32 [ %25, %"(runtime.gcBlock).findNext.exit" ], [ %21, %for.post ], !dbg !7007
  call void @llvm.dbg.value(metadata i32 %7, metadata !6993, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.value(metadata i32 %36, metadata !6992, metadata !DIExpression()), !dbg !7009
  %.not = icmp eq i32 %7, %36, !dbg !7010
  br i1 %.not, label %for.loop, label %for.body2, !dbg !7001

for.body2:                                        ; preds = %for.loop1
  call void @llvm.dbg.value(metadata i32 %7, metadata !6993, metadata !DIExpression()), !dbg !7011
  %8 = inttoptr i32 %7 to i8*, !dbg !7012
  %9 = inttoptr i32 %7 to i32*, !dbg !7013
  %10 = load i32, i32* %9, align 4, !dbg !7014
  call void @llvm.dbg.value(metadata i32 %10, metadata !6994, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.value(metadata i32 %10, metadata !6994, metadata !DIExpression()), !dbg !7016
  %11 = tail call fastcc i1 @runtime.looksLikePointer(i32 %10), !dbg !7017
  br i1 %11, label %if.done3, label %for.post, !dbg !7001

if.done3:                                         ; preds = %for.body2
  call void @llvm.dbg.value(metadata i32 %10, metadata !6994, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.value(metadata i32 %10, metadata !6626, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !6629, metadata !DIExpression()), !dbg !7021
  %12 = sub i32 %10, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !7022
  %13 = lshr i32 %12, 4, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %13, metadata !6995, metadata !DIExpression()), !dbg !7024
  call void @llvm.dbg.value(metadata i32 %13, metadata !6995, metadata !DIExpression()), !dbg !7025
  %14 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %13), !dbg !7026
  %15 = icmp eq i8 %14, 0, !dbg !7027
  br i1 %15, label %for.post, label %if.done6, !dbg !7001

if.done6:                                         ; preds = %if.done3
  call void @llvm.dbg.value(metadata i32 %13, metadata !6995, metadata !DIExpression()), !dbg !7028
  %16 = tail call fastcc i32 @"(runtime.gcBlock).findHead"(i32 %13), !dbg !7029
  call void @llvm.dbg.value(metadata i32 %16, metadata !6995, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %16, metadata !6995, metadata !DIExpression()), !dbg !7031
  %17 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %16), !dbg !7032
  %18 = icmp eq i8 %17, 3, !dbg !7033
  br i1 %18, label %for.post, label %if.done9, !dbg !7001

if.done9:                                         ; preds = %if.done6
  call void @llvm.dbg.value(metadata i32 %16, metadata !6995, metadata !DIExpression()), !dbg !7034
  tail call fastcc void @"(runtime.gcBlock).setState"(i32 %16, i8 3), !dbg !7035
  call void @llvm.dbg.value(metadata i32 %6, metadata !6989, metadata !DIExpression()), !dbg !7036
  %19 = icmp eq i32 %6, 16, !dbg !7037
  br i1 %19, label %if.then10, label %gep.next16, !dbg !7001

if.then10:                                        ; preds = %if.done9
  store i1 true, i1* @runtime.stackOverflow, align 1, !dbg !7038
  call void @llvm.dbg.value(metadata i1 true, metadata !6996, metadata !DIExpression()), !dbg !7038
  br label %for.post, !dbg !7001

for.post:                                         ; preds = %if.done3, %if.then10, %lookup.next18, %if.done6, %for.body2
  %20 = phi i32 [ %6, %for.body2 ], [ %6, %if.done6 ], [ 16, %if.then10 ], [ %39, %lookup.next18 ], [ %6, %if.done3 ], !dbg !7000
  %21 = add i32 %7, 4, !dbg !7039
  call void @llvm.dbg.value(metadata i32 %21, metadata !6993, metadata !DIExpression()), !dbg !7039
  br label %for.loop1, !dbg !7001

for.done:                                         ; preds = %for.loop
  ret void, !dbg !7001

lookup.throw:                                     ; preds = %for.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !7006
  unreachable, !dbg !7006

lookup.next:                                      ; preds = %for.body
  %22 = getelementptr inbounds [16 x i32], [16 x i32]* %stack, i32 0, i32 %4, !dbg !7006
  %23 = load i32, i32* %22, align 4, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %23, metadata !6990, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i32 %23, metadata !1790, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !1787, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.value(metadata i32 %23, metadata !1790, metadata !DIExpression()), !dbg !7044
  %24 = shl i32 %23, 4, !dbg !7045
  %25 = add i32 %24, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !7046
  call void @llvm.dbg.value(metadata i32 %23, metadata !7047, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %23, metadata !7047, metadata !DIExpression()), !dbg !7052
  %26 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %23), !dbg !7053
  %27 = icmp eq i8 %26, 1, !dbg !7054
  br i1 %27, label %if.then.i, label %cond.false.i, !dbg !7055

if.then.i:                                        ; preds = %cond.false.i, %lookup.next
  %28 = add i32 %23, 1, !dbg !7056
  call void @llvm.dbg.value(metadata i32 %28, metadata !7047, metadata !DIExpression()), !dbg !7056
  br label %for.loop.i.preheader, !dbg !7055

for.loop.i.preheader:                             ; preds = %cond.false.i, %if.then.i
  %.ph = phi i32 [ %23, %cond.false.i ], [ %28, %if.then.i ]
  br label %for.loop.i, !dbg !7055

for.loop.i:                                       ; preds = %for.loop.i.preheader, %for.loop.i
  %29 = phi i32 [ %32, %for.loop.i ], [ %.ph, %for.loop.i.preheader ], !dbg !7057
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  %30 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %29), !dbg !7059
  %31 = icmp eq i8 %30, 2, !dbg !7060
  %32 = add i32 %29, 1, !dbg !7061
  call void @llvm.dbg.value(metadata i32 %32, metadata !7047, metadata !DIExpression()), !dbg !7061
  br i1 %31, label %for.loop.i, label %"(runtime.gcBlock).findNext.exit", !dbg !7055

cond.false.i:                                     ; preds = %lookup.next
  call void @llvm.dbg.value(metadata i32 %23, metadata !7047, metadata !DIExpression()), !dbg !7062
  %33 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %23), !dbg !7063
  %34 = icmp eq i8 %33, 3, !dbg !7064
  br i1 %34, label %if.then.i, label %for.loop.i.preheader, !dbg !7055

"(runtime.gcBlock).findNext.exit":                ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %29, metadata !7047, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.value(metadata i32 %29, metadata !1790, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !1787, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 %29, metadata !1790, metadata !DIExpression()), !dbg !7069
  %35 = shl i32 %29, 4, !dbg !7070
  %36 = add i32 %35, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %36, metadata !6992, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.value(metadata i32 %25, metadata !6991, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i32 %25, metadata !6993, metadata !DIExpression()), !dbg !7007
  br label %for.loop1, !dbg !7001

gep.next16:                                       ; preds = %if.done9
  call void @llvm.dbg.value(metadata i32 %6, metadata !6989, metadata !DIExpression()), !dbg !7074
  %37 = icmp ugt i32 %6, 15, !dbg !7075
  br i1 %37, label %lookup.throw17, label %lookup.next18, !dbg !7075

lookup.throw17:                                   ; preds = %gep.next16
  tail call fastcc void @runtime.lookupPanic(), !dbg !7075
  unreachable, !dbg !7075

lookup.next18:                                    ; preds = %gep.next16
  %38 = getelementptr inbounds [16 x i32], [16 x i32]* %stack, i32 0, i32 %6, !dbg !7075
  call void @llvm.dbg.value(metadata i32 %16, metadata !6995, metadata !DIExpression()), !dbg !7076
  store i32 %16, i32* %38, align 4, !dbg !7075
  %39 = add nuw nsw i32 %6, 1, !dbg !7077
  call void @llvm.dbg.value(metadata i32 %39, metadata !6989, metadata !DIExpression()), !dbg !7077
  br label %for.post, !dbg !7001
}

; Function Attrs: optsize
define internal fastcc i32 @"(runtime.gcBlock).findHead"(i32 %b) unnamed_addr #2 section ".text.(runtime.gcBlock).findHead" !dbg !7078 {
entry:
  call void @llvm.dbg.value(metadata i32 %b, metadata !7080, metadata !DIExpression()), !dbg !7081
  br label %for.loop, !dbg !7082

for.loop:                                         ; preds = %for.loop, %entry
  %0 = phi i32 [ %b, %entry ], [ %3, %for.loop ], !dbg !7083
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  %1 = tail call fastcc i8 @"(runtime.gcBlock).state"(i32 %0), !dbg !7085
  %2 = icmp eq i8 %1, 2, !dbg !7086
  %3 = add i32 %0, -1, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %3, metadata !7080, metadata !DIExpression()), !dbg !7087
  br i1 %2, label %for.loop, label %if.done, !dbg !7082

if.done:                                          ; preds = %for.loop
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 %0, metadata !7080, metadata !DIExpression()), !dbg !7088
  ret i32 %0, !dbg !7089
}

; Function Attrs: optsize
define internal fastcc void @"(runtime.gcBlock).markFree"(i32 %b) unnamed_addr #2 section ".text.(runtime.gcBlock).markFree" !dbg !7090 {
entry:
  call void @llvm.dbg.value(metadata i32 %b, metadata !7092, metadata !DIExpression()), !dbg !7095
  %0 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !7096
  call void @llvm.dbg.value(metadata i8* %0, metadata !7093, metadata !DIExpression()), !dbg !7096
  %1 = lshr i32 %b, 2, !dbg !7097
  %2 = getelementptr inbounds i8, i8* %0, i32 %1, !dbg !7098
  call void @llvm.dbg.value(metadata i8* %2, metadata !7094, metadata !DIExpression()), !dbg !7099
  %b.tr = trunc i32 %b to i8, !dbg !7100
  %3 = shl i8 %b.tr, 1, !dbg !7100
  %4 = and i8 %3, 6, !dbg !7100
  %5 = shl nuw i8 3, %4, !dbg !7100
  %6 = load i8, i8* %2, align 1, !dbg !7101
  %7 = xor i8 %5, -1, !dbg !7101
  %8 = and i8 %6, %7, !dbg !7101
  store i8 %8, i8* %2, align 1, !dbg !7101
  ret void, !dbg !7102
}

; Function Attrs: nounwind optsize
declare i32 @llvm.wasm.memory.grow.i32(i32, i32) #10

; Function Attrs: optsize
define internal fastcc i1 @runtime.looksLikePointer(i32 %ptr) unnamed_addr #2 section ".text.runtime.looksLikePointer" !dbg !7103 {
entry:
  call void @llvm.dbg.value(metadata i32 %ptr, metadata !7105, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 %ptr, metadata !7105, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 ptrtoint ([0 x i8]* @__heap_base to i32), metadata !7106, metadata !DIExpression()), !dbg !7110
  %.not = icmp ult i32 %ptr, ptrtoint ([0 x i8]* @__heap_base to i32), !dbg !7111
  br i1 %.not, label %binop.done, label %binop.rhs, !dbg !7112

binop.rhs:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %ptr, metadata !7105, metadata !DIExpression()), !dbg !7113
  %0 = load i8*, i8** getelementptr inbounds ({ i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }, { i8*, %runtime.__wasi_iovec_t, { [23 x i8]*, [4 x i8] }, { i32, [4 x i8], [11 x i8]*, [4 x i8] }, { [4 x i8], [0 x i8]*, [8 x i8], [1 x i8]*, [8 x i8], [2 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [3 x i8]*, [8 x i8], [4 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [5 x i8]*, [8 x i8], [6 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [7 x i8]*, [8 x i8], [8 x i8]*, [8 x i8], [9 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [10 x i8]*, [8 x i8], [11 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [12 x i8]*, [8 x i8], [13 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [14 x i8]*, [8 x i8], [15 x i8]*, [8 x i8], [16 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [17 x i8]*, [8 x i8], [18 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [19 x i8]*, [8 x i8], [20 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [21 x i8]*, [8 x i8], [22 x i8]*, [8 x i8], [23 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [24 x i8]*, [8 x i8], [25 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [26 x i8]*, [8 x i8], [27 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [28 x i8]*, [8 x i8], [29 x i8]*, [8 x i8], [30 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [31 x i8]*, [8 x i8], [32 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [33 x i8]*, [8 x i8], [34 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [35 x i8]*, [8 x i8], [36 x i8]*, [8 x i8], [37 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [38 x i8]*, [8 x i8], [39 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [40 x i8]*, [8 x i8], [41 x i8]*, [8 x i8], [42 x i8]*, [8 x i8], [42 x i8]*, [4 x i8] } }* @tinygo.trackedGlobals, i32 0, i32 0), align 4, !dbg !7114
  call void @llvm.dbg.value(metadata i8* %0, metadata !7107, metadata !DIExpression()), !dbg !7114
  %1 = ptrtoint i8* %0 to i32, !dbg !7115
  %2 = icmp ugt i32 %1, %ptr, !dbg !7116
  br label %binop.done, !dbg !7112

binop.done:                                       ; preds = %entry, %binop.rhs
  %3 = phi i1 [ false, %entry ], [ %2, %binop.rhs ], !dbg !7117
  ret i1 %3, !dbg !7118
}

; Function Attrs: optsize
declare i32 @wasm_import_wasi_unstable_fd_write(i32, %runtime.__wasi_iovec_t* nocapture dereferenceable_or_null(8), i32, i32* nocapture dereferenceable_or_null(4)) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind optsize willreturn
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i1 immarg) #5

; Function Attrs: optsize
declare i32 @wasm_import_fastly_http_body_write(i32* nocapture dereferenceable_or_null(4), i32* nocapture dereferenceable_or_null(4), i32* nocapture dereferenceable_or_null(4), i32* nocapture dereferenceable_or_null(4), i32* nocapture dereferenceable_or_null(4)) local_unnamed_addr #12

; Function Attrs: optsize
define internal fastcc void @"(*fmt.buffer).writeByte"({ i8*, i32, i32 }* nocapture dereferenceable_or_null(12) %b, i8 %c) unnamed_addr #2 section ".text.(*fmt.buffer).writeByte" !dbg !7119 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, align 8, !dbg !7125
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 3, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !7125
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7125
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7125
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7125
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7125
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7125
  %stackalloc.alloca = alloca [1 x i32], align 4, !dbg !7125
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i8 %c, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7123, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7123, metadata !DIExpression()), !dbg !7127
  %3 = icmp eq { i8*, i32, i32 }* %b, null, !dbg !7128
  br i1 %3, label %deref.throw, label %deref.next, !dbg !7128

deref.throw:                                      ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7128
  unreachable, !dbg !7128

deref.next:                                       ; preds = %entry
  %.elt = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 0, !dbg !7128
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !7128
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7128
  store i8* %.unpack, i8** %4, align 4, !dbg !7128
  %.elt1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 1, !dbg !7128
  %.unpack2 = load i32, i32* %.elt1, align 4, !dbg !7128
  %.elt3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 2, !dbg !7128
  %.unpack4 = load i32, i32* %.elt3, align 4, !dbg !7128
  call void @llvm.dbg.value(metadata i8 %c, metadata !7124, metadata !DIExpression()), !dbg !7129
  %.fca.0.gep = getelementptr inbounds [1 x i32], [1 x i32]* %stackalloc.alloca, i32 0, i32 0, !dbg !7130
  store i32 0, i32* %.fca.0.gep, align 4, !dbg !7130
  %stackalloc = bitcast [1 x i32]* %stackalloc.alloca to i8*, !dbg !7130
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7129
  store i8* %stackalloc, i8** %5, align 4, !dbg !7129
  store i8 %c, i8* %stackalloc, align 4, !dbg !7129
  %append.new = call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.unpack, i8* nonnull %stackalloc, i32 %.unpack2, i32 %.unpack4, i32 1), !dbg !7131
  %append.newPtr = extractvalue { i8*, i32, i32 } %append.new, 0, !dbg !7131
  %6 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !7132
  store i8* %append.newPtr, i8** %6, align 4, !dbg !7132
  store i8* %append.newPtr, i8** %.elt, align 4, !dbg !7132
  %append.new.elt6 = extractvalue { i8*, i32, i32 } %append.new, 1, !dbg !7132
  store i32 %append.new.elt6, i32* %.elt1, align 4, !dbg !7132
  %append.new.elt8 = extractvalue { i8*, i32, i32 } %append.new, 2, !dbg !7132
  store i32 %append.new.elt8, i32* %.elt3, align 4, !dbg !7132
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7133
  ret void, !dbg !7133
}

; Function Attrs: optsize
define internal fastcc void @"(*strconv.extFloat).Normalize"(%strconv.extFloat* nocapture dereferenceable_or_null(16) %f) unnamed_addr #2 section ".text.(*strconv.extFloat).Normalize" !dbg !7134 {
entry:
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !7136, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !7136, metadata !DIExpression()), !dbg !7141
  %0 = icmp eq %strconv.extFloat* %f, null, !dbg !7142
  br i1 %0, label %gep.throw, label %gep.next, !dbg !7142

if.then:                                          ; preds = %gep.next
  ret void, !dbg !7143

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7142
  unreachable, !dbg !7142

gep.next:                                         ; preds = %entry
  %1 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %f, i32 0, i32 0, !dbg !7142
  %2 = load i64, i64* %1, align 8, !dbg !7142
  %3 = icmp eq i64 %2, 0, !dbg !7144
  br i1 %3, label %if.then, label %deref.next4, !dbg !7145

deref.next4:                                      ; preds = %gep.next
  call void @llvm.dbg.value(metadata %strconv.extFloat* %f, metadata !7136, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.value(metadata i64 %2, metadata !7147, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.value(metadata i64 %2, metadata !7147, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i64 %2, metadata !7153, metadata !DIExpression()), !dbg !7157
  %4 = icmp ugt i64 %2, 4294967295, !dbg !7159
  %5 = lshr i64 %2, 32, !dbg !7160
  %6 = select i1 %4, i64 %5, i64 %2, !dbg !7160
  %7 = select i1 %4, i32 32, i32 0, !dbg !7160
  call void @llvm.dbg.value(metadata i64 %6, metadata !7153, metadata !DIExpression()), !dbg !7161
  %8 = icmp ugt i64 %6, 65535, !dbg !7162
  %9 = lshr i64 %6, 16, !dbg !7160
  %10 = or i32 %7, 16, !dbg !7160
  %11 = select i1 %8, i64 %9, i64 %6, !dbg !7160
  %12 = select i1 %8, i32 %10, i32 %7, !dbg !7160
  call void @llvm.dbg.value(metadata i64 %11, metadata !7153, metadata !DIExpression()), !dbg !7163
  %13 = icmp ugt i64 %11, 255, !dbg !7164
  %14 = lshr i64 %11, 8, !dbg !7160
  %15 = select i1 %13, i64 %14, i64 %11, !dbg !7160
  call void @llvm.dbg.value(metadata i32 undef, metadata !7156, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.value(metadata i64 %15, metadata !7153, metadata !DIExpression()), !dbg !7166
  %16 = trunc i64 %15 to i32, !dbg !7160
  %17 = icmp ugt i32 %16, 255, !dbg !7167
  br i1 %17, label %lookup.throw.i.i, label %"math/bits.LeadingZeros64.exit", !dbg !7167

lookup.throw.i.i:                                 ; preds = %deref.next4
  tail call fastcc void @runtime.lookupPanic(), !dbg !7167
  unreachable, !dbg !7167

"math/bits.LeadingZeros64.exit":                  ; preds = %deref.next4
  %18 = or i32 %12, 8, !dbg !7160
  %19 = select i1 %13, i32 %18, i32 %12, !dbg !7160
  call void @llvm.dbg.value(metadata i32 %19, metadata !7156, metadata !DIExpression()), !dbg !7165
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* @"math/bits.len8tab", i32 0, i32 %16, !dbg !7167
  %21 = load i8, i8* %20, align 1, !dbg !7167
  %22 = zext i8 %21 to i32, !dbg !7168
  %.neg2.i = sub nuw nsw i32 64, %19, !dbg !7169
  %23 = sub nsw i32 %.neg2.i, %22, !dbg !7170
  call void @llvm.dbg.value(metadata i32 %23, metadata !7137, metadata !DIExpression()), !dbg !7171
  %24 = zext i32 %23 to i64, !dbg !7145
  %shift.overflow = icmp ugt i32 %23, 63, !dbg !7172
  %25 = shl i64 %2, %24, !dbg !7172
  %shift.result = select i1 %shift.overflow, i64 0, i64 %25, !dbg !7172
  store i64 %shift.result, i64* %1, align 8, !dbg !7173
  call void @llvm.dbg.value(metadata i64 %shift.result, metadata !7138, metadata !DIExpression()), !dbg !7173
  %26 = getelementptr inbounds %strconv.extFloat, %strconv.extFloat* %f, i32 0, i32 1, !dbg !7174
  %27 = load i32, i32* %26, align 4, !dbg !7174
  %28 = sub i32 %27, %23, !dbg !7175
  store i32 %28, i32* %26, align 4, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %28, metadata !7139, metadata !DIExpression()), !dbg !7174
  ret void, !dbg !7176
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.buffer).write"({ i8*, i32, i32 }* nocapture dereferenceable_or_null(12) %b, i8* nocapture readonly %p.data, i32 %p.len) unnamed_addr #2 section ".text.(*fmt.buffer).write" !dbg !7177 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8* }, align 8, !dbg !7183
  store { %runtime.stackChainObject*, i32, i8*, i8* } { %runtime.stackChainObject* null, i32 2, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, align 4, !dbg !7183
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7183
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7183
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7183
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7183
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7183
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7181, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.value(metadata i8* %p.data, metadata !7182, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7183
  call void @llvm.dbg.value(metadata i32 %p.len, metadata !7182, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7183
  call void @llvm.dbg.value(metadata i32 undef, metadata !7182, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !7183
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7181, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7181, metadata !DIExpression()), !dbg !7185
  %3 = icmp eq { i8*, i32, i32 }* %b, null, !dbg !7186
  br i1 %3, label %deref.throw, label %deref.next, !dbg !7186

deref.throw:                                      ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7186
  unreachable, !dbg !7186

deref.next:                                       ; preds = %entry
  %.elt = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 0, !dbg !7186
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !7186
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7186
  store i8* %.unpack, i8** %4, align 4, !dbg !7186
  %.elt1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 1, !dbg !7186
  %.unpack2 = load i32, i32* %.elt1, align 4, !dbg !7186
  %.elt3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 2, !dbg !7186
  %.unpack4 = load i32, i32* %.elt3, align 4, !dbg !7186
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7182, metadata !DIExpression()), !dbg !7187
  %append.new = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.unpack, i8* %p.data, i32 %.unpack2, i32 %.unpack4, i32 %p.len), !dbg !7188
  %append.newPtr = extractvalue { i8*, i32, i32 } %append.new, 0, !dbg !7188
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7189
  store i8* %append.newPtr, i8** %5, align 4, !dbg !7189
  store i8* %append.newPtr, i8** %.elt, align 4, !dbg !7189
  %append.new.elt6 = extractvalue { i8*, i32, i32 } %append.new, 1, !dbg !7189
  store i32 %append.new.elt6, i32* %.elt1, align 4, !dbg !7189
  %append.new.elt8 = extractvalue { i8*, i32, i32 } %append.new, 2, !dbg !7189
  store i32 %append.new.elt8, i32* %.elt3, align 4, !dbg !7189
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7190
  ret void, !dbg !7190
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* nocapture dereferenceable_or_null(12) %b, i8* nocapture readonly %s.data, i32 %s.len) unnamed_addr #2 section ".text.(*fmt.buffer).writeString" !dbg !7191 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8* }, align 8, !dbg !7197
  store { %runtime.stackChainObject*, i32, i8*, i8* } { %runtime.stackChainObject* null, i32 2, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, align 4, !dbg !7197
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7197
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7197
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7197
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7197
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7197
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7196, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7197
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7196, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7197
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7195, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata { i8*, i32, i32 }* %b, metadata !7195, metadata !DIExpression()), !dbg !7199
  %3 = icmp eq { i8*, i32, i32 }* %b, null, !dbg !7200
  br i1 %3, label %deref.throw, label %deref.next, !dbg !7200

deref.throw:                                      ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7200
  unreachable, !dbg !7200

deref.next:                                       ; preds = %entry
  %.elt = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 0, !dbg !7200
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !7200
  %4 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7200
  store i8* %.unpack, i8** %4, align 4, !dbg !7200
  %.elt1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 1, !dbg !7200
  %.unpack2 = load i32, i32* %.elt1, align 4, !dbg !7200
  %.elt3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %b, i32 0, i32 2, !dbg !7200
  %.unpack4 = load i32, i32* %.elt3, align 4, !dbg !7200
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7196, metadata !DIExpression()), !dbg !7201
  %append.new = tail call fastcc { i8*, i32, i32 } @runtime.sliceAppend(i8* %.unpack, i8* %s.data, i32 %.unpack2, i32 %.unpack4, i32 %s.len), !dbg !7202
  %append.newPtr = extractvalue { i8*, i32, i32 } %append.new, 0, !dbg !7202
  %5 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7203
  store i8* %append.newPtr, i8** %5, align 4, !dbg !7203
  store i8* %append.newPtr, i8** %.elt, align 4, !dbg !7203
  %append.new.elt6 = extractvalue { i8*, i32, i32 } %append.new, 1, !dbg !7203
  store i32 %append.new.elt6, i32* %.elt1, align 4, !dbg !7203
  %append.new.elt8 = extractvalue { i8*, i32, i32 } %append.new, 2, !dbg !7203
  store i32 %append.new.elt8, i32* %.elt3, align 4, !dbg !7203
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7204
  ret void, !dbg !7204
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.fmt).fmtInteger"(%fmt.fmt* dereferenceable_or_null(92) %f, i64 %u, i32 %base, i1 %isSigned, i8* nocapture readonly %digits.data) unnamed_addr #2 section ".text.(*fmt.fmt).fmtInteger" !dbg !7205 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8* }, align 8, !dbg !7224
  store { %runtime.stackChainObject*, i32, i8*, i8* } { %runtime.stackChainObject* null, i32 2, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, align 4, !dbg !7224
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7224
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7224
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7224
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7224
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7224
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i64 %u, metadata !7210, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 %base, metadata !7211, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i1 %isSigned, metadata !7212, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i32 118, metadata !7213, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8* %digits.data, metadata !7214, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7224
  call void @llvm.dbg.value(metadata i32 17, metadata !7214, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7224
  %3 = icmp slt i64 %u, 0
  %spec.select = and i1 %3, %isSigned, !dbg !7225
  call void @llvm.dbg.value(metadata i1 %spec.select, metadata !7215, metadata !DIExpression()), !dbg !7226
  %4 = sub i64 0, %u, !dbg !7225
  %5 = select i1 %spec.select, i64 %4, i64 %u, !dbg !7225
  %6 = icmp eq %fmt.fmt* %f, null, !dbg !7227
  br i1 %6, label %gep.throw, label %gep.next, !dbg !7227

if.done3:                                         ; preds = %gep.next234, %slice.next52, %gep.next44
  %7 = phi { i8*, i32, i32 } [ %53, %gep.next234 ], [ %53, %gep.next44 ], [ %66, %slice.next52 ], !dbg !7228
  %8 = extractvalue { i8*, i32, i32 } %7, 0, !dbg !7229
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7229
  store i8* %8, i8** %9, align 4, !dbg !7229
  call void @llvm.dbg.value(metadata i32 0, metadata !7218, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7230
  %10 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 1, !dbg !7231
  %11 = load i1, i1* %10, align 1, !dbg !7231
  br i1 %11, label %gep.next60, label %gep.next206, !dbg !7225

if.done6:                                         ; preds = %gep.next228, %if.then36, %deref.next214, %gep.next206, %gep.next60
  %12 = phi i32 [ %68, %gep.next60 ], [ 0, %gep.next206 ], [ 0, %deref.next214 ], [ %126, %gep.next228 ], [ %50, %if.then36 ], !dbg !7229
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7232
  %len83 = extractvalue { i8*, i32, i32 } %7, 1, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %len83, metadata !7221, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata i32 %base, metadata !7211, metadata !DIExpression()), !dbg !7235
  %13 = add i32 %base, -2, !dbg !7225
  %14 = lshr i32 %13, 1, !dbg !7225
  %15 = shl i32 %13, 31, !dbg !7225
  %16 = or i32 %14, %15, !dbg !7225
  switch i32 %16, label %switch.next32 [
    i32 4, label %for.loop
    i32 7, label %for.loop24
    i32 3, label %for.loop27
    i32 0, label %for.loop30
  ], !dbg !7225

for.loop:                                         ; preds = %if.done6, %lookup.next
  %17 = phi i64 [ %21, %lookup.next ], [ %5, %if.done6 ], !dbg !7236
  %18 = phi i32 [ %20, %lookup.next ], [ %len83, %if.done6 ], !dbg !7234
  call void @llvm.dbg.value(metadata i64 %17, metadata !7210, metadata !DIExpression()), !dbg !7237
  %19 = icmp ugt i64 %17, 9, !dbg !7238
  br i1 %19, label %for.body, label %switch.done, !dbg !7225

for.body:                                         ; preds = %for.loop
  %20 = add i32 %18, -1, !dbg !7239
  call void @llvm.dbg.value(metadata i32 %20, metadata !7221, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i64 %17, metadata !7210, metadata !DIExpression()), !dbg !7240
  %21 = udiv i64 %17, 10, !dbg !7241
  call void @llvm.dbg.value(metadata i64 %21, metadata !7222, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i32 %20, metadata !7221, metadata !DIExpression()), !dbg !7244
  %.not15 = icmp ult i32 %20, %len83, !dbg !7245
  br i1 %.not15, label %lookup.next, label %lookup.throw, !dbg !7245

switch.done:                                      ; preds = %for.loop30, %for.loop27, %for.loop24, %for.loop
  %22 = phi i64 [ %17, %for.loop ], [ %38, %for.loop24 ], [ %42, %for.loop27 ], [ %46, %for.loop30 ], !dbg !7236
  %23 = phi i32 [ %18, %for.loop ], [ %39, %for.loop24 ], [ %43, %for.loop27 ], [ %47, %for.loop30 ], !dbg !7234
  %24 = add i32 %23, -1, !dbg !7246
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.value(metadata i32 %24, metadata !7221, metadata !DIExpression()), !dbg !7248
  %.not = icmp ult i32 %24, %len83, !dbg !7249
  br i1 %.not, label %lookup.next90, label %lookup.throw86, !dbg !7249

for.loop7:                                        ; preds = %lookup.next95, %lookup.next90
  %25 = phi i8 [ %82, %lookup.next90 ], [ 48, %lookup.next95 ]
  %26 = phi i32 [ %24, %lookup.next90 ], [ %30, %lookup.next95 ], !dbg !7234
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  %27 = icmp sgt i32 %26, 0, !dbg !7251
  %28 = sub i32 %len83, %26
  %29 = icmp sgt i32 %12, %28
  %or.cond238 = and i1 %27, %29, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %12, metadata !7218, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7253
  br i1 %or.cond238, label %for.body9, label %gep.next99, !dbg !7225

for.body9:                                        ; preds = %for.loop7
  %30 = add nsw i32 %26, -1, !dbg !7254
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i32 %30, metadata !7221, metadata !DIExpression()), !dbg !7256
  %.not11 = icmp ult i32 %30, %len83, !dbg !7257
  br i1 %.not11, label %lookup.next95, label %lookup.throw94, !dbg !7257

if.then10:                                        ; preds = %gep.next99
  call void @llvm.dbg.value(metadata i32 %base, metadata !7211, metadata !DIExpression()), !dbg !7258
  switch i32 %base, label %if.done17 [
    i32 2, label %switch.body
    i32 8, label %switch.body11
    i32 16, label %switch.body14
  ], !dbg !7225

switch.body:                                      ; preds = %if.then10
  %31 = add i32 %26, -1, !dbg !7259
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata i32 %31, metadata !7221, metadata !DIExpression()), !dbg !7261
  %.not9 = icmp ult i32 %31, %len83, !dbg !7262
  br i1 %.not9, label %lookup.next105, label %lookup.throw104, !dbg !7262

switch.body11:                                    ; preds = %if.then10
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7264
  %.not6 = icmp ugt i32 %len83, %26, !dbg !7265
  br i1 %.not6, label %lookup.next113, label %lookup.throw112, !dbg !7265

if.then12:                                        ; preds = %lookup.next113
  %32 = add i32 %26, -1, !dbg !7266
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %32, metadata !7221, metadata !DIExpression()), !dbg !7268
  %.not8 = icmp ult i32 %32, %len83, !dbg !7269
  br i1 %.not8, label %lookup.next117, label %lookup.throw116, !dbg !7269

switch.body14:                                    ; preds = %if.then10
  %33 = add i32 %26, -1, !dbg !7270
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i32 %33, metadata !7221, metadata !DIExpression()), !dbg !7272
  %.not4 = icmp ult i32 %33, %len83, !dbg !7273
  br i1 %.not4, label %lookup.next124, label %lookup.throw120, !dbg !7273

if.done17:                                        ; preds = %gep.next99, %lookup.next109, %lookup.next117, %lookup.next128, %if.then10, %lookup.next113
  %34 = phi i32 [ %26, %gep.next99 ], [ %87, %lookup.next109 ], [ %26, %lookup.next113 ], [ %93, %lookup.next128 ], [ %32, %lookup.next117 ], [ %26, %if.then10 ], !dbg !7234
  call void @llvm.dbg.value(metadata i32 118, metadata !7213, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i1 %spec.select, metadata !7215, metadata !DIExpression()), !dbg !7275
  br i1 %spec.select, label %if.then18, label %gep.next169, !dbg !7225

if.then18:                                        ; preds = %if.done17
  %35 = add i32 %34, -1, !dbg !7276
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 %35, metadata !7221, metadata !DIExpression()), !dbg !7278
  %.not3 = icmp ult i32 %35, %len83, !dbg !7279
  br i1 %.not3, label %gep.next144.sink.split, label %lookup.throw139, !dbg !7279

if.then20:                                        ; preds = %gep.next169
  %36 = add i32 %34, -1, !dbg !7280
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.value(metadata i32 %36, metadata !7221, metadata !DIExpression()), !dbg !7282
  %.not2 = icmp ult i32 %36, %len83, !dbg !7283
  br i1 %.not2, label %gep.next144.sink.split, label %lookup.throw174, !dbg !7283

if.then22:                                        ; preds = %gep.next179
  %37 = add i32 %34, -1, !dbg !7284
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata i32 %37, metadata !7221, metadata !DIExpression()), !dbg !7286
  %.not1 = icmp ult i32 %37, %len83, !dbg !7287
  br i1 %.not1, label %gep.next144.sink.split, label %lookup.throw184, !dbg !7287

for.loop24:                                       ; preds = %if.done6, %lookup.next192
  %38 = phi i64 [ %111, %lookup.next192 ], [ %5, %if.done6 ], !dbg !7236
  %39 = phi i32 [ %41, %lookup.next192 ], [ %len83, %if.done6 ], !dbg !7234
  call void @llvm.dbg.value(metadata i64 %38, metadata !7210, metadata !DIExpression()), !dbg !7288
  %40 = icmp ugt i64 %38, 15, !dbg !7289
  br i1 %40, label %for.body25, label %switch.done, !dbg !7225

for.body25:                                       ; preds = %for.loop24
  %41 = add i32 %39, -1, !dbg !7290
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 %41, metadata !7221, metadata !DIExpression()), !dbg !7292
  %.not14 = icmp ult i32 %41, %len83, !dbg !7293
  br i1 %.not14, label %lookup.next192, label %lookup.throw188, !dbg !7293

for.loop27:                                       ; preds = %if.done6, %lookup.next196
  %42 = phi i64 [ %116, %lookup.next196 ], [ %5, %if.done6 ], !dbg !7236
  %43 = phi i32 [ %45, %lookup.next196 ], [ %len83, %if.done6 ], !dbg !7234
  call void @llvm.dbg.value(metadata i64 %42, metadata !7210, metadata !DIExpression()), !dbg !7294
  %44 = icmp ugt i64 %42, 7, !dbg !7295
  br i1 %44, label %for.body28, label %switch.done, !dbg !7225

for.body28:                                       ; preds = %for.loop27
  %45 = add i32 %43, -1, !dbg !7296
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.value(metadata i32 %45, metadata !7221, metadata !DIExpression()), !dbg !7298
  %.not13 = icmp ult i32 %45, %len83, !dbg !7299
  br i1 %.not13, label %lookup.next196, label %lookup.throw195, !dbg !7299

for.loop30:                                       ; preds = %if.done6, %lookup.next201
  %46 = phi i64 [ %121, %lookup.next201 ], [ %5, %if.done6 ], !dbg !7236
  %47 = phi i32 [ %49, %lookup.next201 ], [ %len83, %if.done6 ], !dbg !7234
  call void @llvm.dbg.value(metadata i64 %46, metadata !7210, metadata !DIExpression()), !dbg !7300
  %48 = icmp ugt i64 %46, 1, !dbg !7301
  br i1 %48, label %for.body31, label %switch.done, !dbg !7225

for.body31:                                       ; preds = %for.loop30
  %49 = add i32 %47, -1, !dbg !7302
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %49, metadata !7221, metadata !DIExpression()), !dbg !7304
  %.not12 = icmp ult i32 %49, %len83, !dbg !7305
  br i1 %.not12, label %lookup.next201, label %lookup.throw200, !dbg !7305

switch.next32:                                    ; preds = %if.done6
  tail call fastcc void @runtime._panic(i32 34, i8* bitcast ({ %runtime._string }* @"(*fmt.fmt).fmtInteger$pack" to i8*)), !dbg !7306
  unreachable, !dbg !7306

if.then36:                                        ; preds = %gep.next228, %gep.next222, %gep.next216
  %50 = add i32 %126, -1, !dbg !7307
  call void @llvm.dbg.value(metadata i32 %50, metadata !7218, metadata !DIExpression()), !dbg !7307
  br label %if.done6, !dbg !7225

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7227
  unreachable, !dbg !7227

gep.next:                                         ; preds = %entry
  %slice.ptr = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 4, i32 0, !dbg !7308
  %51 = insertvalue { i8*, i32, i32 } undef, i8* %slice.ptr, 0, !dbg !7308
  %52 = insertvalue { i8*, i32, i32 } %51, i32 68, 1, !dbg !7308
  %53 = insertvalue { i8*, i32, i32 } %52, i32 68, 2, !dbg !7308
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %53, metadata !7216, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7309
  %54 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 0, !dbg !7310
  %55 = load i1, i1* %54, align 1, !dbg !7310
  br i1 %55, label %gep.next44, label %gep.next234, !dbg !7225

gep.next44:                                       ; preds = %gep.next, %gep.next234
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7311
  %56 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 2, !dbg !7312
  %57 = load i32, i32* %56, align 4, !dbg !7312
  %58 = add i32 %57, 3, !dbg !7313
  %59 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 3, !dbg !7314
  %60 = load i32, i32* %59, align 4, !dbg !7314
  %61 = add i32 %58, %60, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %61, metadata !7217, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %53, metadata !7216, metadata !DIExpression()), !dbg !7317
  %62 = icmp sgt i32 %61, 68, !dbg !7318
  br i1 %62, label %slice.next52, label %if.done3, !dbg !7225

slice.next52:                                     ; preds = %gep.next44
  call void @llvm.dbg.value(metadata i32 %61, metadata !7217, metadata !DIExpression()), !dbg !7319
  %makeslice.buf = tail call fastcc i8* @runtime.alloc(i32 %61), !dbg !7320
  %63 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7320
  store i8* %makeslice.buf, i8** %63, align 4, !dbg !7320
  %64 = insertvalue { i8*, i32, i32 } undef, i8* %makeslice.buf, 0, !dbg !7320
  %65 = insertvalue { i8*, i32, i32 } %64, i32 %61, 1, !dbg !7320
  %66 = insertvalue { i8*, i32, i32 } %65, i32 %61, 2, !dbg !7320
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %66, metadata !7216, metadata !DIExpression()), !dbg !7321
  br label %if.done3, !dbg !7225

gep.next60:                                       ; preds = %if.done3
  %67 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 3, !dbg !7322
  %68 = load i32, i32* %67, align 4, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %68, metadata !7218, metadata !DIExpression()), !dbg !7323
  %69 = icmp eq i32 %68, 0, !dbg !7324
  %70 = icmp eq i64 %5, 0
  %or.cond = and i1 %70, %69, !dbg !7225
  call void @llvm.dbg.value(metadata i64 %5, metadata !7210, metadata !DIExpression()), !dbg !7325
  br i1 %or.cond, label %gep.next66, label %if.done6, !dbg !7225

gep.next66:                                       ; preds = %gep.next60
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7326
  %71 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 6, !dbg !7327
  %72 = load i1, i1* %71, align 1, !dbg !7327
  call void @llvm.dbg.value(metadata i1 %72, metadata !7219, metadata !DIExpression()), !dbg !7328
  store i1 false, i1* %71, align 1, !dbg !7329
  call void @llvm.dbg.value(metadata i1 false, metadata !7220, metadata !DIExpression()), !dbg !7329
  %73 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 2, !dbg !7330
  %74 = load i32, i32* %73, align 4, !dbg !7330
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %f, i32 %74), !dbg !7331
  store i1 %72, i1* %71, align 1, !dbg !7332
  call void @llvm.dbg.value(metadata i1 %72, metadata !7220, metadata !DIExpression()), !dbg !7332
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7333
  ret void, !dbg !7333

lookup.throw:                                     ; preds = %for.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !7245
  unreachable, !dbg !7245

lookup.next:                                      ; preds = %for.body
  %75 = getelementptr inbounds i8, i8* %8, i32 %20, !dbg !7245
  call void @llvm.dbg.value(metadata i64 %17, metadata !7210, metadata !DIExpression()), !dbg !7334
  %76 = add i64 %17, 48, !dbg !7335
  call void @llvm.dbg.value(metadata i64 %21, metadata !7222, metadata !DIExpression()), !dbg !7336
  %.neg = mul i64 %21, -10, !dbg !7337
  %77 = add i64 %76, %.neg, !dbg !7338
  %78 = trunc i64 %77 to i8, !dbg !7339
  store i8 %78, i8* %75, align 1, !dbg !7245
  call void @llvm.dbg.value(metadata i64 %21, metadata !7210, metadata !DIExpression()), !dbg !7340
  br label %for.loop, !dbg !7225

lookup.throw86:                                   ; preds = %switch.done
  tail call fastcc void @runtime.lookupPanic(), !dbg !7249
  unreachable, !dbg !7249

lookup.next90:                                    ; preds = %switch.done
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7214, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i64 %22, metadata !7210, metadata !DIExpression()), !dbg !7342
  %79 = getelementptr inbounds i8, i8* %8, i32 %24, !dbg !7249
  %80 = trunc i64 %22 to i32, !dbg !7343
  %81 = getelementptr inbounds i8, i8* %digits.data, i32 %80, !dbg !7343
  %82 = load i8, i8* %81, align 1, !dbg !7343
  store i8 %82, i8* %79, align 1, !dbg !7249
  br label %for.loop7, !dbg !7225

lookup.throw94:                                   ; preds = %for.body9
  tail call fastcc void @runtime.lookupPanic(), !dbg !7257
  unreachable, !dbg !7257

lookup.next95:                                    ; preds = %for.body9
  %83 = getelementptr inbounds i8, i8* %8, i32 %30, !dbg !7257
  store i8 48, i8* %83, align 1, !dbg !7257
  br label %for.loop7, !dbg !7225

gep.next99:                                       ; preds = %for.loop7
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata i32 %26, metadata !7221, metadata !DIExpression()), !dbg !7250
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7344
  %84 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 4, !dbg !7345
  %85 = load i1, i1* %84, align 1, !dbg !7345
  br i1 %85, label %if.then10, label %if.done17, !dbg !7225

lookup.throw104:                                  ; preds = %switch.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !7262
  unreachable, !dbg !7262

lookup.next105:                                   ; preds = %switch.body
  %86 = getelementptr inbounds i8, i8* %8, i32 %31, !dbg !7262
  store i8 98, i8* %86, align 1, !dbg !7262
  %87 = add i32 %26, -2, !dbg !7346
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %87, metadata !7221, metadata !DIExpression()), !dbg !7348
  %.not10 = icmp ult i32 %87, %len83, !dbg !7349
  br i1 %.not10, label %lookup.next109, label %lookup.throw108, !dbg !7349

lookup.throw108:                                  ; preds = %lookup.next105
  tail call fastcc void @runtime.lookupPanic(), !dbg !7349
  unreachable, !dbg !7349

lookup.next109:                                   ; preds = %lookup.next105
  %88 = getelementptr inbounds i8, i8* %8, i32 %87, !dbg !7349
  store i8 48, i8* %88, align 1, !dbg !7349
  br label %if.done17, !dbg !7225

lookup.throw112:                                  ; preds = %switch.body11
  tail call fastcc void @runtime.lookupPanic(), !dbg !7265
  unreachable, !dbg !7265

lookup.next113:                                   ; preds = %switch.body11
  %.not7 = icmp eq i8 %25, 48, !dbg !7350
  br i1 %.not7, label %if.done17, label %if.then12, !dbg !7225

lookup.throw116:                                  ; preds = %if.then12
  tail call fastcc void @runtime.lookupPanic(), !dbg !7269
  unreachable, !dbg !7269

lookup.next117:                                   ; preds = %if.then12
  %89 = getelementptr inbounds i8, i8* %8, i32 %32, !dbg !7269
  store i8 48, i8* %89, align 1, !dbg !7269
  br label %if.done17, !dbg !7225

lookup.throw120:                                  ; preds = %switch.body14
  tail call fastcc void @runtime.lookupPanic(), !dbg !7273
  unreachable, !dbg !7273

lookup.next124:                                   ; preds = %switch.body14
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7214, metadata !DIExpression()), !dbg !7351
  %90 = getelementptr inbounds i8, i8* %8, i32 %33, !dbg !7273
  %91 = getelementptr inbounds i8, i8* %digits.data, i32 16, !dbg !7352
  %92 = load i8, i8* %91, align 1, !dbg !7352
  store i8 %92, i8* %90, align 1, !dbg !7273
  %93 = add i32 %26, -2, !dbg !7353
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 %93, metadata !7221, metadata !DIExpression()), !dbg !7355
  %.not5 = icmp ult i32 %93, %len83, !dbg !7356
  br i1 %.not5, label %lookup.next128, label %lookup.throw127, !dbg !7356

lookup.throw127:                                  ; preds = %lookup.next124
  tail call fastcc void @runtime.lookupPanic(), !dbg !7356
  unreachable, !dbg !7356

lookup.next128:                                   ; preds = %lookup.next124
  %94 = getelementptr inbounds i8, i8* %8, i32 %93, !dbg !7356
  store i8 48, i8* %94, align 1, !dbg !7356
  br label %if.done17, !dbg !7225

lookup.throw139:                                  ; preds = %if.then18
  tail call fastcc void @runtime.lookupPanic(), !dbg !7279
  unreachable, !dbg !7279

gep.next144.sink.split:                           ; preds = %if.then18, %if.then22, %if.then20
  %.sink101 = phi i32 [ %36, %if.then20 ], [ %37, %if.then22 ], [ %35, %if.then18 ]
  %.sink = phi i8 [ 43, %if.then20 ], [ 32, %if.then22 ], [ 45, %if.then18 ]
  %95 = getelementptr inbounds i8, i8* %8, i32 %.sink101, !dbg !7225
  store i8 %.sink, i8* %95, align 1, !dbg !7225
  br label %gep.next144, !dbg !7357

gep.next144:                                      ; preds = %gep.next144.sink.split, %gep.next179
  %96 = phi i32 [ %34, %gep.next179 ], [ %.sink101, %gep.next144.sink.split ], !dbg !7234
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7358
  %97 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 6, !dbg !7357
  %98 = load i1, i1* %97, align 1, !dbg !7357
  call void @llvm.dbg.value(metadata i1 %98, metadata !7223, metadata !DIExpression()), !dbg !7359
  store i1 false, i1* %97, align 1, !dbg !7360
  call void @llvm.dbg.value(metadata i1 false, metadata !7220, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7216, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i32 %96, metadata !7221, metadata !DIExpression()), !dbg !7362
  %99 = extractvalue { i8*, i32, i32 } %7, 2, !dbg !7363
  %slice.lowhigh153 = icmp ult i32 %len83, %96, !dbg !7363
  %slice.highmax154 = icmp ugt i32 %len83, %99, !dbg !7363
  %slice.lowmax156 = or i1 %slice.highmax154, %slice.lowhigh153, !dbg !7363
  br i1 %slice.lowmax156, label %slice.throw158, label %slice.next159, !dbg !7363

slice.throw158:                                   ; preds = %gep.next144
  tail call fastcc void @runtime.slicePanic(), !dbg !7363
  unreachable, !dbg !7363

slice.next159:                                    ; preds = %gep.next144
  %100 = getelementptr inbounds i8, i8* %8, i32 %96, !dbg !7363
  %101 = sub i32 %len83, %96, !dbg !7363
  tail call fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nonnull %f, i8* %100, i32 %101), !dbg !7364
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.value(metadata i1 %98, metadata !7223, metadata !DIExpression()), !dbg !7366
  store i1 %98, i1* %97, align 1, !dbg !7367
  call void @llvm.dbg.value(metadata i1 %98, metadata !7220, metadata !DIExpression()), !dbg !7367
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7225
  ret void, !dbg !7225

gep.next169:                                      ; preds = %if.done17
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7368
  %102 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 3, !dbg !7369
  %103 = load i1, i1* %102, align 1, !dbg !7369
  br i1 %103, label %if.then20, label %gep.next179, !dbg !7225

lookup.throw174:                                  ; preds = %if.then20
  tail call fastcc void @runtime.lookupPanic(), !dbg !7283
  unreachable, !dbg !7283

gep.next179:                                      ; preds = %gep.next169
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7370
  %104 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 5, !dbg !7371
  %105 = load i1, i1* %104, align 1, !dbg !7371
  br i1 %105, label %if.then22, label %gep.next144, !dbg !7225

lookup.throw184:                                  ; preds = %if.then22
  tail call fastcc void @runtime.lookupPanic(), !dbg !7287
  unreachable, !dbg !7287

lookup.throw188:                                  ; preds = %for.body25
  tail call fastcc void @runtime.lookupPanic(), !dbg !7293
  unreachable, !dbg !7293

lookup.next192:                                   ; preds = %for.body25
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7214, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i64 %38, metadata !7210, metadata !DIExpression()), !dbg !7373
  %106 = getelementptr inbounds i8, i8* %8, i32 %41, !dbg !7293
  %107 = trunc i64 %38 to i32, !dbg !7374
  %108 = and i32 %107, 15, !dbg !7374
  %109 = getelementptr inbounds i8, i8* %digits.data, i32 %108, !dbg !7374
  %110 = load i8, i8* %109, align 1, !dbg !7374
  store i8 %110, i8* %106, align 1, !dbg !7293
  %111 = lshr i64 %38, 4, !dbg !7375
  call void @llvm.dbg.value(metadata i64 %111, metadata !7210, metadata !DIExpression()), !dbg !7375
  br label %for.loop24, !dbg !7225

lookup.throw195:                                  ; preds = %for.body28
  tail call fastcc void @runtime.lookupPanic(), !dbg !7299
  unreachable, !dbg !7299

lookup.next196:                                   ; preds = %for.body28
  %112 = getelementptr inbounds i8, i8* %8, i32 %45, !dbg !7299
  call void @llvm.dbg.value(metadata i64 %42, metadata !7210, metadata !DIExpression()), !dbg !7376
  %113 = trunc i64 %42 to i8, !dbg !7377
  %114 = and i8 %113, 7, !dbg !7377
  %115 = or i8 %114, 48, !dbg !7377
  store i8 %115, i8* %112, align 1, !dbg !7299
  %116 = lshr i64 %42, 3, !dbg !7378
  call void @llvm.dbg.value(metadata i64 %116, metadata !7210, metadata !DIExpression()), !dbg !7378
  br label %for.loop27, !dbg !7225

lookup.throw200:                                  ; preds = %for.body31
  tail call fastcc void @runtime.lookupPanic(), !dbg !7305
  unreachable, !dbg !7305

lookup.next201:                                   ; preds = %for.body31
  %117 = getelementptr inbounds i8, i8* %8, i32 %49, !dbg !7305
  call void @llvm.dbg.value(metadata i64 %46, metadata !7210, metadata !DIExpression()), !dbg !7379
  %118 = trunc i64 %46 to i8, !dbg !7380
  %119 = and i8 %118, 1, !dbg !7380
  %120 = or i8 %119, 48, !dbg !7380
  store i8 %120, i8* %117, align 1, !dbg !7305
  %121 = lshr i64 %46, 1, !dbg !7381
  call void @llvm.dbg.value(metadata i64 %121, metadata !7210, metadata !DIExpression()), !dbg !7381
  br label %for.loop30, !dbg !7225

gep.next206:                                      ; preds = %if.done3
  %122 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 6, !dbg !7382
  %123 = load i1, i1* %122, align 1, !dbg !7382
  br i1 %123, label %deref.next214, label %if.done6, !dbg !7225

deref.next214:                                    ; preds = %gep.next206
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7383
  %124 = load i1, i1* %54, align 1, !dbg !7384
  br i1 %124, label %gep.next216, label %if.done6, !dbg !7225

gep.next216:                                      ; preds = %deref.next214
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7385
  %125 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 2, !dbg !7386
  %126 = load i32, i32* %125, align 4, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %126, metadata !7218, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i1 %spec.select, metadata !7215, metadata !DIExpression()), !dbg !7388
  br i1 %spec.select, label %if.then36, label %gep.next222, !dbg !7225

gep.next222:                                      ; preds = %gep.next216
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7389
  %127 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 3, !dbg !7390
  %128 = load i1, i1* %127, align 1, !dbg !7390
  br i1 %128, label %if.then36, label %gep.next228, !dbg !7225

gep.next228:                                      ; preds = %gep.next222
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7391
  %129 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 5, !dbg !7392
  %130 = load i1, i1* %129, align 1, !dbg !7392
  br i1 %130, label %if.then36, label %if.done6, !dbg !7225

gep.next234:                                      ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7209, metadata !DIExpression()), !dbg !7393
  %131 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 1, !dbg !7394
  %132 = load i1, i1* %131, align 1, !dbg !7394
  br i1 %132, label %gep.next44, label %if.done3, !dbg !7225
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.fmt).padString"(%fmt.fmt* nocapture readonly dereferenceable_or_null(92) %f, i8* nocapture readonly %s.data, i32 %s.len) unnamed_addr #2 section ".text.(*fmt.fmt).padString" !dbg !7395 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, align 8, !dbg !7400
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 4, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !7400
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7400
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7400
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7400
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7400
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7400
  %accept.i = alloca %"unicode/utf8.acceptRange", align 8, !dbg !7400
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7398, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7415
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7398, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7415
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7416
  %3 = icmp eq %fmt.fmt* %f, null, !dbg !7417
  br i1 %3, label %gep.throw, label %gep.next, !dbg !7417

if.done1:                                         ; preds = %if.then, %gep.next20
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7417
  ret void, !dbg !7417

if.then:                                          ; preds = %"unicode/utf8.RuneCountInString.exit"
  call void @llvm.dbg.value(metadata i32 %57, metadata !7399, metadata !DIExpression()), !dbg !7418
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %f, i32 %57), !dbg !7419
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7420
  %4 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7421
  %5 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %4, align 4, !dbg !7421
  %6 = bitcast { i8*, i32, i32 }* %5 to i8*, !dbg !7421
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7422
  store i8* %6, i8** %7, align 4, !dbg !7422
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7398, metadata !DIExpression()), !dbg !7422
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* %5, i8* %s.data, i32 %s.len), !dbg !7423
  br label %if.done1, !dbg !7417

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7417
  unreachable, !dbg !7417

gep.next:                                         ; preds = %entry
  %8 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 0, !dbg !7424
  %9 = load i1, i1* %8, align 1, !dbg !7424
  br i1 %9, label %gep.next6, label %gep.next28, !dbg !7417

gep.next6:                                        ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7425
  %10 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 2, !dbg !7426
  %11 = load i32, i32* %10, align 4, !dbg !7426
  %12 = icmp eq i32 %11, 0, !dbg !7427
  br i1 %12, label %gep.next28, label %deref.next12, !dbg !7417

deref.next12:                                     ; preds = %gep.next6
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7398, metadata !DIExpression()), !dbg !7429
  %13 = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept.i, i32 0, i32 0, !dbg !7400
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7400
  store i8* %13, i8** %14, align 4, !dbg !7400
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7403, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7403, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7400
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7403, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7404, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.value(metadata i32 0, metadata !7405, metadata !DIExpression()), !dbg !7432
  %.fca.1.gep.i = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept.i, i32 0, i32 1, !dbg !7433
  br label %for.loop.i, !dbg !7433

for.loop.i:                                       ; preds = %for.post.i, %deref.next12
  %15 = phi i32 [ 0, %deref.next12 ], [ %20, %for.post.i ], !dbg !7434
  %16 = phi i32 [ 0, %deref.next12 ], [ %19, %for.post.i ], !dbg !7432
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7404, metadata !DIExpression()), !dbg !7436
  %17 = icmp slt i32 %16, %s.len, !dbg !7437
  br i1 %17, label %for.body.i, label %"unicode/utf8.RuneCountInString.exit", !dbg !7433

for.body.i:                                       ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7403, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7439
  %.not.i = icmp ult i32 %16, %s.len, !dbg !7440
  br i1 %.not.i, label %lookup.next.i, label %lookup.throw.i, !dbg !7440

if.then.i:                                        ; preds = %lookup.next.i
  %18 = add nuw i32 %16, 1, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %18, metadata !7405, metadata !DIExpression()), !dbg !7441
  br label %for.post.i, !dbg !7433

for.post.i:                                       ; preds = %if.done6.i, %if.then3.i, %if.then1.i, %if.then.i
  %19 = phi i32 [ %18, %if.then.i ], [ %25, %if.then1.i ], [ %30, %if.then3.i ], [ %35, %if.done6.i ], !dbg !7432
  %20 = add i32 %15, 1, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %20, metadata !7407, metadata !DIExpression()), !dbg !7442
  br label %for.loop.i, !dbg !7433

if.done.i:                                        ; preds = %lookup.next.i
  call void @llvm.dbg.value(metadata i8 %43, metadata !7406, metadata !DIExpression()), !dbg !7443
  %21 = zext i8 %43 to i32, !dbg !7433
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* @"unicode/utf8.first", i32 0, i32 %21, !dbg !7444
  %23 = load i8, i8* %22, align 1, !dbg !7444
  call void @llvm.dbg.value(metadata i8 %23, metadata !7408, metadata !DIExpression()), !dbg !7445
  %24 = icmp eq i8 %23, -15, !dbg !7446
  br i1 %24, label %if.then1.i, label %if.done2.i, !dbg !7433

if.then1.i:                                       ; preds = %if.done.i
  %25 = add nuw i32 %16, 1, !dbg !7447
  call void @llvm.dbg.value(metadata i32 %25, metadata !7405, metadata !DIExpression()), !dbg !7447
  br label %for.post.i, !dbg !7433

if.done2.i:                                       ; preds = %if.done.i
  call void @llvm.dbg.value(metadata i8 %23, metadata !7408, metadata !DIExpression()), !dbg !7448
  %26 = and i8 %23, 7, !dbg !7449
  %27 = zext i8 %26 to i32, !dbg !7450
  call void @llvm.dbg.value(metadata i32 %27, metadata !7409, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i32 %27, metadata !7409, metadata !DIExpression()), !dbg !7453
  %28 = add i32 %16, %27, !dbg !7454
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7404, metadata !DIExpression()), !dbg !7455
  %29 = icmp sgt i32 %28, %s.len, !dbg !7456
  br i1 %29, label %if.then3.i, label %if.done4.i, !dbg !7433

if.then3.i:                                       ; preds = %if.done2.i
  %30 = add nuw i32 %16, 1, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %30, metadata !7405, metadata !DIExpression()), !dbg !7457
  br label %for.post.i, !dbg !7433

if.done4.i:                                       ; preds = %if.done2.i
  store i8 0, i8* %13, align 8, !dbg !7400
  store i8 0, i8* %.fca.1.gep.i, align 1, !dbg !7400
  call void @llvm.dbg.value(metadata i8 %23, metadata !7408, metadata !DIExpression()), !dbg !7458
  %31 = lshr i8 %23, 4, !dbg !7459
  %32 = zext i8 %31 to i32, !dbg !7433
  %.elt.i = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %32, i32 0, !dbg !7460
  %.unpack.i = load i8, i8* %.elt.i, align 2, !dbg !7460
  %.elt1.i = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %32, i32 1, !dbg !7460
  %.unpack2.i = load i8, i8* %.elt1.i, align 1, !dbg !7460
  store i8 %.unpack.i, i8* %13, align 8, !dbg !7461
  store i8 %.unpack2.i, i8* %.fca.1.gep.i, align 1, !dbg !7461
  call void @llvm.dbg.value(metadata %"unicode/utf8.acceptRange" undef, metadata !7410, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7403, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7463
  %33 = add nuw i32 %16, 1, !dbg !7464
  %.not3.i = icmp ult i32 %33, %s.len, !dbg !7465
  br i1 %.not3.i, label %lookup.next21.i, label %lookup.throw20.i, !dbg !7465

if.done6.i:                                       ; preds = %lookup.next31.i, %lookup.next28.i, %lookup.next21.i, %if.else10.i, %if.else.i
  %34 = phi i32 [ 2, %if.else.i ], [ 3, %if.else10.i ], [ 1, %lookup.next21.i ], [ 1, %lookup.next28.i ], [ %spec.select.i, %lookup.next31.i ], !dbg !7451
  call void @llvm.dbg.value(metadata i32 %34, metadata !7409, metadata !DIExpression()), !dbg !7466
  %35 = add i32 %34, %16, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %35, metadata !7405, metadata !DIExpression()), !dbg !7467
  br label %for.post.i, !dbg !7433

if.else.i:                                        ; preds = %lookup.next21.i
  call void @llvm.dbg.value(metadata i32 %27, metadata !7409, metadata !DIExpression()), !dbg !7468
  %36 = add nsw i32 %21, -194, !dbg !7469
  %37 = icmp ult i32 %36, 30, !dbg !7469
  br i1 %37, label %if.done6.i, label %if.else7.i, !dbg !7433

if.else7.i:                                       ; preds = %if.else.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7403, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7471
  %38 = add nuw i32 %16, 2, !dbg !7472
  %.not4.i = icmp ult i32 %38, %s.len, !dbg !7473
  br i1 %.not4.i, label %lookup.next28.i, label %lookup.throw27.i, !dbg !7473

if.else10.i:                                      ; preds = %lookup.next28.i
  call void @llvm.dbg.value(metadata i32 %27, metadata !7409, metadata !DIExpression()), !dbg !7474
  %39 = and i32 %21, 240, !dbg !7475
  %40 = icmp eq i32 %39, 224, !dbg !7475
  br i1 %40, label %if.done6.i, label %if.else11.i, !dbg !7433

if.else11.i:                                      ; preds = %if.else10.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7403, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.value(metadata i32 %16, metadata !7405, metadata !DIExpression()), !dbg !7477
  %41 = add nuw i32 %16, 3, !dbg !7478
  %.not5.i = icmp ult i32 %41, %s.len, !dbg !7479
  br i1 %.not5.i, label %lookup.next31.i, label %lookup.throw30.i, !dbg !7479

lookup.throw.i:                                   ; preds = %for.body.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7440
  unreachable, !dbg !7440

lookup.next.i:                                    ; preds = %for.body.i
  %42 = getelementptr inbounds i8, i8* %s.data, i32 %16, !dbg !7440
  %43 = load i8, i8* %42, align 1, !dbg !7440
  call void @llvm.dbg.value(metadata i8 %43, metadata !7406, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8 %43, metadata !7406, metadata !DIExpression()), !dbg !7481
  %44 = icmp sgt i8 %43, -1, !dbg !7482
  br i1 %44, label %if.then.i, label %if.done.i, !dbg !7433

lookup.throw20.i:                                 ; preds = %if.done4.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7465
  unreachable, !dbg !7465

lookup.next21.i:                                  ; preds = %if.done4.i
  %45 = getelementptr inbounds i8, i8* %s.data, i32 %33, !dbg !7465
  %46 = load i8, i8* %45, align 1, !dbg !7465
  call void @llvm.dbg.value(metadata i8 %46, metadata !7411, metadata !DIExpression()), !dbg !7483
  %47 = icmp ult i8 %46, %.unpack.i, !dbg !7484
  %48 = icmp ult i8 %.unpack2.i, %46
  %or.cond35.i = or i1 %47, %48, !dbg !7433
  call void @llvm.dbg.value(metadata i8 %46, metadata !7411, metadata !DIExpression()), !dbg !7485
  br i1 %or.cond35.i, label %if.done6.i, label %if.else.i, !dbg !7433

lookup.throw27.i:                                 ; preds = %if.else7.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7473
  unreachable, !dbg !7473

lookup.next28.i:                                  ; preds = %if.else7.i
  %49 = getelementptr inbounds i8, i8* %s.data, i32 %38, !dbg !7473
  %50 = load i8, i8* %49, align 1, !dbg !7473
  call void @llvm.dbg.value(metadata i8 %50, metadata !7412, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8 %50, metadata !7412, metadata !DIExpression()), !dbg !7487
  %51 = icmp sgt i8 %50, -1, !dbg !7488
  %52 = icmp ugt i8 %50, -65
  %or.cond.i = or i1 %51, %52, !dbg !7433
  call void @llvm.dbg.value(metadata i8 %50, metadata !7412, metadata !DIExpression()), !dbg !7489
  br i1 %or.cond.i, label %if.done6.i, label %if.else10.i, !dbg !7433

lookup.throw30.i:                                 ; preds = %if.else11.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7479
  unreachable, !dbg !7479

lookup.next31.i:                                  ; preds = %if.else11.i
  %53 = getelementptr inbounds i8, i8* %s.data, i32 %41, !dbg !7479
  %54 = load i8, i8* %53, align 1, !dbg !7479
  call void @llvm.dbg.value(metadata i8 %54, metadata !7413, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i8 %54, metadata !7413, metadata !DIExpression()), !dbg !7491
  %55 = icmp sgt i8 %54, -1, !dbg !7492
  %56 = icmp ugt i8 %54, -65
  %or.cond32.i = or i1 %55, %56, !dbg !7433
  call void @llvm.dbg.value(metadata i8 %54, metadata !7413, metadata !DIExpression()), !dbg !7493
  %spec.select.i = select i1 %or.cond32.i, i32 1, i32 %27, !dbg !7433
  br label %if.done6.i, !dbg !7433

"unicode/utf8.RuneCountInString.exit":            ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %15, metadata !7407, metadata !DIExpression()), !dbg !7494
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13), !dbg !7495
  %57 = sub i32 %11, %15, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %57, metadata !7399, metadata !DIExpression()), !dbg !7497
  %58 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 2, !dbg !7498
  %59 = load i1, i1* %58, align 1, !dbg !7498
  br i1 %59, label %gep.next20, label %if.then, !dbg !7417

gep.next20:                                       ; preds = %"unicode/utf8.RuneCountInString.exit"
  %60 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7499
  %61 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %60, align 4, !dbg !7499
  %62 = bitcast { i8*, i32, i32 }* %61 to i8*, !dbg !7499
  %63 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !7500
  store i8* %62, i8** %63, align 4, !dbg !7500
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7398, metadata !DIExpression()), !dbg !7500
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* %61, i8* %s.data, i32 %s.len), !dbg !7501
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 %57, metadata !7399, metadata !DIExpression()), !dbg !7503
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %f, i32 %57), !dbg !7504
  br label %if.done1, !dbg !7417

gep.next28:                                       ; preds = %gep.next, %gep.next6
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7397, metadata !DIExpression()), !dbg !7505
  %64 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7506
  %65 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %64, align 4, !dbg !7506
  %66 = bitcast { i8*, i32, i32 }* %65 to i8*, !dbg !7506
  %67 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !7507
  store i8* %66, i8** %67, align 4, !dbg !7507
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7398, metadata !DIExpression()), !dbg !7507
  tail call fastcc void @"(*fmt.buffer).writeString"({ i8*, i32, i32 }* %65, i8* %s.data, i32 %s.len), !dbg !7508
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7509
  ret void, !dbg !7509
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nocapture readonly dereferenceable_or_null(92) %f, i32 %n) unnamed_addr #2 section ".text.(*fmt.fmt).writePadding" !dbg !7510 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !7522
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 7, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !7522
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7522
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7522
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7522
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7522
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7522
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7514, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i32 %n, metadata !7515, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i32 %n, metadata !7515, metadata !DIExpression()), !dbg !7523
  %3 = icmp slt i32 %n, 1, !dbg !7524
  br i1 %3, label %if.then, label %if.done, !dbg !7525

if.then:                                          ; preds = %entry
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7526
  ret void, !dbg !7526

if.done:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7514, metadata !DIExpression()), !dbg !7527
  %4 = icmp eq %fmt.fmt* %f, null, !dbg !7528
  br i1 %4, label %gep.throw, label %gep.next, !dbg !7528

if.then1:                                         ; preds = %deref.next6
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %24, metadata !7516, metadata !DIExpression()), !dbg !7529
  %5 = shl i32 %.unpack4, 1, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %n, metadata !7515, metadata !DIExpression()), !dbg !7531
  %6 = add i32 %5, %n, !dbg !7532
  %slice.maxcap = icmp slt i32 %6, 0, !dbg !7533
  br i1 %slice.maxcap, label %slice.throw, label %slice.next, !dbg !7533

if.done2:                                         ; preds = %deref.next13, %deref.next6
  %7 = phi { i8*, i32, i32 } [ %24, %deref.next6 ], [ %34, %deref.next13 ], !dbg !7534
  %8 = extractvalue { i8*, i32, i32 } %7, 0, !dbg !7535
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7535
  store i8* %8, i8** %9, align 4, !dbg !7535
  call void @llvm.dbg.value(metadata i8 32, metadata !7519, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7514, metadata !DIExpression()), !dbg !7536
  %10 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 6, !dbg !7537
  %11 = load i1, i1* %10, align 1, !dbg !7537
  %12 = select i1 %11, i8 48, i8 32, !dbg !7525
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7516, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %25, metadata !7518, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %.unpack2, metadata !7517, metadata !DIExpression()), !dbg !7540
  %13 = extractvalue { i8*, i32, i32 } %7, 2, !dbg !7541
  %slice.lowhigh20 = icmp ugt i32 %.unpack2, %25, !dbg !7541
  %slice.highmax21 = icmp ugt i32 %25, %13, !dbg !7541
  %slice.lowmax23 = or i1 %slice.lowhigh20, %slice.highmax21, !dbg !7541
  br i1 %slice.lowmax23, label %slice.throw25, label %slice.next26, !dbg !7541

rangeindex.loop:                                  ; preds = %lookup.next, %slice.next26
  %14 = phi i32 [ -1, %slice.next26 ], [ %15, %lookup.next ], !dbg !7525
  %15 = add nsw i32 %14, 1, !dbg !7525
  %exitcond.not = icmp eq i32 %14, %38, !dbg !7525
  br i1 %exitcond.not, label %deref.next31, label %rangeindex.body, !dbg !7525

rangeindex.body:                                  ; preds = %rangeindex.loop
  call void @llvm.dbg.value(metadata i32 %15, metadata !7521, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7520, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i32 %15, metadata !7521, metadata !DIExpression()), !dbg !7544
  %exitcond16.not = icmp eq i32 %14, %39, !dbg !7545
  br i1 %exitcond16.not, label %lookup.throw, label %lookup.next, !dbg !7545

gep.throw:                                        ; preds = %if.done
  tail call fastcc void @runtime.nilPanic(), !dbg !7528
  unreachable, !dbg !7528

gep.next:                                         ; preds = %if.done
  %16 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7528
  %17 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %16, align 4, !dbg !7528
  %18 = bitcast { i8*, i32, i32 }* %17 to i8*, !dbg !7528
  %19 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7546
  store i8* %18, i8** %19, align 4, !dbg !7546
  %20 = icmp eq { i8*, i32, i32 }* %17, null, !dbg !7546
  br i1 %20, label %deref.throw5, label %deref.next6, !dbg !7546

deref.throw5:                                     ; preds = %gep.next
  tail call fastcc void @runtime.nilPanic(), !dbg !7546
  unreachable, !dbg !7546

deref.next6:                                      ; preds = %gep.next
  %.elt = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %17, i32 0, i32 0, !dbg !7546
  %.unpack = load i8*, i8** %.elt, align 4, !dbg !7546
  %21 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !7546
  store i8* %.unpack, i8** %21, align 4, !dbg !7546
  %22 = insertvalue { i8*, i32, i32 } undef, i8* %.unpack, 0, !dbg !7546
  %.elt1 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %17, i32 0, i32 1, !dbg !7546
  %.unpack2 = load i32, i32* %.elt1, align 4, !dbg !7546
  %23 = insertvalue { i8*, i32, i32 } %22, i32 %.unpack2, 1, !dbg !7546
  %.elt3 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %17, i32 0, i32 2, !dbg !7546
  %.unpack4 = load i32, i32* %.elt3, align 4, !dbg !7546
  %24 = insertvalue { i8*, i32, i32 } %23, i32 %.unpack4, 2, !dbg !7546
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %24, metadata !7516, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %24, metadata !7516, metadata !DIExpression()), !dbg !7547
  call void @llvm.dbg.value(metadata i32 %.unpack2, metadata !7517, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %.unpack2, metadata !7517, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %n, metadata !7515, metadata !DIExpression()), !dbg !7550
  %25 = add i32 %.unpack2, %n, !dbg !7551
  call void @llvm.dbg.value(metadata i32 %25, metadata !7518, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %25, metadata !7518, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %24, metadata !7516, metadata !DIExpression()), !dbg !7554
  %26 = icmp sgt i32 %25, %.unpack4, !dbg !7555
  br i1 %26, label %if.then1, label %if.done2, !dbg !7525

slice.throw:                                      ; preds = %if.then1
  tail call fastcc void @runtime.slicePanic(), !dbg !7533
  unreachable, !dbg !7533

slice.next:                                       ; preds = %if.then1
  %makeslice.buf = tail call fastcc i8* @runtime.alloc(i32 %6), !dbg !7533
  %27 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !7556
  store i8* %makeslice.buf, i8** %27, align 4, !dbg !7556
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7516, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7514, metadata !DIExpression()), !dbg !7557
  %28 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %16, align 4, !dbg !7558
  %29 = bitcast { i8*, i32, i32 }* %28 to i8*, !dbg !7558
  %30 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !7559
  store i8* %29, i8** %30, align 4, !dbg !7559
  %31 = icmp eq { i8*, i32, i32 }* %28, null, !dbg !7559
  br i1 %31, label %deref.throw12, label %deref.next13, !dbg !7559

deref.throw12:                                    ; preds = %slice.next
  tail call fastcc void @runtime.nilPanic(), !dbg !7559
  unreachable, !dbg !7559

deref.next13:                                     ; preds = %slice.next
  %32 = insertvalue { i8*, i32, i32 } undef, i8* %makeslice.buf, 0, !dbg !7533
  %33 = insertvalue { i8*, i32, i32 } %32, i32 %6, 1, !dbg !7533
  %34 = insertvalue { i8*, i32, i32 } %33, i32 %6, 2, !dbg !7533
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %34, metadata !7516, metadata !DIExpression()), !dbg !7556
  %.elt10 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %28, i32 0, i32 0, !dbg !7559
  %.unpack11 = load i8*, i8** %.elt10, align 4, !dbg !7559
  %35 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !7559
  store i8* %.unpack11, i8** %35, align 4, !dbg !7559
  %.elt12 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %28, i32 0, i32 1, !dbg !7559
  %.unpack13 = load i32, i32* %.elt12, align 4, !dbg !7559
  call void @llvm.dbg.value(metadata i8* %makeslice.buf, metadata !7560, metadata !DIExpression()) #15, !dbg !7570
  call void @llvm.dbg.value(metadata i8* %.unpack11, metadata !7565, metadata !DIExpression()) #15, !dbg !7570
  call void @llvm.dbg.value(metadata i32 1, metadata !7568, metadata !DIExpression()) #15, !dbg !7570
  call void @llvm.dbg.value(metadata i32 %.unpack13, metadata !7567, metadata !DIExpression()) #15, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %.unpack13, metadata !7569, metadata !DIExpression()) #15, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %6, metadata !7566, metadata !DIExpression()) #15, !dbg !7574
  %36 = icmp ugt i32 %.unpack13, %6, !dbg !7575
  %spec.select.i = select i1 %36, i32 %6, i32 %.unpack13, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %spec.select.i, metadata !7569, metadata !DIExpression()) #15, !dbg !7577
  tail call void @llvm.memmove.p0i8.p0i8.i32(i8* nonnull align 1 %makeslice.buf, i8* align 1 %.unpack11, i32 %spec.select.i, i1 false) #15, !dbg !7578
  br label %if.done2, !dbg !7525

slice.throw25:                                    ; preds = %if.done2
  tail call fastcc void @runtime.slicePanic(), !dbg !7541
  unreachable, !dbg !7541

slice.next26:                                     ; preds = %if.done2
  %37 = getelementptr inbounds i8, i8* %8, i32 %.unpack2, !dbg !7541
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7520, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7520, metadata !DIExpression()), !dbg !7580
  %38 = add nsw i32 %n, -1, !dbg !7525
  %39 = add nsw i32 %n, -1, !dbg !7525
  br label %rangeindex.loop, !dbg !7525

lookup.throw:                                     ; preds = %rangeindex.body
  tail call fastcc void @runtime.lookupPanic(), !dbg !7545
  unreachable, !dbg !7545

lookup.next:                                      ; preds = %rangeindex.body
  %40 = getelementptr inbounds i8, i8* %37, i32 %15, !dbg !7545
  call void @llvm.dbg.value(metadata i8 %12, metadata !7519, metadata !DIExpression()), !dbg !7581
  store i8 %12, i8* %40, align 1, !dbg !7545
  br label %rangeindex.loop, !dbg !7525

deref.next31:                                     ; preds = %rangeindex.loop
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7514, metadata !DIExpression()), !dbg !7582
  %41 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %16, align 4, !dbg !7583
  %42 = bitcast { i8*, i32, i32 }* %41 to i8*, !dbg !7583
  %43 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !7584
  store i8* %42, i8** %43, align 4, !dbg !7584
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } %7, metadata !7516, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %25, metadata !7518, metadata !DIExpression()), !dbg !7585
  %44 = icmp eq { i8*, i32, i32 }* %41, null, !dbg !7586
  br i1 %44, label %store.throw, label %store.next, !dbg !7586

store.throw:                                      ; preds = %deref.next31
  tail call fastcc void @runtime.nilPanic(), !dbg !7586
  unreachable, !dbg !7586

store.next:                                       ; preds = %deref.next31
  %.repack = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %41, i32 0, i32 0, !dbg !7586
  store i8* %8, i8** %.repack, align 4, !dbg !7586
  %.repack6 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %41, i32 0, i32 1, !dbg !7586
  store i32 %25, i32* %.repack6, align 4, !dbg !7586
  %.repack8 = getelementptr inbounds { i8*, i32, i32 }, { i8*, i32, i32 }* %41, i32 0, i32 2, !dbg !7586
  store i32 %13, i32* %.repack8, align 4, !dbg !7586
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7525
  ret void, !dbg !7525
}

; Function Attrs: optsize
define internal fastcc { i8*, i32 } @"(*fmt.fmt).truncateString"(%fmt.fmt* nocapture readonly dereferenceable_or_null(92) %f, i8* %s.data, i32 %s.len) unnamed_addr #2 section ".text.(*fmt.fmt).truncateString" !dbg !7587 {
entry:
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7589, metadata !DIExpression()), !dbg !7593
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7590, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7593
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7590, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7593
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7589, metadata !DIExpression()), !dbg !7594
  %0 = icmp eq %fmt.fmt* %f, null, !dbg !7595
  br i1 %0, label %gep.throw, label %gep.next, !dbg !7595

rangeiter.loop:                                   ; preds = %rangeiter.body, %gep.next5
  %range.it.sroa.0.0 = phi i32 [ 0, %gep.next5 ], [ %range.it.sroa.0.1, %rangeiter.body ], !dbg !7595
  %1 = phi i32 [ %78, %gep.next5 ], [ %73, %rangeiter.body ], !dbg !7596
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7597, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7612
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7597, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7612
  call void @llvm.dbg.value(metadata %runtime.stringIterator* undef, metadata !7607, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7597, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata %runtime.stringIterator* undef, metadata !7607, metadata !DIExpression()), !dbg !7615
  %.not.i = icmp slt i32 %range.it.sroa.0.0, %s.len, !dbg !7616
  br i1 %.not.i, label %deref.next8.i, label %runtime.stringNext.exit, !dbg !7617

deref.next8.i:                                    ; preds = %rangeiter.loop
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7608, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7597, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata %runtime.stringIterator* undef, metadata !7607, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %s.data, metadata !7621, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %s.len, metadata !7621, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7632
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7635
  %2 = sub i32 %s.len, %range.it.sroa.0.0, !dbg !7636
  call void @llvm.dbg.value(metadata i32 %2, metadata !7627, metadata !DIExpression()), !dbg !7637
  %3 = getelementptr inbounds i8, i8* %s.data, i32 %range.it.sroa.0.0, !dbg !7638
  %4 = load i8, i8* %3, align 1, !dbg !7638
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7639
  %5 = icmp sgt i8 %4, -1, !dbg !7640
  br i1 %5, label %runtime.decodeUTF8.exit.i, label %switch.next.i.i, !dbg !7641

switch.next.i.i:                                  ; preds = %deref.next8.i
  %6 = and i8 %4, -32, !dbg !7642
  %7 = icmp eq i8 %6, -64, !dbg !7643
  br i1 %7, label %switch.body1.i.i, label %switch.next3.i.i, !dbg !7641

switch.body1.i.i:                                 ; preds = %switch.next.i.i
  call void @llvm.dbg.value(metadata i32 %2, metadata !7627, metadata !DIExpression()), !dbg !7644
  %8 = icmp ult i32 %2, 2, !dbg !7645
  br i1 %8, label %runtime.decodeUTF8.exit.i, label %cond.false.i.i, !dbg !7641

cond.false.i.i:                                   ; preds = %switch.body1.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7647
  %9 = add nsw i32 %range.it.sroa.0.0, 1, !dbg !7648
  %10 = getelementptr inbounds i8, i8* %s.data, i32 %9, !dbg !7649
  %11 = load i8, i8* %10, align 1, !dbg !7649
  call void @llvm.dbg.value(metadata i8 %11, metadata !7650, metadata !DIExpression()), !dbg !7653
  %12 = and i8 %11, -64, !dbg !7655
  %13 = icmp ne i8 %12, -128, !dbg !7656
  %14 = and i8 %4, 30
  %.not.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = or i1 %.not.i.i, %13, !dbg !7641
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 undef, metadata !7629, metadata !DIExpression()), !dbg !7658
  %spec.select9.i.i = select i1 %or.cond.i.i, i32 1, i32 2, !dbg !7641
  br label %runtime.decodeUTF8.exit.i, !dbg !7641

switch.next3.i.i:                                 ; preds = %switch.next.i.i
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7659
  %15 = and i8 %4, -16, !dbg !7660
  %16 = icmp eq i8 %15, -32, !dbg !7661
  br i1 %16, label %switch.body4.i.i, label %switch.next11.i.i, !dbg !7641

switch.body4.i.i:                                 ; preds = %switch.next3.i.i
  call void @llvm.dbg.value(metadata i32 %2, metadata !7627, metadata !DIExpression()), !dbg !7662
  %17 = icmp ult i32 %2, 3, !dbg !7663
  br i1 %17, label %runtime.decodeUTF8.exit.i, label %cond.false6.i.i, !dbg !7641

cond.false6.i.i:                                  ; preds = %switch.body4.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7665
  %18 = add nsw i32 %range.it.sroa.0.0, 1, !dbg !7666
  %19 = getelementptr inbounds i8, i8* %s.data, i32 %18, !dbg !7667
  %20 = load i8, i8* %19, align 1, !dbg !7667
  call void @llvm.dbg.value(metadata i8 %20, metadata !7650, metadata !DIExpression()), !dbg !7668
  %21 = and i8 %20, -64, !dbg !7670
  %22 = icmp eq i8 %21, -128, !dbg !7671
  br i1 %22, label %cond.false7.i.i, label %runtime.decodeUTF8.exit.i, !dbg !7641

cond.false7.i.i:                                  ; preds = %cond.false6.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7673
  %23 = add i32 %range.it.sroa.0.0, 2, !dbg !7674
  %24 = getelementptr inbounds i8, i8* %s.data, i32 %23, !dbg !7675
  %25 = load i8, i8* %24, align 1, !dbg !7675
  call void @llvm.dbg.value(metadata i8 %25, metadata !7650, metadata !DIExpression()), !dbg !7676
  %26 = and i8 %25, -64, !dbg !7678
  %27 = icmp eq i8 %26, -128, !dbg !7679
  br i1 %27, label %if.done8.i.i, label %runtime.decodeUTF8.exit.i, !dbg !7641

if.done8.i.i:                                     ; preds = %cond.false7.i.i
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7680
  %28 = and i8 %4, 15, !dbg !7681
  %29 = zext i8 %28 to i32, !dbg !7682
  %30 = shl nuw nsw i32 %29, 12, !dbg !7683
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7685
  %31 = and i8 %20, 63, !dbg !7686
  %32 = zext i8 %31 to i32, !dbg !7686
  %33 = shl nuw nsw i32 %32, 6, !dbg !7687
  %34 = or i32 %33, %30, !dbg !7688
  call void @llvm.dbg.value(metadata i32 undef, metadata !7630, metadata !DIExpression()), !dbg !7689
  %35 = icmp ult i32 %34, 2048, !dbg !7690
  %36 = and i32 %34, 63488
  %37 = icmp eq i32 %36, 55296
  %or.cond8.i.i = or i1 %35, %37, !dbg !7641
  %spec.select10.i.i = select i1 %or.cond8.i.i, i32 1, i32 3, !dbg !7641
  br label %runtime.decodeUTF8.exit.i, !dbg !7641

switch.next11.i.i:                                ; preds = %switch.next3.i.i
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7691
  %38 = and i8 %4, -8, !dbg !7692
  %39 = icmp ne i8 %38, -16, !dbg !7693
  %40 = icmp ult i32 %2, 4
  %or.cond38.i.i = or i1 %40, %39, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %2, metadata !7627, metadata !DIExpression()), !dbg !7694
  br i1 %or.cond38.i.i, label %runtime.decodeUTF8.exit.i, label %cond.false14.i.i, !dbg !7641

cond.false14.i.i:                                 ; preds = %switch.next11.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7696
  %41 = add nsw i32 %range.it.sroa.0.0, 1, !dbg !7697
  %42 = getelementptr inbounds i8, i8* %s.data, i32 %41, !dbg !7698
  %43 = load i8, i8* %42, align 1, !dbg !7698
  call void @llvm.dbg.value(metadata i8 %43, metadata !7650, metadata !DIExpression()), !dbg !7699
  %44 = and i8 %43, -64, !dbg !7701
  %45 = icmp eq i8 %44, -128, !dbg !7702
  br i1 %45, label %cond.false15.i.i, label %runtime.decodeUTF8.exit.i, !dbg !7641

cond.false15.i.i:                                 ; preds = %cond.false14.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7704
  %46 = add i32 %range.it.sroa.0.0, 2, !dbg !7705
  %47 = getelementptr inbounds i8, i8* %s.data, i32 %46, !dbg !7706
  %48 = load i8, i8* %47, align 1, !dbg !7706
  call void @llvm.dbg.value(metadata i8 %48, metadata !7650, metadata !DIExpression()), !dbg !7707
  %49 = and i8 %48, -64, !dbg !7709
  %50 = icmp eq i8 %49, -128, !dbg !7710
  br i1 %50, label %cond.false16.i.i, label %runtime.decodeUTF8.exit.i, !dbg !7641

cond.false16.i.i:                                 ; preds = %cond.false15.i.i
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7712
  %51 = add i32 %range.it.sroa.0.0, 3, !dbg !7713
  %52 = getelementptr inbounds i8, i8* %s.data, i32 %51, !dbg !7714
  %53 = load i8, i8* %52, align 1, !dbg !7714
  call void @llvm.dbg.value(metadata i8 %53, metadata !7650, metadata !DIExpression()), !dbg !7715
  %54 = and i8 %53, -64, !dbg !7717
  %55 = icmp eq i8 %54, -128, !dbg !7718
  br i1 %55, label %if.done17.i.i, label %runtime.decodeUTF8.exit.i, !dbg !7641

if.done17.i.i:                                    ; preds = %cond.false16.i.i
  call void @llvm.dbg.value(metadata i8 %4, metadata !7628, metadata !DIExpression()), !dbg !7719
  %56 = and i8 %4, 7, !dbg !7720
  %57 = zext i8 %56 to i32, !dbg !7721
  %58 = shl nuw nsw i32 %57, 18, !dbg !7722
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7621, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %range.it.sroa.0.0, metadata !7626, metadata !DIExpression()), !dbg !7724
  %59 = and i8 %43, 63, !dbg !7725
  %60 = zext i8 %59 to i32, !dbg !7725
  %61 = shl nuw nsw i32 %60, 12, !dbg !7726
  %62 = or i32 %61, %58, !dbg !7727
  %63 = and i8 %48, 63, !dbg !7728
  %64 = zext i8 %63 to i32, !dbg !7728
  %65 = shl nuw nsw i32 %64, 6, !dbg !7729
  %66 = or i32 %62, %65, !dbg !7730
  %67 = and i8 %53, 63, !dbg !7731
  %68 = zext i8 %67 to i32, !dbg !7731
  %69 = or i32 %66, %68, !dbg !7732
  call void @llvm.dbg.value(metadata i32 %69, metadata !7631, metadata !DIExpression()), !dbg !7733
  %.off.i.i = add nsw i32 %69, -65536, !dbg !7641
  %70 = icmp ult i32 %.off.i.i, 1048576, !dbg !7641
  %spec.select.i.i = select i1 %70, i32 4, i32 1, !dbg !7641
  br label %runtime.decodeUTF8.exit.i, !dbg !7641

runtime.decodeUTF8.exit.i:                        ; preds = %if.done17.i.i, %cond.false16.i.i, %cond.false15.i.i, %cond.false14.i.i, %switch.next11.i.i, %if.done8.i.i, %cond.false7.i.i, %cond.false6.i.i, %switch.body4.i.i, %cond.false.i.i, %switch.body1.i.i, %deref.next8.i
  %71 = phi i32 [ %spec.select9.i.i, %cond.false.i.i ], [ %spec.select.i.i, %if.done17.i.i ], [ 1, %switch.body1.i.i ], [ 1, %cond.false7.i.i ], [ 1, %cond.false6.i.i ], [ 1, %switch.body4.i.i ], [ 1, %cond.false16.i.i ], [ 1, %cond.false15.i.i ], [ 1, %cond.false14.i.i ], [ 1, %switch.next11.i.i ], [ 1, %deref.next8.i ], [ %spec.select10.i.i, %if.done8.i.i ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7609, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata i32 %71, metadata !7610, metadata !DIExpression()), !dbg !7735
  %72 = add i32 %71, %range.it.sroa.0.0, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %72, metadata !7611, metadata !DIExpression()), !dbg !7737
  %newret6.i = insertvalue { i1, i32 } { i1 true, i32 undef }, i32 %range.it.sroa.0.0, 1, !dbg !7738
  br label %runtime.stringNext.exit, !dbg !7738

runtime.stringNext.exit:                          ; preds = %rangeiter.loop, %runtime.decodeUTF8.exit.i
  %range.it.sroa.0.1 = phi i32 [ %72, %runtime.decodeUTF8.exit.i ], [ %range.it.sroa.0.0, %rangeiter.loop ], !dbg !7595
  %range.next9 = phi { i1, i32 } [ %newret6.i, %runtime.decodeUTF8.exit.i ], [ zeroinitializer, %rangeiter.loop ]
  %newret = extractvalue { i1, i32 } %range.next9, 0, !dbg !7595
  br i1 %newret, label %rangeiter.body, label %if.done, !dbg !7595

rangeiter.body:                                   ; preds = %runtime.stringNext.exit
  call void @llvm.dbg.value(metadata i32 undef, metadata !7592, metadata !DIExpression()), !dbg !7739
  %73 = add i32 %1, -1, !dbg !7740
  call void @llvm.dbg.value(metadata i32 %73, metadata !7591, metadata !DIExpression()), !dbg !7741
  %74 = icmp slt i32 %73, 0, !dbg !7742
  br i1 %74, label %if.then1, label %rangeiter.loop, !dbg !7595

if.then1:                                         ; preds = %rangeiter.body
  %newret9.le = extractvalue { i1, i32 } %range.next9, 1, !dbg !7595
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7590, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %newret9.le, metadata !7592, metadata !DIExpression()), !dbg !7744
  %slice.maxcap = icmp ugt i32 %newret9.le, %s.len, !dbg !7745
  br i1 %slice.maxcap, label %slice.throw, label %slice.next, !dbg !7745

if.done:                                          ; preds = %runtime.stringNext.exit, %gep.next
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7590, metadata !DIExpression()), !dbg !7746
  %newret2 = insertvalue { i8*, i32 } undef, i8* %s.data, 0, !dbg !7747
  %newret4 = insertvalue { i8*, i32 } %newret2, i32 %s.len, 1, !dbg !7747
  ret { i8*, i32 } %newret4, !dbg !7747

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7595
  unreachable, !dbg !7595

gep.next:                                         ; preds = %entry
  %75 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 1, !dbg !7748
  %76 = load i1, i1* %75, align 1, !dbg !7748
  br i1 %76, label %gep.next5, label %if.done, !dbg !7595

gep.next5:                                        ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7589, metadata !DIExpression()), !dbg !7749
  %77 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 3, !dbg !7750
  %78 = load i32, i32* %77, align 4, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %78, metadata !7591, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.value(metadata %runtime._string undef, metadata !7590, metadata !DIExpression()), !dbg !7751
  br label %rangeiter.loop, !dbg !7595

slice.throw:                                      ; preds = %if.then1
  tail call fastcc void @runtime.slicePanic(), !dbg !7745
  unreachable, !dbg !7745

slice.next:                                       ; preds = %if.then1
  %newret6 = insertvalue { i8*, i32 } undef, i8* %s.data, 0, !dbg !7752
  %newret8 = insertvalue { i8*, i32 } %newret6, i32 %newret9.le, 1, !dbg !7752
  ret { i8*, i32 } %newret8, !dbg !7752
}

; Function Attrs: optsize
define internal fastcc void @"(*fmt.fmt).pad"(%fmt.fmt* nocapture readonly dereferenceable_or_null(92) %f, i8* nocapture readonly %b.data, i32 %b.len) unnamed_addr #2 section ".text.(*fmt.fmt).pad" !dbg !7753 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, align 8, !dbg !7760
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 4, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !7760
  %0 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7760
  %1 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7760
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** %1, align 4, !dbg !7760
  %2 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7760
  store %runtime.stackChainObject* %2, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7760
  %accept.i = alloca %"unicode/utf8.acceptRange", align 8, !dbg !7760
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %b.data, metadata !7758, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7777
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !7758, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7777
  call void @llvm.dbg.value(metadata i32 undef, metadata !7758, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !7777
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7778
  %3 = icmp eq %fmt.fmt* %f, null, !dbg !7779
  br i1 %3, label %gep.throw, label %gep.next, !dbg !7779

if.done1:                                         ; preds = %if.then, %gep.next20
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7779
  ret void, !dbg !7779

if.then:                                          ; preds = %"unicode/utf8.RuneCount.exit"
  call void @llvm.dbg.value(metadata i32 %56, metadata !7759, metadata !DIExpression()), !dbg !7780
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %f, i32 %56), !dbg !7781
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7782
  %4 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7783
  %5 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %4, align 4, !dbg !7783
  %6 = bitcast { i8*, i32, i32 }* %5 to i8*, !dbg !7783
  %7 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7784
  store i8* %6, i8** %7, align 4, !dbg !7784
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7758, metadata !DIExpression()), !dbg !7784
  tail call fastcc void @"(*fmt.buffer).write"({ i8*, i32, i32 }* %5, i8* %b.data, i32 %b.len), !dbg !7785
  br label %if.done1, !dbg !7779

gep.throw:                                        ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7779
  unreachable, !dbg !7779

gep.next:                                         ; preds = %entry
  %8 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 0, !dbg !7786
  %9 = load i1, i1* %8, align 1, !dbg !7786
  br i1 %9, label %gep.next6, label %gep.next28, !dbg !7779

gep.next6:                                        ; preds = %gep.next
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7787
  %10 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 2, !dbg !7788
  %11 = load i32, i32* %10, align 4, !dbg !7788
  %12 = icmp eq i32 %11, 0, !dbg !7789
  br i1 %12, label %gep.next28, label %deref.next12, !dbg !7779

deref.next12:                                     ; preds = %gep.next6
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7758, metadata !DIExpression()), !dbg !7791
  %13 = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept.i, i32 0, i32 0, !dbg !7760
  %14 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7760
  store i8* %13, i8** %14, align 4, !dbg !7760
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %13), !dbg !7760
  call void @llvm.dbg.value(metadata i8* %b.data, metadata !7765, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7760
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !7765, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7760
  call void @llvm.dbg.value(metadata i32 undef, metadata !7765, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !7760
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7765, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !7766, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 0, metadata !7767, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 0, metadata !7768, metadata !DIExpression()), !dbg !7795
  %.fca.1.gep.i = getelementptr inbounds %"unicode/utf8.acceptRange", %"unicode/utf8.acceptRange"* %accept.i, i32 0, i32 1, !dbg !7796
  br label %for.loop.i, !dbg !7796

for.loop.i:                                       ; preds = %for.loop.i.backedge, %deref.next12
  %15 = phi i32 [ 0, %deref.next12 ], [ %18, %for.loop.i.backedge ], !dbg !7794
  %16 = phi i32 [ 0, %deref.next12 ], [ %.be, %for.loop.i.backedge ], !dbg !7795
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !7766, metadata !DIExpression()), !dbg !7798
  %17 = icmp slt i32 %16, %b.len, !dbg !7799
  br i1 %17, label %for.body.i, label %"unicode/utf8.RuneCount.exit", !dbg !7796

for.body.i:                                       ; preds = %for.loop.i
  %18 = add i32 %15, 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %18, metadata !7767, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7765, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7802
  %.not.i = icmp ult i32 %16, %b.len, !dbg !7803
  br i1 %.not.i, label %lookup.next.i, label %lookup.throw.i, !dbg !7803

if.then.i:                                        ; preds = %lookup.next.i
  %19 = add nuw i32 %16, 1, !dbg !7804
  call void @llvm.dbg.value(metadata i32 %19, metadata !7768, metadata !DIExpression()), !dbg !7804
  br label %for.loop.i.backedge, !dbg !7796

if.done.i:                                        ; preds = %lookup.next.i
  call void @llvm.dbg.value(metadata i8 %42, metadata !7769, metadata !DIExpression()), !dbg !7805
  %20 = zext i8 %42 to i32, !dbg !7796
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* @"unicode/utf8.first", i32 0, i32 %20, !dbg !7806
  %22 = load i8, i8* %21, align 1, !dbg !7806
  call void @llvm.dbg.value(metadata i8 %22, metadata !7770, metadata !DIExpression()), !dbg !7807
  %23 = icmp eq i8 %22, -15, !dbg !7808
  br i1 %23, label %if.then1.i, label %if.done2.i, !dbg !7796

if.then1.i:                                       ; preds = %if.done.i
  %24 = add nuw i32 %16, 1, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %24, metadata !7768, metadata !DIExpression()), !dbg !7809
  br label %for.loop.i.backedge, !dbg !7796

if.done2.i:                                       ; preds = %if.done.i
  call void @llvm.dbg.value(metadata i8 %22, metadata !7770, metadata !DIExpression()), !dbg !7810
  %25 = and i8 %22, 7, !dbg !7811
  %26 = zext i8 %25 to i32, !dbg !7812
  call void @llvm.dbg.value(metadata i32 %26, metadata !7771, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.value(metadata i32 %26, metadata !7771, metadata !DIExpression()), !dbg !7815
  %27 = add i32 %16, %26, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %b.len, metadata !7766, metadata !DIExpression()), !dbg !7817
  %28 = icmp sgt i32 %27, %b.len, !dbg !7818
  br i1 %28, label %if.then3.i, label %if.done4.i, !dbg !7796

if.then3.i:                                       ; preds = %if.done2.i
  %29 = add nuw i32 %16, 1, !dbg !7819
  call void @llvm.dbg.value(metadata i32 %29, metadata !7768, metadata !DIExpression()), !dbg !7819
  br label %for.loop.i.backedge, !dbg !7796

if.done4.i:                                       ; preds = %if.done2.i
  store i8 0, i8* %13, align 8, !dbg !7760
  store i8 0, i8* %.fca.1.gep.i, align 1, !dbg !7760
  call void @llvm.dbg.value(metadata i8 %22, metadata !7770, metadata !DIExpression()), !dbg !7820
  %30 = lshr i8 %22, 4, !dbg !7821
  %31 = zext i8 %30 to i32, !dbg !7796
  %.elt.i = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %31, i32 0, !dbg !7822
  %.unpack.i = load i8, i8* %.elt.i, align 2, !dbg !7822
  %.elt1.i = getelementptr inbounds [16 x %"unicode/utf8.acceptRange"], [16 x %"unicode/utf8.acceptRange"]* @"unicode/utf8.acceptRanges", i32 0, i32 %31, i32 1, !dbg !7822
  %.unpack2.i = load i8, i8* %.elt1.i, align 1, !dbg !7822
  store i8 %.unpack.i, i8* %13, align 8, !dbg !7823
  store i8 %.unpack2.i, i8* %.fca.1.gep.i, align 1, !dbg !7823
  call void @llvm.dbg.value(metadata %"unicode/utf8.acceptRange" undef, metadata !7772, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7765, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7825
  %32 = add nuw i32 %16, 1, !dbg !7826
  %.not3.i = icmp ult i32 %32, %b.len, !dbg !7827
  br i1 %.not3.i, label %lookup.next21.i, label %lookup.throw20.i, !dbg !7827

if.done6.i:                                       ; preds = %lookup.next33.i, %lookup.next29.i, %lookup.next21.i, %if.else10.i, %if.else.i
  %33 = phi i32 [ 2, %if.else.i ], [ 3, %if.else10.i ], [ 1, %lookup.next21.i ], [ 1, %lookup.next29.i ], [ %spec.select.i, %lookup.next33.i ], !dbg !7813
  call void @llvm.dbg.value(metadata i32 %33, metadata !7771, metadata !DIExpression()), !dbg !7828
  %34 = add i32 %33, %16, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %34, metadata !7768, metadata !DIExpression()), !dbg !7829
  br label %for.loop.i.backedge, !dbg !7796

for.loop.i.backedge:                              ; preds = %if.done6.i, %if.then3.i, %if.then1.i, %if.then.i
  %.be = phi i32 [ %34, %if.done6.i ], [ %29, %if.then3.i ], [ %24, %if.then1.i ], [ %19, %if.then.i ]
  br label %for.loop.i, !dbg !7797

if.else.i:                                        ; preds = %lookup.next21.i
  call void @llvm.dbg.value(metadata i32 %26, metadata !7771, metadata !DIExpression()), !dbg !7830
  %35 = add nsw i32 %20, -194, !dbg !7831
  %36 = icmp ult i32 %35, 30, !dbg !7831
  br i1 %36, label %if.done6.i, label %if.else7.i, !dbg !7796

if.else7.i:                                       ; preds = %if.else.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7765, metadata !DIExpression()), !dbg !7832
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7833
  %37 = add nuw i32 %16, 2, !dbg !7834
  %.not4.i = icmp ult i32 %37, %b.len, !dbg !7835
  br i1 %.not4.i, label %lookup.next29.i, label %lookup.throw28.i, !dbg !7835

if.else10.i:                                      ; preds = %lookup.next29.i
  call void @llvm.dbg.value(metadata i32 %26, metadata !7771, metadata !DIExpression()), !dbg !7836
  %38 = and i32 %20, 240, !dbg !7837
  %39 = icmp eq i32 %38, 224, !dbg !7837
  br i1 %39, label %if.done6.i, label %if.else11.i, !dbg !7796

if.else11.i:                                      ; preds = %if.else10.i
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7765, metadata !DIExpression()), !dbg !7838
  call void @llvm.dbg.value(metadata i32 %16, metadata !7768, metadata !DIExpression()), !dbg !7839
  %40 = add nuw i32 %16, 3, !dbg !7840
  %.not5.i = icmp ult i32 %40, %b.len, !dbg !7841
  br i1 %.not5.i, label %lookup.next33.i, label %lookup.throw32.i, !dbg !7841

lookup.throw.i:                                   ; preds = %for.body.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7803
  unreachable, !dbg !7803

lookup.next.i:                                    ; preds = %for.body.i
  %41 = getelementptr inbounds i8, i8* %b.data, i32 %16, !dbg !7803
  %42 = load i8, i8* %41, align 1, !dbg !7803
  call void @llvm.dbg.value(metadata i8 %42, metadata !7769, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i8 %42, metadata !7769, metadata !DIExpression()), !dbg !7843
  %43 = icmp sgt i8 %42, -1, !dbg !7844
  br i1 %43, label %if.then.i, label %if.done.i, !dbg !7796

lookup.throw20.i:                                 ; preds = %if.done4.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7827
  unreachable, !dbg !7827

lookup.next21.i:                                  ; preds = %if.done4.i
  %44 = getelementptr inbounds i8, i8* %b.data, i32 %32, !dbg !7827
  %45 = load i8, i8* %44, align 1, !dbg !7827
  call void @llvm.dbg.value(metadata i8 %45, metadata !7773, metadata !DIExpression()), !dbg !7845
  %46 = icmp ult i8 %45, %.unpack.i, !dbg !7846
  %47 = icmp ult i8 %.unpack2.i, %45
  %or.cond37.i = or i1 %46, %47, !dbg !7796
  call void @llvm.dbg.value(metadata i8 %45, metadata !7773, metadata !DIExpression()), !dbg !7847
  br i1 %or.cond37.i, label %if.done6.i, label %if.else.i, !dbg !7796

lookup.throw28.i:                                 ; preds = %if.else7.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7835
  unreachable, !dbg !7835

lookup.next29.i:                                  ; preds = %if.else7.i
  %48 = getelementptr inbounds i8, i8* %b.data, i32 %37, !dbg !7835
  %49 = load i8, i8* %48, align 1, !dbg !7835
  call void @llvm.dbg.value(metadata i8 %49, metadata !7774, metadata !DIExpression()), !dbg !7848
  call void @llvm.dbg.value(metadata i8 %49, metadata !7774, metadata !DIExpression()), !dbg !7849
  %50 = icmp sgt i8 %49, -1, !dbg !7850
  %51 = icmp ugt i8 %49, -65
  %or.cond.i = or i1 %50, %51, !dbg !7796
  call void @llvm.dbg.value(metadata i8 %49, metadata !7774, metadata !DIExpression()), !dbg !7851
  br i1 %or.cond.i, label %if.done6.i, label %if.else10.i, !dbg !7796

lookup.throw32.i:                                 ; preds = %if.else11.i
  tail call fastcc void @runtime.lookupPanic(), !dbg !7841
  unreachable, !dbg !7841

lookup.next33.i:                                  ; preds = %if.else11.i
  %52 = getelementptr inbounds i8, i8* %b.data, i32 %40, !dbg !7841
  %53 = load i8, i8* %52, align 1, !dbg !7841
  call void @llvm.dbg.value(metadata i8 %53, metadata !7775, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8 %53, metadata !7775, metadata !DIExpression()), !dbg !7853
  %54 = icmp sgt i8 %53, -1, !dbg !7854
  %55 = icmp ugt i8 %53, -65
  %or.cond34.i = or i1 %54, %55, !dbg !7796
  call void @llvm.dbg.value(metadata i8 %53, metadata !7775, metadata !DIExpression()), !dbg !7855
  %spec.select.i = select i1 %or.cond34.i, i32 1, i32 %26, !dbg !7796
  br label %if.done6.i, !dbg !7796

"unicode/utf8.RuneCount.exit":                    ; preds = %for.loop.i
  call void @llvm.dbg.value(metadata i32 %15, metadata !7767, metadata !DIExpression()), !dbg !7856
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %13), !dbg !7857
  %56 = sub i32 %11, %15, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %56, metadata !7759, metadata !DIExpression()), !dbg !7859
  %57 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 1, i32 2, !dbg !7860
  %58 = load i1, i1* %57, align 1, !dbg !7860
  br i1 %58, label %gep.next20, label %if.then, !dbg !7779

gep.next20:                                       ; preds = %"unicode/utf8.RuneCount.exit"
  %59 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7861
  %60 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %59, align 4, !dbg !7861
  %61 = bitcast { i8*, i32, i32 }* %60 to i8*, !dbg !7861
  %62 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !7862
  store i8* %61, i8** %62, align 4, !dbg !7862
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7758, metadata !DIExpression()), !dbg !7862
  tail call fastcc void @"(*fmt.buffer).write"({ i8*, i32, i32 }* %60, i8* %b.data, i32 %b.len), !dbg !7863
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32 %56, metadata !7759, metadata !DIExpression()), !dbg !7865
  tail call fastcc void @"(*fmt.fmt).writePadding"(%fmt.fmt* nonnull %f, i32 %56), !dbg !7866
  br label %if.done1, !dbg !7779

gep.next28:                                       ; preds = %gep.next, %gep.next6
  call void @llvm.dbg.value(metadata %fmt.fmt* %f, metadata !7757, metadata !DIExpression()), !dbg !7867
  %63 = getelementptr inbounds %fmt.fmt, %fmt.fmt* %f, i32 0, i32 0, !dbg !7868
  %64 = load { i8*, i32, i32 }*, { i8*, i32, i32 }** %63, align 4, !dbg !7868
  %65 = bitcast { i8*, i32, i32 }* %64 to i8*, !dbg !7868
  %66 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !7869
  store i8* %65, i8** %66, align 4, !dbg !7869
  call void @llvm.dbg.value(metadata { i8*, i32, i32 } undef, metadata !7758, metadata !DIExpression()), !dbg !7869
  tail call fastcc void @"(*fmt.buffer).write"({ i8*, i32, i32 }* %64, i8* %b.data, i32 %b.len), !dbg !7870
  store %runtime.stackChainObject* %0, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7871
  ret void, !dbg !7871
}

; Function Attrs: optsize
define internal fastcc { i8*, i32 } @"(error).Error"(i8* nocapture readonly %0, i32 %actualType) unnamed_addr #2 {
entry:
  %gc.stackobject = alloca { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, align 8, !dbg !7872
  store { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* } { %runtime.stackChainObject* null, i32 15, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, align 4, !dbg !7872
  %1 = load %runtime.stackChainObject*, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  %2 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 0, !dbg !7872
  store %runtime.stackChainObject* %1, %runtime.stackChainObject** %2, align 4, !dbg !7872
  %3 = bitcast { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject to %runtime.stackChainObject*, !dbg !7872
  store %runtime.stackChainObject* %3, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  %4 = add i32 %actualType, -997, !dbg !7872
  %5 = lshr i32 %4, 10, !dbg !7872
  %6 = shl i32 %4, 22, !dbg !7872
  %7 = or i32 %5, %6, !dbg !7872
  switch i32 %7, label %default [
    i32 9, label %"reflect/types.type:pointer:named:errors.errorString"
    i32 2, label %"reflect/types.type:pointer:named:os.PathError"
    i32 1, label %"reflect/types.type:pointer:named:reflect.TypeError"
    i32 0, label %"reflect/types.type:pointer:named:reflect.ValueError"
  ], !dbg !7872

default:                                          ; preds = %entry
  tail call fastcc void @runtime.nilPanic(), !dbg !7872
  unreachable, !dbg !7872

"reflect/types.type:pointer:named:errors.errorString": ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7886
  %8 = icmp eq i8* %0, null, !dbg !7887
  br i1 %8, label %gep.throw.i17, label %"(*errors.errorString).Error.exit", !dbg !7887

gep.throw.i17:                                    ; preds = %"reflect/types.type:pointer:named:errors.errorString"
  tail call fastcc void @runtime.nilPanic(), !dbg !7887
  unreachable, !dbg !7887

"(*errors.errorString).Error.exit":               ; preds = %"reflect/types.type:pointer:named:errors.errorString"
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %0, metadata !7873, metadata !DIExpression()), !dbg !7884
  %.elt.i18 = bitcast i8* %0 to i8**, !dbg !7887
  %.unpack.i19 = load i8*, i8** %.elt.i18, align 4, !dbg !7887
  %9 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 2, !dbg !7887
  store i8* %.unpack.i19, i8** %9, align 4, !dbg !7887
  %.elt3.i = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7887
  %10 = bitcast i8* %.elt3.i to i32*, !dbg !7887
  %.unpack4.i = load i32, i32* %10, align 4, !dbg !7887
  %newret.i = insertvalue { i8*, i32 } undef, i8* %.unpack.i19, 0, !dbg !7888
  %newret2.i = insertvalue { i8*, i32 } %newret.i, i32 %.unpack4.i, 1, !dbg !7888
  store %runtime.stackChainObject* %1, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  ret { i8*, i32 } %newret2.i, !dbg !7872

"reflect/types.type:pointer:named:os.PathError":  ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7901
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7903
  %11 = icmp eq i8* %0, null, !dbg !7904
  br i1 %11, label %gep.throw.i28, label %"(*os.PathError).Error.exit", !dbg !7904

gep.throw.i28:                                    ; preds = %"reflect/types.type:pointer:named:os.PathError"
  tail call fastcc void @runtime.nilPanic(), !dbg !7904
  unreachable, !dbg !7904

"(*os.PathError).Error.exit":                     ; preds = %"reflect/types.type:pointer:named:os.PathError"
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7903
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7901
  %.elt.i29 = bitcast i8* %0 to i8**, !dbg !7904
  %.unpack.i30 = load i8*, i8** %.elt.i29, align 4, !dbg !7904
  %12 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 3, !dbg !7904
  store i8* %.unpack.i30, i8** %12, align 4, !dbg !7904
  %.elt9.i = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7904
  %13 = bitcast i8* %.elt9.i to i32*, !dbg !7904
  %.unpack10.i = load i32, i32* %13, align 4, !dbg !7904
  %14 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %.unpack.i30, i32 %.unpack10.i, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @"(*os.PathError).Error$string", i32 0, i32 0), i32 1), !dbg !7905
  %newret19.i = extractvalue { i8*, i32 } %14, 0, !dbg !7905
  %15 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 4, !dbg !7905
  store i8* %newret19.i, i8** %15, align 4, !dbg !7905
  %newret21.i = extractvalue { i8*, i32 } %14, 1, !dbg !7905
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7906
  %.elt11.i31 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7907
  %16 = bitcast i8* %.elt11.i31 to i8**, !dbg !7907
  %.unpack12.i32 = load i8*, i8** %16, align 4, !dbg !7907
  %17 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 5, !dbg !7907
  store i8* %.unpack12.i32, i8** %17, align 4, !dbg !7907
  %.elt13.i = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7907
  %18 = bitcast i8* %.elt13.i to i32*, !dbg !7907
  %.unpack14.i = load i32, i32* %18, align 4, !dbg !7907
  %19 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret19.i, i32 %newret21.i, i8* %.unpack12.i32, i32 %.unpack14.i), !dbg !7908
  %newret15.i = extractvalue { i8*, i32 } %19, 0, !dbg !7908
  %20 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 6, !dbg !7908
  store i8* %newret15.i, i8** %20, align 4, !dbg !7908
  %newret17.i = extractvalue { i8*, i32 } %19, 1, !dbg !7908
  %21 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret15.i, i32 %newret17.i, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"(*os.PathError).Error$string.773", i32 0, i32 0), i32 2), !dbg !7909
  %newret11.i = extractvalue { i8*, i32 } %21, 0, !dbg !7909
  %22 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 7, !dbg !7909
  store i8* %newret11.i, i8** %22, align 4, !dbg !7909
  %newret13.i = extractvalue { i8*, i32 } %21, 1, !dbg !7909
  %.elt15.i = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7910
  %23 = bitcast i8* %.elt15.i to i32*, !dbg !7910
  %.unpack16.i = load i32, i32* %23, align 4, !dbg !7910
  %.elt17.i = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7910
  %24 = bitcast i8* %.elt17.i to i8**, !dbg !7910
  %.unpack18.i = load i8*, i8** %24, align 4, !dbg !7910
  %25 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 8, !dbg !7911
  store i8* %.unpack18.i, i8** %25, align 4, !dbg !7911
  %26 = tail call fastcc { i8*, i32 } @"(error).Error"(i8* %.unpack18.i, i32 %.unpack16.i), !dbg !7911
  %newret5.i = extractvalue { i8*, i32 } %26, 0, !dbg !7911
  %27 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 9, !dbg !7911
  store i8* %newret5.i, i8** %27, align 4, !dbg !7911
  %newret7.i33 = extractvalue { i8*, i32 } %26, 1, !dbg !7911
  %28 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret11.i, i32 %newret13.i, i8* %newret5.i, i32 %newret7.i33), !dbg !7912
  %newret.i34 = extractvalue { i8*, i32 } %28, 0, !dbg !7912
  %29 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 10, !dbg !7872
  store i8* %newret.i34, i8** %29, align 4, !dbg !7872
  store %runtime.stackChainObject* %1, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  ret { i8*, i32 } %28, !dbg !7872

"reflect/types.type:pointer:named:reflect.TypeError": ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7925
  %30 = icmp eq i8* %0, null, !dbg !7926
  br i1 %30, label %gep.throw.i20, label %"(*reflect.TypeError).Error.exit", !dbg !7926

gep.throw.i20:                                    ; preds = %"reflect/types.type:pointer:named:reflect.TypeError"
  tail call fastcc void @runtime.nilPanic(), !dbg !7926
  unreachable, !dbg !7926

"(*reflect.TypeError).Error.exit":                ; preds = %"reflect/types.type:pointer:named:reflect.TypeError"
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7923
  %.elt.i21 = bitcast i8* %0 to i8**, !dbg !7926
  %.unpack.i22 = load i8*, i8** %.elt.i21, align 4, !dbg !7926
  %31 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 11, !dbg !7926
  store i8* %.unpack.i22, i8** %31, align 4, !dbg !7926
  %.elt11.i23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7926
  %32 = bitcast i8* %.elt11.i23 to i32*, !dbg !7926
  %.unpack12.i24 = load i32, i32* %32, align 4, !dbg !7926
  %33 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @"(*reflect.TypeError).Error$string", i32 0, i32 0), i32 30, i8* %.unpack.i22, i32 %.unpack12.i24), !dbg !7927
  %newret7.i25 = extractvalue { i8*, i32 } %33, 0, !dbg !7927
  %34 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 12, !dbg !7927
  store i8* %newret7.i25, i8** %34, align 4, !dbg !7927
  %newret9.i26 = extractvalue { i8*, i32 } %33, 1, !dbg !7927
  %35 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret7.i25, i32 %newret9.i26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"(*reflect.ValueError).Error$string.643", i32 0, i32 0), i32 16), !dbg !7928
  %newret3.i27 = extractvalue { i8*, i32 } %35, 0, !dbg !7928
  %36 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 13, !dbg !7872
  store i8* %newret3.i27, i8** %36, align 4, !dbg !7872
  store %runtime.stackChainObject* %1, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  ret { i8*, i32 } %35, !dbg !7872

"reflect/types.type:pointer:named:reflect.ValueError": ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7938
  %37 = icmp eq i8* %0, null, !dbg !7939
  br i1 %37, label %gep.throw.i, label %"(*reflect.ValueError).Error.exit", !dbg !7939

gep.throw.i:                                      ; preds = %"reflect/types.type:pointer:named:reflect.ValueError"
  tail call fastcc void @runtime.nilPanic(), !dbg !7939
  unreachable, !dbg !7939

"(*reflect.ValueError).Error.exit":               ; preds = %"reflect/types.type:pointer:named:reflect.ValueError"
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7936
  %.elt.i = bitcast i8* %0 to i8**, !dbg !7939
  %.unpack.i = load i8*, i8** %.elt.i, align 4, !dbg !7939
  %38 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 14, !dbg !7939
  store i8* %.unpack.i, i8** %38, align 4, !dbg !7939
  %.elt11.i = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7939
  %39 = bitcast i8* %.elt11.i to i32*, !dbg !7939
  %.unpack12.i = load i32, i32* %39, align 4, !dbg !7939
  %40 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @"(*reflect.ValueError).Error$string", i32 0, i32 0), i32 31, i8* %.unpack.i, i32 %.unpack12.i), !dbg !7940
  %newret7.i = extractvalue { i8*, i32 } %40, 0, !dbg !7940
  %41 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 15, !dbg !7940
  store i8* %newret7.i, i8** %41, align 4, !dbg !7940
  %newret9.i = extractvalue { i8*, i32 } %40, 1, !dbg !7940
  %42 = tail call fastcc { i8*, i32 } @runtime.stringConcat(i8* %newret7.i, i32 %newret9.i, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @"(*reflect.ValueError).Error$string.643", i32 0, i32 0), i32 16), !dbg !7941
  %newret3.i = extractvalue { i8*, i32 } %42, 0, !dbg !7941
  %43 = getelementptr { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }, { %runtime.stackChainObject*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }* %gc.stackobject, i32 0, i32 16, !dbg !7872
  store i8* %newret3.i, i8** %43, align 4, !dbg !7872
  store %runtime.stackChainObject* %1, %runtime.stackChainObject** @runtime.stackChainStart, align 4, !dbg !7872
  ret { i8*, i32 } %42, !dbg !7872
}

; Function Attrs: norecurse nounwind optsize readnone
define internal fastcc i1 @"error$typeassert"(i32 %actualType) unnamed_addr #6 {
entry:
  %0 = add i32 %actualType, -997, !dbg !7872
  %1 = lshr i32 %0, 10, !dbg !7872
  %2 = shl i32 %0, 22, !dbg !7872
  %3 = or i32 %1, %2, !dbg !7872
  %4 = icmp ult i32 %3, 10, !dbg !7872
  br i1 %4, label %switch.lookup, label %else, !dbg !7872

switch.lookup:                                    ; preds = %entry
  %switch.cast = trunc i32 %1 to i10, !dbg !7872
  %switch.downshift = lshr i10 -505, %switch.cast, !dbg !7872
  %5 = and i10 %switch.downshift, 1, !dbg !7872
  %switch.masked = icmp ne i10 %5, 0, !dbg !7872
  ret i1 %switch.masked, !dbg !7872

else:                                             ; preds = %entry
  ret i1 false, !dbg !7872
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #14

attributes #0 = { noinline optsize "disable-tail-calls"="true" }
attributes #1 = { nounwind optsize readnone speculatable willreturn }
attributes #2 = { optsize "disable-tail-calls"="true" }
attributes #3 = { optsize }
attributes #4 = { noreturn optsize "disable-tail-calls"="true" }
attributes #5 = { argmemonly nounwind optsize willreturn }
attributes #6 = { norecurse nounwind optsize readnone "disable-tail-calls"="true" }
attributes #7 = { nounwind optsize readonly }
attributes #8 = { cold noreturn nounwind optsize }
attributes #9 = { argmemonly nounwind optsize willreturn writeonly }
attributes #10 = { nounwind optsize }
attributes #11 = { optsize "wasm-import-module"="wasi_unstable" "wasm-import-name"="fd_write" }
attributes #12 = { optsize "wasm-import-module"="fastly_http_body" "wasm-import-name"="write" }
attributes #13 = { argmemonly nounwind willreturn writeonly }
attributes #14 = { nounwind readnone speculatable willreturn }
attributes #15 = { nounwind }

!llvm.dbg.cu = !{!77}
!llvm.module.flags = !{!1529, !1530}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "unicode/utf8.first", linkageName: "unicode/utf8.first", scope: !2, file: !2, line: 65, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!2 = !DIFile(filename: "utf8.go", directory: "/usr/local/go/src/unicode/utf8")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2048, align: 8, elements: !5)
!4 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!5 = !{!6}
!6 = !DISubrange(count: 256, lowerBound: 0)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(name: "unicode/utf8.acceptRanges", linkageName: "unicode/utf8.acceptRanges", scope: !2, file: !2, line: 94, type: !9, isLocal: false, isDefinition: true, align: 4294967295)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, align: 8, elements: !15)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode/utf8.acceptRange", baseType: !11)
!11 = !DICompositeType(tag: DW_TAG_structure_type, size: 16, align: 8, elements: !12)
!12 = !{!13, !14}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "lo", baseType: !4, size: 8, align: 8)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "hi", baseType: !4, size: 8, align: 8, offset: 8)
!15 = !{!16}
!16 = !DISubrange(count: 16, lowerBound: 0)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(name: "math/bits.len8tab", linkageName: "math/bits.len8tab", scope: !19, file: !19, line: 66, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!19 = !DIFile(filename: "bits_tables.go", directory: "/usr/local/go/src/math/bits")
!20 = !DIGlobalVariableExpression(var: !21, expr: !DIExpression())
!21 = distinct !DIGlobalVariable(name: "strconv.float32info", linkageName: "strconv.float32info", scope: !22, file: !22, line: 22, type: !23, isLocal: false, isDefinition: true, align: 4294967295)
!22 = !DIFile(filename: "ftoa.go", directory: "/usr/local/go/src/strconv")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "strconv.floatInfo", baseType: !24)
!24 = !DICompositeType(tag: DW_TAG_structure_type, size: 96, align: 32, elements: !25)
!25 = !{!26, !28, !29}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "mantbits", baseType: !27, size: 32, align: 32)
!27 = !DIBasicType(name: "uint", size: 32, encoding: DW_ATE_unsigned)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "expbits", baseType: !27, size: 32, align: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "bias", baseType: !30, size: 32, align: 32, offset: 64)
!30 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(name: "strconv.float64info", linkageName: "strconv.float64info", scope: !22, file: !22, line: 23, type: !23, isLocal: false, isDefinition: true, align: 4294967295)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(name: "strconv.powersOfTen", linkageName: "strconv.powersOfTen", scope: !35, file: !35, line: 39, type: !36, isLocal: false, isDefinition: true, align: 4294967295)
!35 = !DIFile(filename: "extfloat.go", directory: "/usr/local/go/src/strconv")
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 11136, align: 64, elements: !45)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "strconv.extFloat", baseType: !38)
!38 = !DICompositeType(tag: DW_TAG_structure_type, size: 128, align: 64, elements: !39)
!39 = !{!40, !42, !43}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "mant", baseType: !41, size: 64, align: 64)
!41 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "exp", baseType: !30, size: 32, align: 32, offset: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "neg", baseType: !44, size: 8, align: 8, offset: 96)
!44 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!45 = !{!46}
!46 = !DISubrange(count: 87, lowerBound: 0)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "strconv.uint64pow10", linkageName: "strconv.uint64pow10", scope: !35, file: !35, line: 223, type: !49, isLocal: false, isDefinition: true, align: 4294967295)
!49 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 1280, align: 64, elements: !50)
!50 = !{!51}
!51 = !DISubrange(count: 20, lowerBound: 0)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(name: "runtime.heapEnd", linkageName: "runtime.heapEnd", scope: !54, file: !54, line: 25, type: !55, isLocal: false, isDefinition: true, align: 4294967295)
!54 = !DIFile(filename: "arch_wasm.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!55 = !DIBasicType(name: "uintptr", size: 32, encoding: DW_ATE_unsigned)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression())
!57 = distinct !DIGlobalVariable(name: "runtime.zeroSizedAlloc", linkageName: "runtime.zeroSizedAlloc", scope: !58, file: !58, line: 60, type: !4, isLocal: false, isDefinition: true, align: 4294967295)
!58 = !DIFile(filename: "gc_conservative.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "runtime.nextAlloc", linkageName: "runtime.nextAlloc", scope: !58, file: !58, line: 55, type: !61, isLocal: false, isDefinition: true, align: 4294967295)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.gcBlock", baseType: !55)
!62 = !DIGlobalVariableExpression(var: !63, expr: !DIExpression())
!63 = distinct !DIGlobalVariable(name: "runtime.endBlock", linkageName: "runtime.endBlock", scope: !58, file: !58, line: 56, type: !61, isLocal: false, isDefinition: true, align: 4294967295)
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "runtime.stackOverflow", linkageName: "runtime.stackOverflow", scope: !58, file: !58, line: 412, type: !44, isLocal: false, isDefinition: true, align: 4294967295)
!66 = !DIGlobalVariableExpression(var: !67, expr: !DIExpression())
!67 = distinct !DIGlobalVariable(name: "runtime.putcharPosition", linkageName: "runtime.putcharPosition", scope: !68, file: !68, line: 29, type: !27, isLocal: false, isDefinition: true, align: 4294967295)
!68 = !DIFile(filename: "runtime_wasm.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(name: "runtime.putcharBuffer", linkageName: "runtime.putcharBuffer", scope: !68, file: !68, line: 28, type: !71, isLocal: false, isDefinition: true, align: 4294967295)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 960, align: 8, elements: !73)
!72 = !DIBasicType(name: "byte", size: 8, encoding: DW_ATE_unsigned)
!73 = !{!74}
!74 = !DISubrange(count: 120, lowerBound: 0)
!75 = !DIGlobalVariableExpression(var: !76, expr: !DIExpression())
!76 = distinct !DIGlobalVariable(name: "runtime.putcharNWritten", linkageName: "runtime.putcharNWritten", scope: !68, file: !68, line: 33, type: !27, isLocal: false, isDefinition: true, align: 4294967295)
!77 = distinct !DICompileUnit(language: DW_LANG_C99, file: !78, producer: "TinyGo", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !79, globals: !80)
!78 = !DIFile(filename: "./main.go", directory: "")
!79 = !{}
!80 = !{!0, !7, !81, !85, !93, !95, !104, !106, !108, !110, !112, !114, !116, !17, !119, !125, !130, !132, !134, !136, !143, !148, !154, !159, !164, !166, !168, !170, !172, !178, !181, !186, !189, !191, !196, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !268, !270, !273, !275, !278, !298, !300, !302, !331, !333, !335, !337, !339, !341, !343, !345, !347, !349, !351, !353, !355, !357, !359, !361, !363, !365, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !488, !490, !492, !494, !496, !498, !500, !502, !504, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !552, !554, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !634, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !664, !666, !668, !670, !672, !674, !676, !678, !680, !682, !684, !686, !688, !690, !692, !694, !696, !698, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !720, !722, !724, !726, !728, !730, !732, !734, !736, !738, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758, !760, !762, !764, !766, !768, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796, !798, !800, !802, !804, !806, !808, !810, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866, !868, !870, !872, !874, !876, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !970, !972, !974, !976, !978, !980, !982, !984, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1010, !1012, !1014, !1016, !1018, !1020, !1022, !1024, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1064, !1066, !1068, !1070, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !1144, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !1174, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1277, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1313, !1316, !1318, !1320, !1322, !1325, !1327, !1329, !1331, !1333, !1335, !1337, !1351, !1353, !1355, !1362, !1365, !1372, !1374, !1380, !1382, !20, !1384, !1387, !31, !1394, !33, !1400, !1406, !1418, !47, !1421, !1423, !1430, !1440, !1442, !1444, !1446, !1450, !1472, !52, !1474, !1476, !56, !59, !62, !1479, !1481, !64, !1484, !66, !1486, !69, !1493, !75, !1513, !1515, !1527}
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "errors.errorType", linkageName: "errors.errorType", scope: !83, file: !83, line: 103, type: !84, isLocal: false, isDefinition: true, align: 4294967295)
!83 = !DIFile(filename: "wrap.go", directory: "/usr/local/go/src/errors")
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.Type", baseType: !55)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(name: "sort.reflectValueOf", linkageName: "sort.reflectValueOf", scope: !87, file: !87, line: 11, type: !88, isLocal: false, isDefinition: true, align: 4294967295)
!87 = !DIFile(filename: "slice_go113.go", directory: "/usr/local/go/src/sort")
!88 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !89)
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "context", baseType: !91, size: 32, align: 32)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe.Pointer", baseType: null, size: 32, align: 32, dwarfAddressSpace: 0)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "fn", baseType: !91, size: 32, align: 32, offset: 32)
!93 = !DIGlobalVariableExpression(var: !94, expr: !DIExpression())
!94 = distinct !DIGlobalVariable(name: "sort.reflectSwapper", linkageName: "sort.reflectSwapper", scope: !87, file: !87, line: 12, type: !88, isLocal: false, isDefinition: true, align: 4294967295)
!95 = !DIGlobalVariableExpression(var: !96, expr: !DIExpression())
!96 = distinct !DIGlobalVariable(name: "io.ErrShortWrite", linkageName: "io.ErrShortWrite", scope: !97, file: !97, line: 28, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!97 = !DIFile(filename: "io.go", directory: "/usr/local/go/src/io")
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "error", baseType: !99)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime._interface", baseType: !100)
!100 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !101)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "typecode", baseType: !55, size: 32, align: 32)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "value", baseType: !91, size: 32, align: 32, offset: 32)
!104 = !DIGlobalVariableExpression(var: !105, expr: !DIExpression())
!105 = distinct !DIGlobalVariable(name: "io.ErrShortBuffer", linkageName: "io.ErrShortBuffer", scope: !97, file: !97, line: 31, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!106 = !DIGlobalVariableExpression(var: !107, expr: !DIExpression())
!107 = distinct !DIGlobalVariable(name: "io.EOF", linkageName: "io.EOF", scope: !97, file: !97, line: 38, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!108 = !DIGlobalVariableExpression(var: !109, expr: !DIExpression())
!109 = distinct !DIGlobalVariable(name: "io.ErrUnexpectedEOF", linkageName: "io.ErrUnexpectedEOF", scope: !97, file: !97, line: 42, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!110 = !DIGlobalVariableExpression(var: !111, expr: !DIExpression())
!111 = distinct !DIGlobalVariable(name: "io.ErrNoProgress", linkageName: "io.ErrNoProgress", scope: !97, file: !97, line: 47, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "io.errWhence", linkageName: "io.errWhence", scope: !97, file: !97, line: 483, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "io.errOffset", linkageName: "io.errOffset", scope: !97, file: !97, line: 484, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "io.ErrClosedPipe", linkageName: "io.ErrClosedPipe", scope: !118, file: !118, line: 36, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!118 = !DIFile(filename: "pipe.go", directory: "/usr/local/go/src/io")
!119 = !DIGlobalVariableExpression(var: !120, expr: !DIExpression())
!120 = distinct !DIGlobalVariable(name: "math/bits.deBruijn32tab", linkageName: "math/bits.deBruijn32tab", scope: !121, file: !121, line: 38, type: !122, isLocal: false, isDefinition: true, align: 4294967295)
!121 = !DIFile(filename: "bits.go", directory: "/usr/local/go/src/math/bits")
!122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 256, align: 8, elements: !123)
!123 = !{!124}
!124 = !DISubrange(count: 32, lowerBound: 0)
!125 = !DIGlobalVariableExpression(var: !126, expr: !DIExpression())
!126 = distinct !DIGlobalVariable(name: "math/bits.deBruijn64tab", linkageName: "math/bits.deBruijn64tab", scope: !121, file: !121, line: 45, type: !127, isLocal: false, isDefinition: true, align: 4294967295)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 512, align: 8, elements: !128)
!128 = !{!129}
!129 = !DISubrange(count: 64, lowerBound: 0)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(name: "math/bits.ntz8tab", linkageName: "math/bits.ntz8tab", scope: !19, file: !19, line: 9, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(name: "math/bits.pop8tab", linkageName: "math/bits.pop8tab", scope: !19, file: !19, line: 28, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "math/bits.rev8tab", linkageName: "math/bits.rev8tab", scope: !19, file: !19, line: 47, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "math._gamP", linkageName: "math._gamP", scope: !138, file: !138, line: 66, type: !139, isLocal: false, isDefinition: true, align: 4294967295)
!138 = !DIFile(filename: "gamma.go", directory: "/usr/local/go/src/math")
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 448, align: 64, elements: !141)
!140 = !DIBasicType(name: "float64", size: 64, encoding: DW_ATE_float)
!141 = !{!142}
!142 = !DISubrange(count: 7, lowerBound: 0)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "math._gamQ", linkageName: "math._gamQ", scope: !138, file: !138, line: 75, type: !145, isLocal: false, isDefinition: true, align: 4294967295)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 512, align: 64, elements: !146)
!146 = !{!147}
!147 = !DISubrange(count: 8, lowerBound: 0)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "math._lgamA", linkageName: "math._lgamA", scope: !150, file: !150, line: 91, type: !151, isLocal: false, isDefinition: true, align: 4294967295)
!150 = !DIFile(filename: "lgamma.go", directory: "/usr/local/go/src/math")
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 768, align: 64, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 12, lowerBound: 0)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "math._lgamT", linkageName: "math._lgamT", scope: !150, file: !150, line: 123, type: !156, isLocal: false, isDefinition: true, align: 4294967295)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 960, align: 64, elements: !157)
!157 = !{!158}
!158 = !DISubrange(count: 15, lowerBound: 0)
!159 = !DIGlobalVariableExpression(var: !160, expr: !DIExpression())
!160 = distinct !DIGlobalVariable(name: "math._lgamU", linkageName: "math._lgamU", scope: !150, file: !150, line: 140, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 384, align: 64, elements: !162)
!162 = !{!163}
!163 = !DISubrange(count: 6, lowerBound: 0)
!164 = !DIGlobalVariableExpression(var: !165, expr: !DIExpression())
!165 = distinct !DIGlobalVariable(name: "math._lgamV", linkageName: "math._lgamV", scope: !150, file: !150, line: 148, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "math._lgamS", linkageName: "math._lgamS", scope: !150, file: !150, line: 114, type: !139, isLocal: false, isDefinition: true, align: 4294967295)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "math._lgamR", linkageName: "math._lgamR", scope: !150, file: !150, line: 105, type: !139, isLocal: false, isDefinition: true, align: 4294967295)
!170 = !DIGlobalVariableExpression(var: !171, expr: !DIExpression())
!171 = distinct !DIGlobalVariable(name: "math._lgamW", linkageName: "math._lgamW", scope: !150, file: !150, line: 156, type: !139, isLocal: false, isDefinition: true, align: 4294967295)
!172 = !DIGlobalVariableExpression(var: !173, expr: !DIExpression())
!173 = distinct !DIGlobalVariable(name: "math.pow10postab32", linkageName: "math.pow10postab32", scope: !174, file: !174, line: 16, type: !175, isLocal: false, isDefinition: true, align: 4294967295)
!174 = !DIFile(filename: "pow10.go", directory: "/usr/local/go/src/math")
!175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 640, align: 64, elements: !176)
!176 = !{!177}
!177 = !DISubrange(count: 10, lowerBound: 0)
!178 = !DIGlobalVariableExpression(var: !179, expr: !DIExpression())
!179 = distinct !DIGlobalVariable(name: "math.pow10tab", linkageName: "math.pow10tab", scope: !174, file: !174, line: 8, type: !180, isLocal: false, isDefinition: true, align: 4294967295)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 2048, align: 64, elements: !123)
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "math.pow10negtab32", linkageName: "math.pow10negtab32", scope: !174, file: !174, line: 21, type: !183, isLocal: false, isDefinition: true, align: 4294967295)
!183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 704, align: 64, elements: !184)
!184 = !{!185}
!185 = !DISubrange(count: 11, lowerBound: 0)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(name: "math._cos", linkageName: "math._cos", scope: !188, file: !188, line: 103, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!188 = !DIFile(filename: "sin.go", directory: "/usr/local/go/src/math")
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "math._sin", linkageName: "math._sin", scope: !188, file: !188, line: 93, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!191 = !DIGlobalVariableExpression(var: !192, expr: !DIExpression())
!192 = distinct !DIGlobalVariable(name: "math._gamS", linkageName: "math._gamS", scope: !138, file: !138, line: 85, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 320, align: 64, elements: !194)
!194 = !{!195}
!195 = !DISubrange(count: 5, lowerBound: 0)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "math.p0R8", linkageName: "math.p0R8", scope: !198, file: !198, line: 238, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!198 = !DIFile(filename: "j0.go", directory: "/usr/local/go/src/math")
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "math.p0S8", linkageName: "math.p0S8", scope: !198, file: !198, line: 246, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!201 = !DIGlobalVariableExpression(var: !202, expr: !DIExpression())
!202 = distinct !DIGlobalVariable(name: "math.p0R5", linkageName: "math.p0R5", scope: !198, file: !198, line: 255, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "math.p0S5", linkageName: "math.p0S5", scope: !198, file: !198, line: 263, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "math.p0R3", linkageName: "math.p0R3", scope: !198, file: !198, line: 272, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "math.p0S3", linkageName: "math.p0S3", scope: !198, file: !198, line: 280, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!209 = !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!210 = distinct !DIGlobalVariable(name: "math.p0R2", linkageName: "math.p0R2", scope: !198, file: !198, line: 289, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "math.p0S2", linkageName: "math.p0S2", scope: !198, file: !198, line: 297, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!213 = !DIGlobalVariableExpression(var: !214, expr: !DIExpression())
!214 = distinct !DIGlobalVariable(name: "math.q0R8", linkageName: "math.q0R8", scope: !198, file: !198, line: 337, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!215 = !DIGlobalVariableExpression(var: !216, expr: !DIExpression())
!216 = distinct !DIGlobalVariable(name: "math.q0S8", linkageName: "math.q0S8", scope: !198, file: !198, line: 345, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "math.q0R5", linkageName: "math.q0R5", scope: !198, file: !198, line: 355, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!219 = !DIGlobalVariableExpression(var: !220, expr: !DIExpression())
!220 = distinct !DIGlobalVariable(name: "math.q0S5", linkageName: "math.q0S5", scope: !198, file: !198, line: 363, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "math.q0R3", linkageName: "math.q0R3", scope: !198, file: !198, line: 373, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!223 = !DIGlobalVariableExpression(var: !224, expr: !DIExpression())
!224 = distinct !DIGlobalVariable(name: "math.q0S3", linkageName: "math.q0S3", scope: !198, file: !198, line: 381, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(name: "math.q0R2", linkageName: "math.q0R2", scope: !198, file: !198, line: 391, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "math.q0S2", linkageName: "math.q0S2", scope: !198, file: !198, line: 399, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(name: "math.p1R8", linkageName: "math.p1R8", scope: !231, file: !231, line: 233, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!231 = !DIFile(filename: "j1.go", directory: "/usr/local/go/src/math")
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "math.p1S8", linkageName: "math.p1S8", scope: !231, file: !231, line: 241, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "math.p1R5", linkageName: "math.p1R5", scope: !231, file: !231, line: 250, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(name: "math.p1S5", linkageName: "math.p1S5", scope: !231, file: !231, line: 258, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!238 = !DIGlobalVariableExpression(var: !239, expr: !DIExpression())
!239 = distinct !DIGlobalVariable(name: "math.p1R3", linkageName: "math.p1R3", scope: !231, file: !231, line: 267, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!240 = !DIGlobalVariableExpression(var: !241, expr: !DIExpression())
!241 = distinct !DIGlobalVariable(name: "math.p1S3", linkageName: "math.p1S3", scope: !231, file: !231, line: 275, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!242 = !DIGlobalVariableExpression(var: !243, expr: !DIExpression())
!243 = distinct !DIGlobalVariable(name: "math.p1R2", linkageName: "math.p1R2", scope: !231, file: !231, line: 284, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!244 = !DIGlobalVariableExpression(var: !245, expr: !DIExpression())
!245 = distinct !DIGlobalVariable(name: "math.p1S2", linkageName: "math.p1S2", scope: !231, file: !231, line: 292, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(name: "math.q1R8", linkageName: "math.q1R8", scope: !231, file: !231, line: 332, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(name: "math.q1S8", linkageName: "math.q1S8", scope: !231, file: !231, line: 340, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!250 = !DIGlobalVariableExpression(var: !251, expr: !DIExpression())
!251 = distinct !DIGlobalVariable(name: "math.q1R5", linkageName: "math.q1R5", scope: !231, file: !231, line: 350, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "math.q1S5", linkageName: "math.q1S5", scope: !231, file: !231, line: 358, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!254 = !DIGlobalVariableExpression(var: !255, expr: !DIExpression())
!255 = distinct !DIGlobalVariable(name: "math.q1R3", linkageName: "math.q1R3", scope: !231, file: !231, line: 368, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "math.q1S3", linkageName: "math.q1S3", scope: !231, file: !231, line: 376, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "math.q1R2", linkageName: "math.q1R2", scope: !231, file: !231, line: 386, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "math.q1S2", linkageName: "math.q1S2", scope: !231, file: !231, line: 394, type: !161, isLocal: false, isDefinition: true, align: 4294967295)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "math._tanP", linkageName: "math._tanP", scope: !264, file: !264, line: 63, type: !265, isLocal: false, isDefinition: true, align: 4294967295)
!264 = !DIFile(filename: "tan.go", directory: "/usr/local/go/src/math")
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 192, align: 64, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 3, lowerBound: 0)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "math._tanQ", linkageName: "math._tanQ", scope: !264, file: !264, line: 68, type: !193, isLocal: false, isDefinition: true, align: 4294967295)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "math.tanhP", linkageName: "math.tanhP", scope: !272, file: !272, line: 57, type: !265, isLocal: false, isDefinition: true, align: 4294967295)
!272 = !DIFile(filename: "tanh.go", directory: "/usr/local/go/src/math")
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "math.tanhQ", linkageName: "math.tanhQ", scope: !272, file: !272, line: 62, type: !265, isLocal: false, isDefinition: true, align: 4294967295)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "math.mPi4", linkageName: "math.mPi4", scope: !277, file: !277, line: 73, type: !49, isLocal: false, isDefinition: true, align: 4294967295)
!277 = !DIFile(filename: "trig_reduce.go", directory: "/usr/local/go/src/math")
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "unicode._TurkishCase", linkageName: "unicode._TurkishCase", scope: !280, file: !280, line: 13, type: !281, isLocal: false, isDefinition: true, align: 4294967295)
!280 = !DIFile(filename: "casetables.go", directory: "/usr/local/go/src/unicode")
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.SpecialCase", baseType: !282)
!282 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]unicode.CaseRange", size: 96, align: 32, elements: !283)
!283 = !{!284, !296, !297}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !285, size: 32, align: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 32, align: 32, dwarfAddressSpace: 0)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.CaseRange", baseType: !287)
!287 = !DICompositeType(tag: DW_TAG_structure_type, size: 160, align: 32, elements: !288)
!288 = !{!289, !291, !292}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "Lo", baseType: !290, size: 32, align: 32)
!290 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "Hi", baseType: !290, size: 32, align: 32, offset: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "Delta", baseType: !293, size: 96, align: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.d", baseType: !294)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 96, align: 32, elements: !266)
!295 = !DIBasicType(name: "rune", size: 32, encoding: DW_ATE_signed)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "len", baseType: !55, size: 32, align: 32, offset: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "cap", baseType: !55, size: 32, align: 32, offset: 64)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "unicode.TurkishCase", linkageName: "unicode.TurkishCase", scope: !280, file: !280, line: 12, type: !281, isLocal: false, isDefinition: true, align: 4294967295)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "unicode.AzeriCase", linkageName: "unicode.AzeriCase", scope: !280, file: !280, line: 20, type: !281, isLocal: false, isDefinition: true, align: 4294967295)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "unicode._C", linkageName: "unicode._C", scope: !304, file: !304, line: 48, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!304 = !DIFile(filename: "tables.go", directory: "/usr/local/go/src/unicode")
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32, align: 32, dwarfAddressSpace: 0)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.RangeTable", baseType: !307)
!307 = !DICompositeType(tag: DW_TAG_structure_type, size: 224, align: 32, elements: !308)
!308 = !{!309, !321, !330}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "R16", baseType: !310, size: 96, align: 32)
!310 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]unicode.Range16", size: 96, align: 32, elements: !311)
!311 = !{!312, !296, !297}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !313, size: 32, align: 32)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32, align: 32, dwarfAddressSpace: 0)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.Range16", baseType: !315)
!315 = !DICompositeType(tag: DW_TAG_structure_type, size: 48, align: 16, elements: !316)
!316 = !{!317, !319, !320}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "Lo", baseType: !318, size: 16, align: 16)
!318 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "Hi", baseType: !318, size: 16, align: 16, offset: 16)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "Stride", baseType: !318, size: 16, align: 16, offset: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "R32", baseType: !322, size: 96, align: 32, offset: 96)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]unicode.Range32", size: 96, align: 32, elements: !323)
!323 = !{!324, !296, !297}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !325, size: 32, align: 32)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32, align: 32, dwarfAddressSpace: 0)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.Range32", baseType: !327)
!327 = !DICompositeType(tag: DW_TAG_structure_type, size: 96, align: 32, elements: !328)
!328 = !{!289, !291, !329}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "Stride", baseType: !290, size: 32, align: 32, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "LatinOffset", baseType: !30, size: 32, align: 32, offset: 192)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "unicode._Cc", linkageName: "unicode._Cc", scope: !304, file: !304, line: 78, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "unicode._Cf", linkageName: "unicode._Cf", scope: !304, file: !304, line: 86, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "unicode._Co", linkageName: "unicode._Co", scope: !304, file: !304, line: 110, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(name: "unicode._Cs", linkageName: "unicode._Cs", scope: !304, file: !304, line: 120, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "unicode._L", linkageName: "unicode._L", scope: !304, file: !304, line: 126, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "unicode._Ll", linkageName: "unicode._Ll", scope: !304, file: !304, line: 709, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "unicode._Lm", linkageName: "unicode._Lm", scope: !304, file: !304, line: 871, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "unicode._Lo", linkageName: "unicode._Lo", scope: !304, file: !304, line: 924, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "unicode._Lt", linkageName: "unicode._Lt", scope: !304, file: !304, line: 1384, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "unicode._Lu", linkageName: "unicode._Lu", scope: !304, file: !304, line: 1396, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "unicode._M", linkageName: "unicode._M", scope: !304, file: !304, line: 1547, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(name: "unicode._Mc", linkageName: "unicode._Mc", scope: !304, file: !304, line: 1824, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!355 = !DIGlobalVariableExpression(var: !356, expr: !DIExpression())
!356 = distinct !DIGlobalVariable(name: "unicode._Me", linkageName: "unicode._Me", scope: !304, file: !304, line: 1978, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "unicode._Mn", linkageName: "unicode._Mn", scope: !304, file: !304, line: 1988, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "unicode._N", linkageName: "unicode._N", scope: !304, file: !304, line: 2280, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "unicode._Nd", linkageName: "unicode._Nd", scope: !304, file: !304, line: 2416, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!363 = !DIGlobalVariableExpression(var: !364, expr: !DIExpression())
!364 = distinct !DIGlobalVariable(name: "unicode._Nl", linkageName: "unicode._Nl", scope: !304, file: !304, line: 2483, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "unicode._No", linkageName: "unicode._No", scope: !304, file: !304, line: 2501, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "unicode._P", linkageName: "unicode._P", scope: !304, file: !304, line: 2578, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "unicode._Pc", linkageName: "unicode._Pc", scope: !304, file: !304, line: 2743, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "unicode._Pd", linkageName: "unicode._Pd", scope: !304, file: !304, line: 2753, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "unicode._Pe", linkageName: "unicode._Pe", scope: !304, file: !304, line: 2769, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!375 = !DIGlobalVariableExpression(var: !376, expr: !DIExpression())
!376 = distinct !DIGlobalVariable(name: "unicode._Pf", linkageName: "unicode._Pf", scope: !304, file: !304, line: 2797, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "unicode._Pi", linkageName: "unicode._Pi", scope: !304, file: !304, line: 2807, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "unicode._Po", linkageName: "unicode._Po", scope: !304, file: !304, line: 2818, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "unicode._Ps", linkageName: "unicode._Ps", scope: !304, file: !304, line: 2981, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "unicode._S", linkageName: "unicode._S", scope: !304, file: !304, line: 3012, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "unicode._Sc", linkageName: "unicode._Sc", scope: !304, file: !304, line: 3216, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "unicode._Sk", linkageName: "unicode._Sk", scope: !304, file: !304, line: 3239, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "unicode._Sm", linkageName: "unicode._Sm", scope: !304, file: !304, line: 3271, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "unicode._So", linkageName: "unicode._So", scope: !304, file: !304, line: 3328, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "unicode._Z", linkageName: "unicode._Z", scope: !304, file: !304, line: 3499, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "unicode._Zl", linkageName: "unicode._Zl", scope: !304, file: !304, line: 3511, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!397 = !DIGlobalVariableExpression(var: !398, expr: !DIExpression())
!398 = distinct !DIGlobalVariable(name: "unicode._Zp", linkageName: "unicode._Zp", scope: !304, file: !304, line: 3517, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "unicode._Zs", linkageName: "unicode._Zs", scope: !304, file: !304, line: 3523, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "unicode.Cc", linkageName: "unicode.Cc", scope: !304, file: !304, line: 3536, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!403 = !DIGlobalVariableExpression(var: !404, expr: !DIExpression())
!404 = distinct !DIGlobalVariable(name: "unicode.Cf", linkageName: "unicode.Cf", scope: !304, file: !304, line: 3537, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!405 = !DIGlobalVariableExpression(var: !406, expr: !DIExpression())
!406 = distinct !DIGlobalVariable(name: "unicode.Co", linkageName: "unicode.Co", scope: !304, file: !304, line: 3538, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "unicode.Cs", linkageName: "unicode.Cs", scope: !304, file: !304, line: 3539, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "unicode.Digit", linkageName: "unicode.Digit", scope: !304, file: !304, line: 3540, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!411 = !DIGlobalVariableExpression(var: !412, expr: !DIExpression())
!412 = distinct !DIGlobalVariable(name: "unicode.Nd", linkageName: "unicode.Nd", scope: !304, file: !304, line: 3541, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "unicode.Letter", linkageName: "unicode.Letter", scope: !304, file: !304, line: 3542, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "unicode.L", linkageName: "unicode.L", scope: !304, file: !304, line: 3543, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "unicode.Lm", linkageName: "unicode.Lm", scope: !304, file: !304, line: 3544, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "unicode.Lo", linkageName: "unicode.Lo", scope: !304, file: !304, line: 3545, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "unicode.Lower", linkageName: "unicode.Lower", scope: !304, file: !304, line: 3546, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "unicode.Ll", linkageName: "unicode.Ll", scope: !304, file: !304, line: 3547, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(name: "unicode.Mark", linkageName: "unicode.Mark", scope: !304, file: !304, line: 3548, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!427 = !DIGlobalVariableExpression(var: !428, expr: !DIExpression())
!428 = distinct !DIGlobalVariable(name: "unicode.M", linkageName: "unicode.M", scope: !304, file: !304, line: 3549, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!429 = !DIGlobalVariableExpression(var: !430, expr: !DIExpression())
!430 = distinct !DIGlobalVariable(name: "unicode.Mc", linkageName: "unicode.Mc", scope: !304, file: !304, line: 3550, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "unicode.Me", linkageName: "unicode.Me", scope: !304, file: !304, line: 3551, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "unicode.Mn", linkageName: "unicode.Mn", scope: !304, file: !304, line: 3552, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "unicode.Nl", linkageName: "unicode.Nl", scope: !304, file: !304, line: 3553, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!437 = !DIGlobalVariableExpression(var: !438, expr: !DIExpression())
!438 = distinct !DIGlobalVariable(name: "unicode.No", linkageName: "unicode.No", scope: !304, file: !304, line: 3554, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!439 = !DIGlobalVariableExpression(var: !440, expr: !DIExpression())
!440 = distinct !DIGlobalVariable(name: "unicode.Number", linkageName: "unicode.Number", scope: !304, file: !304, line: 3555, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "unicode.N", linkageName: "unicode.N", scope: !304, file: !304, line: 3556, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "unicode.Other", linkageName: "unicode.Other", scope: !304, file: !304, line: 3557, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "unicode.C", linkageName: "unicode.C", scope: !304, file: !304, line: 3558, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "unicode.Pc", linkageName: "unicode.Pc", scope: !304, file: !304, line: 3559, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "unicode.Pd", linkageName: "unicode.Pd", scope: !304, file: !304, line: 3560, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "unicode.Pe", linkageName: "unicode.Pe", scope: !304, file: !304, line: 3561, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "unicode.Pf", linkageName: "unicode.Pf", scope: !304, file: !304, line: 3562, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "unicode.Pi", linkageName: "unicode.Pi", scope: !304, file: !304, line: 3563, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!457 = !DIGlobalVariableExpression(var: !458, expr: !DIExpression())
!458 = distinct !DIGlobalVariable(name: "unicode.Po", linkageName: "unicode.Po", scope: !304, file: !304, line: 3564, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "unicode.Ps", linkageName: "unicode.Ps", scope: !304, file: !304, line: 3565, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!461 = !DIGlobalVariableExpression(var: !462, expr: !DIExpression())
!462 = distinct !DIGlobalVariable(name: "unicode.Punct", linkageName: "unicode.Punct", scope: !304, file: !304, line: 3566, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "unicode.P", linkageName: "unicode.P", scope: !304, file: !304, line: 3567, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "unicode.Sc", linkageName: "unicode.Sc", scope: !304, file: !304, line: 3568, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "unicode.Sk", linkageName: "unicode.Sk", scope: !304, file: !304, line: 3569, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "unicode.Sm", linkageName: "unicode.Sm", scope: !304, file: !304, line: 3570, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!471 = !DIGlobalVariableExpression(var: !472, expr: !DIExpression())
!472 = distinct !DIGlobalVariable(name: "unicode.So", linkageName: "unicode.So", scope: !304, file: !304, line: 3571, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!473 = !DIGlobalVariableExpression(var: !474, expr: !DIExpression())
!474 = distinct !DIGlobalVariable(name: "unicode.Space", linkageName: "unicode.Space", scope: !304, file: !304, line: 3572, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!475 = !DIGlobalVariableExpression(var: !476, expr: !DIExpression())
!476 = distinct !DIGlobalVariable(name: "unicode.Z", linkageName: "unicode.Z", scope: !304, file: !304, line: 3573, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "unicode.Symbol", linkageName: "unicode.Symbol", scope: !304, file: !304, line: 3574, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "unicode.S", linkageName: "unicode.S", scope: !304, file: !304, line: 3575, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!481 = !DIGlobalVariableExpression(var: !482, expr: !DIExpression())
!482 = distinct !DIGlobalVariable(name: "unicode.PrintRanges", linkageName: "unicode.PrintRanges", scope: !483, file: !483, line: 29, type: !484, isLocal: false, isDefinition: true, align: 4294967295)
!483 = !DIFile(filename: "graphic.go", directory: "/usr/local/go/src/unicode")
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]*unicode.RangeTable", size: 96, align: 32, elements: !485)
!485 = !{!486, !296, !297}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !487, size: 32, align: 32)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 32, align: 32, dwarfAddressSpace: 0)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "unicode.Title", linkageName: "unicode.Title", scope: !304, file: !304, line: 3576, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "unicode.Lt", linkageName: "unicode.Lt", scope: !304, file: !304, line: 3577, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "unicode.Upper", linkageName: "unicode.Upper", scope: !304, file: !304, line: 3578, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "unicode.Lu", linkageName: "unicode.Lu", scope: !304, file: !304, line: 3579, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "unicode.Zl", linkageName: "unicode.Zl", scope: !304, file: !304, line: 3580, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "unicode.Zp", linkageName: "unicode.Zp", scope: !304, file: !304, line: 3581, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "unicode.Zs", linkageName: "unicode.Zs", scope: !304, file: !304, line: 3582, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "unicode.GraphicRanges", linkageName: "unicode.GraphicRanges", scope: !483, file: !483, line: 23, type: !484, isLocal: false, isDefinition: true, align: 4294967295)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "unicode.Categories", linkageName: "unicode.Categories", scope: !304, file: !304, line: 9, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32, align: 32, dwarfAddressSpace: 0)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.hashmap", baseType: !508)
!508 = !DICompositeType(tag: DW_TAG_structure_type, size: 128, align: 32, elements: !509)
!509 = !{!510, !511, !512, !513, !514, !515}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "next", baseType: !506, size: 32, align: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", baseType: !91, size: 32, align: 32, offset: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "count", baseType: !55, size: 32, align: 32, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "keySize", baseType: !4, size: 8, align: 8, offset: 96)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "valueSize", baseType: !4, size: 8, align: 8, offset: 104)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "bucketBits", baseType: !4, size: 8, align: 8, offset: 112)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "unicode._Adlam", linkageName: "unicode._Adlam", scope: !304, file: !304, line: 3741, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "unicode._Ahom", linkageName: "unicode._Ahom", scope: !304, file: !304, line: 3750, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "unicode._Anatolian_Hieroglyphs", linkageName: "unicode._Anatolian_Hieroglyphs", scope: !304, file: !304, line: 3759, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "unicode._Arabic", linkageName: "unicode._Arabic", scope: !304, file: !304, line: 3766, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "unicode._Armenian", linkageName: "unicode._Armenian", scope: !304, file: !304, line: 3820, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "unicode._Avestan", linkageName: "unicode._Avestan", scope: !304, file: !304, line: 3830, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "unicode._Balinese", linkageName: "unicode._Balinese", scope: !304, file: !304, line: 3838, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "unicode._Bamum", linkageName: "unicode._Bamum", scope: !304, file: !304, line: 3845, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "unicode._Bassa_Vah", linkageName: "unicode._Bassa_Vah", scope: !304, file: !304, line: 3854, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "unicode._Batak", linkageName: "unicode._Batak", scope: !304, file: !304, line: 3862, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "unicode._Bengali", linkageName: "unicode._Bengali", scope: !304, file: !304, line: 3869, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "unicode._Bhaiksuki", linkageName: "unicode._Bhaiksuki", scope: !304, file: !304, line: 3888, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "unicode._Bopomofo", linkageName: "unicode._Bopomofo", scope: !304, file: !304, line: 3898, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "unicode._Brahmi", linkageName: "unicode._Brahmi", scope: !304, file: !304, line: 3906, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "unicode._Braille", linkageName: "unicode._Braille", scope: !304, file: !304, line: 3915, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "unicode._Buginese", linkageName: "unicode._Buginese", scope: !304, file: !304, line: 3921, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "unicode._Buhid", linkageName: "unicode._Buhid", scope: !304, file: !304, line: 3928, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!550 = !DIGlobalVariableExpression(var: !551, expr: !DIExpression())
!551 = distinct !DIGlobalVariable(name: "unicode._Canadian_Aboriginal", linkageName: "unicode._Canadian_Aboriginal", scope: !304, file: !304, line: 3934, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "unicode._Carian", linkageName: "unicode._Carian", scope: !304, file: !304, line: 3941, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "unicode._Caucasian_Albanian", linkageName: "unicode._Caucasian_Albanian", scope: !304, file: !304, line: 3948, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "unicode._Chakma", linkageName: "unicode._Chakma", scope: !304, file: !304, line: 3956, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "unicode._Cham", linkageName: "unicode._Cham", scope: !304, file: !304, line: 3964, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "unicode._Cherokee", linkageName: "unicode._Cherokee", scope: !304, file: !304, line: 3973, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "unicode._Common", linkageName: "unicode._Common", scope: !304, file: !304, line: 3981, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "unicode._Coptic", linkageName: "unicode._Coptic", scope: !304, file: !304, line: 4151, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "unicode._Cuneiform", linkageName: "unicode._Cuneiform", scope: !304, file: !304, line: 4159, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!568 = !DIGlobalVariableExpression(var: !569, expr: !DIExpression())
!569 = distinct !DIGlobalVariable(name: "unicode._Cypriot", linkageName: "unicode._Cypriot", scope: !304, file: !304, line: 4169, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "unicode._Cyrillic", linkageName: "unicode._Cyrillic", scope: !304, file: !304, line: 4180, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "unicode._Deseret", linkageName: "unicode._Deseret", scope: !304, file: !304, line: 4192, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "unicode._Devanagari", linkageName: "unicode._Devanagari", scope: !304, file: !304, line: 4199, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "unicode._Dogra", linkageName: "unicode._Dogra", scope: !304, file: !304, line: 4208, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "unicode._Duployan", linkageName: "unicode._Duployan", scope: !304, file: !304, line: 4215, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "unicode._Egyptian_Hieroglyphs", linkageName: "unicode._Egyptian_Hieroglyphs", scope: !304, file: !304, line: 4226, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "unicode._Elbasan", linkageName: "unicode._Elbasan", scope: !304, file: !304, line: 4234, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "unicode._Elymaic", linkageName: "unicode._Elymaic", scope: !304, file: !304, line: 4241, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!586 = !DIGlobalVariableExpression(var: !587, expr: !DIExpression())
!587 = distinct !DIGlobalVariable(name: "unicode._Ethiopic", linkageName: "unicode._Ethiopic", scope: !304, file: !304, line: 4248, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "unicode._Georgian", linkageName: "unicode._Georgian", scope: !304, file: !304, line: 4285, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "unicode._Glagolitic", linkageName: "unicode._Glagolitic", scope: !304, file: !304, line: 4298, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "unicode._Gothic", linkageName: "unicode._Gothic", scope: !304, file: !304, line: 4312, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "unicode._Grantha", linkageName: "unicode._Grantha", scope: !304, file: !304, line: 4319, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "unicode._Greek", linkageName: "unicode._Greek", scope: !304, file: !304, line: 4339, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "unicode._Gujarati", linkageName: "unicode._Gujarati", scope: !304, file: !304, line: 4378, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "unicode._Gunjala_Gondi", linkageName: "unicode._Gunjala_Gondi", scope: !304, file: !304, line: 4397, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "unicode._Gurmukhi", linkageName: "unicode._Gurmukhi", scope: !304, file: !304, line: 4409, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "unicode._Han", linkageName: "unicode._Han", scope: !304, file: !304, line: 4430, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "unicode._Hangul", linkageName: "unicode._Hangul", scope: !304, file: !304, line: 4453, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "unicode._Hanifi_Rohingya", linkageName: "unicode._Hanifi_Rohingya", scope: !304, file: !304, line: 4472, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "unicode._Hanunoo", linkageName: "unicode._Hanunoo", scope: !304, file: !304, line: 4480, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "unicode._Hatran", linkageName: "unicode._Hatran", scope: !304, file: !304, line: 4486, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "unicode._Hebrew", linkageName: "unicode._Hebrew", scope: !304, file: !304, line: 4495, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "unicode._Hiragana", linkageName: "unicode._Hiragana", scope: !304, file: !304, line: 4509, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "unicode._Imperial_Aramaic", linkageName: "unicode._Imperial_Aramaic", scope: !304, file: !304, line: 4521, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "unicode._Inherited", linkageName: "unicode._Inherited", scope: !304, file: !304, line: 4529, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "unicode._Inscriptional_Pahlavi", linkageName: "unicode._Inscriptional_Pahlavi", scope: !304, file: !304, line: 4562, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "unicode._Inscriptional_Parthian", linkageName: "unicode._Inscriptional_Parthian", scope: !304, file: !304, line: 4570, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "unicode._Javanese", linkageName: "unicode._Javanese", scope: !304, file: !304, line: 4578, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "unicode._Kaithi", linkageName: "unicode._Kaithi", scope: !304, file: !304, line: 4586, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "unicode._Kannada", linkageName: "unicode._Kannada", scope: !304, file: !304, line: 4594, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "unicode._Katakana", linkageName: "unicode._Katakana", scope: !304, file: !304, line: 4612, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "unicode._Kayah_Li", linkageName: "unicode._Kayah_Li", scope: !304, file: !304, line: 4628, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "unicode._Kharoshthi", linkageName: "unicode._Kharoshthi", scope: !304, file: !304, line: 4635, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "unicode._Khmer", linkageName: "unicode._Khmer", scope: !304, file: !304, line: 4649, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "unicode._Khojki", linkageName: "unicode._Khojki", scope: !304, file: !304, line: 4658, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "unicode._Khudawadi", linkageName: "unicode._Khudawadi", scope: !304, file: !304, line: 4666, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "unicode._Lao", linkageName: "unicode._Lao", scope: !304, file: !304, line: 4674, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "unicode._Latin", linkageName: "unicode._Latin", scope: !304, file: !304, line: 4690, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "unicode._Lepcha", linkageName: "unicode._Lepcha", scope: !304, file: !304, line: 4725, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "unicode._Limbu", linkageName: "unicode._Limbu", scope: !304, file: !304, line: 4733, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "unicode._Linear_A", linkageName: "unicode._Linear_A", scope: !304, file: !304, line: 4743, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "unicode._Linear_B", linkageName: "unicode._Linear_B", scope: !304, file: !304, line: 4752, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!656 = !DIGlobalVariableExpression(var: !657, expr: !DIExpression())
!657 = distinct !DIGlobalVariable(name: "unicode._Lisu", linkageName: "unicode._Lisu", scope: !304, file: !304, line: 4765, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "unicode._Lycian", linkageName: "unicode._Lycian", scope: !304, file: !304, line: 4771, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "unicode._Lydian", linkageName: "unicode._Lydian", scope: !304, file: !304, line: 4778, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!662 = !DIGlobalVariableExpression(var: !663, expr: !DIExpression())
!663 = distinct !DIGlobalVariable(name: "unicode._Mahajani", linkageName: "unicode._Mahajani", scope: !304, file: !304, line: 4786, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "unicode._Makasar", linkageName: "unicode._Makasar", scope: !304, file: !304, line: 4793, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "unicode._Malayalam", linkageName: "unicode._Malayalam", scope: !304, file: !304, line: 4800, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "unicode._Mandaic", linkageName: "unicode._Mandaic", scope: !304, file: !304, line: 4813, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "unicode._Manichaean", linkageName: "unicode._Manichaean", scope: !304, file: !304, line: 4820, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "unicode._Marchen", linkageName: "unicode._Marchen", scope: !304, file: !304, line: 4828, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "unicode._Masaram_Gondi", linkageName: "unicode._Masaram_Gondi", scope: !304, file: !304, line: 4837, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "unicode._Medefaidrin", linkageName: "unicode._Medefaidrin", scope: !304, file: !304, line: 4850, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "unicode._Meetei_Mayek", linkageName: "unicode._Meetei_Mayek", scope: !304, file: !304, line: 4857, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "unicode._Mende_Kikakui", linkageName: "unicode._Mende_Kikakui", scope: !304, file: !304, line: 4865, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "unicode._Meroitic_Cursive", linkageName: "unicode._Meroitic_Cursive", scope: !304, file: !304, line: 4873, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "unicode._Meroitic_Hieroglyphs", linkageName: "unicode._Meroitic_Hieroglyphs", scope: !304, file: !304, line: 4882, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "unicode._Miao", linkageName: "unicode._Miao", scope: !304, file: !304, line: 4889, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "unicode._Modi", linkageName: "unicode._Modi", scope: !304, file: !304, line: 4898, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!690 = !DIGlobalVariableExpression(var: !691, expr: !DIExpression())
!691 = distinct !DIGlobalVariable(name: "unicode._Mongolian", linkageName: "unicode._Mongolian", scope: !304, file: !304, line: 4906, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "unicode._Mro", linkageName: "unicode._Mro", scope: !304, file: !304, line: 4920, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "unicode._Multani", linkageName: "unicode._Multani", scope: !304, file: !304, line: 4929, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "unicode._Myanmar", linkageName: "unicode._Myanmar", scope: !304, file: !304, line: 4940, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "unicode._Nabataean", linkageName: "unicode._Nabataean", scope: !304, file: !304, line: 4948, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "unicode._Nandinagari", linkageName: "unicode._Nandinagari", scope: !304, file: !304, line: 4956, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "unicode._New_Tai_Lue", linkageName: "unicode._New_Tai_Lue", scope: !304, file: !304, line: 4965, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "unicode._Newa", linkageName: "unicode._Newa", scope: !304, file: !304, line: 4974, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!706 = !DIGlobalVariableExpression(var: !707, expr: !DIExpression())
!707 = distinct !DIGlobalVariable(name: "unicode._Nko", linkageName: "unicode._Nko", scope: !304, file: !304, line: 4983, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "unicode._Nushu", linkageName: "unicode._Nushu", scope: !304, file: !304, line: 4990, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "unicode._Nyiakeng_Puachue_Hmong", linkageName: "unicode._Nyiakeng_Puachue_Hmong", scope: !304, file: !304, line: 4998, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "unicode._Ogham", linkageName: "unicode._Ogham", scope: !304, file: !304, line: 5008, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "unicode._Ol_Chiki", linkageName: "unicode._Ol_Chiki", scope: !304, file: !304, line: 5014, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "unicode._Old_Hungarian", linkageName: "unicode._Old_Hungarian", scope: !304, file: !304, line: 5020, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "unicode._Old_Italic", linkageName: "unicode._Old_Italic", scope: !304, file: !304, line: 5029, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "unicode._Old_North_Arabian", linkageName: "unicode._Old_North_Arabian", scope: !304, file: !304, line: 5037, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "unicode._Old_Permic", linkageName: "unicode._Old_Permic", scope: !304, file: !304, line: 5044, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "unicode._Old_Persian", linkageName: "unicode._Old_Persian", scope: !304, file: !304, line: 5051, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "unicode._Old_Sogdian", linkageName: "unicode._Old_Sogdian", scope: !304, file: !304, line: 5059, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "unicode._Old_South_Arabian", linkageName: "unicode._Old_South_Arabian", scope: !304, file: !304, line: 5066, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!730 = !DIGlobalVariableExpression(var: !731, expr: !DIExpression())
!731 = distinct !DIGlobalVariable(name: "unicode._Old_Turkic", linkageName: "unicode._Old_Turkic", scope: !304, file: !304, line: 5073, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "unicode._Oriya", linkageName: "unicode._Oriya", scope: !304, file: !304, line: 5080, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "unicode._Osage", linkageName: "unicode._Osage", scope: !304, file: !304, line: 5099, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "unicode._Osmanya", linkageName: "unicode._Osmanya", scope: !304, file: !304, line: 5107, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "unicode._Pahawh_Hmong", linkageName: "unicode._Pahawh_Hmong", scope: !304, file: !304, line: 5115, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "unicode._Palmyrene", linkageName: "unicode._Palmyrene", scope: !304, file: !304, line: 5126, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "unicode._Pau_Cin_Hau", linkageName: "unicode._Pau_Cin_Hau", scope: !304, file: !304, line: 5133, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "unicode._Phags_Pa", linkageName: "unicode._Phags_Pa", scope: !304, file: !304, line: 5140, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "unicode._Phoenician", linkageName: "unicode._Phoenician", scope: !304, file: !304, line: 5146, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "unicode._Psalter_Pahlavi", linkageName: "unicode._Psalter_Pahlavi", scope: !304, file: !304, line: 5154, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "unicode._Rejang", linkageName: "unicode._Rejang", scope: !304, file: !304, line: 5163, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "unicode._Runic", linkageName: "unicode._Runic", scope: !304, file: !304, line: 5170, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "unicode._Samaritan", linkageName: "unicode._Samaritan", scope: !304, file: !304, line: 5177, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "unicode._Saurashtra", linkageName: "unicode._Saurashtra", scope: !304, file: !304, line: 5184, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "unicode._Sharada", linkageName: "unicode._Sharada", scope: !304, file: !304, line: 5191, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "unicode._Shavian", linkageName: "unicode._Shavian", scope: !304, file: !304, line: 5199, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "unicode._Siddham", linkageName: "unicode._Siddham", scope: !304, file: !304, line: 5206, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "unicode._SignWriting", linkageName: "unicode._SignWriting", scope: !304, file: !304, line: 5214, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "unicode._Sinhala", linkageName: "unicode._Sinhala", scope: !304, file: !304, line: 5223, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "unicode._Sogdian", linkageName: "unicode._Sogdian", scope: !304, file: !304, line: 5243, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "unicode._Sora_Sompeng", linkageName: "unicode._Sora_Sompeng", scope: !304, file: !304, line: 5250, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "unicode._Soyombo", linkageName: "unicode._Soyombo", scope: !304, file: !304, line: 5258, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "unicode._Sundanese", linkageName: "unicode._Sundanese", scope: !304, file: !304, line: 5265, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "unicode._Syloti_Nagri", linkageName: "unicode._Syloti_Nagri", scope: !304, file: !304, line: 5272, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "unicode._Syriac", linkageName: "unicode._Syriac", scope: !304, file: !304, line: 5278, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "unicode._Tagalog", linkageName: "unicode._Tagalog", scope: !304, file: !304, line: 5287, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "unicode._Tagbanwa", linkageName: "unicode._Tagbanwa", scope: !304, file: !304, line: 5294, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "unicode._Tai_Le", linkageName: "unicode._Tai_Le", scope: !304, file: !304, line: 5302, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "unicode._Tai_Tham", linkageName: "unicode._Tai_Tham", scope: !304, file: !304, line: 5309, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "unicode._Tai_Viet", linkageName: "unicode._Tai_Viet", scope: !304, file: !304, line: 5319, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "unicode._Takri", linkageName: "unicode._Takri", scope: !304, file: !304, line: 5326, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "unicode._Tamil", linkageName: "unicode._Tamil", scope: !304, file: !304, line: 5334, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "unicode._Tangut", linkageName: "unicode._Tangut", scope: !304, file: !304, line: 5358, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "unicode._Telugu", linkageName: "unicode._Telugu", scope: !304, file: !304, line: 5367, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "unicode._Thaana", linkageName: "unicode._Thaana", scope: !304, file: !304, line: 5384, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "unicode._Thai", linkageName: "unicode._Thai", scope: !304, file: !304, line: 5390, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "unicode._Tibetan", linkageName: "unicode._Tibetan", scope: !304, file: !304, line: 5397, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "unicode._Tifinagh", linkageName: "unicode._Tifinagh", scope: !304, file: !304, line: 5409, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "unicode._Tirhuta", linkageName: "unicode._Tirhuta", scope: !304, file: !304, line: 5417, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "unicode._Ugaritic", linkageName: "unicode._Ugaritic", scope: !304, file: !304, line: 5425, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "unicode._Vai", linkageName: "unicode._Vai", scope: !304, file: !304, line: 5433, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "unicode._Wancho", linkageName: "unicode._Wancho", scope: !304, file: !304, line: 5439, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "unicode._Warang_Citi", linkageName: "unicode._Warang_Citi", scope: !304, file: !304, line: 5447, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "unicode._Yi", linkageName: "unicode._Yi", scope: !304, file: !304, line: 5455, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "unicode._Zanabazar_Square", linkageName: "unicode._Zanabazar_Square", scope: !304, file: !304, line: 5462, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "unicode.Adlam", linkageName: "unicode.Adlam", scope: !304, file: !304, line: 5471, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "unicode.Ahom", linkageName: "unicode.Ahom", scope: !304, file: !304, line: 5472, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "unicode.Anatolian_Hieroglyphs", linkageName: "unicode.Anatolian_Hieroglyphs", scope: !304, file: !304, line: 5473, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "unicode.Arabic", linkageName: "unicode.Arabic", scope: !304, file: !304, line: 5474, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "unicode.Armenian", linkageName: "unicode.Armenian", scope: !304, file: !304, line: 5475, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "unicode.Avestan", linkageName: "unicode.Avestan", scope: !304, file: !304, line: 5476, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "unicode.Balinese", linkageName: "unicode.Balinese", scope: !304, file: !304, line: 5477, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "unicode.Bamum", linkageName: "unicode.Bamum", scope: !304, file: !304, line: 5478, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "unicode.Bassa_Vah", linkageName: "unicode.Bassa_Vah", scope: !304, file: !304, line: 5479, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "unicode.Batak", linkageName: "unicode.Batak", scope: !304, file: !304, line: 5480, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "unicode.Bengali", linkageName: "unicode.Bengali", scope: !304, file: !304, line: 5481, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "unicode.Bhaiksuki", linkageName: "unicode.Bhaiksuki", scope: !304, file: !304, line: 5482, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "unicode.Bopomofo", linkageName: "unicode.Bopomofo", scope: !304, file: !304, line: 5483, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "unicode.Brahmi", linkageName: "unicode.Brahmi", scope: !304, file: !304, line: 5484, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "unicode.Braille", linkageName: "unicode.Braille", scope: !304, file: !304, line: 5485, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "unicode.Buginese", linkageName: "unicode.Buginese", scope: !304, file: !304, line: 5486, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "unicode.Buhid", linkageName: "unicode.Buhid", scope: !304, file: !304, line: 5487, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "unicode.Canadian_Aboriginal", linkageName: "unicode.Canadian_Aboriginal", scope: !304, file: !304, line: 5488, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "unicode.Carian", linkageName: "unicode.Carian", scope: !304, file: !304, line: 5489, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "unicode.Caucasian_Albanian", linkageName: "unicode.Caucasian_Albanian", scope: !304, file: !304, line: 5490, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "unicode.Chakma", linkageName: "unicode.Chakma", scope: !304, file: !304, line: 5491, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "unicode.Cham", linkageName: "unicode.Cham", scope: !304, file: !304, line: 5492, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "unicode.Cherokee", linkageName: "unicode.Cherokee", scope: !304, file: !304, line: 5493, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "unicode.Common", linkageName: "unicode.Common", scope: !304, file: !304, line: 5494, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "unicode.Coptic", linkageName: "unicode.Coptic", scope: !304, file: !304, line: 5495, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "unicode.Cuneiform", linkageName: "unicode.Cuneiform", scope: !304, file: !304, line: 5496, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "unicode.Cypriot", linkageName: "unicode.Cypriot", scope: !304, file: !304, line: 5497, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "unicode.Cyrillic", linkageName: "unicode.Cyrillic", scope: !304, file: !304, line: 5498, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "unicode.Deseret", linkageName: "unicode.Deseret", scope: !304, file: !304, line: 5499, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "unicode.Devanagari", linkageName: "unicode.Devanagari", scope: !304, file: !304, line: 5500, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "unicode.Dogra", linkageName: "unicode.Dogra", scope: !304, file: !304, line: 5501, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "unicode.Duployan", linkageName: "unicode.Duployan", scope: !304, file: !304, line: 5502, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "unicode.Egyptian_Hieroglyphs", linkageName: "unicode.Egyptian_Hieroglyphs", scope: !304, file: !304, line: 5503, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "unicode.Elbasan", linkageName: "unicode.Elbasan", scope: !304, file: !304, line: 5504, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "unicode.Elymaic", linkageName: "unicode.Elymaic", scope: !304, file: !304, line: 5505, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "unicode.Ethiopic", linkageName: "unicode.Ethiopic", scope: !304, file: !304, line: 5506, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "unicode.Georgian", linkageName: "unicode.Georgian", scope: !304, file: !304, line: 5507, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "unicode.Glagolitic", linkageName: "unicode.Glagolitic", scope: !304, file: !304, line: 5508, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "unicode.Gothic", linkageName: "unicode.Gothic", scope: !304, file: !304, line: 5509, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "unicode.Grantha", linkageName: "unicode.Grantha", scope: !304, file: !304, line: 5510, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "unicode.Greek", linkageName: "unicode.Greek", scope: !304, file: !304, line: 5511, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "unicode.Gujarati", linkageName: "unicode.Gujarati", scope: !304, file: !304, line: 5512, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "unicode.Gunjala_Gondi", linkageName: "unicode.Gunjala_Gondi", scope: !304, file: !304, line: 5513, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "unicode.Gurmukhi", linkageName: "unicode.Gurmukhi", scope: !304, file: !304, line: 5514, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "unicode.Han", linkageName: "unicode.Han", scope: !304, file: !304, line: 5515, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "unicode.Hangul", linkageName: "unicode.Hangul", scope: !304, file: !304, line: 5516, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "unicode.Hanifi_Rohingya", linkageName: "unicode.Hanifi_Rohingya", scope: !304, file: !304, line: 5517, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "unicode.Hanunoo", linkageName: "unicode.Hanunoo", scope: !304, file: !304, line: 5518, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "unicode.Hatran", linkageName: "unicode.Hatran", scope: !304, file: !304, line: 5519, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "unicode.Hebrew", linkageName: "unicode.Hebrew", scope: !304, file: !304, line: 5520, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "unicode.Hiragana", linkageName: "unicode.Hiragana", scope: !304, file: !304, line: 5521, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "unicode.Imperial_Aramaic", linkageName: "unicode.Imperial_Aramaic", scope: !304, file: !304, line: 5522, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "unicode.Inherited", linkageName: "unicode.Inherited", scope: !304, file: !304, line: 5523, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "unicode.Inscriptional_Pahlavi", linkageName: "unicode.Inscriptional_Pahlavi", scope: !304, file: !304, line: 5524, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "unicode.Inscriptional_Parthian", linkageName: "unicode.Inscriptional_Parthian", scope: !304, file: !304, line: 5525, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "unicode.Javanese", linkageName: "unicode.Javanese", scope: !304, file: !304, line: 5526, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "unicode.Kaithi", linkageName: "unicode.Kaithi", scope: !304, file: !304, line: 5527, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "unicode.Kannada", linkageName: "unicode.Kannada", scope: !304, file: !304, line: 5528, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "unicode.Katakana", linkageName: "unicode.Katakana", scope: !304, file: !304, line: 5529, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "unicode.Kayah_Li", linkageName: "unicode.Kayah_Li", scope: !304, file: !304, line: 5530, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "unicode.Kharoshthi", linkageName: "unicode.Kharoshthi", scope: !304, file: !304, line: 5531, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "unicode.Khmer", linkageName: "unicode.Khmer", scope: !304, file: !304, line: 5532, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "unicode.Khojki", linkageName: "unicode.Khojki", scope: !304, file: !304, line: 5533, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "unicode.Khudawadi", linkageName: "unicode.Khudawadi", scope: !304, file: !304, line: 5534, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "unicode.Lao", linkageName: "unicode.Lao", scope: !304, file: !304, line: 5535, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "unicode.Latin", linkageName: "unicode.Latin", scope: !304, file: !304, line: 5536, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "unicode.Lepcha", linkageName: "unicode.Lepcha", scope: !304, file: !304, line: 5537, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "unicode.Limbu", linkageName: "unicode.Limbu", scope: !304, file: !304, line: 5538, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "unicode.Linear_A", linkageName: "unicode.Linear_A", scope: !304, file: !304, line: 5539, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "unicode.Linear_B", linkageName: "unicode.Linear_B", scope: !304, file: !304, line: 5540, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "unicode.Lisu", linkageName: "unicode.Lisu", scope: !304, file: !304, line: 5541, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "unicode.Lycian", linkageName: "unicode.Lycian", scope: !304, file: !304, line: 5542, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "unicode.Lydian", linkageName: "unicode.Lydian", scope: !304, file: !304, line: 5543, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "unicode.Mahajani", linkageName: "unicode.Mahajani", scope: !304, file: !304, line: 5544, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "unicode.Makasar", linkageName: "unicode.Makasar", scope: !304, file: !304, line: 5545, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "unicode.Malayalam", linkageName: "unicode.Malayalam", scope: !304, file: !304, line: 5546, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "unicode.Mandaic", linkageName: "unicode.Mandaic", scope: !304, file: !304, line: 5547, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "unicode.Manichaean", linkageName: "unicode.Manichaean", scope: !304, file: !304, line: 5548, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "unicode.Marchen", linkageName: "unicode.Marchen", scope: !304, file: !304, line: 5549, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "unicode.Masaram_Gondi", linkageName: "unicode.Masaram_Gondi", scope: !304, file: !304, line: 5550, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "unicode.Medefaidrin", linkageName: "unicode.Medefaidrin", scope: !304, file: !304, line: 5551, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "unicode.Meetei_Mayek", linkageName: "unicode.Meetei_Mayek", scope: !304, file: !304, line: 5552, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "unicode.Mende_Kikakui", linkageName: "unicode.Mende_Kikakui", scope: !304, file: !304, line: 5553, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "unicode.Meroitic_Cursive", linkageName: "unicode.Meroitic_Cursive", scope: !304, file: !304, line: 5554, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "unicode.Meroitic_Hieroglyphs", linkageName: "unicode.Meroitic_Hieroglyphs", scope: !304, file: !304, line: 5555, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "unicode.Miao", linkageName: "unicode.Miao", scope: !304, file: !304, line: 5556, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "unicode.Modi", linkageName: "unicode.Modi", scope: !304, file: !304, line: 5557, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "unicode.Mongolian", linkageName: "unicode.Mongolian", scope: !304, file: !304, line: 5558, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "unicode.Mro", linkageName: "unicode.Mro", scope: !304, file: !304, line: 5559, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "unicode.Multani", linkageName: "unicode.Multani", scope: !304, file: !304, line: 5560, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "unicode.Myanmar", linkageName: "unicode.Myanmar", scope: !304, file: !304, line: 5561, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "unicode.Nabataean", linkageName: "unicode.Nabataean", scope: !304, file: !304, line: 5562, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "unicode.Nandinagari", linkageName: "unicode.Nandinagari", scope: !304, file: !304, line: 5563, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "unicode.New_Tai_Lue", linkageName: "unicode.New_Tai_Lue", scope: !304, file: !304, line: 5564, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "unicode.Newa", linkageName: "unicode.Newa", scope: !304, file: !304, line: 5565, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "unicode.Nko", linkageName: "unicode.Nko", scope: !304, file: !304, line: 5566, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "unicode.Nushu", linkageName: "unicode.Nushu", scope: !304, file: !304, line: 5567, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "unicode.Nyiakeng_Puachue_Hmong", linkageName: "unicode.Nyiakeng_Puachue_Hmong", scope: !304, file: !304, line: 5568, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "unicode.Ogham", linkageName: "unicode.Ogham", scope: !304, file: !304, line: 5569, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "unicode.Ol_Chiki", linkageName: "unicode.Ol_Chiki", scope: !304, file: !304, line: 5570, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "unicode.Old_Hungarian", linkageName: "unicode.Old_Hungarian", scope: !304, file: !304, line: 5571, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "unicode.Old_Italic", linkageName: "unicode.Old_Italic", scope: !304, file: !304, line: 5572, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "unicode.Old_North_Arabian", linkageName: "unicode.Old_North_Arabian", scope: !304, file: !304, line: 5573, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "unicode.Old_Permic", linkageName: "unicode.Old_Permic", scope: !304, file: !304, line: 5574, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "unicode.Old_Persian", linkageName: "unicode.Old_Persian", scope: !304, file: !304, line: 5575, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "unicode.Old_Sogdian", linkageName: "unicode.Old_Sogdian", scope: !304, file: !304, line: 5576, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(name: "unicode.Old_South_Arabian", linkageName: "unicode.Old_South_Arabian", scope: !304, file: !304, line: 5577, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "unicode.Old_Turkic", linkageName: "unicode.Old_Turkic", scope: !304, file: !304, line: 5578, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "unicode.Oriya", linkageName: "unicode.Oriya", scope: !304, file: !304, line: 5579, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "unicode.Osage", linkageName: "unicode.Osage", scope: !304, file: !304, line: 5580, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "unicode.Osmanya", linkageName: "unicode.Osmanya", scope: !304, file: !304, line: 5581, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "unicode.Pahawh_Hmong", linkageName: "unicode.Pahawh_Hmong", scope: !304, file: !304, line: 5582, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "unicode.Palmyrene", linkageName: "unicode.Palmyrene", scope: !304, file: !304, line: 5583, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "unicode.Pau_Cin_Hau", linkageName: "unicode.Pau_Cin_Hau", scope: !304, file: !304, line: 5584, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "unicode.Phags_Pa", linkageName: "unicode.Phags_Pa", scope: !304, file: !304, line: 5585, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "unicode.Phoenician", linkageName: "unicode.Phoenician", scope: !304, file: !304, line: 5586, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "unicode.Psalter_Pahlavi", linkageName: "unicode.Psalter_Pahlavi", scope: !304, file: !304, line: 5587, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "unicode.Rejang", linkageName: "unicode.Rejang", scope: !304, file: !304, line: 5588, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "unicode.Runic", linkageName: "unicode.Runic", scope: !304, file: !304, line: 5589, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "unicode.Samaritan", linkageName: "unicode.Samaritan", scope: !304, file: !304, line: 5590, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "unicode.Saurashtra", linkageName: "unicode.Saurashtra", scope: !304, file: !304, line: 5591, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "unicode.Sharada", linkageName: "unicode.Sharada", scope: !304, file: !304, line: 5592, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "unicode.Shavian", linkageName: "unicode.Shavian", scope: !304, file: !304, line: 5593, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "unicode.Siddham", linkageName: "unicode.Siddham", scope: !304, file: !304, line: 5594, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "unicode.SignWriting", linkageName: "unicode.SignWriting", scope: !304, file: !304, line: 5595, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "unicode.Sinhala", linkageName: "unicode.Sinhala", scope: !304, file: !304, line: 5596, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "unicode.Sogdian", linkageName: "unicode.Sogdian", scope: !304, file: !304, line: 5597, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "unicode.Sora_Sompeng", linkageName: "unicode.Sora_Sompeng", scope: !304, file: !304, line: 5598, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "unicode.Soyombo", linkageName: "unicode.Soyombo", scope: !304, file: !304, line: 5599, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "unicode.Sundanese", linkageName: "unicode.Sundanese", scope: !304, file: !304, line: 5600, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "unicode.Syloti_Nagri", linkageName: "unicode.Syloti_Nagri", scope: !304, file: !304, line: 5601, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "unicode.Syriac", linkageName: "unicode.Syriac", scope: !304, file: !304, line: 5602, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "unicode.Tagalog", linkageName: "unicode.Tagalog", scope: !304, file: !304, line: 5603, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "unicode.Tagbanwa", linkageName: "unicode.Tagbanwa", scope: !304, file: !304, line: 5604, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "unicode.Tai_Le", linkageName: "unicode.Tai_Le", scope: !304, file: !304, line: 5605, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "unicode.Tai_Tham", linkageName: "unicode.Tai_Tham", scope: !304, file: !304, line: 5606, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "unicode.Tai_Viet", linkageName: "unicode.Tai_Viet", scope: !304, file: !304, line: 5607, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "unicode.Takri", linkageName: "unicode.Takri", scope: !304, file: !304, line: 5608, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "unicode.Tamil", linkageName: "unicode.Tamil", scope: !304, file: !304, line: 5609, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "unicode.Tangut", linkageName: "unicode.Tangut", scope: !304, file: !304, line: 5610, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "unicode.Telugu", linkageName: "unicode.Telugu", scope: !304, file: !304, line: 5611, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "unicode.Thaana", linkageName: "unicode.Thaana", scope: !304, file: !304, line: 5612, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "unicode.Thai", linkageName: "unicode.Thai", scope: !304, file: !304, line: 5613, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "unicode.Tibetan", linkageName: "unicode.Tibetan", scope: !304, file: !304, line: 5614, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "unicode.Tifinagh", linkageName: "unicode.Tifinagh", scope: !304, file: !304, line: 5615, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "unicode.Tirhuta", linkageName: "unicode.Tirhuta", scope: !304, file: !304, line: 5616, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "unicode.Ugaritic", linkageName: "unicode.Ugaritic", scope: !304, file: !304, line: 5617, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "unicode.Vai", linkageName: "unicode.Vai", scope: !304, file: !304, line: 5618, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "unicode.Wancho", linkageName: "unicode.Wancho", scope: !304, file: !304, line: 5619, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "unicode.Warang_Citi", linkageName: "unicode.Warang_Citi", scope: !304, file: !304, line: 5620, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "unicode.Yi", linkageName: "unicode.Yi", scope: !304, file: !304, line: 5621, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "unicode.Zanabazar_Square", linkageName: "unicode.Zanabazar_Square", scope: !304, file: !304, line: 5622, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "unicode.Scripts", linkageName: "unicode.Scripts", scope: !304, file: !304, line: 3586, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "unicode._ASCII_Hex_Digit", linkageName: "unicode._ASCII_Hex_Digit", scope: !304, file: !304, line: 5664, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "unicode._Bidi_Control", linkageName: "unicode._Bidi_Control", scope: !304, file: !304, line: 5673, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "unicode._Dash", linkageName: "unicode._Dash", scope: !304, file: !304, line: 5682, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "unicode._Deprecated", linkageName: "unicode._Deprecated", scope: !304, file: !304, line: 5700, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "unicode._Diacritic", linkageName: "unicode._Diacritic", scope: !304, file: !304, line: 5713, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "unicode._Extender", linkageName: "unicode._Extender", scope: !304, file: !304, line: 5863, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "unicode._Hex_Digit", linkageName: "unicode._Hex_Digit", scope: !304, file: !304, line: 5892, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "unicode._Hyphen", linkageName: "unicode._Hyphen", scope: !304, file: !304, line: 5904, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "unicode._IDS_Binary_Operator", linkageName: "unicode._IDS_Binary_Operator", scope: !304, file: !304, line: 5916, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "unicode._IDS_Trinary_Operator", linkageName: "unicode._IDS_Trinary_Operator", scope: !304, file: !304, line: 5923, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "unicode._Ideographic", linkageName: "unicode._Ideographic", scope: !304, file: !304, line: 5929, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "unicode._Join_Control", linkageName: "unicode._Join_Control", scope: !304, file: !304, line: 5952, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "unicode._Logical_Order_Exception", linkageName: "unicode._Logical_Order_Exception", scope: !304, file: !304, line: 5958, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "unicode._Noncharacter_Code_Point", linkageName: "unicode._Noncharacter_Code_Point", scope: !304, file: !304, line: 5969, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "unicode._Other_Alphabetic", linkageName: "unicode._Other_Alphabetic", scope: !304, file: !304, line: 5994, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "unicode._Other_Default_Ignorable_Code_Point", linkageName: "unicode._Other_Default_Ignorable_Code_Point", scope: !304, file: !304, line: 6214, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "unicode._Other_Grapheme_Extend", linkageName: "unicode._Other_Grapheme_Extend", scope: !304, file: !304, line: 6230, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "unicode._Other_ID_Continue", linkageName: "unicode._Other_ID_Continue", scope: !304, file: !304, line: 6252, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "unicode._Other_ID_Start", linkageName: "unicode._Other_ID_Start", scope: !304, file: !304, line: 6260, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "unicode._Other_Lowercase", linkageName: "unicode._Other_Lowercase", scope: !304, file: !304, line: 6268, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "unicode._Other_Math", linkageName: "unicode._Other_Math", scope: !304, file: !304, line: 6291, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "unicode._Other_Uppercase", linkageName: "unicode._Other_Uppercase", scope: !304, file: !304, line: 6416, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "unicode._Pattern_Syntax", linkageName: "unicode._Pattern_Syntax", scope: !304, file: !304, line: 6428, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "unicode._Pattern_White_Space", linkageName: "unicode._Pattern_White_Space", scope: !304, file: !304, line: 6458, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "unicode._Prepended_Concatenation_Mark", linkageName: "unicode._Prepended_Concatenation_Mark", scope: !304, file: !304, line: 6468, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "unicode._Quotation_Mark", linkageName: "unicode._Quotation_Mark", scope: !304, file: !304, line: 6479, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "unicode._Radical", linkageName: "unicode._Radical", scope: !304, file: !304, line: 6495, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "unicode._Regional_Indicator", linkageName: "unicode._Regional_Indicator", scope: !304, file: !304, line: 6503, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "unicode._Sentence_Terminal", linkageName: "unicode._Sentence_Terminal", scope: !304, file: !304, line: 6510, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "unicode._Soft_Dotted", linkageName: "unicode._Soft_Dotted", scope: !304, file: !304, line: 6578, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "unicode._Terminal_Punctuation", linkageName: "unicode._Terminal_Punctuation", scope: !304, file: !304, line: 6609, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "unicode._Unified_Ideograph", linkageName: "unicode._Unified_Ideograph", scope: !304, file: !304, line: 6704, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "unicode._Variation_Selector", linkageName: "unicode._Variation_Selector", scope: !304, file: !304, line: 6724, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "unicode._White_Space", linkageName: "unicode._White_Space", scope: !304, file: !304, line: 6734, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "unicode.ASCII_Hex_Digit", linkageName: "unicode.ASCII_Hex_Digit", scope: !304, file: !304, line: 6749, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "unicode.Bidi_Control", linkageName: "unicode.Bidi_Control", scope: !304, file: !304, line: 6750, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "unicode.Dash", linkageName: "unicode.Dash", scope: !304, file: !304, line: 6751, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "unicode.Deprecated", linkageName: "unicode.Deprecated", scope: !304, file: !304, line: 6752, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "unicode.Diacritic", linkageName: "unicode.Diacritic", scope: !304, file: !304, line: 6753, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "unicode.Extender", linkageName: "unicode.Extender", scope: !304, file: !304, line: 6754, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "unicode.Hex_Digit", linkageName: "unicode.Hex_Digit", scope: !304, file: !304, line: 6755, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "unicode.Hyphen", linkageName: "unicode.Hyphen", scope: !304, file: !304, line: 6756, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "unicode.IDS_Binary_Operator", linkageName: "unicode.IDS_Binary_Operator", scope: !304, file: !304, line: 6757, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "unicode.IDS_Trinary_Operator", linkageName: "unicode.IDS_Trinary_Operator", scope: !304, file: !304, line: 6758, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "unicode.Ideographic", linkageName: "unicode.Ideographic", scope: !304, file: !304, line: 6759, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "unicode.Join_Control", linkageName: "unicode.Join_Control", scope: !304, file: !304, line: 6760, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "unicode.Logical_Order_Exception", linkageName: "unicode.Logical_Order_Exception", scope: !304, file: !304, line: 6761, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "unicode.Noncharacter_Code_Point", linkageName: "unicode.Noncharacter_Code_Point", scope: !304, file: !304, line: 6762, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "unicode.Other_Alphabetic", linkageName: "unicode.Other_Alphabetic", scope: !304, file: !304, line: 6763, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "unicode.Other_Default_Ignorable_Code_Point", linkageName: "unicode.Other_Default_Ignorable_Code_Point", scope: !304, file: !304, line: 6764, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "unicode.Other_Grapheme_Extend", linkageName: "unicode.Other_Grapheme_Extend", scope: !304, file: !304, line: 6765, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "unicode.Other_ID_Continue", linkageName: "unicode.Other_ID_Continue", scope: !304, file: !304, line: 6766, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "unicode.Other_ID_Start", linkageName: "unicode.Other_ID_Start", scope: !304, file: !304, line: 6767, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "unicode.Other_Lowercase", linkageName: "unicode.Other_Lowercase", scope: !304, file: !304, line: 6768, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "unicode.Other_Math", linkageName: "unicode.Other_Math", scope: !304, file: !304, line: 6769, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "unicode.Other_Uppercase", linkageName: "unicode.Other_Uppercase", scope: !304, file: !304, line: 6770, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "unicode.Pattern_Syntax", linkageName: "unicode.Pattern_Syntax", scope: !304, file: !304, line: 6771, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "unicode.Pattern_White_Space", linkageName: "unicode.Pattern_White_Space", scope: !304, file: !304, line: 6772, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "unicode.Prepended_Concatenation_Mark", linkageName: "unicode.Prepended_Concatenation_Mark", scope: !304, file: !304, line: 6773, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "unicode.Quotation_Mark", linkageName: "unicode.Quotation_Mark", scope: !304, file: !304, line: 6774, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "unicode.Radical", linkageName: "unicode.Radical", scope: !304, file: !304, line: 6775, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "unicode.Regional_Indicator", linkageName: "unicode.Regional_Indicator", scope: !304, file: !304, line: 6776, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "unicode.STerm", linkageName: "unicode.STerm", scope: !304, file: !304, line: 6777, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "unicode.Sentence_Terminal", linkageName: "unicode.Sentence_Terminal", scope: !304, file: !304, line: 6778, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "unicode.Soft_Dotted", linkageName: "unicode.Soft_Dotted", scope: !304, file: !304, line: 6779, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "unicode.Terminal_Punctuation", linkageName: "unicode.Terminal_Punctuation", scope: !304, file: !304, line: 6780, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "unicode.Unified_Ideograph", linkageName: "unicode.Unified_Ideograph", scope: !304, file: !304, line: 6781, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "unicode.Variation_Selector", linkageName: "unicode.Variation_Selector", scope: !304, file: !304, line: 6782, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "unicode.White_Space", linkageName: "unicode.White_Space", scope: !304, file: !304, line: 6783, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "unicode.Properties", linkageName: "unicode.Properties", scope: !304, file: !304, line: 5626, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "unicode._CaseRanges", linkageName: "unicode._CaseRanges", scope: !304, file: !304, line: 6789, type: !282, isLocal: false, isDefinition: true, align: 4294967295)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "unicode.CaseRanges", linkageName: "unicode.CaseRanges", scope: !304, file: !304, line: 6788, type: !282, isLocal: false, isDefinition: true, align: 4294967295)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "unicode.properties", linkageName: "unicode.properties", scope: !304, file: !304, line: 7108, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "unicode.asciiFold", linkageName: "unicode.asciiFold", scope: !304, file: !304, line: 7367, type: !1274, isLocal: false, isDefinition: true, align: 4294967295)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 2048, align: 16, elements: !1275)
!1275 = !{!1276}
!1276 = !DISubrange(count: 128, lowerBound: 0)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "unicode.caseOrbit", linkageName: "unicode.caseOrbit", scope: !304, file: !304, line: 7498, type: !1279, isLocal: false, isDefinition: true, align: 4294967295)
!1279 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]unicode.foldPair", size: 96, align: 32, elements: !1280)
!1280 = !{!1281, !296, !297}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1282, size: 32, align: 32)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32, align: 32, dwarfAddressSpace: 0)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "unicode.foldPair", baseType: !1284)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, size: 32, align: 16, elements: !1285)
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "From", baseType: !318, size: 16, align: 16)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "To", baseType: !318, size: 16, align: 16, offset: 16)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "unicode.foldL", linkageName: "unicode.foldL", scope: !304, file: !304, line: 7602, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "unicode.foldLl", linkageName: "unicode.foldLl", scope: !304, file: !304, line: 7608, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "unicode.foldLt", linkageName: "unicode.foldLt", scope: !304, file: !304, line: 7728, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "unicode.foldLu", linkageName: "unicode.foldLu", scope: !304, file: !304, line: 7742, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "unicode.foldM", linkageName: "unicode.foldM", scope: !304, file: !304, line: 7862, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "unicode.foldMn", linkageName: "unicode.foldMn", scope: !304, file: !304, line: 7869, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "unicode.FoldCategory", linkageName: "unicode.FoldCategory", scope: !304, file: !304, line: 7593, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "unicode.foldCommon", linkageName: "unicode.foldCommon", scope: !304, file: !304, line: 7886, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "unicode.foldGreek", linkageName: "unicode.foldGreek", scope: !304, file: !304, line: 7892, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "unicode.foldInherited", linkageName: "unicode.foldInherited", scope: !304, file: !304, line: 7898, type: !305, isLocal: false, isDefinition: true, align: 4294967295)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "unicode.FoldScript", linkageName: "unicode.FoldScript", scope: !304, file: !304, line: 7880, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "strings.asciiSpace", linkageName: "strings.asciiSpace", scope: !1312, file: !1312, line: 324, type: !3, isLocal: false, isDefinition: true, align: 4294967295)
!1312 = !DIFile(filename: "strings.go", directory: "/usr/local/go/src/strings")
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "syscall.errEAGAIN", linkageName: "syscall.errEAGAIN", scope: !1315, file: !1315, line: 227, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1315 = !DIFile(filename: "tables_baremetal.go", directory: "/home/torch2424/Source/tinygo/src/syscall")
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "syscall.errEINVAL", linkageName: "syscall.errEINVAL", scope: !1315, file: !1315, line: 228, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "syscall.errENOENT", linkageName: "syscall.errENOENT", scope: !1315, file: !1315, line: 229, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "syscall.errnoByCode", linkageName: "syscall.errnoByCode", scope: !1315, file: !1315, line: 248, type: !506, isLocal: false, isDefinition: true, align: 4294967295)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "os.ErrInvalid", linkageName: "os.ErrInvalid", scope: !1324, file: !1324, line: 8, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1324 = !DIFile(filename: "errors.go", directory: "/home/torch2424/Source/tinygo/src/os")
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "os.ErrPermission", linkageName: "os.ErrPermission", scope: !1324, file: !1324, line: 9, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "os.ErrClosed", linkageName: "os.ErrClosed", scope: !1324, file: !1324, line: 10, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "os.ErrUnsupported", linkageName: "os.ErrUnsupported", scope: !1324, file: !1324, line: 14, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "os.ErrNotImplemented", linkageName: "os.ErrNotImplemented", scope: !1324, file: !1324, line: 15, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "os.ErrNotExist", linkageName: "os.ErrNotExist", scope: !1324, file: !1324, line: 16, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "os.ErrExist", linkageName: "os.ErrExist", scope: !1324, file: !1324, line: 17, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "os.Stdin", linkageName: "os.Stdin", scope: !1339, file: !1339, line: 12, type: !1340, isLocal: false, isDefinition: true, align: 4294967295)
!1339 = !DIFile(filename: "file_other.go", directory: "/home/torch2424/Source/tinygo/src/os")
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32, align: 32, dwarfAddressSpace: 0)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "os.File", baseType: !1342)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, size: 128, align: 32, elements: !1343)
!1343 = !{!1344, !1346}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "handle", baseType: !1345, size: 64, align: 32)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "os.FileHandle", baseType: !99)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "name", baseType: !1347, size: 64, align: 32, offset: 64)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", size: 64, align: 32, elements: !1348)
!1348 = !{!1349, !296}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1350, size: 32, align: 32)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 32, align: 32, dwarfAddressSpace: 0)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "os.Stdout", linkageName: "os.Stdout", scope: !1339, file: !1339, line: 13, type: !1340, isLocal: false, isDefinition: true, align: 4294967295)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "os.Stderr", linkageName: "os.Stderr", scope: !1339, file: !1339, line: 14, type: !1340, isLocal: false, isDefinition: true, align: 4294967295)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "os.Args", linkageName: "os.Args", scope: !1357, file: !1357, line: 13, type: !1358, isLocal: false, isDefinition: true, align: 4294967295)
!1357 = !DIFile(filename: "proc.go", directory: "/home/torch2424/Source/tinygo/src/os")
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]string", size: 96, align: 32, elements: !1359)
!1359 = !{!1360, !296, !297}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1361, size: 32, align: 32)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32, align: 32, dwarfAddressSpace: 0)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "strconv.ErrSyntax", linkageName: "strconv.ErrSyntax", scope: !1364, file: !1364, line: 21, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1364 = !DIFile(filename: "atoi.go", directory: "/usr/local/go/src/strconv")
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "strconv.isPrint16", linkageName: "strconv.isPrint16", scope: !1367, file: !1367, line: 11, type: !1368, isLocal: false, isDefinition: true, align: 4294967295)
!1367 = !DIFile(filename: "isprint.go", directory: "/usr/local/go/src/strconv")
!1368 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]uint16", size: 96, align: 32, elements: !1369)
!1369 = !{!1370, !296, !297}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1371, size: 32, align: 32)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 32, align: 32, dwarfAddressSpace: 0)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "strconv.isNotPrint16", linkageName: "strconv.isNotPrint16", scope: !1367, file: !1367, line: 235, type: !1368, isLocal: false, isDefinition: true, align: 4294967295)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "strconv.isPrint32", linkageName: "strconv.isPrint32", scope: !1367, file: !1367, line: 370, type: !1376, isLocal: false, isDefinition: true, align: 4294967295)
!1376 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]uint32", size: 96, align: 32, elements: !1377)
!1377 = !{!1378, !296, !297}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1379, size: 32, align: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32, align: 32, dwarfAddressSpace: 0)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "strconv.isNotPrint32", linkageName: "strconv.isNotPrint32", scope: !1367, file: !1367, line: 598, type: !1368, isLocal: false, isDefinition: true, align: 4294967295)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "strconv.ErrRange", linkageName: "strconv.ErrRange", scope: !1364, file: !1364, line: 18, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "strconv.optimize", linkageName: "strconv.optimize", scope: !1386, file: !1386, line: 15, type: !44, isLocal: false, isDefinition: true, align: 4294967295)
!1386 = !DIFile(filename: "atof.go", directory: "/usr/local/go/src/strconv")
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "strconv.float32pow10", linkageName: "strconv.float32pow10", scope: !1386, file: !1386, line: 411, type: !1389, isLocal: false, isDefinition: true, align: 4294967295)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]float32", size: 96, align: 32, elements: !1390)
!1390 = !{!1391, !296, !297}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1392, size: 32, align: 32)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32, align: 32, dwarfAddressSpace: 0)
!1393 = !DIBasicType(name: "float32", size: 32, encoding: DW_ATE_float)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "strconv.float64pow10", linkageName: "strconv.float64pow10", scope: !1386, file: !1386, line: 406, type: !1396, isLocal: false, isDefinition: true, align: 4294967295)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]float64", size: 96, align: 32, elements: !1397)
!1397 = !{!1398, !296, !297}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1399, size: 32, align: 32)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32, align: 32, dwarfAddressSpace: 0)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "strconv.powtab", linkageName: "strconv.powtab", scope: !1386, file: !1386, line: 305, type: !1402, isLocal: false, isDefinition: true, align: 4294967295)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]int", size: 96, align: 32, elements: !1403)
!1403 = !{!1404, !296, !297}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1405, size: 32, align: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 32, align: 32, dwarfAddressSpace: 0)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "strconv.leftcheats", linkageName: "strconv.leftcheats", scope: !1408, file: !1408, line: 178, type: !1409, isLocal: false, isDefinition: true, align: 4294967295)
!1408 = !DIFile(filename: "decimal.go", directory: "/usr/local/go/src/strconv")
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]strconv.leftCheat", size: 96, align: 32, elements: !1410)
!1410 = !{!1411, !296, !297}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1412, size: 32, align: 32)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32, align: 32, dwarfAddressSpace: 0)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "strconv.leftCheat", baseType: !1414)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, size: 96, align: 32, elements: !1415)
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "delta", baseType: !30, size: 32, align: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", baseType: !1347, size: 64, align: 32, offset: 32)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "strconv.smallPowersOfTen", linkageName: "strconv.smallPowersOfTen", scope: !35, file: !35, line: 28, type: !1420, isLocal: false, isDefinition: true, align: 4294967295)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1024, align: 64, elements: !146)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "strconv.isGraphic", linkageName: "strconv.isGraphic", scope: !1367, file: !1367, line: 692, type: !1368, isLocal: false, isDefinition: true, align: 4294967295)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "fmt.ppFree", linkageName: "fmt.ppFree", scope: !1425, file: !1425, line: 131, type: !1426, isLocal: false, isDefinition: true, align: 4294967295)
!1425 = !DIFile(filename: "print.go", directory: "/usr/local/go/src/fmt")
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync.Pool", baseType: !1427)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !1428)
!1428 = !{!1429}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "New", baseType: !88, size: 64, align: 32)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "fmt.space", linkageName: "fmt.space", scope: !1432, file: !1432, line: 267, type: !1433, isLocal: false, isDefinition: true, align: 4294967295)
!1432 = !DIFile(filename: "scan.go", directory: "/usr/local/go/src/fmt")
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "[][2]uint16", size: 96, align: 32, elements: !1434)
!1434 = !{!1435, !296, !297}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1436, size: 32, align: 32)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32, align: 32, dwarfAddressSpace: 0)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 32, align: 16, elements: !1438)
!1438 = !{!1439}
!1439 = !DISubrange(count: 2, lowerBound: 0)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "fmt.ssFree", linkageName: "fmt.ssFree", scope: !1432, file: !1432, line: 378, type: !1426, isLocal: false, isDefinition: true, align: 4294967295)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "fmt.complexError", linkageName: "fmt.complexError", scope: !1432, file: !1432, line: 465, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "fmt.boolError", linkageName: "fmt.boolError", scope: !1432, file: !1432, line: 466, type: !98, isLocal: false, isDefinition: true, align: 4294967295)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "runtime.timeOffset", linkageName: "runtime.timeOffset", scope: !1448, file: !1448, line: 69, type: !1449, isLocal: false, isDefinition: true, align: 4294967295)
!1448 = !DIFile(filename: "runtime.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1449 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "runtime.runqueue", linkageName: "runtime.runqueue", scope: !1452, file: !1452, line: 27, type: !1453, isLocal: false, isDefinition: true, align: 4294967295)
!1452 = !DIFile(filename: "scheduler.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "internal/task.Queue", baseType: !1454)
!1454 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !1455)
!1455 = !{!1456, !1471}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "head", baseType: !1457, size: 32, align: 32)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32, align: 32, dwarfAddressSpace: 0)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "internal/task.Task", baseType: !1459)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, size: 128, align: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "Next", baseType: !1457, size: 32, align: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "Ptr", baseType: !91, size: 32, align: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "Data", baseType: !27, size: 32, align: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "state", baseType: !1465, size: 32, align: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "internal/task.state", baseType: !1466)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, size: 32, align: 32, elements: !1467)
!1467 = !{!1468}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "rawState", baseType: !1469, size: 32, align: 32)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32, align: 32, dwarfAddressSpace: 0)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "internal/task.rawState", baseType: !4)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tail", baseType: !1457, size: 32, align: 32, offset: 32)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "runtime.heapStart", linkageName: "runtime.heapStart", scope: !54, file: !54, line: 24, type: !55, isLocal: false, isDefinition: true, align: 4294967295)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "runtime.sleepQueue", linkageName: "runtime.sleepQueue", scope: !1452, file: !1452, line: 28, type: !1457, isLocal: false, isDefinition: true, align: 4294967295)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "runtime.sleepQueueBaseTime", linkageName: "runtime.sleepQueueBaseTime", scope: !1452, file: !1452, line: 29, type: !1478, isLocal: false, isDefinition: true, align: 4294967295)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.timeUnit", baseType: !1449)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "runtime.metadataStart", linkageName: "runtime.metadataStart", scope: !58, file: !58, line: 54, type: !91, isLocal: false, isDefinition: true, align: 4294967295)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "runtime.inf", linkageName: "runtime.inf", scope: !1483, file: !1483, line: 9, type: !140, isLocal: false, isDefinition: true, align: 4294967295)
!1483 = !DIFile(filename: "float.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "runtime.args", linkageName: "runtime.args", scope: !1448, file: !1448, line: 27, type: !1358, isLocal: false, isDefinition: true, align: 4294967295)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "runtime.putcharIOVec", linkageName: "runtime.putcharIOVec", scope: !68, file: !68, line: 30, type: !1488, isLocal: false, isDefinition: true, align: 4294967295)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.__wasi_iovec_t", baseType: !1489)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !1490)
!1490 = !{!1491, !1492}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "buf", baseType: !91, size: 32, align: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "bufLen", baseType: !27, size: 32, align: 32, offset: 32)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "runtime.sleepTicksSubscription", linkageName: "runtime.sleepTicksSubscription", scope: !1495, file: !1495, line: 33, type: !1496, isLocal: false, isDefinition: true, align: 4294967295)
!1495 = !DIFile(filename: "runtime_wasm_wasi.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.__wasi_subscription_t", baseType: !1497)
!1497 = !DICompositeType(tag: DW_TAG_structure_type, size: 448, align: 64, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "userData", baseType: !41, size: 64, align: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "u", baseType: !1501, size: 384, align: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.__wasi_subscription_u_t", baseType: !1502)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, size: 384, align: 64, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "tag", baseType: !4, size: 8, align: 8)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "u", baseType: !1506, size: 320, align: 64, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.__wasi_subscription_clock_t", baseType: !1507)
!1507 = !DICompositeType(tag: DW_TAG_structure_type, size: 320, align: 64, elements: !1508)
!1508 = !{!1499, !1509, !1510, !1511, !1512}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "id", baseType: !290, size: 32, align: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", baseType: !1449, size: 64, align: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "precision", baseType: !1449, size: 64, align: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flags", baseType: !318, size: 16, align: 16, offset: 256)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "runtime.schedulerDone", linkageName: "runtime.schedulerDone", scope: !1452, file: !1452, line: 23, type: !44, isLocal: false, isDefinition: true, align: 4294967295)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "runtime.sleepTicksResult", linkageName: "runtime.sleepTicksResult", scope: !1495, file: !1495, line: 46, type: !1517, isLocal: false, isDefinition: true, align: 4294967295)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.__wasi_event_t", baseType: !1518)
!1518 = !DICompositeType(tag: DW_TAG_structure_type, size: 256, align: 64, elements: !1519)
!1519 = !{!1499, !1520, !1521, !1522}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "errno", baseType: !318, size: 16, align: 16, offset: 64)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "eventType", baseType: !4, size: 8, align: 8, offset: 80)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "_", baseType: !1523, size: 128, align: 64, offset: 128)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, size: 128, align: 64, elements: !1524)
!1524 = !{!1525, !1526}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "nBytes", baseType: !41, size: 64, align: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", baseType: !318, size: 16, align: 16, offset: 64)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "runtime.sleepTicksNEvents", linkageName: "runtime.sleepTicksNEvents", scope: !1495, file: !1495, line: 47, type: !290, isLocal: false, isDefinition: true, align: 4294967295)
!1529 = !{i32 1, !"Debug Info Version", i32 3}
!1530 = !{i32 1, !"Dwarf Version", i32 4}
!1531 = distinct !DISubprogram(name: "runtime.alloc", linkageName: "runtime.alloc", scope: !58, file: !58, line: 258, type: !1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1534)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!55}
!1534 = !{!1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1535 = !DILocalVariable(name: "size", arg: 1, scope: !1531, file: !58, line: 258, type: !55)
!1536 = !DILocalVariable(name: "neededBlocks", scope: !1531, file: !58, line: 263, type: !55)
!1537 = !DILocalVariable(name: "nextAlloc", scope: !1531, file: !58, line: 55, type: !61)
!1538 = !DILocalVariable(name: "index", scope: !1531, file: !58, line: 267, type: !61)
!1539 = !DILocalVariable(name: "numFreeBlocks", scope: !1531, file: !58, line: 268, type: !55)
!1540 = !DILocalVariable(name: "heapScanCount", scope: !1531, file: !58, line: 269, type: !4)
!1541 = !DILocalVariable(name: "endBlock", scope: !1531, file: !58, line: 56, type: !61)
!1542 = !DILocalVariable(name: "thisAlloc", scope: !1531, file: !58, line: 316, type: !61)
!1543 = !DILocalVariable(name: "i", scope: !1531, file: !58, line: 323, type: !61)
!1544 = !DILocalVariable(name: "pointer", scope: !1531, file: !58, line: 328, type: !91)
!1545 = !DILocation(line: 258, column: 6, scope: !1531)
!1546 = !DILocation(line: 259, column: 5, scope: !1531)
!1547 = !DILocation(line: 259, column: 10, scope: !1531)
!1548 = !DILocation(line: 0, scope: !1531)
!1549 = !DILocation(line: 260, column: 3, scope: !1531)
!1550 = !DILocation(line: 263, column: 19, scope: !1531)
!1551 = !DILocation(line: 263, column: 24, scope: !1531)
!1552 = !DILocation(line: 263, column: 47, scope: !1531)
!1553 = !DILocation(line: 263, column: 2, scope: !1531)
!1554 = !DILocation(line: 267, column: 11, scope: !1531)
!1555 = !DILocation(line: 267, column: 2, scope: !1531)
!1556 = !DILocation(line: 268, column: 2, scope: !1531)
!1557 = !DILocation(line: 269, column: 2, scope: !1531)
!1558 = !DILocation(line: 271, column: 15, scope: !1531)
!1559 = !DILocation(line: 271, column: 6, scope: !1531)
!1560 = !DILocation(line: 271, column: 12, scope: !1531)
!1561 = !DILocation(line: 272, column: 7, scope: !1531)
!1562 = !DILocation(line: 278, column: 5, scope: !1531)
!1563 = !DILocation(line: 27, column: 17, scope: !1564, inlinedAt: !1578)
!1564 = distinct !DISubprogram(name: "runtime.markStack", linkageName: "runtime.markStack", scope: !1565, file: !1565, line: 26, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1567)
!1565 = !DIFile(filename: "gc_stack_portable.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1566 = !DISubroutineType(types: !79)
!1567 = !{!1568, !1575, !1576, !1577}
!1568 = !DILocalVariable(name: "stackChainStart", scope: !1564, file: !1565, line: 11, type: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32, align: 32, dwarfAddressSpace: 0)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.stackChainObject", baseType: !1571)
!1571 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "parent", baseType: !1569, size: 32, align: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "numSlots", baseType: !55, size: 32, align: 32, offset: 32)
!1575 = !DILocalVariable(name: "stackObject", scope: !1564, file: !1565, line: 27, type: !1569)
!1576 = !DILocalVariable(name: "start", scope: !1564, file: !1565, line: 29, type: !55)
!1577 = !DILocalVariable(name: "end", scope: !1564, file: !1565, line: 30, type: !55)
!1578 = distinct !DILocation(line: 346, column: 11, scope: !1579, inlinedAt: !1586)
!1579 = distinct !DISubprogram(name: "runtime.GC", linkageName: "runtime.GC", scope: !58, file: !58, line: 340, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1580)
!1580 = !{!1581, !1583, !1584, !1585}
!1581 = !DILocalVariable(name: "i", scope: !1579, file: !58, line: 368, type: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime/interrupt.State", baseType: !55)
!1583 = !DILocalVariable(name: "markedTaskQueue", scope: !1579, file: !58, line: 352, type: !1453)
!1584 = !DILocalVariable(name: "runqueue", scope: !1579, file: !1452, line: 27, type: !1453)
!1585 = !DILocalVariable(name: "t", scope: !1579, file: !58, line: 356, type: !1457)
!1586 = distinct !DILocation(line: 279, column: 7, scope: !1531)
!1587 = !DILocation(line: 27, column: 2, scope: !1564, inlinedAt: !1578)
!1588 = !DILocation(line: 0, scope: !1564, inlinedAt: !1578)
!1589 = !DILocation(line: 28, column: 6, scope: !1564, inlinedAt: !1578)
!1590 = !DILocation(line: 28, column: 18, scope: !1564, inlinedAt: !1578)
!1591 = !DILocation(line: 29, column: 35, scope: !1564, inlinedAt: !1578)
!1592 = !DILocation(line: 29, column: 19, scope: !1564, inlinedAt: !1578)
!1593 = !DILocation(line: 29, column: 49, scope: !1564, inlinedAt: !1578)
!1594 = !DILocation(line: 30, column: 10, scope: !1564, inlinedAt: !1578)
!1595 = !DILocation(line: 30, column: 30, scope: !1564, inlinedAt: !1578)
!1596 = !DILocation(line: 30, column: 38, scope: !1564, inlinedAt: !1578)
!1597 = !DILocation(line: 30, column: 16, scope: !1564, inlinedAt: !1578)
!1598 = !DILocation(line: 31, column: 20, scope: !1564, inlinedAt: !1578)
!1599 = !DILocalVariable(name: "end", arg: 2, scope: !1600, file: !58, line: 394, type: !55)
!1600 = distinct !DISubprogram(name: "runtime.markRoots", linkageName: "runtime.markRoots", scope: !58, file: !58, line: 394, type: !1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1603)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!55, !55}
!1603 = !{!1604, !1599, !1605, !1606}
!1604 = !DILocalVariable(name: "start", arg: 1, scope: !1600, file: !58, line: 394, type: !55)
!1605 = !DILocalVariable(name: "addr", scope: !1600, file: !58, line: 404, type: !55)
!1606 = !DILocalVariable(name: "root", scope: !1600, file: !58, line: 405, type: !55)
!1607 = !DILocation(line: 394, column: 6, scope: !1600, inlinedAt: !1608)
!1608 = distinct !DILocation(line: 31, column: 12, scope: !1564, inlinedAt: !1578)
!1609 = !DILocation(line: 404, column: 14, scope: !1600, inlinedAt: !1608)
!1610 = !DILocation(line: 404, column: 6, scope: !1600, inlinedAt: !1608)
!1611 = !DILocation(line: 0, scope: !1600, inlinedAt: !1608)
!1612 = !DILocation(line: 404, column: 21, scope: !1600, inlinedAt: !1608)
!1613 = !DILocation(line: 404, column: 29, scope: !1600, inlinedAt: !1608)
!1614 = !DILocation(line: 404, column: 26, scope: !1600, inlinedAt: !1608)
!1615 = !DILocation(line: 405, column: 38, scope: !1600, inlinedAt: !1608)
!1616 = !DILocation(line: 405, column: 37, scope: !1600, inlinedAt: !1608)
!1617 = !DILocation(line: 405, column: 22, scope: !1600, inlinedAt: !1608)
!1618 = !DILocation(line: 405, column: 11, scope: !1600, inlinedAt: !1608)
!1619 = !DILocation(line: 405, column: 3, scope: !1600, inlinedAt: !1608)
!1620 = !DILocation(line: 406, column: 12, scope: !1600, inlinedAt: !1608)
!1621 = !DILocation(line: 406, column: 18, scope: !1600, inlinedAt: !1608)
!1622 = !DILocation(line: 406, column: 11, scope: !1600, inlinedAt: !1608)
!1623 = !DILocation(line: 404, column: 34, scope: !1600, inlinedAt: !1608)
!1624 = !DILocation(line: 32, column: 29, scope: !1564, inlinedAt: !1578)
!1625 = !DILocation(line: 32, column: 3, scope: !1564, inlinedAt: !1578)
!1626 = !DILocation(line: 28, column: 6, scope: !1627, inlinedAt: !1635)
!1627 = distinct !DISubprogram(name: "runtime.markGlobals", linkageName: "runtime.markGlobals", scope: !1628, file: !1628, line: 27, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1629)
!1628 = !DIFile(filename: "gc_globals_precise.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1629 = !{!1630, !1631, !1632, !1633, !1634}
!1630 = !DILocalVariable(name: "i", scope: !1627, file: !1628, line: 28, type: !55)
!1631 = !DILocalVariable(name: "trackedGlobalsLength", scope: !1627, file: !1628, line: 14, type: !55)
!1632 = !DILocalVariable(name: "trackedGlobalsStart", scope: !1627, file: !1628, line: 11, type: !55)
!1633 = !DILocalVariable(name: "addr", scope: !1627, file: !1628, line: 30, type: !55)
!1634 = !DILocalVariable(name: "root", scope: !1627, file: !1628, line: 31, type: !55)
!1635 = distinct !DILocation(line: 347, column: 13, scope: !1579, inlinedAt: !1586)
!1636 = !DILocation(line: 28, column: 23, scope: !1627, inlinedAt: !1635)
!1637 = !DILocation(line: 28, column: 27, scope: !1627, inlinedAt: !1635)
!1638 = !DILocation(line: 28, column: 25, scope: !1627, inlinedAt: !1635)
!1639 = !DILocation(line: 0, scope: !1627, inlinedAt: !1635)
!1640 = !DILocation(line: 29, column: 27, scope: !1627, inlinedAt: !1635)
!1641 = !DILocation(line: 29, column: 28, scope: !1627, inlinedAt: !1635)
!1642 = !DILocation(line: 29, column: 26, scope: !1627, inlinedAt: !1635)
!1643 = !DILocation(line: 29, column: 37, scope: !1627, inlinedAt: !1635)
!1644 = !DILocation(line: 29, column: 34, scope: !1627, inlinedAt: !1635)
!1645 = !DILocation(line: 29, column: 31, scope: !1627, inlinedAt: !1635)
!1646 = !DILocation(line: 29, column: 43, scope: !1627, inlinedAt: !1635)
!1647 = !DILocation(line: 30, column: 12, scope: !1627, inlinedAt: !1635)
!1648 = !DILocation(line: 30, column: 34, scope: !1627, inlinedAt: !1635)
!1649 = !DILocation(line: 30, column: 35, scope: !1627, inlinedAt: !1635)
!1650 = !DILocation(line: 30, column: 32, scope: !1627, inlinedAt: !1635)
!1651 = !DILocation(line: 30, column: 4, scope: !1627, inlinedAt: !1635)
!1652 = !DILocation(line: 31, column: 39, scope: !1627, inlinedAt: !1635)
!1653 = !DILocation(line: 31, column: 38, scope: !1627, inlinedAt: !1635)
!1654 = !DILocation(line: 31, column: 23, scope: !1627, inlinedAt: !1635)
!1655 = !DILocation(line: 31, column: 12, scope: !1627, inlinedAt: !1635)
!1656 = !DILocation(line: 31, column: 4, scope: !1627, inlinedAt: !1635)
!1657 = !DILocation(line: 32, column: 13, scope: !1627, inlinedAt: !1635)
!1658 = !DILocation(line: 32, column: 19, scope: !1627, inlinedAt: !1635)
!1659 = !DILocation(line: 32, column: 12, scope: !1627, inlinedAt: !1635)
!1660 = !DILocation(line: 28, column: 49, scope: !1627, inlinedAt: !1635)
!1661 = !DILocation(line: 484, column: 6, scope: !1662, inlinedAt: !1667)
!1662 = distinct !DISubprogram(name: "runtime.finishMark", linkageName: "runtime.finishMark", scope: !58, file: !58, line: 483, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1663)
!1663 = !{!1664, !1665, !1666}
!1664 = !DILocalVariable(name: "stackOverflow", scope: !1662, file: !58, line: 412, type: !44)
!1665 = !DILocalVariable(name: "block", scope: !1662, file: !58, line: 487, type: !61)
!1666 = !DILocalVariable(name: "endBlock", scope: !1662, file: !58, line: 56, type: !61)
!1667 = distinct !DILocation(line: 377, column: 13, scope: !1579, inlinedAt: !1586)
!1668 = !DILocation(line: 0, scope: !1662, inlinedAt: !1667)
!1669 = !DILocation(line: 486, column: 3, scope: !1662, inlinedAt: !1667)
!1670 = !DILocation(line: 487, column: 7, scope: !1662, inlinedAt: !1667)
!1671 = !DILocation(line: 487, column: 28, scope: !1662, inlinedAt: !1667)
!1672 = !DILocation(line: 487, column: 36, scope: !1662, inlinedAt: !1667)
!1673 = !DILocation(line: 487, column: 34, scope: !1662, inlinedAt: !1667)
!1674 = !DILocation(line: 488, column: 7, scope: !1662, inlinedAt: !1667)
!1675 = !DILocation(line: 488, column: 18, scope: !1662, inlinedAt: !1667)
!1676 = !DILocation(line: 488, column: 21, scope: !1662, inlinedAt: !1667)
!1677 = !DILocation(line: 487, column: 46, scope: !1662, inlinedAt: !1667)
!1678 = !DILocation(line: 494, column: 14, scope: !1662, inlinedAt: !1667)
!1679 = !DILocation(line: 494, column: 13, scope: !1662, inlinedAt: !1667)
!1680 = !DILocation(line: 521, column: 2, scope: !1681, inlinedAt: !1686)
!1681 = distinct !DISubprogram(name: "runtime.sweep", linkageName: "runtime.sweep", scope: !58, file: !58, line: 520, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1682)
!1682 = !{!1683, !1684, !1685}
!1683 = !DILocalVariable(name: "freeCurrentObject", scope: !1681, file: !58, line: 521, type: !44)
!1684 = !DILocalVariable(name: "block", scope: !1681, file: !58, line: 522, type: !61)
!1685 = !DILocalVariable(name: "endBlock", scope: !1681, file: !58, line: 56, type: !61)
!1686 = distinct !DILocation(line: 382, column: 7, scope: !1579, inlinedAt: !1586)
!1687 = !DILocation(line: 522, column: 6, scope: !1681, inlinedAt: !1686)
!1688 = !DILocation(line: 522, column: 27, scope: !1681, inlinedAt: !1686)
!1689 = !DILocation(line: 522, column: 35, scope: !1681, inlinedAt: !1686)
!1690 = !DILocation(line: 522, column: 33, scope: !1681, inlinedAt: !1686)
!1691 = !DILocation(line: 0, scope: !1681, inlinedAt: !1686)
!1692 = !DILocation(line: 523, column: 10, scope: !1681, inlinedAt: !1686)
!1693 = !DILocation(line: 523, column: 21, scope: !1681, inlinedAt: !1686)
!1694 = !DILocation(line: 526, column: 4, scope: !1681, inlinedAt: !1686)
!1695 = !DILocation(line: 526, column: 18, scope: !1681, inlinedAt: !1686)
!1696 = !DILocation(line: 527, column: 4, scope: !1681, inlinedAt: !1686)
!1697 = !DILocation(line: 522, column: 45, scope: !1681, inlinedAt: !1686)
!1698 = !DILocation(line: 529, column: 7, scope: !1681, inlinedAt: !1686)
!1699 = !DILocation(line: 532, column: 5, scope: !1681, inlinedAt: !1686)
!1700 = !DILocation(line: 532, column: 19, scope: !1681, inlinedAt: !1686)
!1701 = !DILocation(line: 538, column: 4, scope: !1681, inlinedAt: !1686)
!1702 = !DILocalVariable(name: "b", arg: 1, scope: !1703, file: !58, line: 170, type: !61)
!1703 = distinct !DISubprogram(name: "(runtime.gcBlock).unmark", linkageName: "(runtime.gcBlock).unmark", scope: !58, file: !58, line: 170, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1706)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!61}
!1706 = !{!1702, !1707, !1709, !1710}
!1707 = !DILocalVariable(name: "clearMask", scope: !1703, file: !58, line: 174, type: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.blockState", baseType: !4)
!1709 = !DILocalVariable(name: "metadataStart", scope: !1703, file: !58, line: 54, type: !91)
!1710 = !DILocalVariable(name: "stateBytePtr", scope: !1703, file: !58, line: 175, type: !1350)
!1711 = !DILocation(line: 170, column: 18, scope: !1703, inlinedAt: !1712)
!1712 = distinct !DILocation(line: 538, column: 16, scope: !1681, inlinedAt: !1686)
!1713 = !DILocation(line: 174, column: 2, scope: !1703, inlinedAt: !1712)
!1714 = !DILocation(line: 175, column: 50, scope: !1703, inlinedAt: !1712)
!1715 = !DILocation(line: 175, column: 76, scope: !1703, inlinedAt: !1712)
!1716 = !DILocation(line: 175, column: 41, scope: !1703, inlinedAt: !1712)
!1717 = !DILocation(line: 176, column: 3, scope: !1703, inlinedAt: !1712)
!1718 = !DILocation(line: 176, column: 36, scope: !1703, inlinedAt: !1712)
!1719 = !DILocation(line: 176, column: 2, scope: !1703, inlinedAt: !1712)
!1720 = !DILocation(line: 539, column: 4, scope: !1681, inlinedAt: !1686)
!1721 = !DILocation(line: 41, column: 32, scope: !1722, inlinedAt: !1727)
!1722 = distinct !DISubprogram(name: "runtime.growHeap", linkageName: "runtime.growHeap", scope: !54, file: !54, line: 39, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1723)
!1723 = !{!1724, !1726}
!1724 = !DILocalVariable(name: "memorySize", scope: !1722, file: !54, line: 41, type: !1725)
!1725 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!1726 = !DILocalVariable(name: "result", scope: !1722, file: !54, line: 42, type: !1725)
!1727 = distinct !DILocation(line: 283, column: 16, scope: !1531)
!1728 = !DILocation(line: 42, column: 32, scope: !1722, inlinedAt: !1727)
!1729 = !DILocation(line: 42, column: 28, scope: !1722, inlinedAt: !1727)
!1730 = !DILocation(line: 43, column: 5, scope: !1722, inlinedAt: !1727)
!1731 = !DILocation(line: 43, column: 12, scope: !1722, inlinedAt: !1727)
!1732 = !DILocation(line: 0, scope: !1722, inlinedAt: !1727)
!1733 = !DILocation(line: 48, column: 37, scope: !1722, inlinedAt: !1727)
!1734 = !DILocation(line: 48, column: 41, scope: !1722, inlinedAt: !1727)
!1735 = !DILocalVariable(name: "newHeapEnd", arg: 1, scope: !1736, file: !58, line: 197, type: !55)
!1736 = distinct !DISubprogram(name: "runtime.setHeapEnd", linkageName: "runtime.setHeapEnd", scope: !58, file: !58, line: 197, type: !1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1737)
!1737 = !{!1735, !1738, !1739, !1740, !1741}
!1738 = !DILocalVariable(name: "heapEnd", scope: !1736, file: !54, line: 25, type: !55)
!1739 = !DILocalVariable(name: "metadataStart", scope: !1736, file: !58, line: 54, type: !91)
!1740 = !DILocalVariable(name: "oldMetadataStart", scope: !1736, file: !58, line: 203, type: !91)
!1741 = !DILocalVariable(name: "oldMetadataSize", scope: !1736, file: !58, line: 204, type: !55)
!1742 = !DILocation(line: 197, column: 6, scope: !1736, inlinedAt: !1743)
!1743 = distinct !DILocation(line: 48, column: 12, scope: !1722, inlinedAt: !1727)
!1744 = !DILocation(line: 203, column: 22, scope: !1736, inlinedAt: !1743)
!1745 = !DILocation(line: 203, column: 2, scope: !1736, inlinedAt: !1743)
!1746 = !DILocation(line: 204, column: 21, scope: !1736, inlinedAt: !1743)
!1747 = !DILocation(line: 204, column: 39, scope: !1736, inlinedAt: !1743)
!1748 = !DILocation(line: 204, column: 38, scope: !1736, inlinedAt: !1743)
!1749 = !DILocation(line: 204, column: 29, scope: !1736, inlinedAt: !1743)
!1750 = !DILocation(line: 204, column: 2, scope: !1736, inlinedAt: !1743)
!1751 = !DILocation(line: 212, column: 2, scope: !1736, inlinedAt: !1743)
!1752 = !DILocation(line: 213, column: 24, scope: !1736, inlinedAt: !1743)
!1753 = !DILocation(line: 214, column: 9, scope: !1736, inlinedAt: !1743)
!1754 = !DILocation(line: 214, column: 8, scope: !1736, inlinedAt: !1743)
!1755 = !DILocation(line: 290, column: 18, scope: !1531)
!1756 = !DILocation(line: 296, column: 6, scope: !1531)
!1757 = !DILocation(line: 296, column: 15, scope: !1531)
!1758 = !DILocation(line: 296, column: 12, scope: !1531)
!1759 = !DILocation(line: 303, column: 6, scope: !1531)
!1760 = !DILocation(line: 303, column: 17, scope: !1531)
!1761 = !DILocation(line: 303, column: 20, scope: !1531)
!1762 = !DILocation(line: 305, column: 4, scope: !1531)
!1763 = !DILocation(line: 306, column: 4, scope: !1531)
!1764 = !DILocation(line: 309, column: 3, scope: !1531)
!1765 = !DILocation(line: 310, column: 3, scope: !1531)
!1766 = !DILocation(line: 313, column: 23, scope: !1531)
!1767 = !DILocation(line: 313, column: 20, scope: !1531)
!1768 = !DILocation(line: 315, column: 16, scope: !1531)
!1769 = !DILocation(line: 315, column: 4, scope: !1531)
!1770 = !DILocation(line: 316, column: 33, scope: !1531)
!1771 = !DILocation(line: 316, column: 23, scope: !1531)
!1772 = !DILocation(line: 322, column: 4, scope: !1531)
!1773 = !DILocation(line: 322, column: 22, scope: !1531)
!1774 = !DILocation(line: 323, column: 8, scope: !1531)
!1775 = !DILocation(line: 323, column: 28, scope: !1531)
!1776 = !DILocation(line: 323, column: 33, scope: !1531)
!1777 = !DILocation(line: 323, column: 30, scope: !1531)
!1778 = !DILocation(line: 324, column: 5, scope: !1531)
!1779 = !DILocation(line: 324, column: 15, scope: !1531)
!1780 = !DILocation(line: 323, column: 44, scope: !1531)
!1781 = !DILocation(line: 328, column: 15, scope: !1531)
!1782 = !DILocalVariable(name: "b", arg: 1, scope: !1783, file: !58, line: 106, type: !61)
!1783 = distinct !DISubprogram(name: "(runtime.gcBlock).pointer", linkageName: "(runtime.gcBlock).pointer", scope: !58, file: !58, line: 106, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1784)
!1784 = !{!1782}
!1785 = !DILocation(line: 107, column: 24, scope: !1783, inlinedAt: !1786)
!1786 = distinct !DILocation(line: 328, column: 32, scope: !1531)
!1787 = !DILocalVariable(name: "heapStart", scope: !1788, file: !54, line: 24, type: !55)
!1788 = distinct !DISubprogram(name: "(runtime.gcBlock).address", linkageName: "(runtime.gcBlock).address", scope: !58, file: !58, line: 111, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1789)
!1789 = !{!1790, !1787}
!1790 = !DILocalVariable(name: "b", arg: 1, scope: !1788, file: !58, line: 111, type: !61)
!1791 = !DILocation(line: 112, column: 9, scope: !1788, inlinedAt: !1792)
!1792 = distinct !DILocation(line: 107, column: 33, scope: !1783, inlinedAt: !1786)
!1793 = !DILocation(line: 112, column: 29, scope: !1788, inlinedAt: !1792)
!1794 = !DILocation(line: 112, column: 31, scope: !1788, inlinedAt: !1792)
!1795 = !DILocation(line: 112, column: 19, scope: !1788, inlinedAt: !1792)
!1796 = !DILocation(line: 107, column: 23, scope: !1783, inlinedAt: !1786)
!1797 = !DILocation(line: 329, column: 12, scope: !1531)
!1798 = !DILocation(line: 329, column: 21, scope: !1531)
!1799 = !DILocation(line: 329, column: 11, scope: !1531)
!1800 = !DILocation(line: 330, column: 4, scope: !1531)
!1801 = distinct !DISubprogram(name: "runtime.lookupPanic", linkageName: "runtime.lookupPanic", scope: !1802, file: !1802, line: 36, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!1802 = !DIFile(filename: "panic.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1803 = !DILocation(line: 37, column: 14, scope: !1801)
!1804 = !DILocation(line: 0, scope: !1801)
!1805 = distinct !DISubprogram(name: "runtime.nilPanic", linkageName: "runtime.nilPanic", scope: !1802, file: !1802, line: 31, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!1806 = !DILocation(line: 32, column: 14, scope: !1805)
!1807 = !DILocation(line: 0, scope: !1805)
!1808 = distinct !DISubprogram(name: "unicode/utf8.DecodeRuneInString", linkageName: "unicode/utf8.DecodeRuneInString", scope: !2, file: !2, line: 199, type: !1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1811)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1347}
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821}
!1812 = !DILocalVariable(name: "s", arg: 1, scope: !1808, file: !2, line: 199, type: !1347)
!1813 = !DILocalVariable(name: "n", scope: !1808, file: !2, line: 200, type: !30)
!1814 = !DILocalVariable(name: "s0", scope: !1808, file: !2, line: 204, type: !72)
!1815 = !DILocalVariable(name: "x", scope: !1808, file: !2, line: 205, type: !4)
!1816 = !DILocalVariable(name: "mask", scope: !1808, file: !2, line: 210, type: !295)
!1817 = !DILocalVariable(name: "sz", scope: !1808, file: !2, line: 213, type: !30)
!1818 = !DILocalVariable(name: "accept", scope: !1808, file: !2, line: 214, type: !10)
!1819 = !DILocalVariable(name: "s1", scope: !1808, file: !2, line: 218, type: !72)
!1820 = !DILocalVariable(name: "s2", scope: !1808, file: !2, line: 225, type: !72)
!1821 = !DILocalVariable(name: "s3", scope: !1808, file: !2, line: 232, type: !72)
!1822 = !DILocation(line: 199, column: 6, scope: !1808)
!1823 = !DILocation(line: 201, column: 5, scope: !1808)
!1824 = !DILocation(line: 204, column: 8, scope: !1808)
!1825 = !DILocation(line: 204, column: 9, scope: !1808)
!1826 = !DILocation(line: 205, column: 13, scope: !1808)
!1827 = !DILocation(line: 0, scope: !1808)
!1828 = !DILocation(line: 205, column: 12, scope: !1808)
!1829 = !DILocation(line: 206, column: 5, scope: !1808)
!1830 = !DILocation(line: 206, column: 7, scope: !1808)
!1831 = !DILocation(line: 202, column: 3, scope: !1808)
!1832 = !DILocation(line: 210, column: 25, scope: !1808)
!1833 = !DILocation(line: 211, column: 15, scope: !1808)
!1834 = !DILocation(line: 211, column: 22, scope: !1808)
!1835 = !DILocation(line: 211, column: 27, scope: !1808)
!1836 = !DILocation(line: 211, column: 3, scope: !1808)
!1837 = !DILocation(line: 213, column: 14, scope: !1808)
!1838 = !DILocation(line: 213, column: 11, scope: !1808)
!1839 = !DILocation(line: 213, column: 2, scope: !1808)
!1840 = !DILocation(line: 214, column: 25, scope: !1808)
!1841 = !DILocation(line: 214, column: 26, scope: !1808)
!1842 = !DILocation(line: 214, column: 24, scope: !1808)
!1843 = !DILocation(line: 214, column: 2, scope: !1808)
!1844 = !DILocation(line: 215, column: 5, scope: !1808)
!1845 = !DILocation(line: 215, column: 7, scope: !1808)
!1846 = !DILocation(line: 218, column: 8, scope: !1808)
!1847 = !DILocation(line: 218, column: 9, scope: !1808)
!1848 = !DILocation(line: 222, column: 5, scope: !1808)
!1849 = !DILocation(line: 222, column: 8, scope: !1808)
!1850 = !DILocation(line: 223, column: 15, scope: !1808)
!1851 = !DILocation(line: 223, column: 17, scope: !1808)
!1852 = !DILocation(line: 223, column: 14, scope: !1808)
!1853 = !DILocation(line: 223, column: 24, scope: !1808)
!1854 = !DILocation(line: 223, column: 35, scope: !1808)
!1855 = !DILocation(line: 223, column: 37, scope: !1808)
!1856 = !DILocation(line: 223, column: 34, scope: !1808)
!1857 = !DILocation(line: 223, column: 28, scope: !1808)
!1858 = !DILocation(line: 223, column: 3, scope: !1808)
!1859 = !DILocation(line: 225, column: 8, scope: !1808)
!1860 = !DILocation(line: 225, column: 9, scope: !1808)
!1861 = !DILocation(line: 229, column: 5, scope: !1808)
!1862 = !DILocation(line: 229, column: 8, scope: !1808)
!1863 = !DILocation(line: 230, column: 15, scope: !1808)
!1864 = !DILocation(line: 230, column: 17, scope: !1808)
!1865 = !DILocation(line: 230, column: 14, scope: !1808)
!1866 = !DILocation(line: 230, column: 24, scope: !1808)
!1867 = !DILocation(line: 230, column: 36, scope: !1808)
!1868 = !DILocation(line: 230, column: 38, scope: !1808)
!1869 = !DILocation(line: 230, column: 35, scope: !1808)
!1870 = !DILocation(line: 230, column: 45, scope: !1808)
!1871 = !DILocation(line: 230, column: 29, scope: !1808)
!1872 = !DILocation(line: 230, column: 56, scope: !1808)
!1873 = !DILocation(line: 230, column: 58, scope: !1808)
!1874 = !DILocation(line: 230, column: 55, scope: !1808)
!1875 = !DILocation(line: 230, column: 49, scope: !1808)
!1876 = !DILocation(line: 230, column: 3, scope: !1808)
!1877 = !DILocation(line: 232, column: 8, scope: !1808)
!1878 = !DILocation(line: 232, column: 9, scope: !1808)
!1879 = !DILocation(line: 236, column: 14, scope: !1808)
!1880 = !DILocation(line: 236, column: 16, scope: !1808)
!1881 = !DILocation(line: 236, column: 13, scope: !1808)
!1882 = !DILocation(line: 236, column: 23, scope: !1808)
!1883 = !DILocation(line: 236, column: 35, scope: !1808)
!1884 = !DILocation(line: 236, column: 37, scope: !1808)
!1885 = !DILocation(line: 236, column: 34, scope: !1808)
!1886 = !DILocation(line: 236, column: 44, scope: !1808)
!1887 = !DILocation(line: 236, column: 28, scope: !1808)
!1888 = !DILocation(line: 236, column: 56, scope: !1808)
!1889 = !DILocation(line: 236, column: 58, scope: !1808)
!1890 = !DILocation(line: 236, column: 55, scope: !1808)
!1891 = !DILocation(line: 236, column: 65, scope: !1808)
!1892 = !DILocation(line: 236, column: 49, scope: !1808)
!1893 = !DILocation(line: 236, column: 76, scope: !1808)
!1894 = !DILocation(line: 236, column: 78, scope: !1808)
!1895 = !DILocation(line: 236, column: 75, scope: !1808)
!1896 = !DILocation(line: 236, column: 69, scope: !1808)
!1897 = !DILocation(line: 236, column: 2, scope: !1808)
!1898 = !DILocation(line: 219, column: 5, scope: !1808)
!1899 = !DILocation(line: 219, column: 8, scope: !1808)
!1900 = !DILocation(line: 219, column: 35, scope: !1808)
!1901 = !DILocation(line: 225, column: 2, scope: !1808)
!1902 = !DILocation(line: 226, column: 5, scope: !1808)
!1903 = !DILocation(line: 226, column: 8, scope: !1808)
!1904 = !DILocation(line: 226, column: 25, scope: !1808)
!1905 = !DILocation(line: 232, column: 2, scope: !1808)
!1906 = !DILocation(line: 233, column: 5, scope: !1808)
!1907 = !DILocation(line: 233, column: 8, scope: !1808)
!1908 = !DILocation(line: 233, column: 25, scope: !1808)
!1909 = distinct !DISubprogram(name: "runtime._panic", linkageName: "runtime._panic", scope: !1802, file: !1802, line: 9, type: !1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1912)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!99}
!1912 = !{!1913}
!1913 = !DILocalVariable(name: "message", arg: 1, scope: !1909, file: !1802, line: 9, type: !99)
!1914 = !DILocation(line: 9, column: 6, scope: !1909)
!1915 = !DILocation(line: 10, column: 13, scope: !1909)
!1916 = !DILocation(line: 11, column: 11, scope: !1909)
!1917 = !DILocation(line: 11, column: 10, scope: !1909)
!1918 = !DILocation(line: 12, column: 9, scope: !1909)
!1919 = !DILocation(line: 49, column: 6, scope: !1920, inlinedAt: !1921)
!1920 = distinct !DISubprogram(name: "runtime.abort", linkageName: "runtime.abort", scope: !68, file: !68, line: 48, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!1921 = distinct !DILocation(line: 13, column: 7, scope: !1909)
!1922 = !DILocation(line: 0, scope: !1920, inlinedAt: !1921)
!1923 = distinct !DISubprogram(name: "reflect.ValueOf", linkageName: "reflect.ValueOf", scope: !1924, file: !1924, line: 44, type: !1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1925)
!1924 = !DIFile(filename: "value.go", directory: "/home/torch2424/Source/tinygo/src/reflect")
!1925 = !{!1926, !1927, !1928}
!1926 = !DILocalVariable(name: "i", arg: 1, scope: !1923, file: !1924, line: 44, type: !99)
!1927 = !DILocalVariable(name: "typecode", scope: !1923, file: !1924, line: 45, type: !84)
!1928 = !DILocalVariable(name: "value", scope: !1923, file: !1924, line: 45, type: !91)
!1929 = !DILocation(line: 24, column: 6, scope: !1930, inlinedAt: !1934)
!1930 = distinct !DISubprogram(name: "runtime.decomposeInterface", linkageName: "runtime.decomposeInterface", scope: !1931, file: !1931, line: 24, type: !1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1932)
!1931 = !DIFile(filename: "interface.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1932 = !{!1933}
!1933 = !DILocalVariable(name: "i", arg: 1, scope: !1930, file: !1931, line: 24, type: !99)
!1934 = distinct !DILocation(line: 45, column: 39, scope: !1923)
!1935 = !DILocation(line: 44, column: 6, scope: !1923)
!1936 = !DILocation(line: 45, column: 40, scope: !1923)
!1937 = !DILocation(line: 25, column: 2, scope: !1930, inlinedAt: !1934)
!1938 = !DILocation(line: 45, column: 2, scope: !1923)
!1939 = !DILocation(line: 45, column: 12, scope: !1923)
!1940 = !DILocation(line: 46, column: 2, scope: !1923)
!1941 = distinct !DISubprogram(name: "(reflect.Value).Kind", linkageName: "(reflect.Value).Kind", scope: !1924, file: !1924, line: 70, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1950)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.Value", baseType: !1945)
!1945 = !DICompositeType(tag: DW_TAG_structure_type, size: 96, align: 32, elements: !1946)
!1946 = !{!1947, !103, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "typecode", baseType: !84, size: 32, align: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", baseType: !1949, size: 8, align: 8, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.valueFlags", baseType: !4)
!1950 = !{!1951}
!1951 = !DILocalVariable(name: "v", arg: 1, scope: !1941, file: !1924, line: 70, type: !1944)
!1952 = !DILocation(line: 70, column: 16, scope: !1941)
!1953 = !DILocation(line: 71, column: 9, scope: !1941)
!1954 = !DILocation(line: 71, column: 15, scope: !1941)
!1955 = !DILocation(line: 71, column: 22, scope: !1941)
!1956 = !DILocation(line: 71, column: 2, scope: !1941)
!1957 = distinct !DISubprogram(name: "(reflect.Value).Len", linkageName: "(reflect.Value).Len", scope: !1924, file: !1924, line: 315, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1958)
!1958 = !{!1959, !1960}
!1959 = !DILocalVariable(name: "v", arg: 1, scope: !1957, file: !1924, line: 315, type: !1944)
!1960 = !DILocalVariable(name: "t", scope: !1957, file: !1924, line: 316, type: !84)
!1961 = !DILocation(line: 315, column: 16, scope: !1957)
!1962 = !DILocation(line: 0, scope: !1957)
!1963 = !DILocation(line: 316, column: 7, scope: !1957)
!1964 = !DILocation(line: 316, column: 13, scope: !1957)
!1965 = !DILocation(line: 317, column: 9, scope: !1957)
!1966 = !DILocation(line: 317, column: 15, scope: !1957)
!1967 = !DILocation(line: 329, column: 20, scope: !1957)
!1968 = !DILocation(line: 329, column: 21, scope: !1957)
!1969 = !DILocation(line: 329, column: 8, scope: !1957)
!1970 = !DILocation(line: 319, column: 10, scope: !1957)
!1971 = !DILocation(line: 319, column: 16, scope: !1957)
!1972 = !DILocation(line: 319, column: 22, scope: !1957)
!1973 = !DILocation(line: 319, column: 3, scope: !1957)
!1974 = !DILocalVariable(name: "p", arg: 1, scope: !1975, file: !1976, line: 151, type: !91)
!1975 = distinct !DISubprogram(name: "runtime.chanLenUnsafePointer", linkageName: "runtime.chanLenUnsafePointer", scope: !1976, file: !1976, line: 151, type: !1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !1979)
!1976 = !DIFile(filename: "chan.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!91}
!1979 = !{!1974, !1980}
!1980 = !DILocalVariable(name: "c", scope: !1975, file: !1976, line: 152, type: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32, align: 32, dwarfAddressSpace: 0)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.channel", baseType: !1983)
!1983 = !DICompositeType(tag: DW_TAG_structure_type, size: 256, align: 32, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1989, !2006, !2007, !2008, !2009}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "elementSize", baseType: !55, size: 32, align: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "bufSize", baseType: !55, size: 32, align: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "state", baseType: !1988, size: 8, align: 8, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.chanState", baseType: !4)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", baseType: !1990, size: 32, align: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32, align: 32, dwarfAddressSpace: 0)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.channelBlockedList", baseType: !1992)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, size: 192, align: 32, elements: !1993)
!1993 = !{!1994, !1995, !1996, !2002}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "next", baseType: !1990, size: 32, align: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "t", baseType: !1457, size: 32, align: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "s", baseType: !1997, size: 32, align: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32, align: 32, dwarfAddressSpace: 0)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.chanSelectState", baseType: !1999)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !2000)
!2000 = !{!2001, !103}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "ch", baseType: !1981, size: 32, align: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "allSelectOps", baseType: !2003, size: 96, align: 32, offset: 96)
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]runtime.channelBlockedList", size: 96, align: 32, elements: !2004)
!2004 = !{!2005, !296, !297}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !1990, size: 32, align: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "bufHead", baseType: !55, size: 32, align: 32, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "bufTail", baseType: !55, size: 32, align: 32, offset: 160)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "bufUsed", baseType: !55, size: 32, align: 32, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "buf", baseType: !91, size: 32, align: 32, offset: 224)
!2010 = !DILocation(line: 151, column: 6, scope: !1975, inlinedAt: !2011)
!2011 = distinct !DILocation(line: 321, column: 17, scope: !1957)
!2012 = !DILocation(line: 152, column: 18, scope: !1975, inlinedAt: !2011)
!2013 = !DILocation(line: 152, column: 2, scope: !1975, inlinedAt: !2011)
!2014 = !DILocation(line: 153, column: 17, scope: !1975, inlinedAt: !2011)
!2015 = !DILocalVariable(name: "c", arg: 1, scope: !2016, file: !1976, line: 143, type: !1981)
!2016 = distinct !DISubprogram(name: "runtime.chanLen", linkageName: "runtime.chanLen", scope: !1976, file: !1976, line: 143, type: !2017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2019)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!1981}
!2019 = !{!2015}
!2020 = !DILocation(line: 143, column: 6, scope: !2016, inlinedAt: !2021)
!2021 = distinct !DILocation(line: 153, column: 16, scope: !1975, inlinedAt: !2011)
!2022 = !DILocation(line: 144, column: 5, scope: !2016, inlinedAt: !2021)
!2023 = !DILocation(line: 144, column: 7, scope: !2016, inlinedAt: !2021)
!2024 = !DILocation(line: 0, scope: !2016, inlinedAt: !2021)
!2025 = !DILocation(line: 147, column: 13, scope: !2016, inlinedAt: !2021)
!2026 = !DILocation(line: 147, column: 15, scope: !2016, inlinedAt: !2021)
!2027 = !DILocation(line: 147, column: 2, scope: !2016, inlinedAt: !2021)
!2028 = !DILocation(line: 321, column: 3, scope: !1957)
!2029 = !DILocalVariable(name: "p", arg: 1, scope: !2030, file: !2031, line: 92, type: !91)
!2030 = distinct !DISubprogram(name: "runtime.hashmapLenUnsafePointer", linkageName: "runtime.hashmapLenUnsafePointer", scope: !2031, file: !2031, line: 92, type: !1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2032)
!2031 = !DIFile(filename: "hashmap.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!2032 = !{!2029, !2033}
!2033 = !DILocalVariable(name: "m", scope: !2030, file: !2031, line: 93, type: !506)
!2034 = !DILocation(line: 92, column: 6, scope: !2030, inlinedAt: !2035)
!2035 = distinct !DILocation(line: 323, column: 16, scope: !1957)
!2036 = !DILocation(line: 93, column: 18, scope: !2030, inlinedAt: !2035)
!2037 = !DILocation(line: 93, column: 2, scope: !2030, inlinedAt: !2035)
!2038 = !DILocation(line: 94, column: 20, scope: !2030, inlinedAt: !2035)
!2039 = !DILocalVariable(name: "m", arg: 1, scope: !2040, file: !2031, line: 84, type: !506)
!2040 = distinct !DISubprogram(name: "runtime.hashmapLen", linkageName: "runtime.hashmapLen", scope: !2031, file: !2031, line: 84, type: !2041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2043)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!506}
!2043 = !{!2039}
!2044 = !DILocation(line: 84, column: 6, scope: !2040, inlinedAt: !2045)
!2045 = distinct !DILocation(line: 94, column: 19, scope: !2030, inlinedAt: !2035)
!2046 = !DILocation(line: 85, column: 5, scope: !2040, inlinedAt: !2045)
!2047 = !DILocation(line: 85, column: 7, scope: !2040, inlinedAt: !2045)
!2048 = !DILocation(line: 0, scope: !2040, inlinedAt: !2045)
!2049 = !DILocation(line: 88, column: 13, scope: !2040, inlinedAt: !2045)
!2050 = !DILocation(line: 88, column: 15, scope: !2040, inlinedAt: !2045)
!2051 = !DILocation(line: 88, column: 2, scope: !2040, inlinedAt: !2045)
!2052 = !DILocation(line: 325, column: 38, scope: !1957)
!2053 = !DILocation(line: 325, column: 3, scope: !1957)
!2054 = !DILocation(line: 327, column: 39, scope: !1957)
!2055 = !DILocation(line: 327, column: 3, scope: !1957)
!2056 = distinct !DISubprogram(name: "(reflect.Value).Type", linkageName: "(reflect.Value).Type", scope: !1924, file: !1924, line: 66, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2057)
!2057 = !{!2058}
!2058 = !DILocalVariable(name: "v", arg: 1, scope: !2056, file: !1924, line: 66, type: !1944)
!2059 = !DILocation(line: 66, column: 16, scope: !2056)
!2060 = !DILocation(line: 67, column: 2, scope: !2056)
!2061 = distinct !DISubprogram(name: "(reflect.Type).Elem", linkageName: "(reflect.Type).Elem", scope: !2062, file: !2062, line: 159, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2065)
!2062 = !DIFile(filename: "type.go", directory: "/home/torch2424/Source/tinygo/src/reflect")
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!84}
!2065 = !{!2066, !2067, !2068}
!2066 = !DILocalVariable(name: "t", arg: 1, scope: !2061, file: !2062, line: 159, type: !84)
!2067 = !DILocalVariable(name: "index", scope: !2061, file: !2062, line: 164, type: !84)
!2068 = !DILocalVariable(name: "elem", scope: !2061, file: !2062, line: 165, type: !55)
!2069 = !DILocation(line: 159, column: 15, scope: !2061)
!2070 = !DILocation(line: 160, column: 9, scope: !2061)
!2071 = !DILocation(line: 160, column: 15, scope: !2061)
!2072 = !DILocation(line: 0, scope: !2061)
!2073 = !DILocation(line: 162, column: 10, scope: !2061)
!2074 = !DILocation(line: 162, column: 23, scope: !2061)
!2075 = !DILocation(line: 162, column: 3, scope: !2061)
!2076 = !DILocation(line: 164, column: 12, scope: !2061)
!2077 = !DILocation(line: 164, column: 25, scope: !2061)
!2078 = !DILocation(line: 164, column: 3, scope: !2061)
!2079 = !DILocation(line: 165, column: 96, scope: !2061)
!2080 = !DILocation(line: 165, column: 86, scope: !2061)
!2081 = !DILocation(line: 165, column: 39, scope: !2061)
!2082 = !DILocation(line: 165, column: 24, scope: !2061)
!2083 = !DILocation(line: 165, column: 3, scope: !2061)
!2084 = !DILocation(line: 166, column: 15, scope: !2061)
!2085 = !DILocation(line: 166, column: 3, scope: !2061)
!2086 = !DILocation(line: 168, column: 8, scope: !2061)
!2087 = distinct !DISubprogram(name: "(reflect.Type).Size", linkageName: "(reflect.Type).Size", scope: !2062, file: !2062, line: 304, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2088)
!2088 = !{!2089, !2090, !2091}
!2089 = !DILocalVariable(name: "t", arg: 1, scope: !2087, file: !2062, line: 304, type: !84)
!2090 = !DILocalVariable(name: "numField", scope: !2087, file: !2062, line: 337, type: !30)
!2091 = !DILocalVariable(name: "lastField", scope: !2087, file: !2062, line: 341, type: !2092)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.StructField", baseType: !2093)
!2093 = !DICompositeType(tag: DW_TAG_structure_type, size: 288, align: 32, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2100, !2101}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "Name", baseType: !1347, size: 64, align: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "PkgPath", baseType: !1347, size: 64, align: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "Type", baseType: !84, size: 32, align: 32, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "Tag", baseType: !2099, size: 64, align: 32, offset: 160)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.StructTag", baseType: !1347)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "Anonymous", baseType: !44, size: 8, align: 8, offset: 224)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", baseType: !55, size: 32, align: 32, offset: 256)
!2102 = !DILocation(line: 304, column: 15, scope: !2087)
!2103 = !DILocation(line: 305, column: 9, scope: !2087)
!2104 = !DILocation(line: 305, column: 15, scope: !2087)
!2105 = !DILocation(line: 0, scope: !2087)
!2106 = !DILocation(line: 307, column: 3, scope: !2087)
!2107 = !DILocation(line: 335, column: 10, scope: !2087)
!2108 = !DILocation(line: 335, column: 16, scope: !2087)
!2109 = !DILocation(line: 335, column: 23, scope: !2087)
!2110 = !DILocation(line: 335, column: 36, scope: !2087)
!2111 = !DILocation(line: 335, column: 41, scope: !2087)
!2112 = !DILocation(line: 335, column: 26, scope: !2087)
!2113 = !DILocation(line: 335, column: 3, scope: !2087)
!2114 = !DILocation(line: 337, column: 15, scope: !2087)
!2115 = !DILocation(line: 337, column: 25, scope: !2087)
!2116 = !DILocation(line: 337, column: 3, scope: !2087)
!2117 = !DILocation(line: 338, column: 6, scope: !2087)
!2118 = !DILocation(line: 338, column: 15, scope: !2087)
!2119 = !DILocation(line: 341, column: 16, scope: !2087)
!2120 = !DILocation(line: 341, column: 24, scope: !2087)
!2121 = !DILocation(line: 341, column: 33, scope: !2087)
!2122 = !DILocation(line: 341, column: 23, scope: !2087)
!2123 = !DILocation(line: 341, column: 3, scope: !2087)
!2124 = !DILocation(line: 342, column: 48, scope: !2087)
!2125 = !DILocation(line: 342, column: 27, scope: !2087)
!2126 = !DILocation(line: 342, column: 3, scope: !2087)
!2127 = !DILocation(line: 344, column: 8, scope: !2087)
!2128 = distinct !DISubprogram(name: "runtime.slicePanic", linkageName: "runtime.slicePanic", scope: !1802, file: !1802, line: 41, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!2129 = !DILocation(line: 42, column: 14, scope: !2128)
!2130 = !DILocation(line: 0, scope: !2128)
!2131 = distinct !DISubprogram(name: "(reflect.Type).Align", linkageName: "(reflect.Type).Align", scope: !2062, file: !2062, line: 350, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138}
!2133 = !DILocalVariable(name: "t", arg: 1, scope: !2131, file: !2062, line: 350, type: !84)
!2134 = !DILocalVariable(name: "numField", scope: !2131, file: !2062, line: 381, type: !30)
!2135 = !DILocalVariable(name: "alignment", scope: !2131, file: !2062, line: 382, type: !30)
!2136 = !DILocalVariable(name: "i", scope: !2131, file: !2062, line: 383, type: !30)
!2137 = !DILocalVariable(name: "Type", scope: !2131, file: !2062, line: 485, type: !84)
!2138 = !DILocalVariable(name: "fieldAlignment", scope: !2131, file: !2062, line: 384, type: !30)
!2139 = !DILocation(line: 391, column: 24, scope: !2131)
!2140 = !DILocation(line: 350, column: 15, scope: !2131)
!2141 = !DILocation(line: 351, column: 9, scope: !2131)
!2142 = !DILocation(line: 351, column: 15, scope: !2131)
!2143 = !DILocation(line: 0, scope: !2131)
!2144 = !DILocation(line: 353, column: 3, scope: !2131)
!2145 = !DILocation(line: 381, column: 15, scope: !2131)
!2146 = !DILocation(line: 381, column: 25, scope: !2131)
!2147 = !DILocation(line: 381, column: 3, scope: !2131)
!2148 = !DILocation(line: 382, column: 3, scope: !2131)
!2149 = !DILocation(line: 383, column: 7, scope: !2131)
!2150 = !DILocation(line: 383, column: 15, scope: !2131)
!2151 = !DILocation(line: 383, column: 19, scope: !2131)
!2152 = !DILocation(line: 383, column: 17, scope: !2131)
!2153 = !DILocation(line: 384, column: 22, scope: !2131)
!2154 = !DILocation(line: 384, column: 30, scope: !2131)
!2155 = !DILocation(line: 384, column: 29, scope: !2131)
!2156 = !DILocation(line: 384, column: 33, scope: !2131)
!2157 = !DILocation(line: 384, column: 43, scope: !2131)
!2158 = !DILocation(line: 385, column: 7, scope: !2131)
!2159 = !DILocation(line: 385, column: 24, scope: !2131)
!2160 = !DILocation(line: 385, column: 22, scope: !2131)
!2161 = !DILocation(line: 383, column: 29, scope: !2131)
!2162 = !DILocation(line: 391, column: 10, scope: !2131)
!2163 = !DILocation(line: 391, column: 16, scope: !2131)
!2164 = !DILocation(line: 393, column: 8, scope: !2131)
!2165 = distinct !DISubprogram(name: "(reflect.Type).Kind", linkageName: "(reflect.Type).Kind", scope: !2062, file: !2062, line: 148, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2166)
!2166 = !{!2167}
!2167 = !DILocalVariable(name: "t", arg: 1, scope: !2165, file: !2062, line: 148, type: !84)
!2168 = !DILocation(line: 148, column: 15, scope: !2165)
!2169 = !DILocation(line: 149, column: 5, scope: !2165)
!2170 = !DILocation(line: 149, column: 6, scope: !2165)
!2171 = !DILocation(line: 149, column: 9, scope: !2165)
!2172 = !DILocation(line: 151, column: 16, scope: !2165)
!2173 = !DILocation(line: 153, column: 15, scope: !2165)
!2174 = !DILocation(line: 0, scope: !2165)
!2175 = !DILocation(line: 151, column: 24, scope: !2165)
!2176 = !DILocation(line: 151, column: 3, scope: !2165)
!2177 = !DILocation(line: 153, column: 20, scope: !2165)
!2178 = !DILocation(line: 153, column: 23, scope: !2165)
!2179 = !DILocation(line: 153, column: 3, scope: !2165)
!2180 = distinct !DISubprogram(name: "(reflect.Type).NumField", linkageName: "(reflect.Type).NumField", scope: !2062, file: !2062, line: 293, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2181)
!2181 = !{!2182, !2183, !2184}
!2182 = !DILocalVariable(name: "t", arg: 1, scope: !2180, file: !2062, line: 293, type: !84)
!2183 = !DILocalVariable(name: "structIdentifier", scope: !2180, file: !2062, line: 297, type: !84)
!2184 = !DILocalVariable(name: "n", scope: !2180, file: !2062, line: 298, type: !55)
!2185 = !DILocation(line: 293, column: 15, scope: !2180)
!2186 = !DILocation(line: 294, column: 5, scope: !2180)
!2187 = !DILocation(line: 294, column: 11, scope: !2180)
!2188 = !DILocation(line: 294, column: 14, scope: !2180)
!2189 = !DILocation(line: 0, scope: !2180)
!2190 = !DILocation(line: 295, column: 19, scope: !2180)
!2191 = !DILocation(line: 295, column: 20, scope: !2180)
!2192 = !DILocation(line: 295, column: 8, scope: !2180)
!2193 = !DILocation(line: 297, column: 22, scope: !2180)
!2194 = !DILocation(line: 297, column: 35, scope: !2180)
!2195 = !DILocation(line: 297, column: 2, scope: !2180)
!2196 = !DILocation(line: 298, column: 93, scope: !2180)
!2197 = !DILocation(line: 298, column: 83, scope: !2180)
!2198 = !DILocation(line: 298, column: 35, scope: !2180)
!2199 = !DILocation(line: 298, column: 20, scope: !2180)
!2200 = !DILocation(line: 298, column: 2, scope: !2180)
!2201 = !DILocation(line: 299, column: 13, scope: !2180)
!2202 = !DILocation(line: 299, column: 2, scope: !2180)
!2203 = distinct !DISubprogram(name: "(reflect.Type).Field", linkageName: "(reflect.Type).Field", scope: !2062, file: !2062, line: 193, type: !2204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2206)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!84, !30}
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224}
!2207 = !DILocalVariable(name: "t", arg: 1, scope: !2203, file: !2062, line: 193, type: !84)
!2208 = !DILocalVariable(name: "i", arg: 2, scope: !2203, file: !2062, line: 193, type: !30)
!2209 = !DILocalVariable(name: "structIdentifier", scope: !2203, file: !2062, line: 197, type: !84)
!2210 = !DILocalVariable(name: "numField", scope: !2203, file: !2062, line: 199, type: !55)
!2211 = !DILocalVariable(name: "p", scope: !2203, file: !2062, line: 199, type: !91)
!2212 = !DILocalVariable(name: "offset", scope: !2203, file: !2062, line: 210, type: !55)
!2213 = !DILocalVariable(name: "fieldNum", scope: !2203, file: !2062, line: 211, type: !30)
!2214 = !DILocalVariable(name: "flagsByte", scope: !2203, file: !2062, line: 214, type: !4)
!2215 = !DILocalVariable(name: "fieldType", scope: !2203, file: !2062, line: 218, type: !55)
!2216 = !DILocalVariable(name: "Type", scope: !2203, file: !2062, line: 485, type: !84)
!2217 = !DILocalVariable(name: "Offset", scope: !2203, file: !2062, line: 488, type: !55)
!2218 = !DILocalVariable(name: "nameNum", scope: !2203, file: !2062, line: 229, type: !55)
!2219 = !DILocalVariable(name: "Name", scope: !2203, file: !2062, line: 479, type: !1347)
!2220 = !DILocalVariable(name: "Anonymous", scope: !2203, file: !2062, line: 487, type: !44)
!2221 = !DILocalVariable(name: "tagNum", scope: !2203, file: !2062, line: 240, type: !55)
!2222 = !DILocalVariable(name: "Tag", scope: !2203, file: !2062, line: 486, type: !2099)
!2223 = !DILocalVariable(name: "PkgPath", scope: !2203, file: !2062, line: 483, type: !1347)
!2224 = !DILocalVariable(name: "field", scope: !2203, file: !2062, line: 209, type: !2092)
!2225 = !DILocation(line: 193, column: 15, scope: !2203)
!2226 = !DILocation(line: 194, column: 5, scope: !2203)
!2227 = !DILocation(line: 194, column: 11, scope: !2203)
!2228 = !DILocation(line: 194, column: 14, scope: !2203)
!2229 = !DILocation(line: 0, scope: !2203)
!2230 = !DILocation(line: 195, column: 19, scope: !2203)
!2231 = !DILocation(line: 195, column: 20, scope: !2203)
!2232 = !DILocation(line: 195, column: 8, scope: !2203)
!2233 = !DILocation(line: 197, column: 22, scope: !2203)
!2234 = !DILocation(line: 197, column: 35, scope: !2203)
!2235 = !DILocation(line: 197, column: 2, scope: !2203)
!2236 = !DILocation(line: 199, column: 100, scope: !2203)
!2237 = !DILocation(line: 199, column: 90, scope: !2203)
!2238 = !DILocation(line: 199, column: 42, scope: !2203)
!2239 = !DILocation(line: 199, column: 27, scope: !2203)
!2240 = !DILocation(line: 199, column: 2, scope: !2203)
!2241 = !DILocation(line: 199, column: 12, scope: !2203)
!2242 = !DILocation(line: 200, column: 10, scope: !2203)
!2243 = !DILocation(line: 200, column: 21, scope: !2203)
!2244 = !DILocation(line: 200, column: 13, scope: !2203)
!2245 = !DILocation(line: 201, column: 8, scope: !2203)
!2246 = !DILocation(line: 210, column: 2, scope: !2203)
!2247 = !DILocation(line: 211, column: 6, scope: !2203)
!2248 = !DILocation(line: 211, column: 21, scope: !2203)
!2249 = !DILocation(line: 211, column: 33, scope: !2203)
!2250 = !DILocation(line: 211, column: 30, scope: !2203)
!2251 = !DILocation(line: 214, column: 26, scope: !2203)
!2252 = !DILocation(line: 214, column: 16, scope: !2203)
!2253 = !DILocation(line: 214, column: 3, scope: !2203)
!2254 = !DILocation(line: 215, column: 21, scope: !2203)
!2255 = !DILocation(line: 218, column: 7, scope: !2203)
!2256 = !DILocation(line: 219, column: 29, scope: !2203)
!2257 = !DILocation(line: 219, column: 28, scope: !2203)
!2258 = !DILocation(line: 219, column: 14, scope: !2203)
!2259 = !DILocation(line: 220, column: 21, scope: !2203)
!2260 = !DILocation(line: 220, column: 9, scope: !2203)
!2261 = !DILocation(line: 224, column: 18, scope: !2203)
!2262 = !DILocation(line: 224, column: 50, scope: !2203)
!2263 = !DILocalVariable(name: "offset", arg: 1, scope: !2264, file: !2062, line: 565, type: !55)
!2264 = distinct !DISubprogram(name: "reflect.align", linkageName: "reflect.align", scope: !2062, file: !2062, line: 565, type: !1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2265)
!2265 = !{!2263, !2266}
!2266 = !DILocalVariable(name: "alignment", arg: 2, scope: !2264, file: !2062, line: 565, type: !55)
!2267 = !DILocation(line: 565, column: 6, scope: !2264, inlinedAt: !2268)
!2268 = distinct !DILocation(line: 224, column: 17, scope: !2203)
!2269 = !DILocation(line: 566, column: 10, scope: !2264, inlinedAt: !2268)
!2270 = !DILocation(line: 566, column: 19, scope: !2264, inlinedAt: !2268)
!2271 = !DILocation(line: 566, column: 17, scope: !2264, inlinedAt: !2268)
!2272 = !DILocation(line: 566, column: 29, scope: !2264, inlinedAt: !2268)
!2273 = !DILocation(line: 566, column: 38, scope: !2264, inlinedAt: !2268)
!2274 = !DILocation(line: 566, column: 34, scope: !2264, inlinedAt: !2268)
!2275 = !DILocation(line: 225, column: 18, scope: !2203)
!2276 = !DILocation(line: 225, column: 9, scope: !2203)
!2277 = !DILocation(line: 226, column: 28, scope: !2203)
!2278 = !DILocation(line: 226, column: 3, scope: !2203)
!2279 = !DILocation(line: 229, column: 7, scope: !2203)
!2280 = !DILocation(line: 230, column: 26, scope: !2203)
!2281 = !DILocation(line: 230, column: 3, scope: !2203)
!2282 = !DILocation(line: 230, column: 12, scope: !2203)
!2283 = !DILocation(line: 231, column: 35, scope: !2203)
!2284 = !DILocation(line: 231, column: 9, scope: !2203)
!2285 = !DILocation(line: 235, column: 30, scope: !2203)
!2286 = !DILocation(line: 235, column: 33, scope: !2203)
!2287 = !DILocation(line: 235, column: 9, scope: !2203)
!2288 = !DILocation(line: 238, column: 15, scope: !2203)
!2289 = !DILocation(line: 238, column: 18, scope: !2203)
!2290 = !DILocation(line: 240, column: 8, scope: !2203)
!2291 = !DILocation(line: 241, column: 27, scope: !2203)
!2292 = !DILocation(line: 241, column: 26, scope: !2203)
!2293 = !DILocation(line: 241, column: 4, scope: !2203)
!2294 = !DILocation(line: 241, column: 12, scope: !2203)
!2295 = !DILocation(line: 242, column: 45, scope: !2203)
!2296 = !DILocation(line: 242, column: 10, scope: !2203)
!2297 = !DILocation(line: 249, column: 6, scope: !2203)
!2298 = !DILocation(line: 249, column: 15, scope: !2203)
!2299 = !DILocation(line: 249, column: 18, scope: !2203)
!2300 = !DILocation(line: 211, column: 36, scope: !2203)
!2301 = !DILocation(line: 261, column: 9, scope: !2203)
!2302 = !DILocation(line: 261, column: 2, scope: !2203)
!2303 = distinct !DISubprogram(name: "(reflect.Type).stripPrefix", linkageName: "(reflect.Type).stripPrefix", scope: !2062, file: !2062, line: 178, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2304)
!2304 = !{!2305, !2306, !2307}
!2305 = !DILocalVariable(name: "t", arg: 1, scope: !2303, file: !2062, line: 178, type: !84)
!2306 = !DILocalVariable(name: "namedTypeNum", scope: !2303, file: !2062, line: 183, type: !84)
!2307 = !DILocalVariable(name: "n", scope: !2303, file: !2062, line: 184, type: !55)
!2308 = !DILocation(line: 178, column: 15, scope: !2303)
!2309 = !DILocation(line: 181, column: 6, scope: !2303)
!2310 = !DILocation(line: 181, column: 14, scope: !2303)
!2311 = !DILocation(line: 183, column: 19, scope: !2303)
!2312 = !DILocation(line: 188, column: 9, scope: !2303)
!2313 = !DILocation(line: 0, scope: !2303)
!2314 = !DILocation(line: 183, column: 3, scope: !2303)
!2315 = !DILocation(line: 184, column: 99, scope: !2303)
!2316 = !DILocation(line: 184, column: 112, scope: !2303)
!2317 = !DILocation(line: 184, column: 89, scope: !2303)
!2318 = !DILocation(line: 184, column: 34, scope: !2303)
!2319 = !DILocation(line: 184, column: 19, scope: !2303)
!2320 = !DILocation(line: 184, column: 8, scope: !2303)
!2321 = !DILocation(line: 184, column: 3, scope: !2303)
!2322 = !DILocation(line: 185, column: 15, scope: !2303)
!2323 = !DILocation(line: 185, column: 3, scope: !2303)
!2324 = !DILocation(line: 188, column: 2, scope: !2303)
!2325 = distinct !DISubprogram(name: "reflect.readVarint", linkageName: "reflect.readVarint", scope: !2326, file: !2326, line: 40, type: !1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2327)
!2326 = !DIFile(filename: "sidetables.go", directory: "/home/torch2424/Source/tinygo/src/reflect")
!2327 = !{!2328, !2329, !2330, !2331}
!2328 = !DILocalVariable(name: "buf", arg: 1, scope: !2325, file: !2326, line: 40, type: !91)
!2329 = !DILocalVariable(name: "n", scope: !2325, file: !2326, line: 41, type: !55)
!2330 = !DILocalVariable(name: "shift", scope: !2325, file: !2326, line: 42, type: !55)
!2331 = !DILocalVariable(name: "c", scope: !2325, file: !2326, line: 45, type: !72)
!2332 = !DILocation(line: 40, column: 6, scope: !2325)
!2333 = !DILocation(line: 41, column: 6, scope: !2325)
!2334 = !DILocation(line: 42, column: 2, scope: !2325)
!2335 = !DILocation(line: 0, scope: !2325)
!2336 = !DILocation(line: 40, column: 17, scope: !2325)
!2337 = !DILocation(line: 45, column: 17, scope: !2325)
!2338 = !DILocation(line: 45, column: 8, scope: !2325)
!2339 = !DILocation(line: 45, column: 3, scope: !2325)
!2340 = !DILocation(line: 48, column: 16, scope: !2325)
!2341 = !DILocation(line: 48, column: 17, scope: !2325)
!2342 = !DILocation(line: 48, column: 15, scope: !2325)
!2343 = !DILocation(line: 48, column: 27, scope: !2325)
!2344 = !DILocation(line: 48, column: 24, scope: !2325)
!2345 = !DILocation(line: 48, column: 3, scope: !2325)
!2346 = !DILocation(line: 49, column: 3, scope: !2325)
!2347 = !DILocation(line: 52, column: 32, scope: !2325)
!2348 = !DILocation(line: 52, column: 23, scope: !2325)
!2349 = !DILocation(line: 52, column: 3, scope: !2325)
!2350 = !DILocation(line: 56, column: 6, scope: !2325)
!2351 = !DILocation(line: 56, column: 11, scope: !2325)
!2352 = !DILocation(line: 57, column: 11, scope: !2325)
!2353 = !DILocation(line: 57, column: 14, scope: !2325)
!2354 = !DILocation(line: 57, column: 4, scope: !2325)
!2355 = distinct !DISubprogram(name: "reflect.readStringSidetable", linkageName: "reflect.readStringSidetable", scope: !2326, file: !2326, line: 26, type: !2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2358)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!91, !55}
!2358 = !{!2359, !2360, !2361, !2362}
!2359 = !DILocalVariable(name: "table", arg: 1, scope: !2355, file: !2326, line: 26, type: !91)
!2360 = !DILocalVariable(name: "index", arg: 2, scope: !2355, file: !2326, line: 26, type: !55)
!2361 = !DILocalVariable(name: "nameLen", scope: !2355, file: !2326, line: 27, type: !55)
!2362 = !DILocalVariable(name: "namePtr", scope: !2355, file: !2326, line: 27, type: !91)
!2363 = !DILocation(line: 26, column: 6, scope: !2355)
!2364 = !DILocation(line: 27, column: 56, scope: !2355)
!2365 = !DILocation(line: 27, column: 65, scope: !2355)
!2366 = !DILocation(line: 27, column: 47, scope: !2355)
!2367 = !DILocation(line: 27, column: 32, scope: !2355)
!2368 = !DILocation(line: 0, scope: !2355)
!2369 = !DILocation(line: 27, column: 2, scope: !2355)
!2370 = !DILocation(line: 27, column: 11, scope: !2355)
!2371 = !DILocation(line: 28, column: 48, scope: !2355)
!2372 = !DILocation(line: 29, column: 16, scope: !2355)
!2373 = !DILocation(line: 29, column: 7, scope: !2355)
!2374 = !DILocation(line: 30, column: 6, scope: !2355)
!2375 = !DILocation(line: 28, column: 2, scope: !2355)
!2376 = distinct !DISubprogram(name: "(reflect.Type).Len", linkageName: "(reflect.Type).Len", scope: !2062, file: !2062, line: 277, type: !2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2377)
!2377 = !{!2378, !2379, !2380, !2381}
!2378 = !DILocalVariable(name: "t", arg: 1, scope: !2376, file: !2062, line: 277, type: !84)
!2379 = !DILocalVariable(name: "arrayIdentifier", scope: !2376, file: !2062, line: 283, type: !84)
!2380 = !DILocalVariable(name: "p", scope: !2376, file: !2062, line: 284, type: !91)
!2381 = !DILocalVariable(name: "arrayLen", scope: !2376, file: !2062, line: 287, type: !55)
!2382 = !DILocation(line: 277, column: 15, scope: !2376)
!2383 = !DILocation(line: 278, column: 5, scope: !2376)
!2384 = !DILocation(line: 278, column: 11, scope: !2376)
!2385 = !DILocation(line: 278, column: 14, scope: !2376)
!2386 = !DILocation(line: 0, scope: !2376)
!2387 = !DILocation(line: 279, column: 8, scope: !2376)
!2388 = !DILocation(line: 283, column: 21, scope: !2376)
!2389 = !DILocation(line: 283, column: 34, scope: !2376)
!2390 = !DILocation(line: 283, column: 2, scope: !2376)
!2391 = !DILocation(line: 284, column: 92, scope: !2376)
!2392 = !DILocation(line: 284, column: 82, scope: !2376)
!2393 = !DILocation(line: 284, column: 35, scope: !2376)
!2394 = !DILocation(line: 284, column: 20, scope: !2376)
!2395 = !DILocation(line: 284, column: 5, scope: !2376)
!2396 = !DILocation(line: 287, column: 28, scope: !2376)
!2397 = !DILocation(line: 287, column: 27, scope: !2376)
!2398 = !DILocation(line: 287, column: 2, scope: !2376)
!2399 = !DILocation(line: 288, column: 13, scope: !2376)
!2400 = !DILocation(line: 288, column: 2, scope: !2376)
!2401 = distinct !DISubprogram(name: "(reflect.Value).Bool", linkageName: "(reflect.Value).Bool", scope: !1924, file: !1924, line: 146, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2402)
!2402 = !{!2403}
!2403 = !DILocalVariable(name: "v", arg: 1, scope: !2401, file: !1924, line: 146, type: !1944)
!2404 = !DILocation(line: 146, column: 16, scope: !2401)
!2405 = !DILocation(line: 0, scope: !2401)
!2406 = !DILocation(line: 147, column: 9, scope: !2401)
!2407 = !DILocation(line: 147, column: 15, scope: !2401)
!2408 = !DILocation(line: 155, column: 20, scope: !2401)
!2409 = !DILocation(line: 155, column: 21, scope: !2401)
!2410 = !DILocation(line: 155, column: 8, scope: !2401)
!2411 = !DILocation(line: 149, column: 6, scope: !2401)
!2412 = !DILocation(line: 149, column: 18, scope: !2401)
!2413 = !DILocation(line: 150, column: 20, scope: !2401)
!2414 = !DILocation(line: 150, column: 11, scope: !2401)
!2415 = !DILocation(line: 150, column: 4, scope: !2401)
!2416 = !DILocation(line: 152, column: 28, scope: !2401)
!2417 = !DILocation(line: 152, column: 4, scope: !2401)
!2418 = distinct !DISubprogram(name: "(reflect.Value).isIndirect", linkageName: "(reflect.Value).isIndirect", scope: !1924, file: !1924, line: 27, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2419)
!2419 = !{!2420}
!2420 = !DILocalVariable(name: "v", arg: 1, scope: !2418, file: !1924, line: 27, type: !1944)
!2421 = !DILocation(line: 27, column: 16, scope: !2418)
!2422 = !DILocation(line: 28, column: 16, scope: !2418)
!2423 = !DILocation(line: 28, column: 35, scope: !2418)
!2424 = !DILocation(line: 28, column: 2, scope: !2418)
!2425 = distinct !DISubprogram(name: "(reflect.Value).CanInterface", linkageName: "(reflect.Value).CanInterface", scope: !1924, file: !1924, line: 129, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2426)
!2426 = !{!2427}
!2427 = !DILocalVariable(name: "v", arg: 1, scope: !2425, file: !1924, line: 129, type: !1944)
!2428 = !DILocation(line: 129, column: 16, scope: !2425)
!2429 = !DILocation(line: 131, column: 2, scope: !2425)
!2430 = distinct !DISubprogram(name: "(reflect.Value).Complex", linkageName: "(reflect.Value).Complex", scope: !1924, file: !1924, line: 265, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2431)
!2431 = !{!2432}
!2432 = !DILocalVariable(name: "v", arg: 1, scope: !2430, file: !1924, line: 265, type: !1944)
!2433 = !DILocation(line: 265, column: 16, scope: !2430)
!2434 = !DILocation(line: 265, column: 7, scope: !2430)
!2435 = !DILocation(line: 0, scope: !2430)
!2436 = !DILocation(line: 266, column: 9, scope: !2430)
!2437 = !DILocation(line: 266, column: 15, scope: !2430)
!2438 = !DILocation(line: 283, column: 20, scope: !2430)
!2439 = !DILocation(line: 283, column: 21, scope: !2430)
!2440 = !DILocation(line: 283, column: 8, scope: !2430)
!2441 = !DILocation(line: 268, column: 6, scope: !2430)
!2442 = !DILocation(line: 268, column: 18, scope: !2430)
!2443 = !DILocation(line: 271, column: 22, scope: !2430)
!2444 = !DILocation(line: 271, column: 21, scope: !2430)
!2445 = !DILocation(line: 271, column: 4, scope: !2430)
!2446 = !DILocation(line: 281, column: 10, scope: !2430)
!2447 = !DILocation(line: 281, column: 3, scope: !2430)
!2448 = distinct !DISubprogram(name: "(reflect.Value).Elem", linkageName: "(reflect.Value).Elem", scope: !1924, file: !1924, line: 358, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2449)
!2449 = !{!2450, !2451}
!2450 = !DILocalVariable(name: "v", arg: 1, scope: !2448, file: !1924, line: 358, type: !1944)
!2451 = !DILocalVariable(name: "ptr", scope: !2448, file: !1924, line: 361, type: !91)
!2452 = !DILocation(line: 358, column: 16, scope: !2448)
!2453 = !DILocation(line: 0, scope: !2448)
!2454 = !DILocation(line: 359, column: 9, scope: !2448)
!2455 = !DILocation(line: 359, column: 15, scope: !2448)
!2456 = !DILocation(line: 363, column: 29, scope: !2448)
!2457 = !DILocation(line: 363, column: 28, scope: !2448)
!2458 = !DILocation(line: 363, column: 10, scope: !2448)
!2459 = !DILocation(line: 363, column: 4, scope: !2448)
!2460 = !DILocation(line: 361, column: 3, scope: !2448)
!2461 = !DILocation(line: 365, column: 6, scope: !2448)
!2462 = !DILocation(line: 365, column: 10, scope: !2448)
!2463 = !DILocation(line: 366, column: 4, scope: !2448)
!2464 = !DILocation(line: 369, column: 14, scope: !2448)
!2465 = !DILocation(line: 369, column: 20, scope: !2448)
!2466 = !DILocation(line: 369, column: 27, scope: !2448)
!2467 = !DILocation(line: 370, column: 14, scope: !2448)
!2468 = !DILocation(line: 371, column: 22, scope: !2448)
!2469 = !DILocation(line: 368, column: 3, scope: !2448)
!2470 = !DILocation(line: 374, column: 20, scope: !2448)
!2471 = !DILocation(line: 374, column: 21, scope: !2448)
!2472 = !DILocation(line: 374, column: 8, scope: !2448)
!2473 = !DILocation(line: 362, column: 6, scope: !2448)
!2474 = !DILocation(line: 362, column: 18, scope: !2448)
!2475 = distinct !DISubprogram(name: "(reflect.Value).Field", linkageName: "(reflect.Value).Field", scope: !1924, file: !1924, line: 379, type: !2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2478)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!1944, !30}
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487}
!2479 = !DILocalVariable(name: "v", arg: 1, scope: !2475, file: !1924, line: 379, type: !1944)
!2480 = !DILocalVariable(name: "i", arg: 2, scope: !2475, file: !1924, line: 379, type: !30)
!2481 = !DILocalVariable(name: "structField", scope: !2475, file: !1924, line: 380, type: !2092)
!2482 = !DILocalVariable(name: "flags", scope: !2475, file: !1924, line: 381, type: !1949)
!2483 = !DILocalVariable(name: "size", scope: !2475, file: !1924, line: 388, type: !55)
!2484 = !DILocalVariable(name: "fieldSize", scope: !2475, file: !1924, line: 389, type: !55)
!2485 = !DILocalVariable(name: "ptr", scope: !2475, file: !1924, line: 419, type: !91)
!2486 = !DILocalVariable(name: "value", scope: !2475, file: !1924, line: 420, type: !91)
!2487 = !DILocalVariable(name: "value", scope: !2475, file: !1924, line: 430, type: !55)
!2488 = !DILocation(line: 379, column: 16, scope: !2475)
!2489 = !DILocation(line: 0, scope: !2475)
!2490 = !DILocation(line: 380, column: 17, scope: !2475)
!2491 = !DILocation(line: 380, column: 23, scope: !2475)
!2492 = !DILocation(line: 380, column: 31, scope: !2475)
!2493 = !DILocation(line: 380, column: 2, scope: !2475)
!2494 = !DILocation(line: 381, column: 2, scope: !2475)
!2495 = !DILocalVariable(name: "x", arg: 1, scope: !2496, file: !2497, line: 22, type: !1347)
!2496 = distinct !DISubprogram(name: "runtime.stringEqual", linkageName: "runtime.stringEqual", scope: !2497, file: !2497, line: 22, type: !2498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2500)
!2497 = !DIFile(filename: "string.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!1347, !1347}
!2500 = !{!2495, !2501, !2502}
!2501 = !DILocalVariable(name: "y", arg: 2, scope: !2496, file: !2497, line: 22, type: !1347)
!2502 = !DILocalVariable(name: "i", scope: !2496, file: !2497, line: 26, type: !30)
!2503 = !DILocation(line: 22, column: 6, scope: !2496, inlinedAt: !2504)
!2504 = distinct !DILocation(line: 382, column: 25, scope: !2475)
!2505 = !DILocation(line: 23, column: 9, scope: !2496, inlinedAt: !2504)
!2506 = !DILocation(line: 23, column: 19, scope: !2496, inlinedAt: !2504)
!2507 = !DILocation(line: 23, column: 12, scope: !2496, inlinedAt: !2504)
!2508 = !DILocation(line: 388, column: 16, scope: !2475)
!2509 = !DILocation(line: 388, column: 23, scope: !2475)
!2510 = !DILocation(line: 388, column: 2, scope: !2475)
!2511 = !DILocation(line: 389, column: 36, scope: !2475)
!2512 = !DILocation(line: 389, column: 2, scope: !2475)
!2513 = !DILocation(line: 390, column: 17, scope: !2475)
!2514 = !DILocation(line: 394, column: 14, scope: !2475)
!2515 = !DILocation(line: 396, column: 28, scope: !2475)
!2516 = !DILocation(line: 393, column: 3, scope: !2475)
!2517 = !DILocation(line: 403, column: 5, scope: !2475)
!2518 = !DILocation(line: 403, column: 15, scope: !2475)
!2519 = !DILocation(line: 409, column: 14, scope: !2475)
!2520 = !DILocation(line: 408, column: 3, scope: !2475)
!2521 = !DILocation(line: 415, column: 5, scope: !2475)
!2522 = !DILocation(line: 415, column: 10, scope: !2475)
!2523 = !DILocation(line: 419, column: 24, scope: !2475)
!2524 = !DILocation(line: 420, column: 37, scope: !2475)
!2525 = !DILocation(line: 420, column: 42, scope: !2475)
!2526 = !DILocation(line: 420, column: 36, scope: !2475)
!2527 = !DILocation(line: 420, column: 26, scope: !2475)
!2528 = !DILocation(line: 420, column: 3, scope: !2475)
!2529 = !DILocation(line: 421, column: 3, scope: !2475)
!2530 = !DILocation(line: 430, column: 31, scope: !2475)
!2531 = !DILocation(line: 430, column: 62, scope: !2475)
!2532 = !DILocalVariable(name: "value", arg: 1, scope: !2533, file: !1924, line: 530, type: !55)
!2533 = distinct !DISubprogram(name: "reflect.maskAndShift", linkageName: "reflect.maskAndShift", scope: !1924, file: !1924, line: 530, type: !2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2536)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!55, !55, !55}
!2536 = !{!2532, !2537, !2538, !2539}
!2537 = !DILocalVariable(name: "offset", arg: 2, scope: !2533, file: !1924, line: 530, type: !55)
!2538 = !DILocalVariable(name: "size", arg: 3, scope: !2533, file: !1924, line: 530, type: !55)
!2539 = !DILocalVariable(name: "mask", scope: !2533, file: !1924, line: 531, type: !55)
!2540 = !DILocation(line: 530, column: 6, scope: !2533, inlinedAt: !2541)
!2541 = distinct !DILocation(line: 430, column: 23, scope: !2475)
!2542 = !DILocation(line: 531, column: 55, scope: !2533, inlinedAt: !2541)
!2543 = !DILocation(line: 531, column: 61, scope: !2533, inlinedAt: !2541)
!2544 = !DILocation(line: 531, column: 22, scope: !2533, inlinedAt: !2541)
!2545 = !DILocation(line: 531, column: 2, scope: !2533, inlinedAt: !2541)
!2546 = !DILocation(line: 532, column: 18, scope: !2533, inlinedAt: !2541)
!2547 = !DILocation(line: 532, column: 29, scope: !2533, inlinedAt: !2541)
!2548 = !DILocation(line: 532, column: 36, scope: !2533, inlinedAt: !2541)
!2549 = !DILocation(line: 532, column: 25, scope: !2533, inlinedAt: !2541)
!2550 = !DILocation(line: 532, column: 44, scope: !2533, inlinedAt: !2541)
!2551 = !DILocation(line: 532, column: 42, scope: !2533, inlinedAt: !2541)
!2552 = !DILocation(line: 430, column: 2, scope: !2475)
!2553 = !DILocation(line: 432, column: 13, scope: !2475)
!2554 = !DILocation(line: 434, column: 27, scope: !2475)
!2555 = !DILocation(line: 431, column: 2, scope: !2475)
!2556 = distinct !DISubprogram(name: "reflect.loadValue", linkageName: "reflect.loadValue", scope: !1924, file: !1924, line: 518, type: !2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2557)
!2557 = !{!2558, !2559, !2560, !2561, !2562}
!2558 = !DILocalVariable(name: "ptr", arg: 1, scope: !2556, file: !1924, line: 518, type: !91)
!2559 = !DILocalVariable(name: "size", arg: 2, scope: !2556, file: !1924, line: 518, type: !55)
!2560 = !DILocalVariable(name: "loadedValue", scope: !2556, file: !1924, line: 519, type: !55)
!2561 = !DILocalVariable(name: "shift", scope: !2556, file: !1924, line: 520, type: !55)
!2562 = !DILocalVariable(name: "i", scope: !2556, file: !1924, line: 521, type: !55)
!2563 = !DILocation(line: 518, column: 6, scope: !2556)
!2564 = !DILocation(line: 519, column: 2, scope: !2556)
!2565 = !DILocation(line: 520, column: 2, scope: !2556)
!2566 = !DILocation(line: 521, column: 6, scope: !2556)
!2567 = !DILocation(line: 0, scope: !2556)
!2568 = !DILocation(line: 518, column: 16, scope: !2556)
!2569 = !DILocation(line: 521, column: 23, scope: !2556)
!2570 = !DILocation(line: 521, column: 27, scope: !2556)
!2571 = !DILocation(line: 521, column: 25, scope: !2556)
!2572 = !DILocation(line: 522, column: 35, scope: !2556)
!2573 = !DILocation(line: 522, column: 26, scope: !2556)
!2574 = !DILocation(line: 522, column: 25, scope: !2556)
!2575 = !DILocation(line: 522, column: 44, scope: !2556)
!2576 = !DILocation(line: 522, column: 41, scope: !2556)
!2577 = !DILocation(line: 522, column: 3, scope: !2556)
!2578 = !DILocation(line: 523, column: 3, scope: !2556)
!2579 = !DILocation(line: 524, column: 32, scope: !2556)
!2580 = !DILocation(line: 524, column: 23, scope: !2556)
!2581 = !DILocation(line: 524, column: 3, scope: !2556)
!2582 = !DILocation(line: 521, column: 33, scope: !2556)
!2583 = !DILocation(line: 526, column: 9, scope: !2556)
!2584 = !DILocation(line: 526, column: 2, scope: !2556)
!2585 = distinct !DISubprogram(name: "(reflect.Value).Float", linkageName: "(reflect.Value).Float", scope: !1924, file: !1924, line: 239, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2586)
!2586 = !{!2587}
!2587 = !DILocalVariable(name: "v", arg: 1, scope: !2585, file: !1924, line: 239, type: !1944)
!2588 = !DILocation(line: 239, column: 16, scope: !2585)
!2589 = !DILocation(line: 239, column: 7, scope: !2585)
!2590 = !DILocation(line: 0, scope: !2585)
!2591 = !DILocation(line: 240, column: 9, scope: !2585)
!2592 = !DILocation(line: 240, column: 15, scope: !2585)
!2593 = !DILocation(line: 261, column: 20, scope: !2585)
!2594 = !DILocation(line: 261, column: 21, scope: !2585)
!2595 = !DILocation(line: 261, column: 8, scope: !2585)
!2596 = !DILocation(line: 242, column: 6, scope: !2585)
!2597 = !DILocation(line: 242, column: 18, scope: !2585)
!2598 = !DILocation(line: 245, column: 30, scope: !2585)
!2599 = !DILocation(line: 245, column: 19, scope: !2585)
!2600 = !DILocation(line: 245, column: 18, scope: !2585)
!2601 = !DILocation(line: 245, column: 4, scope: !2585)
!2602 = !DILocation(line: 249, column: 45, scope: !2585)
!2603 = !DILocation(line: 249, column: 18, scope: !2585)
!2604 = !DILocation(line: 249, column: 4, scope: !2585)
!2605 = !DILocation(line: 252, column: 6, scope: !2585)
!2606 = !DILocation(line: 252, column: 18, scope: !2585)
!2607 = !DILocation(line: 254, column: 22, scope: !2585)
!2608 = !DILocation(line: 254, column: 11, scope: !2585)
!2609 = !DILocation(line: 254, column: 4, scope: !2585)
!2610 = distinct !DISubprogram(name: "(reflect.Value).Index", linkageName: "(reflect.Value).Index", scope: !1924, file: !1924, line: 438, type: !2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2611)
!2611 = !{!2612, !2613, !2614, !2621, !2622, !2623, !2624, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2612 = !DILocalVariable(name: "v", arg: 1, scope: !2610, file: !1924, line: 438, type: !1944)
!2613 = !DILocalVariable(name: "i", arg: 2, scope: !2610, file: !1924, line: 438, type: !30)
!2614 = !DILocalVariable(name: "slice", scope: !2610, file: !1924, line: 442, type: !2615)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.SliceHeader", baseType: !2616)
!2616 = !DICompositeType(tag: DW_TAG_structure_type, size: 96, align: 32, elements: !2617)
!2617 = !{!2618, !2619, !2620}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "Data", baseType: !55, size: 32, align: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "Len", baseType: !55, size: 32, align: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "Cap", baseType: !55, size: 32, align: 32, offset: 64)
!2621 = !DILocalVariable(name: "elem", scope: !2610, file: !1924, line: 446, type: !1944)
!2622 = !DILocalVariable(name: "addr", scope: !2610, file: !1924, line: 450, type: !55)
!2623 = !DILocalVariable(name: "value", scope: !2610, file: !1924, line: 20, type: !91)
!2624 = !DILocalVariable(name: "s", scope: !2610, file: !1924, line: 457, type: !2625)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.StringHeader", baseType: !2626)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !2627)
!2627 = !{!2618, !2619}
!2628 = !DILocalVariable(name: "elemType", scope: !2610, file: !1924, line: 467, type: !84)
!2629 = !DILocalVariable(name: "elemSize", scope: !2610, file: !1924, line: 468, type: !55)
!2630 = !DILocalVariable(name: "size", scope: !2610, file: !1924, line: 469, type: !55)
!2631 = !DILocalVariable(name: "addr", scope: !2610, file: !1924, line: 482, type: !55)
!2632 = !DILocalVariable(name: "addr", scope: !2610, file: !1924, line: 493, type: !55)
!2633 = !DILocalVariable(name: "offset", scope: !2610, file: !1924, line: 503, type: !55)
!2634 = !DILocalVariable(name: "value", scope: !2610, file: !1924, line: 504, type: !55)
!2635 = !DILocation(line: 438, column: 16, scope: !2610)
!2636 = !DILocation(line: 0, scope: !2610)
!2637 = !DILocation(line: 439, column: 9, scope: !2610)
!2638 = !DILocation(line: 439, column: 15, scope: !2610)
!2639 = !DILocation(line: 442, column: 12, scope: !2610)
!2640 = !DILocation(line: 442, column: 3, scope: !2610)
!2641 = !DILocation(line: 443, column: 11, scope: !2610)
!2642 = !DILocation(line: 443, column: 14, scope: !2610)
!2643 = !DILocation(line: 444, column: 9, scope: !2610)
!2644 = !DILocation(line: 447, column: 14, scope: !2610)
!2645 = !DILocation(line: 447, column: 20, scope: !2610)
!2646 = !DILocation(line: 447, column: 27, scope: !2610)
!2647 = !DILocation(line: 448, column: 22, scope: !2610)
!2648 = !DILocation(line: 450, column: 33, scope: !2610)
!2649 = !DILocation(line: 450, column: 42, scope: !2610)
!2650 = !DILocation(line: 450, column: 49, scope: !2610)
!2651 = !DILocation(line: 450, column: 60, scope: !2610)
!2652 = !DILocation(line: 450, column: 51, scope: !2610)
!2653 = !DILocation(line: 450, column: 31, scope: !2610)
!2654 = !DILocation(line: 450, column: 3, scope: !2610)
!2655 = !DILocation(line: 451, column: 30, scope: !2610)
!2656 = !DILocation(line: 451, column: 8, scope: !2610)
!2657 = !DILocation(line: 452, column: 10, scope: !2610)
!2658 = !DILocation(line: 452, column: 3, scope: !2610)
!2659 = !DILocation(line: 457, column: 8, scope: !2610)
!2660 = !DILocation(line: 457, column: 3, scope: !2610)
!2661 = !DILocation(line: 458, column: 11, scope: !2610)
!2662 = !DILocation(line: 458, column: 14, scope: !2610)
!2663 = !DILocation(line: 459, column: 9, scope: !2610)
!2664 = !DILocation(line: 463, column: 79, scope: !2610)
!2665 = !DILocation(line: 463, column: 69, scope: !2610)
!2666 = !DILocation(line: 463, column: 61, scope: !2610)
!2667 = !DILocation(line: 463, column: 37, scope: !2610)
!2668 = !DILocation(line: 463, column: 36, scope: !2610)
!2669 = !DILocation(line: 463, column: 28, scope: !2610)
!2670 = !DILocation(line: 461, column: 3, scope: !2610)
!2671 = !DILocation(line: 473, column: 15, scope: !2610)
!2672 = !DILocation(line: 473, column: 21, scope: !2610)
!2673 = !DILocation(line: 473, column: 28, scope: !2610)
!2674 = !DILocation(line: 472, column: 4, scope: !2610)
!2675 = !DILocation(line: 477, column: 6, scope: !2610)
!2676 = !DILocation(line: 477, column: 15, scope: !2610)
!2677 = !DILocation(line: 490, column: 6, scope: !2610)
!2678 = !DILocation(line: 490, column: 11, scope: !2610)
!2679 = !DILocation(line: 503, column: 13, scope: !2610)
!2680 = !DILocation(line: 503, column: 32, scope: !2610)
!2681 = !DILocation(line: 503, column: 22, scope: !2610)
!2682 = !DILocation(line: 503, column: 3, scope: !2610)
!2683 = !DILocation(line: 504, column: 32, scope: !2610)
!2684 = !DILocation(line: 530, column: 6, scope: !2533, inlinedAt: !2685)
!2685 = distinct !DILocation(line: 504, column: 24, scope: !2610)
!2686 = !DILocation(line: 531, column: 55, scope: !2533, inlinedAt: !2685)
!2687 = !DILocation(line: 531, column: 61, scope: !2533, inlinedAt: !2685)
!2688 = !DILocation(line: 531, column: 22, scope: !2533, inlinedAt: !2685)
!2689 = !DILocation(line: 531, column: 2, scope: !2533, inlinedAt: !2685)
!2690 = !DILocation(line: 532, column: 18, scope: !2533, inlinedAt: !2685)
!2691 = !DILocation(line: 532, column: 29, scope: !2533, inlinedAt: !2685)
!2692 = !DILocation(line: 532, column: 36, scope: !2533, inlinedAt: !2685)
!2693 = !DILocation(line: 532, column: 25, scope: !2533, inlinedAt: !2685)
!2694 = !DILocation(line: 532, column: 44, scope: !2533, inlinedAt: !2685)
!2695 = !DILocation(line: 532, column: 42, scope: !2533, inlinedAt: !2685)
!2696 = !DILocation(line: 504, column: 3, scope: !2610)
!2697 = !DILocation(line: 506, column: 14, scope: !2610)
!2698 = !DILocation(line: 506, column: 20, scope: !2610)
!2699 = !DILocation(line: 506, column: 27, scope: !2610)
!2700 = !DILocation(line: 508, column: 28, scope: !2610)
!2701 = !DILocation(line: 505, column: 3, scope: !2610)
!2702 = !DILocation(line: 511, column: 20, scope: !2610)
!2703 = !DILocation(line: 511, column: 21, scope: !2610)
!2704 = !DILocation(line: 511, column: 8, scope: !2610)
!2705 = !DILocation(line: 467, column: 15, scope: !2610)
!2706 = !DILocation(line: 467, column: 21, scope: !2610)
!2707 = !DILocation(line: 467, column: 28, scope: !2610)
!2708 = !DILocation(line: 468, column: 15, scope: !2610)
!2709 = !DILocation(line: 468, column: 28, scope: !2610)
!2710 = !DILocation(line: 468, column: 3, scope: !2610)
!2711 = !DILocation(line: 469, column: 11, scope: !2610)
!2712 = !DILocation(line: 469, column: 17, scope: !2610)
!2713 = !DILocation(line: 469, column: 24, scope: !2610)
!2714 = !DILocation(line: 470, column: 6, scope: !2610)
!2715 = !DILocation(line: 470, column: 11, scope: !2610)
!2716 = !DILocation(line: 482, column: 31, scope: !2610)
!2717 = !DILocation(line: 482, column: 48, scope: !2610)
!2718 = !DILocation(line: 482, column: 39, scope: !2610)
!2719 = !DILocation(line: 482, column: 4, scope: !2610)
!2720 = !DILocation(line: 484, column: 15, scope: !2610)
!2721 = !DILocation(line: 484, column: 21, scope: !2610)
!2722 = !DILocation(line: 484, column: 28, scope: !2610)
!2723 = !DILocation(line: 486, column: 29, scope: !2610)
!2724 = !DILocation(line: 483, column: 4, scope: !2610)
!2725 = !DILocation(line: 493, column: 31, scope: !2610)
!2726 = !DILocation(line: 493, column: 48, scope: !2610)
!2727 = !DILocation(line: 493, column: 39, scope: !2610)
!2728 = !DILocation(line: 493, column: 4, scope: !2610)
!2729 = !DILocation(line: 495, column: 15, scope: !2610)
!2730 = !DILocation(line: 495, column: 21, scope: !2610)
!2731 = !DILocation(line: 495, column: 28, scope: !2610)
!2732 = !DILocation(line: 497, column: 54, scope: !2610)
!2733 = !DILocation(line: 497, column: 39, scope: !2610)
!2734 = !DILocation(line: 497, column: 29, scope: !2610)
!2735 = !DILocation(line: 494, column: 4, scope: !2610)
!2736 = distinct !DISubprogram(name: "(reflect.Value).Int", linkageName: "(reflect.Value).Int", scope: !1924, file: !1924, line: 159, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2737)
!2737 = !{!2738}
!2738 = !DILocalVariable(name: "v", arg: 1, scope: !2736, file: !1924, line: 159, type: !1944)
!2739 = !DILocation(line: 159, column: 16, scope: !2736)
!2740 = !DILocation(line: 0, scope: !2736)
!2741 = !DILocation(line: 160, column: 9, scope: !2736)
!2742 = !DILocation(line: 160, column: 15, scope: !2736)
!2743 = !DILocation(line: 192, column: 20, scope: !2736)
!2744 = !DILocation(line: 192, column: 21, scope: !2736)
!2745 = !DILocation(line: 192, column: 8, scope: !2736)
!2746 = !DILocation(line: 162, column: 6, scope: !2736)
!2747 = !DILocation(line: 162, column: 18, scope: !2736)
!2748 = !DILocation(line: 163, column: 24, scope: !2736)
!2749 = !DILocation(line: 163, column: 17, scope: !2736)
!2750 = !DILocation(line: 163, column: 16, scope: !2736)
!2751 = !DILocation(line: 163, column: 4, scope: !2736)
!2752 = !DILocation(line: 165, column: 28, scope: !2736)
!2753 = !DILocation(line: 165, column: 16, scope: !2736)
!2754 = !DILocation(line: 165, column: 4, scope: !2736)
!2755 = !DILocation(line: 168, column: 6, scope: !2736)
!2756 = !DILocation(line: 168, column: 18, scope: !2736)
!2757 = !DILocation(line: 169, column: 17, scope: !2736)
!2758 = !DILocation(line: 169, column: 16, scope: !2736)
!2759 = !DILocation(line: 169, column: 4, scope: !2736)
!2760 = !DILocation(line: 171, column: 29, scope: !2736)
!2761 = !DILocation(line: 171, column: 21, scope: !2736)
!2762 = !DILocation(line: 171, column: 16, scope: !2736)
!2763 = !DILocation(line: 171, column: 4, scope: !2736)
!2764 = !DILocation(line: 174, column: 6, scope: !2736)
!2765 = !DILocation(line: 174, column: 18, scope: !2736)
!2766 = !DILocation(line: 175, column: 26, scope: !2736)
!2767 = !DILocation(line: 175, column: 17, scope: !2736)
!2768 = !DILocation(line: 175, column: 16, scope: !2736)
!2769 = !DILocation(line: 175, column: 4, scope: !2736)
!2770 = !DILocation(line: 177, column: 30, scope: !2736)
!2771 = !DILocation(line: 177, column: 22, scope: !2736)
!2772 = !DILocation(line: 177, column: 16, scope: !2736)
!2773 = !DILocation(line: 177, column: 4, scope: !2736)
!2774 = !DILocation(line: 180, column: 6, scope: !2736)
!2775 = !DILocation(line: 180, column: 18, scope: !2736)
!2776 = !DILocation(line: 181, column: 26, scope: !2736)
!2777 = !DILocation(line: 181, column: 17, scope: !2736)
!2778 = !DILocation(line: 181, column: 16, scope: !2736)
!2779 = !DILocation(line: 181, column: 4, scope: !2736)
!2780 = !DILocation(line: 183, column: 30, scope: !2736)
!2781 = !DILocation(line: 183, column: 16, scope: !2736)
!2782 = !DILocation(line: 183, column: 4, scope: !2736)
!2783 = !DILocation(line: 186, column: 6, scope: !2736)
!2784 = !DILocation(line: 186, column: 18, scope: !2736)
!2785 = !DILocation(line: 187, column: 26, scope: !2736)
!2786 = !DILocation(line: 187, column: 17, scope: !2736)
!2787 = !DILocation(line: 187, column: 4, scope: !2736)
!2788 = distinct !DISubprogram(name: "(reflect.Value).Interface", linkageName: "(reflect.Value).Interface", scope: !1924, file: !1924, line: 53, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2789)
!2789 = !{!2790, !2791, !2792, !2793}
!2790 = !DILocalVariable(name: "v", arg: 1, scope: !2788, file: !1924, line: 53, type: !1944)
!2791 = !DILocalVariable(name: "value", scope: !2788, file: !1924, line: 57, type: !55)
!2792 = !DILocalVariable(name: "j", scope: !2788, file: !1924, line: 58, type: !55)
!2793 = !DILocalVariable(name: "value", scope: !2788, file: !1924, line: 20, type: !91)
!2794 = !DILocation(line: 19, column: 6, scope: !2795, inlinedAt: !2801)
!2795 = distinct !DISubprogram(name: "runtime.composeInterface", linkageName: "runtime.composeInterface", scope: !1931, file: !1931, line: 19, type: !2796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2798)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!55, !91}
!2798 = !{!2799, !2800}
!2799 = !DILocalVariable(name: "typecode", arg: 1, scope: !2795, file: !1931, line: 19, type: !55)
!2800 = !DILocalVariable(name: "value", arg: 2, scope: !2795, file: !1931, line: 19, type: !91)
!2801 = distinct !DILocation(line: 63, column: 25, scope: !2788)
!2802 = !DILocation(line: 53, column: 16, scope: !2788)
!2803 = !DILocation(line: 0, scope: !2788)
!2804 = !DILocation(line: 54, column: 5, scope: !2788)
!2805 = !DILocation(line: 54, column: 17, scope: !2788)
!2806 = !DILocation(line: 57, column: 7, scope: !2788)
!2807 = !DILocation(line: 58, column: 7, scope: !2788)
!2808 = !DILocation(line: 58, column: 29, scope: !2788)
!2809 = !DILocation(line: 58, column: 31, scope: !2788)
!2810 = !DILocation(line: 59, column: 13, scope: !2788)
!2811 = !DILocation(line: 61, column: 28, scope: !2788)
!2812 = !DILocation(line: 59, column: 19, scope: !2788)
!2813 = !DILocation(line: 59, column: 79, scope: !2788)
!2814 = !DILocation(line: 59, column: 77, scope: !2788)
!2815 = !DILocation(line: 59, column: 81, scope: !2788)
!2816 = !DILocation(line: 59, column: 59, scope: !2788)
!2817 = !DILocation(line: 59, column: 35, scope: !2788)
!2818 = !DILocation(line: 59, column: 34, scope: !2788)
!2819 = !DILocation(line: 59, column: 25, scope: !2788)
!2820 = !DILocation(line: 59, column: 4, scope: !2788)
!2821 = !DILocation(line: 58, column: 37, scope: !2788)
!2822 = !DILocation(line: 54, column: 23, scope: !2788)
!2823 = !DILocation(line: 54, column: 29, scope: !2788)
!2824 = !DILocation(line: 54, column: 36, scope: !2788)
!2825 = !DILocation(line: 54, column: 39, scope: !2788)
!2826 = !DILocation(line: 58, column: 12, scope: !2788)
!2827 = !DILocation(line: 58, column: 18, scope: !2788)
!2828 = !DILocation(line: 58, column: 25, scope: !2788)
!2829 = !DILocation(line: 61, column: 27, scope: !2788)
!2830 = !DILocation(line: 61, column: 5, scope: !2788)
!2831 = !DILocation(line: 63, column: 40, scope: !2788)
!2832 = !DILocation(line: 20, column: 2, scope: !2795, inlinedAt: !2801)
!2833 = !DILocation(line: 63, column: 2, scope: !2788)
!2834 = distinct !DISubprogram(name: "(reflect.Value).IsNil", linkageName: "(reflect.Value).IsNil", scope: !1924, file: !1924, line: 76, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2835)
!2835 = !{!2836, !2837, !2844, !2846}
!2836 = !DILocalVariable(name: "v", arg: 1, scope: !2834, file: !1924, line: 76, type: !1944)
!2837 = !DILocalVariable(name: "fn", scope: !2834, file: !1924, line: 87, type: !2838)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32, align: 32, dwarfAddressSpace: 0)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.funcHeader", baseType: !2840)
!2840 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "Context", baseType: !91, size: 32, align: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "Code", baseType: !91, size: 32, align: 32, offset: 32)
!2844 = !DILocalVariable(name: "slice", scope: !2834, file: !1924, line: 93, type: !2845)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32, align: 32, dwarfAddressSpace: 0)
!2846 = !DILocalVariable(name: "val", scope: !2834, file: !1924, line: 99, type: !91)
!2847 = !DILocation(line: 24, column: 6, scope: !1930, inlinedAt: !2848)
!2848 = distinct !DILocation(line: 99, column: 31, scope: !2834)
!2849 = !DILocation(line: 76, column: 16, scope: !2834)
!2850 = !DILocation(line: 0, scope: !2834)
!2851 = !DILocation(line: 77, column: 9, scope: !2834)
!2852 = !DILocation(line: 77, column: 15, scope: !2834)
!2853 = !DILocation(line: 85, column: 4, scope: !2834)
!2854 = !DILocation(line: 102, column: 20, scope: !2834)
!2855 = !DILocation(line: 102, column: 21, scope: !2834)
!2856 = !DILocation(line: 102, column: 8, scope: !2834)
!2857 = !DILocation(line: 79, column: 6, scope: !2834)
!2858 = !DILocation(line: 79, column: 18, scope: !2834)
!2859 = !DILocation(line: 80, column: 22, scope: !2834)
!2860 = !DILocation(line: 80, column: 11, scope: !2834)
!2861 = !DILocation(line: 80, column: 32, scope: !2834)
!2862 = !DILocation(line: 80, column: 4, scope: !2834)
!2863 = !DILocation(line: 82, column: 18, scope: !2834)
!2864 = !DILocation(line: 82, column: 3, scope: !2834)
!2865 = !DILocation(line: 84, column: 14, scope: !2834)
!2866 = !DILocation(line: 88, column: 10, scope: !2834)
!2867 = !DILocation(line: 88, column: 13, scope: !2834)
!2868 = !DILocation(line: 88, column: 18, scope: !2834)
!2869 = !DILocation(line: 88, column: 3, scope: !2834)
!2870 = !DILocation(line: 90, column: 14, scope: !2834)
!2871 = !DILocation(line: 94, column: 10, scope: !2834)
!2872 = !DILocation(line: 94, column: 16, scope: !2834)
!2873 = !DILocation(line: 94, column: 21, scope: !2834)
!2874 = !DILocation(line: 94, column: 3, scope: !2834)
!2875 = !DILocation(line: 96, column: 14, scope: !2834)
!2876 = !DILocation(line: 99, column: 32, scope: !2834)
!2877 = !DILocation(line: 25, column: 2, scope: !1930, inlinedAt: !2848)
!2878 = !DILocation(line: 100, column: 10, scope: !2834)
!2879 = !DILocation(line: 100, column: 14, scope: !2834)
!2880 = !DILocation(line: 100, column: 3, scope: !2834)
!2881 = distinct !DISubprogram(name: "(reflect.Value).IsValid", linkageName: "(reflect.Value).IsValid", scope: !1924, file: !1924, line: 125, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2882)
!2882 = !{!2883}
!2883 = !DILocalVariable(name: "v", arg: 1, scope: !2881, file: !1924, line: 125, type: !1944)
!2884 = !DILocation(line: 125, column: 16, scope: !2881)
!2885 = !DILocation(line: 126, column: 20, scope: !2881)
!2886 = !DILocation(line: 126, column: 2, scope: !2881)
!2887 = distinct !DISubprogram(name: "(reflect.Value).MapRange", linkageName: "(reflect.Value).MapRange", scope: !1924, file: !1924, line: 543, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2888)
!2888 = !{!2889}
!2889 = !DILocalVariable(name: "v", arg: 1, scope: !2887, file: !1924, line: 543, type: !1944)
!2890 = !DILocation(line: 543, column: 16, scope: !2887)
!2891 = !DILocation(line: 544, column: 7, scope: !2887)
!2892 = distinct !DISubprogram(name: "(reflect.Value).NumField", linkageName: "(reflect.Value).NumField", scope: !1924, file: !1924, line: 354, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2893)
!2893 = !{!2894}
!2894 = !DILocalVariable(name: "v", arg: 1, scope: !2892, file: !1924, line: 354, type: !1944)
!2895 = !DILocation(line: 354, column: 16, scope: !2892)
!2896 = !DILocation(line: 355, column: 9, scope: !2892)
!2897 = !DILocation(line: 355, column: 15, scope: !2892)
!2898 = !DILocation(line: 355, column: 26, scope: !2892)
!2899 = !DILocation(line: 355, column: 2, scope: !2892)
!2900 = distinct !DISubprogram(name: "(reflect.Value).Pointer", linkageName: "(reflect.Value).Pointer", scope: !1924, file: !1924, line: 108, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2901)
!2901 = !{!2902, !2903}
!2902 = !DILocalVariable(name: "v", arg: 1, scope: !2900, file: !1924, line: 108, type: !1944)
!2903 = !DILocalVariable(name: "slice", scope: !2900, file: !1924, line: 116, type: !2845)
!2904 = !DILocation(line: 108, column: 16, scope: !2900)
!2905 = !DILocation(line: 0, scope: !2900)
!2906 = !DILocation(line: 109, column: 9, scope: !2900)
!2907 = !DILocation(line: 109, column: 15, scope: !2900)
!2908 = !DILocation(line: 119, column: 8, scope: !2900)
!2909 = !DILocation(line: 121, column: 20, scope: !2900)
!2910 = !DILocation(line: 121, column: 21, scope: !2900)
!2911 = !DILocation(line: 121, column: 8, scope: !2900)
!2912 = !DILocation(line: 111, column: 6, scope: !2900)
!2913 = !DILocation(line: 111, column: 18, scope: !2900)
!2914 = !DILocation(line: 112, column: 22, scope: !2900)
!2915 = !DILocation(line: 112, column: 11, scope: !2900)
!2916 = !DILocation(line: 112, column: 4, scope: !2900)
!2917 = !DILocation(line: 114, column: 17, scope: !2900)
!2918 = !DILocation(line: 114, column: 3, scope: !2900)
!2919 = !DILocation(line: 116, column: 3, scope: !2900)
!2920 = !DILocation(line: 117, column: 10, scope: !2900)
!2921 = !DILocation(line: 117, column: 16, scope: !2900)
!2922 = !DILocation(line: 117, column: 3, scope: !2900)
!2923 = distinct !DISubprogram(name: "(reflect.Value).String", linkageName: "(reflect.Value).String", scope: !1924, file: !1924, line: 287, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2924)
!2924 = !{!2925}
!2925 = !DILocalVariable(name: "v", arg: 1, scope: !2923, file: !1924, line: 287, type: !1944)
!2926 = !DILocation(line: 287, column: 16, scope: !2923)
!2927 = !DILocation(line: 0, scope: !2923)
!2928 = !DILocation(line: 288, column: 9, scope: !2923)
!2929 = !DILocation(line: 288, column: 15, scope: !2923)
!2930 = !DILocation(line: 295, column: 3, scope: !2923)
!2931 = !DILocation(line: 292, column: 10, scope: !2923)
!2932 = !DILocation(line: 292, column: 3, scope: !2923)
!2933 = distinct !DISubprogram(name: "(reflect.Value).Uint", linkageName: "(reflect.Value).Uint", scope: !1924, file: !1924, line: 196, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2934)
!2934 = !{!2935}
!2935 = !DILocalVariable(name: "v", arg: 1, scope: !2933, file: !1924, line: 196, type: !1944)
!2936 = !DILocation(line: 196, column: 16, scope: !2933)
!2937 = !DILocation(line: 0, scope: !2933)
!2938 = !DILocation(line: 197, column: 9, scope: !2933)
!2939 = !DILocation(line: 197, column: 15, scope: !2933)
!2940 = !DILocation(line: 235, column: 20, scope: !2933)
!2941 = !DILocation(line: 235, column: 21, scope: !2933)
!2942 = !DILocation(line: 235, column: 8, scope: !2933)
!2943 = !DILocation(line: 199, column: 6, scope: !2933)
!2944 = !DILocation(line: 199, column: 18, scope: !2933)
!2945 = !DILocation(line: 200, column: 29, scope: !2933)
!2946 = !DILocation(line: 200, column: 18, scope: !2933)
!2947 = !DILocation(line: 200, column: 17, scope: !2933)
!2948 = !DILocation(line: 200, column: 4, scope: !2933)
!2949 = !DILocation(line: 202, column: 25, scope: !2933)
!2950 = !DILocation(line: 202, column: 17, scope: !2933)
!2951 = !DILocation(line: 202, column: 4, scope: !2933)
!2952 = !DILocation(line: 205, column: 6, scope: !2933)
!2953 = !DILocation(line: 205, column: 18, scope: !2933)
!2954 = !DILocation(line: 206, column: 18, scope: !2933)
!2955 = !DILocation(line: 206, column: 17, scope: !2933)
!2956 = !DILocation(line: 206, column: 4, scope: !2933)
!2957 = !DILocation(line: 208, column: 25, scope: !2933)
!2958 = !DILocation(line: 208, column: 17, scope: !2933)
!2959 = !DILocation(line: 208, column: 4, scope: !2933)
!2960 = !DILocation(line: 211, column: 6, scope: !2933)
!2961 = !DILocation(line: 211, column: 18, scope: !2933)
!2962 = !DILocation(line: 212, column: 28, scope: !2933)
!2963 = !DILocation(line: 212, column: 18, scope: !2933)
!2964 = !DILocation(line: 212, column: 17, scope: !2933)
!2965 = !DILocation(line: 212, column: 4, scope: !2933)
!2966 = !DILocation(line: 214, column: 25, scope: !2933)
!2967 = !DILocation(line: 214, column: 17, scope: !2933)
!2968 = !DILocation(line: 214, column: 4, scope: !2933)
!2969 = !DILocation(line: 217, column: 6, scope: !2933)
!2970 = !DILocation(line: 217, column: 18, scope: !2933)
!2971 = !DILocation(line: 218, column: 26, scope: !2933)
!2972 = !DILocation(line: 218, column: 18, scope: !2933)
!2973 = !DILocation(line: 218, column: 17, scope: !2933)
!2974 = !DILocation(line: 218, column: 4, scope: !2933)
!2975 = !DILocation(line: 220, column: 25, scope: !2933)
!2976 = !DILocation(line: 220, column: 17, scope: !2933)
!2977 = !DILocation(line: 220, column: 4, scope: !2933)
!2978 = !DILocation(line: 223, column: 6, scope: !2933)
!2979 = !DILocation(line: 223, column: 18, scope: !2933)
!2980 = !DILocation(line: 224, column: 28, scope: !2933)
!2981 = !DILocation(line: 224, column: 18, scope: !2933)
!2982 = !DILocation(line: 224, column: 17, scope: !2933)
!2983 = !DILocation(line: 224, column: 4, scope: !2933)
!2984 = !DILocation(line: 226, column: 25, scope: !2933)
!2985 = !DILocation(line: 226, column: 17, scope: !2933)
!2986 = !DILocation(line: 226, column: 4, scope: !2933)
!2987 = !DILocation(line: 229, column: 6, scope: !2933)
!2988 = !DILocation(line: 229, column: 18, scope: !2933)
!2989 = !DILocation(line: 230, column: 28, scope: !2933)
!2990 = !DILocation(line: 230, column: 18, scope: !2933)
!2991 = !DILocation(line: 230, column: 4, scope: !2933)
!2992 = distinct !DISubprogram(name: "runtime.sliceAppend", linkageName: "runtime.sliceAppend", scope: !2993, file: !2993, line: 11, type: !2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !2996)
!2993 = !DIFile(filename: "slice.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!91, !91, !55, !55, !55, !55}
!2996 = !{!2997, !2998, !2999, !3000, !3001, !3002, !3003}
!2997 = !DILocalVariable(name: "srcBuf", arg: 1, scope: !2992, file: !2993, line: 11, type: !91)
!2998 = !DILocalVariable(name: "elemsBuf", arg: 2, scope: !2992, file: !2993, line: 11, type: !91)
!2999 = !DILocalVariable(name: "srcLen", arg: 3, scope: !2992, file: !2993, line: 11, type: !55)
!3000 = !DILocalVariable(name: "srcCap", arg: 4, scope: !2992, file: !2993, line: 11, type: !55)
!3001 = !DILocalVariable(name: "elemsLen", arg: 5, scope: !2992, file: !2993, line: 11, type: !55)
!3002 = !DILocalVariable(name: "elemSize", arg: 6, scope: !2992, file: !2993, line: 11, type: !55)
!3003 = !DILocalVariable(name: "buf", scope: !2992, file: !2993, line: 30, type: !91)
!3004 = !DILocation(line: 11, column: 6, scope: !2992)
!3005 = !DILocation(line: 12, column: 5, scope: !2992)
!3006 = !DILocation(line: 12, column: 14, scope: !2992)
!3007 = !DILocation(line: 0, scope: !2992)
!3008 = !DILocation(line: 14, column: 10, scope: !2992)
!3009 = !DILocation(line: 14, column: 18, scope: !2992)
!3010 = !DILocation(line: 14, column: 26, scope: !2992)
!3011 = !DILocation(line: 14, column: 3, scope: !2992)
!3012 = !DILocation(line: 17, column: 5, scope: !2992)
!3013 = !DILocation(line: 17, column: 12, scope: !2992)
!3014 = !DILocation(line: 17, column: 11, scope: !2992)
!3015 = !DILocation(line: 17, column: 23, scope: !2992)
!3016 = !DILocation(line: 17, column: 21, scope: !2992)
!3017 = !DILocation(line: 19, column: 12, scope: !2992)
!3018 = !DILocation(line: 19, column: 19, scope: !2992)
!3019 = !DILocation(line: 19, column: 3, scope: !2992)
!3020 = !DILocation(line: 20, column: 6, scope: !2992)
!3021 = !DILocation(line: 20, column: 13, scope: !2992)
!3022 = !DILocation(line: 11, column: 59, scope: !2992)
!3023 = !DILocation(line: 23, column: 7, scope: !2992)
!3024 = !DILocation(line: 23, column: 14, scope: !2992)
!3025 = !DILocation(line: 23, column: 25, scope: !2992)
!3026 = !DILocation(line: 23, column: 23, scope: !2992)
!3027 = !DILocation(line: 28, column: 4, scope: !2992)
!3028 = !DILocation(line: 30, column: 16, scope: !2992)
!3029 = !DILocation(line: 30, column: 25, scope: !2992)
!3030 = !DILocation(line: 30, column: 15, scope: !2992)
!3031 = !DILocation(line: 30, column: 3, scope: !2992)
!3032 = !DILocation(line: 33, column: 6, scope: !2992)
!3033 = !DILocation(line: 33, column: 13, scope: !2992)
!3034 = !DILocation(line: 34, column: 12, scope: !2992)
!3035 = !DILocation(line: 34, column: 17, scope: !2992)
!3036 = !DILocation(line: 34, column: 25, scope: !2992)
!3037 = !DILocation(line: 34, column: 32, scope: !2992)
!3038 = !DILocation(line: 34, column: 11, scope: !2992)
!3039 = !DILocation(line: 11, column: 18, scope: !2992)
!3040 = !DILocation(line: 40, column: 33, scope: !2992)
!3041 = !DILocation(line: 40, column: 41, scope: !2992)
!3042 = !DILocation(line: 40, column: 48, scope: !2992)
!3043 = !DILocation(line: 40, column: 24, scope: !2992)
!3044 = !DILocation(line: 40, column: 59, scope: !2992)
!3045 = !DILocation(line: 40, column: 69, scope: !2992)
!3046 = !DILocation(line: 40, column: 78, scope: !2992)
!3047 = !DILocation(line: 40, column: 9, scope: !2992)
!3048 = !DILocation(line: 41, column: 9, scope: !2992)
!3049 = !DILocation(line: 41, column: 17, scope: !2992)
!3050 = !DILocation(line: 41, column: 26, scope: !2992)
!3051 = !DILocation(line: 41, column: 36, scope: !2992)
!3052 = !DILocation(line: 41, column: 2, scope: !2992)
!3053 = distinct !DISubprogram(name: "runtime.stringConcat", linkageName: "runtime.stringConcat", scope: !2497, file: !2497, line: 53, type: !3054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3062)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!3056, !3056}
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime._string", baseType: !3057)
!3057 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !3058)
!3058 = !{!3059, !3061}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !3060, size: 32, align: 32)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 32, align: 32, dwarfAddressSpace: 0)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "length", baseType: !55, size: 32, align: 32, offset: 32)
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DILocalVariable(name: "x", arg: 1, scope: !3053, file: !2497, line: 53, type: !3056)
!3064 = !DILocalVariable(name: "y", arg: 2, scope: !3053, file: !2497, line: 53, type: !3056)
!3065 = !DILocalVariable(name: "length", scope: !3053, file: !2497, line: 59, type: !55)
!3066 = !DILocalVariable(name: "buf", scope: !3053, file: !2497, line: 60, type: !91)
!3067 = !DILocation(line: 53, column: 6, scope: !3053)
!3068 = !DILocation(line: 0, scope: !3053)
!3069 = !DILocation(line: 54, column: 14, scope: !3053)
!3070 = !DILocation(line: 55, column: 10, scope: !3053)
!3071 = !DILocation(line: 55, column: 3, scope: !3053)
!3072 = !DILocation(line: 56, column: 21, scope: !3053)
!3073 = !DILocation(line: 57, column: 10, scope: !3053)
!3074 = !DILocation(line: 57, column: 3, scope: !3053)
!3075 = !DILocation(line: 59, column: 22, scope: !3053)
!3076 = !DILocation(line: 60, column: 16, scope: !3053)
!3077 = !DILocation(line: 60, column: 15, scope: !3053)
!3078 = !DILocation(line: 61, column: 10, scope: !3053)
!3079 = !DILocation(line: 61, column: 9, scope: !3053)
!3080 = !DILocation(line: 62, column: 24, scope: !3053)
!3081 = !DILocation(line: 62, column: 9, scope: !3053)
!3082 = !DILocation(line: 63, column: 3, scope: !3053)
!3083 = distinct !DISubprogram(name: "runtime.putchar", linkageName: "runtime.putchar", scope: !68, file: !68, line: 36, type: !3084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3086)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!72}
!3086 = !{!3087, !3088, !3089}
!3087 = !DILocalVariable(name: "c", arg: 1, scope: !3083, file: !68, line: 36, type: !72)
!3088 = !DILocalVariable(name: "putcharPosition", scope: !3083, file: !68, line: 29, type: !27)
!3089 = !DILocalVariable(name: "bufLen", scope: !3083, file: !68, line: 12, type: !27)
!3090 = !DILocation(line: 36, column: 6, scope: !3083)
!3091 = !DILocation(line: 37, column: 16, scope: !3083)
!3092 = !DILocation(line: 37, column: 15, scope: !3083)
!3093 = !DILocation(line: 41, column: 25, scope: !3083)
!3094 = !DILocation(line: 41, column: 16, scope: !3083)
!3095 = !DILocation(line: 42, column: 11, scope: !3083)
!3096 = !DILocation(line: 43, column: 3, scope: !3083)
!3097 = !DILocation(line: 0, scope: !3083)
!3098 = !DILocation(line: 37, column: 35, scope: !3083)
!3099 = !DILocation(line: 38, column: 2, scope: !3083)
!3100 = !DILocation(line: 40, column: 5, scope: !3083)
!3101 = !DILocation(line: 40, column: 7, scope: !3083)
!3102 = !DILocation(line: 40, column: 18, scope: !3083)
!3103 = distinct !DISubprogram(name: "strconv.appendQuotedWith", linkageName: "strconv.appendQuotedWith", scope: !3104, file: !3104, line: 27, type: !3105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3109)
!3104 = !DIFile(filename: "quote.go", directory: "/usr/local/go/src/strconv")
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!3107, !1347, !72, !44, !44}
!3107 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]byte", size: 96, align: 32, elements: !3108)
!3108 = !{!3059, !296, !297}
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117}
!3110 = !DILocalVariable(name: "buf", arg: 1, scope: !3103, file: !3104, line: 27, type: !3107)
!3111 = !DILocalVariable(name: "s", arg: 2, scope: !3103, file: !3104, line: 27, type: !1347)
!3112 = !DILocalVariable(name: "quote", arg: 3, scope: !3103, file: !3104, line: 27, type: !72)
!3113 = !DILocalVariable(name: "ASCIIonly", arg: 4, scope: !3103, file: !3104, line: 27, type: !44)
!3114 = !DILocalVariable(name: "graphicOnly", arg: 5, scope: !3103, file: !3104, line: 27, type: !44)
!3115 = !DILocalVariable(name: "nBuf", scope: !3103, file: !3104, line: 31, type: !3107)
!3116 = !DILocalVariable(name: "width", scope: !3103, file: !3104, line: 36, type: !30)
!3117 = !DILocalVariable(name: "r", scope: !3103, file: !3104, line: 37, type: !295)
!3118 = !DILocation(line: 64, column: 6, scope: !3119, inlinedAt: !3131)
!3119 = distinct !DISubprogram(name: "strconv.appendEscapedRune", linkageName: "strconv.appendEscapedRune", scope: !3104, file: !3104, line: 64, type: !3120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3122)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!3107, !295, !72, !44, !44}
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130}
!3123 = !DILocalVariable(name: "buf", arg: 1, scope: !3119, file: !3104, line: 64, type: !3107)
!3124 = !DILocalVariable(name: "r", arg: 2, scope: !3119, file: !3104, line: 64, type: !295)
!3125 = !DILocalVariable(name: "quote", arg: 3, scope: !3119, file: !3104, line: 64, type: !72)
!3126 = !DILocalVariable(name: "ASCIIonly", arg: 4, scope: !3119, file: !3104, line: 64, type: !44)
!3127 = !DILocalVariable(name: "graphicOnly", arg: 5, scope: !3119, file: !3104, line: 64, type: !44)
!3128 = !DILocalVariable(name: "s", scope: !3119, file: !3104, line: 107, type: !30)
!3129 = !DILocalVariable(name: "s", scope: !3119, file: !3104, line: 112, type: !30)
!3130 = !DILocalVariable(name: "n", scope: !3119, file: !3104, line: 77, type: !30)
!3131 = distinct !DILocation(line: 48, column: 26, scope: !3103)
!3132 = !DILocation(line: 27, column: 6, scope: !3103)
!3133 = !DILocation(line: 30, column: 9, scope: !3103)
!3134 = !DILocation(line: 30, column: 18, scope: !3103)
!3135 = !DILocation(line: 30, column: 29, scope: !3103)
!3136 = !DILocation(line: 30, column: 23, scope: !3103)
!3137 = !DILocation(line: 0, scope: !3103)
!3138 = !DILocation(line: 31, column: 28, scope: !3103)
!3139 = !DILocation(line: 31, column: 38, scope: !3103)
!3140 = !DILocation(line: 31, column: 49, scope: !3103)
!3141 = !DILocation(line: 31, column: 51, scope: !3103)
!3142 = !DILocation(line: 31, column: 15, scope: !3103)
!3143 = !DILocation(line: 27, column: 23, scope: !3103)
!3144 = !DILocation(line: 35, column: 15, scope: !3103)
!3145 = !DILocation(line: 35, column: 20, scope: !3103)
!3146 = !DILocation(line: 35, column: 25, scope: !3103)
!3147 = !DILocation(line: 35, column: 14, scope: !3103)
!3148 = !DILocation(line: 35, column: 2, scope: !3103)
!3149 = !DILocation(line: 36, column: 6, scope: !3103)
!3150 = !DILocation(line: 0, scope: !3119, inlinedAt: !3131)
!3151 = !DILocation(line: 0, scope: !3152, inlinedAt: !3159)
!3152 = distinct !DISubprogram(name: "unicode/utf8.EncodeRune", linkageName: "unicode/utf8.EncodeRune", scope: !2, file: !2, line: 341, type: !3153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3155)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!3107, !295}
!3155 = !{!3156, !3157, !3158}
!3156 = !DILocalVariable(name: "p", arg: 1, scope: !3152, file: !2, line: 341, type: !3107)
!3157 = !DILocalVariable(name: "r", arg: 2, scope: !3152, file: !2, line: 341, type: !295)
!3158 = !DILocalVariable(name: "i", scope: !3152, file: !2, line: 343, type: !290)
!3159 = distinct !DILocation(line: 77, column: 23, scope: !3119, inlinedAt: !3131)
!3160 = !DILocation(line: 27, column: 35, scope: !3103)
!3161 = !DILocation(line: 36, column: 22, scope: !3103)
!3162 = !DILocation(line: 36, column: 21, scope: !3103)
!3163 = !DILocation(line: 36, column: 25, scope: !3103)
!3164 = !DILocation(line: 40, column: 39, scope: !3103)
!3165 = !DILocation(line: 40, column: 38, scope: !3103)
!3166 = !DILocation(line: 40, column: 4, scope: !3103)
!3167 = !DILocation(line: 42, column: 6, scope: !3103)
!3168 = !DILocation(line: 42, column: 12, scope: !3103)
!3169 = !DILocation(line: 48, column: 27, scope: !3103)
!3170 = !DILocation(line: 43, column: 16, scope: !3103)
!3171 = !DILocation(line: 44, column: 17, scope: !3103)
!3172 = !DILocation(line: 44, column: 31, scope: !3103)
!3173 = !DILocation(line: 44, column: 32, scope: !3103)
!3174 = !DILocation(line: 44, column: 35, scope: !3103)
!3175 = !DILocation(line: 44, column: 30, scope: !3103)
!3176 = !DILocation(line: 44, column: 39, scope: !3103)
!3177 = !DILocation(line: 44, column: 16, scope: !3103)
!3178 = !DILocation(line: 45, column: 17, scope: !3103)
!3179 = !DILocation(line: 45, column: 32, scope: !3103)
!3180 = !DILocation(line: 45, column: 35, scope: !3103)
!3181 = !DILocation(line: 45, column: 30, scope: !3103)
!3182 = !DILocation(line: 45, column: 40, scope: !3103)
!3183 = !DILocation(line: 45, column: 16, scope: !3103)
!3184 = !DILocation(line: 45, column: 4, scope: !3103)
!3185 = !DILocation(line: 36, column: 36, scope: !3103)
!3186 = !DILocation(line: 36, column: 35, scope: !3103)
!3187 = !DILocation(line: 48, column: 26, scope: !3103)
!3188 = !DILocation(line: 48, column: 3, scope: !3103)
!3189 = !DILocation(line: 36, column: 34, scope: !3103)
!3190 = !DILocation(line: 48, column: 32, scope: !3103)
!3191 = !DILocation(line: 48, column: 35, scope: !3103)
!3192 = !DILocation(line: 48, column: 42, scope: !3103)
!3193 = !DILocation(line: 48, column: 53, scope: !3103)
!3194 = !DILocation(line: 65, column: 6, scope: !3119, inlinedAt: !3131)
!3195 = !DILocation(line: 67, column: 16, scope: !3119, inlinedAt: !3131)
!3196 = !DILocation(line: 67, column: 25, scope: !3119, inlinedAt: !3131)
!3197 = !DILocation(line: 67, column: 15, scope: !3119, inlinedAt: !3131)
!3198 = !DILocation(line: 68, column: 16, scope: !3119, inlinedAt: !3131)
!3199 = !DILocation(line: 68, column: 26, scope: !3119, inlinedAt: !3131)
!3200 = !DILocation(line: 68, column: 25, scope: !3119, inlinedAt: !3131)
!3201 = !DILocation(line: 68, column: 28, scope: !3119, inlinedAt: !3131)
!3202 = !DILocation(line: 68, column: 15, scope: !3119, inlinedAt: !3131)
!3203 = !DILocation(line: 69, column: 10, scope: !3119, inlinedAt: !3131)
!3204 = !DILocation(line: 69, column: 3, scope: !3119, inlinedAt: !3131)
!3205 = !DILocation(line: 71, column: 5, scope: !3119, inlinedAt: !3131)
!3206 = !DILocation(line: 76, column: 20, scope: !3119, inlinedAt: !3131)
!3207 = !DILocation(line: 72, column: 8, scope: !3119, inlinedAt: !3131)
!3208 = !DILocation(line: 72, column: 35, scope: !3119, inlinedAt: !3131)
!3209 = !DILocation(line: 72, column: 34, scope: !3119, inlinedAt: !3131)
!3210 = !DILocation(line: 73, column: 17, scope: !3119, inlinedAt: !3131)
!3211 = !DILocation(line: 73, column: 27, scope: !3119, inlinedAt: !3131)
!3212 = !DILocation(line: 73, column: 26, scope: !3119, inlinedAt: !3131)
!3213 = !DILocation(line: 73, column: 29, scope: !3119, inlinedAt: !3131)
!3214 = !DILocation(line: 73, column: 16, scope: !3119, inlinedAt: !3131)
!3215 = !DILocation(line: 74, column: 11, scope: !3119, inlinedAt: !3131)
!3216 = !DILocation(line: 74, column: 4, scope: !3119, inlinedAt: !3131)
!3217 = !DILocation(line: 81, column: 9, scope: !3119, inlinedAt: !3131)
!3218 = !DILocation(line: 83, column: 16, scope: !3119, inlinedAt: !3131)
!3219 = !DILocation(line: 83, column: 15, scope: !3119, inlinedAt: !3131)
!3220 = !DILocation(line: 83, column: 3, scope: !3119, inlinedAt: !3131)
!3221 = !DILocation(line: 107, column: 17, scope: !3119, inlinedAt: !3131)
!3222 = !DILocation(line: 117, column: 9, scope: !3119, inlinedAt: !3131)
!3223 = !DILocation(line: 112, column: 17, scope: !3119, inlinedAt: !3131)
!3224 = !DILocation(line: 64, column: 24, scope: !3119, inlinedAt: !3131)
!3225 = !DILocation(line: 117, column: 2, scope: !3119, inlinedAt: !3131)
!3226 = !DILocation(line: 85, column: 16, scope: !3119, inlinedAt: !3131)
!3227 = !DILocation(line: 85, column: 15, scope: !3119, inlinedAt: !3131)
!3228 = !DILocation(line: 85, column: 3, scope: !3119, inlinedAt: !3131)
!3229 = !DILocation(line: 87, column: 16, scope: !3119, inlinedAt: !3131)
!3230 = !DILocation(line: 87, column: 15, scope: !3119, inlinedAt: !3131)
!3231 = !DILocation(line: 87, column: 3, scope: !3119, inlinedAt: !3131)
!3232 = !DILocation(line: 89, column: 16, scope: !3119, inlinedAt: !3131)
!3233 = !DILocation(line: 89, column: 15, scope: !3119, inlinedAt: !3131)
!3234 = !DILocation(line: 89, column: 3, scope: !3119, inlinedAt: !3131)
!3235 = !DILocation(line: 91, column: 16, scope: !3119, inlinedAt: !3131)
!3236 = !DILocation(line: 91, column: 15, scope: !3119, inlinedAt: !3131)
!3237 = !DILocation(line: 91, column: 3, scope: !3119, inlinedAt: !3131)
!3238 = !DILocation(line: 93, column: 16, scope: !3119, inlinedAt: !3131)
!3239 = !DILocation(line: 93, column: 15, scope: !3119, inlinedAt: !3131)
!3240 = !DILocation(line: 93, column: 3, scope: !3119, inlinedAt: !3131)
!3241 = !DILocation(line: 95, column: 16, scope: !3119, inlinedAt: !3131)
!3242 = !DILocation(line: 95, column: 15, scope: !3119, inlinedAt: !3131)
!3243 = !DILocation(line: 95, column: 3, scope: !3119, inlinedAt: !3131)
!3244 = !DILocation(line: 98, column: 8, scope: !3119, inlinedAt: !3131)
!3245 = !DILocation(line: 98, column: 10, scope: !3119, inlinedAt: !3131)
!3246 = !DILocation(line: 99, column: 17, scope: !3119, inlinedAt: !3131)
!3247 = !DILocation(line: 99, column: 16, scope: !3119, inlinedAt: !3131)
!3248 = !DILocation(line: 100, column: 17, scope: !3119, inlinedAt: !3131)
!3249 = !DILocation(line: 100, column: 36, scope: !3119, inlinedAt: !3131)
!3250 = !DILocation(line: 100, column: 38, scope: !3119, inlinedAt: !3131)
!3251 = !DILocation(line: 100, column: 30, scope: !3119, inlinedAt: !3131)
!3252 = !DILocation(line: 100, column: 42, scope: !3119, inlinedAt: !3131)
!3253 = !DILocation(line: 100, column: 16, scope: !3119, inlinedAt: !3131)
!3254 = !DILocation(line: 101, column: 17, scope: !3119, inlinedAt: !3131)
!3255 = !DILocation(line: 101, column: 38, scope: !3119, inlinedAt: !3131)
!3256 = !DILocation(line: 101, column: 30, scope: !3119, inlinedAt: !3131)
!3257 = !DILocation(line: 101, column: 43, scope: !3119, inlinedAt: !3131)
!3258 = !DILocation(line: 101, column: 16, scope: !3119, inlinedAt: !3131)
!3259 = !DILocation(line: 101, column: 4, scope: !3119, inlinedAt: !3131)
!3260 = !DILocation(line: 102, column: 8, scope: !3119, inlinedAt: !3131)
!3261 = !DILocation(line: 102, column: 10, scope: !3119, inlinedAt: !3131)
!3262 = !DILocation(line: 64, column: 36, scope: !3119, inlinedAt: !3131)
!3263 = !DILocation(line: 106, column: 17, scope: !3119, inlinedAt: !3131)
!3264 = !DILocation(line: 106, column: 16, scope: !3119, inlinedAt: !3131)
!3265 = !DILocation(line: 106, column: 4, scope: !3119, inlinedAt: !3131)
!3266 = !DILocation(line: 107, column: 8, scope: !3119, inlinedAt: !3131)
!3267 = !DILocation(line: 107, column: 19, scope: !3119, inlinedAt: !3131)
!3268 = !DILocation(line: 108, column: 18, scope: !3119, inlinedAt: !3131)
!3269 = !DILocation(line: 108, column: 32, scope: !3119, inlinedAt: !3131)
!3270 = !DILocation(line: 108, column: 40, scope: !3119, inlinedAt: !3131)
!3271 = !DILocation(line: 108, column: 33, scope: !3119, inlinedAt: !3131)
!3272 = !DILocation(line: 108, column: 42, scope: !3119, inlinedAt: !3131)
!3273 = !DILocation(line: 108, column: 31, scope: !3119, inlinedAt: !3131)
!3274 = !DILocation(line: 108, column: 47, scope: !3119, inlinedAt: !3131)
!3275 = !DILocation(line: 108, column: 17, scope: !3119, inlinedAt: !3131)
!3276 = !DILocation(line: 108, column: 5, scope: !3119, inlinedAt: !3131)
!3277 = !DILocation(line: 107, column: 25, scope: !3119, inlinedAt: !3131)
!3278 = !DILocation(line: 105, column: 8, scope: !3119, inlinedAt: !3131)
!3279 = !DILocation(line: 105, column: 10, scope: !3119, inlinedAt: !3131)
!3280 = !DILocation(line: 111, column: 17, scope: !3119, inlinedAt: !3131)
!3281 = !DILocation(line: 111, column: 16, scope: !3119, inlinedAt: !3131)
!3282 = !DILocation(line: 111, column: 4, scope: !3119, inlinedAt: !3131)
!3283 = !DILocation(line: 112, column: 8, scope: !3119, inlinedAt: !3131)
!3284 = !DILocation(line: 112, column: 19, scope: !3119, inlinedAt: !3131)
!3285 = !DILocation(line: 113, column: 18, scope: !3119, inlinedAt: !3131)
!3286 = !DILocation(line: 113, column: 32, scope: !3119, inlinedAt: !3131)
!3287 = !DILocation(line: 113, column: 40, scope: !3119, inlinedAt: !3131)
!3288 = !DILocation(line: 113, column: 33, scope: !3119, inlinedAt: !3131)
!3289 = !DILocation(line: 113, column: 42, scope: !3119, inlinedAt: !3131)
!3290 = !DILocation(line: 113, column: 31, scope: !3119, inlinedAt: !3131)
!3291 = !DILocation(line: 113, column: 47, scope: !3119, inlinedAt: !3131)
!3292 = !DILocation(line: 113, column: 17, scope: !3119, inlinedAt: !3131)
!3293 = !DILocation(line: 113, column: 5, scope: !3119, inlinedAt: !3131)
!3294 = !DILocation(line: 112, column: 25, scope: !3119, inlinedAt: !3131)
!3295 = !DILocation(line: 76, column: 19, scope: !3119, inlinedAt: !3131)
!3296 = !DILocation(line: 77, column: 36, scope: !3119, inlinedAt: !3131)
!3297 = !DILocation(line: 341, column: 6, scope: !3152, inlinedAt: !3159)
!3298 = !DILocation(line: 343, column: 21, scope: !3152, inlinedAt: !3159)
!3299 = !DILocation(line: 344, column: 7, scope: !3152, inlinedAt: !3159)
!3300 = !DILocation(line: 344, column: 9, scope: !3152, inlinedAt: !3159)
!3301 = !DILocation(line: 347, column: 7, scope: !3152, inlinedAt: !3159)
!3302 = !DILocation(line: 347, column: 9, scope: !3152, inlinedAt: !3159)
!3303 = !DILocation(line: 352, column: 7, scope: !3152, inlinedAt: !3159)
!3304 = !DILocation(line: 352, column: 9, scope: !3152, inlinedAt: !3159)
!3305 = !DILocation(line: 355, column: 7, scope: !3152, inlinedAt: !3159)
!3306 = !DILocation(line: 355, column: 9, scope: !3152, inlinedAt: !3159)
!3307 = !DILocation(line: 345, column: 3, scope: !3152, inlinedAt: !3159)
!3308 = !DILocation(line: 345, column: 15, scope: !3152, inlinedAt: !3159)
!3309 = !DILocation(line: 345, column: 14, scope: !3152, inlinedAt: !3159)
!3310 = !DILocation(line: 345, column: 4, scope: !3152, inlinedAt: !3159)
!3311 = !DILocation(line: 346, column: 3, scope: !3152, inlinedAt: !3159)
!3312 = !DILocation(line: 349, column: 3, scope: !3152, inlinedAt: !3159)
!3313 = !DILocation(line: 349, column: 20, scope: !3152, inlinedAt: !3159)
!3314 = !DILocation(line: 349, column: 21, scope: !3152, inlinedAt: !3159)
!3315 = !DILocation(line: 349, column: 19, scope: !3152, inlinedAt: !3159)
!3316 = !DILocation(line: 349, column: 13, scope: !3152, inlinedAt: !3159)
!3317 = !DILocation(line: 349, column: 4, scope: !3152, inlinedAt: !3159)
!3318 = !DILocation(line: 350, column: 19, scope: !3152, inlinedAt: !3159)
!3319 = !DILocation(line: 350, column: 22, scope: !3152, inlinedAt: !3159)
!3320 = !DILocation(line: 350, column: 13, scope: !3152, inlinedAt: !3159)
!3321 = !DILocation(line: 350, column: 4, scope: !3152, inlinedAt: !3159)
!3322 = !DILocation(line: 351, column: 3, scope: !3152, inlinedAt: !3159)
!3323 = !DILocation(line: 341, column: 27, scope: !3152, inlinedAt: !3159)
!3324 = !DILocation(line: 357, column: 3, scope: !3152, inlinedAt: !3159)
!3325 = !DILocation(line: 357, column: 20, scope: !3152, inlinedAt: !3159)
!3326 = !DILocation(line: 357, column: 21, scope: !3152, inlinedAt: !3159)
!3327 = !DILocation(line: 357, column: 19, scope: !3152, inlinedAt: !3159)
!3328 = !DILocation(line: 357, column: 13, scope: !3152, inlinedAt: !3159)
!3329 = !DILocation(line: 357, column: 4, scope: !3152, inlinedAt: !3159)
!3330 = !DILocation(line: 358, column: 21, scope: !3152, inlinedAt: !3159)
!3331 = !DILocation(line: 358, column: 19, scope: !3152, inlinedAt: !3159)
!3332 = !DILocation(line: 358, column: 25, scope: !3152, inlinedAt: !3159)
!3333 = !DILocation(line: 358, column: 13, scope: !3152, inlinedAt: !3159)
!3334 = !DILocation(line: 358, column: 4, scope: !3152, inlinedAt: !3159)
!3335 = !DILocation(line: 359, column: 19, scope: !3152, inlinedAt: !3159)
!3336 = !DILocation(line: 359, column: 22, scope: !3152, inlinedAt: !3159)
!3337 = !DILocation(line: 359, column: 13, scope: !3152, inlinedAt: !3159)
!3338 = !DILocation(line: 359, column: 4, scope: !3152, inlinedAt: !3159)
!3339 = !DILocation(line: 360, column: 3, scope: !3152, inlinedAt: !3159)
!3340 = !DILocation(line: 363, column: 3, scope: !3152, inlinedAt: !3159)
!3341 = !DILocation(line: 363, column: 20, scope: !3152, inlinedAt: !3159)
!3342 = !DILocation(line: 363, column: 21, scope: !3152, inlinedAt: !3159)
!3343 = !DILocation(line: 363, column: 19, scope: !3152, inlinedAt: !3159)
!3344 = !DILocation(line: 363, column: 13, scope: !3152, inlinedAt: !3159)
!3345 = !DILocation(line: 363, column: 4, scope: !3152, inlinedAt: !3159)
!3346 = !DILocation(line: 364, column: 21, scope: !3152, inlinedAt: !3159)
!3347 = !DILocation(line: 364, column: 19, scope: !3152, inlinedAt: !3159)
!3348 = !DILocation(line: 364, column: 26, scope: !3152, inlinedAt: !3159)
!3349 = !DILocation(line: 364, column: 13, scope: !3152, inlinedAt: !3159)
!3350 = !DILocation(line: 364, column: 4, scope: !3152, inlinedAt: !3159)
!3351 = !DILocation(line: 365, column: 21, scope: !3152, inlinedAt: !3159)
!3352 = !DILocation(line: 365, column: 19, scope: !3152, inlinedAt: !3159)
!3353 = !DILocation(line: 365, column: 25, scope: !3152, inlinedAt: !3159)
!3354 = !DILocation(line: 365, column: 13, scope: !3152, inlinedAt: !3159)
!3355 = !DILocation(line: 365, column: 4, scope: !3152, inlinedAt: !3159)
!3356 = !DILocation(line: 366, column: 19, scope: !3152, inlinedAt: !3159)
!3357 = !DILocation(line: 366, column: 22, scope: !3152, inlinedAt: !3159)
!3358 = !DILocation(line: 366, column: 13, scope: !3152, inlinedAt: !3159)
!3359 = !DILocation(line: 366, column: 4, scope: !3152, inlinedAt: !3159)
!3360 = !DILocation(line: 367, column: 3, scope: !3152, inlinedAt: !3159)
!3361 = !DILocation(line: 78, column: 16, scope: !3119, inlinedAt: !3131)
!3362 = !DILocation(line: 78, column: 30, scope: !3119, inlinedAt: !3131)
!3363 = !DILocation(line: 78, column: 15, scope: !3119, inlinedAt: !3131)
!3364 = !DILocation(line: 79, column: 10, scope: !3119, inlinedAt: !3131)
!3365 = !DILocation(line: 79, column: 3, scope: !3119, inlinedAt: !3131)
!3366 = !DILocation(line: 50, column: 15, scope: !3103)
!3367 = !DILocation(line: 50, column: 20, scope: !3103)
!3368 = !DILocation(line: 50, column: 25, scope: !3103)
!3369 = !DILocation(line: 50, column: 14, scope: !3103)
!3370 = !DILocation(line: 51, column: 9, scope: !3103)
!3371 = !DILocation(line: 51, column: 2, scope: !3103)
!3372 = !DILocation(line: 32, column: 8, scope: !3103)
!3373 = !DILocation(line: 33, column: 3, scope: !3103)
!3374 = !DILocation(line: 37, column: 13, scope: !3103)
!3375 = !DILocation(line: 37, column: 14, scope: !3103)
!3376 = !DILocation(line: 38, column: 3, scope: !3103)
!3377 = !DILocation(line: 39, column: 6, scope: !3103)
!3378 = !DILocation(line: 39, column: 8, scope: !3103)
!3379 = !DILocation(line: 37, column: 12, scope: !3103)
!3380 = !DILocation(line: 42, column: 20, scope: !3103)
!3381 = !DILocation(line: 36, column: 30, scope: !3103)
!3382 = distinct !DISubprogram(name: "strconv.IsPrint", linkageName: "strconv.IsPrint", scope: !3104, file: !3104, line: 483, type: !3383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3385)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!295}
!3385 = !{!3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400}
!3386 = !DILocalVariable(name: "r", arg: 1, scope: !3382, file: !3104, line: 483, type: !295)
!3387 = !DILocalVariable(name: "isPrint16", scope: !3382, file: !1367, line: 11, type: !1368)
!3388 = !DILocalVariable(name: "isNotPrint16", scope: !3382, file: !1367, line: 235, type: !1368)
!3389 = !DILocalVariable(name: "rr", scope: !3382, file: !3104, line: 504, type: !318)
!3390 = !DILocalVariable(name: "isPrint", scope: !3382, file: !3104, line: 504, type: !1368)
!3391 = !DILocalVariable(name: "isNotPrint", scope: !3382, file: !3104, line: 504, type: !1368)
!3392 = !DILocalVariable(name: "i", scope: !3382, file: !3104, line: 505, type: !30)
!3393 = !DILocalVariable(name: "j", scope: !3382, file: !3104, line: 509, type: !30)
!3394 = !DILocalVariable(name: "isPrint32", scope: !3382, file: !1367, line: 370, type: !1376)
!3395 = !DILocalVariable(name: "isNotPrint32", scope: !3382, file: !1367, line: 598, type: !1368)
!3396 = !DILocalVariable(name: "rr", scope: !3382, file: !3104, line: 513, type: !290)
!3397 = !DILocalVariable(name: "isPrint", scope: !3382, file: !3104, line: 513, type: !1376)
!3398 = !DILocalVariable(name: "isNotPrint", scope: !3382, file: !3104, line: 513, type: !1368)
!3399 = !DILocalVariable(name: "i", scope: !3382, file: !3104, line: 514, type: !30)
!3400 = !DILocalVariable(name: "j", scope: !3382, file: !3104, line: 522, type: !30)
!3401 = !DILocation(line: 483, column: 6, scope: !3382)
!3402 = !DILocation(line: 485, column: 5, scope: !3382)
!3403 = !DILocation(line: 485, column: 7, scope: !3382)
!3404 = !DILocation(line: 486, column: 14, scope: !3382)
!3405 = !DILocation(line: 503, column: 10, scope: !3382)
!3406 = !DILocation(line: 0, scope: !3382)
!3407 = !DILocation(line: 486, column: 19, scope: !3382)
!3408 = !DILocation(line: 488, column: 4, scope: !3382)
!3409 = !DILocation(line: 490, column: 14, scope: !3382)
!3410 = !DILocation(line: 490, column: 11, scope: !3382)
!3411 = !DILocation(line: 490, column: 19, scope: !3382)
!3412 = !DILocation(line: 492, column: 11, scope: !3382)
!3413 = !DILocation(line: 492, column: 13, scope: !3382)
!3414 = !DILocation(line: 492, column: 4, scope: !3382)
!3415 = !DILocation(line: 503, column: 15, scope: !3382)
!3416 = !DILocation(line: 504, column: 37, scope: !3382)
!3417 = !DILocation(line: 513, column: 36, scope: !3382)
!3418 = !DILocation(line: 504, column: 36, scope: !3382)
!3419 = !DILocation(line: 504, column: 41, scope: !3382)
!3420 = !DILocation(line: 504, column: 52, scope: !3382)
!3421 = !DILocation(line: 504, column: 3, scope: !3382)
!3422 = !DILocation(line: 504, column: 7, scope: !3382)
!3423 = !DILocation(line: 504, column: 16, scope: !3382)
!3424 = !DILocation(line: 505, column: 18, scope: !3382)
!3425 = !DILocation(line: 505, column: 27, scope: !3382)
!3426 = !DILocation(line: 505, column: 17, scope: !3382)
!3427 = !DILocation(line: 505, column: 3, scope: !3382)
!3428 = !DILocation(line: 506, column: 6, scope: !3382)
!3429 = !DILocation(line: 506, column: 15, scope: !3382)
!3430 = !DILocation(line: 506, column: 8, scope: !3382)
!3431 = !DILocation(line: 506, column: 27, scope: !3382)
!3432 = !DILocation(line: 506, column: 32, scope: !3382)
!3433 = !DILocation(line: 506, column: 40, scope: !3382)
!3434 = !DILocation(line: 506, column: 41, scope: !3382)
!3435 = !DILocation(line: 506, column: 39, scope: !3382)
!3436 = !DILocation(line: 506, column: 49, scope: !3382)
!3437 = !DILocation(line: 506, column: 57, scope: !3382)
!3438 = !DILocation(line: 506, column: 58, scope: !3382)
!3439 = !DILocation(line: 506, column: 56, scope: !3382)
!3440 = !DILocation(line: 509, column: 18, scope: !3382)
!3441 = !DILocation(line: 509, column: 30, scope: !3382)
!3442 = !DILocation(line: 509, column: 17, scope: !3382)
!3443 = !DILocation(line: 509, column: 3, scope: !3382)
!3444 = !DILocation(line: 510, column: 10, scope: !3382)
!3445 = !DILocation(line: 510, column: 19, scope: !3382)
!3446 = !DILocation(line: 510, column: 12, scope: !3382)
!3447 = !DILocation(line: 513, column: 40, scope: !3382)
!3448 = !DILocation(line: 513, column: 51, scope: !3382)
!3449 = !DILocation(line: 513, column: 2, scope: !3382)
!3450 = !DILocation(line: 513, column: 6, scope: !3382)
!3451 = !DILocation(line: 513, column: 15, scope: !3382)
!3452 = !DILocation(line: 514, column: 17, scope: !3382)
!3453 = !DILocation(line: 514, column: 26, scope: !3382)
!3454 = !DILocalVariable(name: "a", arg: 1, scope: !3455, file: !3104, line: 461, type: !1376)
!3455 = distinct !DISubprogram(name: "strconv.bsearch32", linkageName: "strconv.bsearch32", scope: !3104, file: !3104, line: 461, type: !3456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3458)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!1376, !290}
!3458 = !{!3454, !3459, !3460, !3461, !3462}
!3459 = !DILocalVariable(name: "x", arg: 2, scope: !3455, file: !3104, line: 461, type: !290)
!3460 = !DILocalVariable(name: "i", scope: !3455, file: !3104, line: 462, type: !30)
!3461 = !DILocalVariable(name: "j", scope: !3455, file: !3104, line: 462, type: !30)
!3462 = !DILocalVariable(name: "h", scope: !3455, file: !3104, line: 464, type: !30)
!3463 = !DILocation(line: 461, column: 6, scope: !3455, inlinedAt: !3464)
!3464 = distinct !DILocation(line: 514, column: 16, scope: !3382)
!3465 = !DILocation(line: 462, column: 17, scope: !3455, inlinedAt: !3464)
!3466 = !DILocation(line: 462, column: 2, scope: !3455, inlinedAt: !3464)
!3467 = !DILocation(line: 462, column: 5, scope: !3455, inlinedAt: !3464)
!3468 = !DILocation(line: 0, scope: !3455, inlinedAt: !3464)
!3469 = !DILocation(line: 463, column: 6, scope: !3455, inlinedAt: !3464)
!3470 = !DILocation(line: 463, column: 10, scope: !3455, inlinedAt: !3464)
!3471 = !DILocation(line: 463, column: 8, scope: !3455, inlinedAt: !3464)
!3472 = !DILocation(line: 464, column: 8, scope: !3455, inlinedAt: !3464)
!3473 = !DILocation(line: 471, column: 9, scope: !3455, inlinedAt: !3464)
!3474 = !DILocation(line: 464, column: 13, scope: !3455, inlinedAt: !3464)
!3475 = !DILocation(line: 464, column: 15, scope: !3455, inlinedAt: !3464)
!3476 = !DILocation(line: 464, column: 14, scope: !3455, inlinedAt: !3464)
!3477 = !DILocation(line: 464, column: 17, scope: !3455, inlinedAt: !3464)
!3478 = !DILocation(line: 464, column: 10, scope: !3455, inlinedAt: !3464)
!3479 = !DILocation(line: 464, column: 3, scope: !3455, inlinedAt: !3464)
!3480 = !DILocation(line: 465, column: 6, scope: !3455, inlinedAt: !3464)
!3481 = !DILocation(line: 465, column: 8, scope: !3455, inlinedAt: !3464)
!3482 = !DILocation(line: 465, column: 7, scope: !3455, inlinedAt: !3464)
!3483 = !DILocation(line: 465, column: 13, scope: !3455, inlinedAt: !3464)
!3484 = !DILocation(line: 465, column: 11, scope: !3455, inlinedAt: !3464)
!3485 = !DILocation(line: 514, column: 2, scope: !3382)
!3486 = !DILocation(line: 515, column: 5, scope: !3382)
!3487 = !DILocation(line: 515, column: 14, scope: !3382)
!3488 = !DILocation(line: 515, column: 7, scope: !3382)
!3489 = !DILocation(line: 515, column: 26, scope: !3382)
!3490 = !DILocation(line: 515, column: 31, scope: !3382)
!3491 = !DILocation(line: 515, column: 39, scope: !3382)
!3492 = !DILocation(line: 515, column: 40, scope: !3382)
!3493 = !DILocation(line: 515, column: 38, scope: !3382)
!3494 = !DILocation(line: 515, column: 48, scope: !3382)
!3495 = !DILocation(line: 515, column: 56, scope: !3382)
!3496 = !DILocation(line: 515, column: 57, scope: !3382)
!3497 = !DILocation(line: 515, column: 55, scope: !3382)
!3498 = !DILocation(line: 518, column: 5, scope: !3382)
!3499 = !DILocation(line: 518, column: 7, scope: !3382)
!3500 = !DILocation(line: 521, column: 2, scope: !3382)
!3501 = !DILocation(line: 522, column: 17, scope: !3382)
!3502 = !DILocation(line: 522, column: 36, scope: !3382)
!3503 = !DILocation(line: 522, column: 35, scope: !3382)
!3504 = !DILocation(line: 522, column: 16, scope: !3382)
!3505 = !DILocation(line: 522, column: 2, scope: !3382)
!3506 = !DILocation(line: 523, column: 9, scope: !3382)
!3507 = !DILocation(line: 523, column: 18, scope: !3382)
!3508 = !DILocation(line: 523, column: 11, scope: !3382)
!3509 = !DILocation(line: 506, column: 30, scope: !3382)
!3510 = !DILocation(line: 506, column: 64, scope: !3382)
!3511 = !DILocation(line: 506, column: 62, scope: !3382)
!3512 = !DILocation(line: 510, column: 34, scope: !3382)
!3513 = !DILocation(line: 510, column: 45, scope: !3382)
!3514 = !DILocation(line: 510, column: 44, scope: !3382)
!3515 = !DILocation(line: 510, column: 51, scope: !3382)
!3516 = !DILocation(line: 510, column: 48, scope: !3382)
!3517 = !DILocation(line: 515, column: 29, scope: !3382)
!3518 = !DILocation(line: 515, column: 63, scope: !3382)
!3519 = !DILocation(line: 515, column: 61, scope: !3382)
!3520 = !DILocation(line: 523, column: 33, scope: !3382)
!3521 = !DILocation(line: 523, column: 44, scope: !3382)
!3522 = !DILocation(line: 523, column: 43, scope: !3382)
!3523 = !DILocation(line: 523, column: 57, scope: !3382)
!3524 = !DILocation(line: 523, column: 47, scope: !3382)
!3525 = distinct !DISubprogram(name: "strconv.bsearch16", linkageName: "strconv.bsearch16", scope: !3104, file: !3104, line: 446, type: !3526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3528)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!1368, !318}
!3528 = !{!3529, !3530, !3531, !3532, !3533}
!3529 = !DILocalVariable(name: "a", arg: 1, scope: !3525, file: !3104, line: 446, type: !1368)
!3530 = !DILocalVariable(name: "x", arg: 2, scope: !3525, file: !3104, line: 446, type: !318)
!3531 = !DILocalVariable(name: "i", scope: !3525, file: !3104, line: 447, type: !30)
!3532 = !DILocalVariable(name: "j", scope: !3525, file: !3104, line: 447, type: !30)
!3533 = !DILocalVariable(name: "h", scope: !3525, file: !3104, line: 449, type: !30)
!3534 = !DILocation(line: 446, column: 6, scope: !3525)
!3535 = !DILocation(line: 447, column: 17, scope: !3525)
!3536 = !DILocation(line: 447, column: 2, scope: !3525)
!3537 = !DILocation(line: 447, column: 5, scope: !3525)
!3538 = !DILocation(line: 0, scope: !3525)
!3539 = !DILocation(line: 448, column: 6, scope: !3525)
!3540 = !DILocation(line: 448, column: 10, scope: !3525)
!3541 = !DILocation(line: 448, column: 8, scope: !3525)
!3542 = !DILocation(line: 449, column: 8, scope: !3525)
!3543 = !DILocation(line: 456, column: 9, scope: !3525)
!3544 = !DILocation(line: 449, column: 13, scope: !3525)
!3545 = !DILocation(line: 449, column: 15, scope: !3525)
!3546 = !DILocation(line: 449, column: 14, scope: !3525)
!3547 = !DILocation(line: 449, column: 17, scope: !3525)
!3548 = !DILocation(line: 449, column: 10, scope: !3525)
!3549 = !DILocation(line: 449, column: 3, scope: !3525)
!3550 = !DILocation(line: 450, column: 6, scope: !3525)
!3551 = !DILocation(line: 450, column: 8, scope: !3525)
!3552 = !DILocation(line: 450, column: 7, scope: !3525)
!3553 = !DILocation(line: 456, column: 2, scope: !3525)
!3554 = !DILocation(line: 450, column: 13, scope: !3525)
!3555 = !DILocation(line: 450, column: 11, scope: !3525)
!3556 = distinct !DISubprogram(name: "strconv.adjustLastDigit", linkageName: "strconv.adjustLastDigit", scope: !35, file: !35, line: 615, type: !3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3567)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!3559, !41, !41, !41, !41, !41}
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 32, align: 32, dwarfAddressSpace: 0)
!3560 = !DIDerivedType(tag: DW_TAG_typedef, name: "strconv.decimalSlice", baseType: !3561)
!3561 = !DICompositeType(tag: DW_TAG_structure_type, size: 192, align: 32, elements: !3562)
!3562 = !{!3563, !3564, !3565, !3566}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "d", baseType: !3107, size: 96, align: 32)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "nd", baseType: !30, size: 32, align: 32, offset: 96)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "dp", baseType: !30, size: 32, align: 32, offset: 128)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "neg", baseType: !44, size: 8, align: 8, offset: 160)
!3567 = !{!3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575}
!3568 = !DILocalVariable(name: "d", arg: 1, scope: !3556, file: !35, line: 615, type: !3559)
!3569 = !DILocalVariable(name: "currentDiff", arg: 2, scope: !3556, file: !35, line: 615, type: !41)
!3570 = !DILocalVariable(name: "targetDiff", arg: 3, scope: !3556, file: !35, line: 615, type: !41)
!3571 = !DILocalVariable(name: "maxDiff", arg: 4, scope: !3556, file: !35, line: 615, type: !41)
!3572 = !DILocalVariable(name: "ulpDecimal", arg: 5, scope: !3556, file: !35, line: 615, type: !41)
!3573 = !DILocalVariable(name: "ulpBinary", arg: 6, scope: !3556, file: !35, line: 615, type: !41)
!3574 = !DILocalVariable(name: "nd", scope: !3556, file: !22, line: 373, type: !30)
!3575 = !DILocalVariable(name: "dp", scope: !3556, file: !22, line: 373, type: !30)
!3576 = !DILocation(line: 615, column: 6, scope: !3556)
!3577 = !DILocation(line: 616, column: 5, scope: !3556)
!3578 = !DILocation(line: 616, column: 20, scope: !3556)
!3579 = !DILocation(line: 616, column: 19, scope: !3556)
!3580 = !DILocation(line: 616, column: 16, scope: !3556)
!3581 = !DILocation(line: 0, scope: !3556)
!3582 = !DILocation(line: 618, column: 3, scope: !3556)
!3583 = !DILocation(line: 615, column: 39, scope: !3556)
!3584 = !DILocation(line: 620, column: 6, scope: !3556)
!3585 = !DILocation(line: 620, column: 18, scope: !3556)
!3586 = !DILocation(line: 620, column: 31, scope: !3556)
!3587 = !DILocation(line: 620, column: 30, scope: !3556)
!3588 = !DILocation(line: 620, column: 43, scope: !3556)
!3589 = !DILocation(line: 620, column: 41, scope: !3556)
!3590 = !DILocation(line: 621, column: 3, scope: !3556)
!3591 = !DILocation(line: 621, column: 5, scope: !3556)
!3592 = !DILocation(line: 624, column: 5, scope: !3556)
!3593 = !DILocation(line: 624, column: 17, scope: !3556)
!3594 = !DILocation(line: 624, column: 16, scope: !3556)
!3595 = !DILocation(line: 624, column: 31, scope: !3556)
!3596 = !DILocation(line: 624, column: 42, scope: !3556)
!3597 = !DILocation(line: 624, column: 55, scope: !3556)
!3598 = !DILocation(line: 624, column: 54, scope: !3556)
!3599 = !DILocation(line: 624, column: 28, scope: !3556)
!3600 = !DILocation(line: 628, column: 5, scope: !3556)
!3601 = !DILocation(line: 628, column: 19, scope: !3556)
!3602 = !DILocation(line: 628, column: 32, scope: !3556)
!3603 = !DILocation(line: 628, column: 46, scope: !3556)
!3604 = !DILocation(line: 628, column: 54, scope: !3556)
!3605 = !DILocation(line: 632, column: 5, scope: !3556)
!3606 = !DILocation(line: 632, column: 7, scope: !3556)
!3607 = !DILocation(line: 621, column: 7, scope: !3556)
!3608 = !DILocation(line: 621, column: 9, scope: !3556)
!3609 = !DILocation(line: 621, column: 11, scope: !3556)
!3610 = !DILocation(line: 621, column: 6, scope: !3556)
!3611 = !DILocation(line: 622, column: 18, scope: !3556)
!3612 = !DILocation(line: 622, column: 3, scope: !3556)
!3613 = !DILocation(line: 632, column: 10, scope: !3556)
!3614 = !DILocation(line: 632, column: 18, scope: !3556)
!3615 = !DILocation(line: 632, column: 20, scope: !3556)
!3616 = !DILocation(line: 632, column: 21, scope: !3556)
!3617 = !DILocation(line: 632, column: 25, scope: !3556)
!3618 = !DILocation(line: 634, column: 3, scope: !3556)
!3619 = !DILocation(line: 634, column: 5, scope: !3556)
!3620 = !DILocation(line: 635, column: 5, scope: !3556)
!3621 = distinct !DISubprogram(name: "strconv.bigFtoa", linkageName: "strconv.bigFtoa", scope: !22, file: !22, line: 161, type: !3622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3625)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!3107, !30, !72, !44, !41, !30, !3624}
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 32, align: 32, dwarfAddressSpace: 0)
!3625 = !{!3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3646, !3647}
!3626 = !DILocalVariable(name: "dst", arg: 1, scope: !3621, file: !22, line: 161, type: !3107)
!3627 = !DILocalVariable(name: "prec", arg: 2, scope: !3621, file: !22, line: 161, type: !30)
!3628 = !DILocalVariable(name: "fmt", arg: 3, scope: !3621, file: !22, line: 161, type: !72)
!3629 = !DILocalVariable(name: "neg", arg: 4, scope: !3621, file: !22, line: 161, type: !44)
!3630 = !DILocalVariable(name: "mant", arg: 5, scope: !3621, file: !22, line: 161, type: !41)
!3631 = !DILocalVariable(name: "exp", arg: 6, scope: !3621, file: !22, line: 161, type: !30)
!3632 = !DILocalVariable(name: "flt", arg: 7, scope: !3621, file: !22, line: 161, type: !3624)
!3633 = !DILocalVariable(name: "d", scope: !3621, file: !22, line: 162, type: !3634)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 32, align: 32, dwarfAddressSpace: 0)
!3635 = !DIDerivedType(tag: DW_TAG_typedef, name: "strconv.decimal", baseType: !3636)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, size: 6496, align: 32, elements: !3637)
!3637 = !{!3638, !3642, !3643, !3644, !3645}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "d", baseType: !3639, size: 6400, align: 8)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 6400, align: 8, elements: !3640)
!3640 = !{!3641}
!3641 = !DISubrange(count: 800, lowerBound: 0)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "nd", baseType: !30, size: 32, align: 32, offset: 6400)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "dp", baseType: !30, size: 32, align: 32, offset: 6432)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "neg", baseType: !44, size: 8, align: 8, offset: 6464)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "trunc", baseType: !44, size: 8, align: 8, offset: 6472)
!3646 = !DILocalVariable(name: "shortest", scope: !3621, file: !22, line: 166, type: !44)
!3647 = !DILocalVariable(name: "digs", scope: !3621, file: !22, line: 165, type: !3560)
!3648 = !DILocation(line: 161, column: 6, scope: !3621)
!3649 = !DILocation(line: 162, column: 10, scope: !3621)
!3650 = !DILocation(line: 162, column: 2, scope: !3621)
!3651 = !DILocation(line: 163, column: 2, scope: !3621)
!3652 = !DILocation(line: 163, column: 11, scope: !3621)
!3653 = !DILocation(line: 163, column: 10, scope: !3621)
!3654 = !DILocation(line: 164, column: 2, scope: !3621)
!3655 = !DILocation(line: 164, column: 10, scope: !3621)
!3656 = !DILocation(line: 164, column: 20, scope: !3621)
!3657 = !DILocation(line: 164, column: 24, scope: !3621)
!3658 = !DILocation(line: 168, column: 17, scope: !3621)
!3659 = !DILocation(line: 168, column: 20, scope: !3621)
!3660 = !DILocation(line: 168, column: 26, scope: !3621)
!3661 = !DILocation(line: 168, column: 31, scope: !3621)
!3662 = !DILocalVariable(name: "d", arg: 1, scope: !3663, file: !22, line: 234, type: !3634)
!3663 = distinct !DISubprogram(name: "strconv.roundShortest", linkageName: "strconv.roundShortest", scope: !22, file: !22, line: 234, type: !3664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3666)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!3634, !41, !30, !3624}
!3666 = !{!3662, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685}
!3667 = !DILocalVariable(name: "mant", arg: 2, scope: !3663, file: !22, line: 234, type: !41)
!3668 = !DILocalVariable(name: "exp", arg: 3, scope: !3663, file: !22, line: 234, type: !30)
!3669 = !DILocalVariable(name: "flt", arg: 4, scope: !3663, file: !22, line: 234, type: !3624)
!3670 = !DILocalVariable(name: "nd", scope: !3663, file: !1408, line: 16, type: !30)
!3671 = !DILocalVariable(name: "minexp", scope: !3663, file: !22, line: 255, type: !30)
!3672 = !DILocalVariable(name: "upper", scope: !3663, file: !22, line: 264, type: !3634)
!3673 = !DILocalVariable(name: "mantlo", scope: !3663, file: !22, line: 274, type: !41)
!3674 = !DILocalVariable(name: "explo", scope: !3663, file: !22, line: 275, type: !30)
!3675 = !DILocalVariable(name: "lower", scope: !3663, file: !22, line: 283, type: !3634)
!3676 = !DILocalVariable(name: "inclusive", scope: !3663, file: !22, line: 290, type: !44)
!3677 = !DILocalVariable(name: "upperdelta", scope: !3663, file: !22, line: 303, type: !4)
!3678 = !DILocalVariable(name: "ui", scope: !3663, file: !22, line: 307, type: !30)
!3679 = !DILocalVariable(name: "mi", scope: !3663, file: !22, line: 311, type: !30)
!3680 = !DILocalVariable(name: "li", scope: !3663, file: !22, line: 315, type: !30)
!3681 = !DILocalVariable(name: "l", scope: !3663, file: !22, line: 316, type: !72)
!3682 = !DILocalVariable(name: "m", scope: !3663, file: !22, line: 320, type: !72)
!3683 = !DILocalVariable(name: "u", scope: !3663, file: !22, line: 324, type: !72)
!3684 = !DILocalVariable(name: "okdown", scope: !3663, file: !22, line: 332, type: !44)
!3685 = !DILocalVariable(name: "okup", scope: !3663, file: !22, line: 353, type: !44)
!3686 = !DILocation(line: 234, column: 6, scope: !3663, inlinedAt: !3687)
!3687 = distinct !DILocation(line: 168, column: 16, scope: !3621)
!3688 = !DILocation(line: 236, column: 5, scope: !3663, inlinedAt: !3687)
!3689 = !DILocation(line: 236, column: 10, scope: !3663, inlinedAt: !3687)
!3690 = !DILocation(line: 0, scope: !3663, inlinedAt: !3687)
!3691 = !DILocation(line: 237, column: 3, scope: !3663, inlinedAt: !3687)
!3692 = !DILocation(line: 237, column: 5, scope: !3663, inlinedAt: !3687)
!3693 = !DILocation(line: 238, column: 3, scope: !3663, inlinedAt: !3687)
!3694 = !DILocation(line: 256, column: 26, scope: !3663, inlinedAt: !3687)
!3695 = !DILocation(line: 256, column: 28, scope: !3663, inlinedAt: !3687)
!3696 = !DILocation(line: 256, column: 33, scope: !3663, inlinedAt: !3687)
!3697 = !DILocation(line: 256, column: 30, scope: !3663, inlinedAt: !3687)
!3698 = !DILocation(line: 256, column: 24, scope: !3663, inlinedAt: !3687)
!3699 = !DILocation(line: 256, column: 45, scope: !3663, inlinedAt: !3687)
!3700 = !DILocation(line: 256, column: 53, scope: !3663, inlinedAt: !3687)
!3701 = !DILocation(line: 256, column: 57, scope: !3663, inlinedAt: !3687)
!3702 = !DILocation(line: 256, column: 48, scope: !3663, inlinedAt: !3687)
!3703 = !DILocation(line: 256, column: 43, scope: !3663, inlinedAt: !3687)
!3704 = !DILocation(line: 256, column: 37, scope: !3663, inlinedAt: !3687)
!3705 = !DILocation(line: 264, column: 14, scope: !3663, inlinedAt: !3687)
!3706 = !DILocation(line: 265, column: 2, scope: !3663, inlinedAt: !3687)
!3707 = !DILocation(line: 265, column: 15, scope: !3663, inlinedAt: !3687)
!3708 = !DILocation(line: 265, column: 19, scope: !3663, inlinedAt: !3687)
!3709 = !DILocation(line: 265, column: 22, scope: !3663, inlinedAt: !3687)
!3710 = !DILocation(line: 265, column: 14, scope: !3663, inlinedAt: !3687)
!3711 = !DILocation(line: 266, column: 14, scope: !3663, inlinedAt: !3687)
!3712 = !DILocation(line: 266, column: 24, scope: !3663, inlinedAt: !3687)
!3713 = !DILocation(line: 266, column: 28, scope: !3663, inlinedAt: !3687)
!3714 = !DILocation(line: 266, column: 38, scope: !3663, inlinedAt: !3687)
!3715 = !DILocation(line: 266, column: 13, scope: !3663, inlinedAt: !3687)
!3716 = !DILocation(line: 274, column: 6, scope: !3663, inlinedAt: !3687)
!3717 = !DILocation(line: 275, column: 6, scope: !3663, inlinedAt: !3687)
!3718 = !DILocation(line: 276, column: 19, scope: !3663, inlinedAt: !3687)
!3719 = !DILocation(line: 276, column: 13, scope: !3663, inlinedAt: !3687)
!3720 = !DILocation(line: 276, column: 10, scope: !3663, inlinedAt: !3687)
!3721 = !DILocation(line: 276, column: 38, scope: !3663, inlinedAt: !3687)
!3722 = !DILocation(line: 283, column: 14, scope: !3663, inlinedAt: !3687)
!3723 = !DILocation(line: 284, column: 2, scope: !3663, inlinedAt: !3687)
!3724 = !DILocation(line: 284, column: 15, scope: !3663, inlinedAt: !3687)
!3725 = !DILocation(line: 284, column: 21, scope: !3663, inlinedAt: !3687)
!3726 = !DILocation(line: 284, column: 24, scope: !3663, inlinedAt: !3687)
!3727 = !DILocation(line: 284, column: 14, scope: !3663, inlinedAt: !3687)
!3728 = !DILocation(line: 285, column: 14, scope: !3663, inlinedAt: !3687)
!3729 = !DILocation(line: 285, column: 30, scope: !3663, inlinedAt: !3687)
!3730 = !DILocation(line: 285, column: 40, scope: !3663, inlinedAt: !3687)
!3731 = !DILocation(line: 285, column: 13, scope: !3663, inlinedAt: !3687)
!3732 = !DILocation(line: 290, column: 19, scope: !3663, inlinedAt: !3687)
!3733 = !DILocation(line: 290, column: 22, scope: !3663, inlinedAt: !3687)
!3734 = !DILocation(line: 290, column: 2, scope: !3663, inlinedAt: !3687)
!3735 = !DILocation(line: 303, column: 6, scope: !3663, inlinedAt: !3687)
!3736 = !DILocation(line: 307, column: 6, scope: !3663, inlinedAt: !3687)
!3737 = !DILocation(line: 311, column: 27, scope: !3663, inlinedAt: !3687)
!3738 = !DILocation(line: 312, column: 14, scope: !3663, inlinedAt: !3687)
!3739 = !DILocation(line: 311, column: 9, scope: !3663, inlinedAt: !3687)
!3740 = !DILocation(line: 311, column: 14, scope: !3663, inlinedAt: !3687)
!3741 = !DILocation(line: 311, column: 12, scope: !3663, inlinedAt: !3687)
!3742 = !DILocation(line: 311, column: 25, scope: !3663, inlinedAt: !3687)
!3743 = !DILocation(line: 311, column: 23, scope: !3663, inlinedAt: !3687)
!3744 = !DILocation(line: 312, column: 6, scope: !3663, inlinedAt: !3687)
!3745 = !DILocation(line: 312, column: 9, scope: !3663, inlinedAt: !3687)
!3746 = !DILocation(line: 316, column: 3, scope: !3663, inlinedAt: !3687)
!3747 = !DILocation(line: 320, column: 3, scope: !3663, inlinedAt: !3687)
!3748 = !DILocation(line: 321, column: 6, scope: !3663, inlinedAt: !3687)
!3749 = !DILocation(line: 321, column: 9, scope: !3663, inlinedAt: !3687)
!3750 = !DILocation(line: 324, column: 3, scope: !3663, inlinedAt: !3687)
!3751 = !DILocation(line: 332, column: 13, scope: !3663, inlinedAt: !3687)
!3752 = !DILocation(line: 332, column: 18, scope: !3663, inlinedAt: !3687)
!3753 = !DILocation(line: 332, column: 15, scope: !3663, inlinedAt: !3687)
!3754 = !DILocation(line: 332, column: 20, scope: !3663, inlinedAt: !3687)
!3755 = !DILocation(line: 332, column: 3, scope: !3663, inlinedAt: !3687)
!3756 = !DILocation(line: 335, column: 8, scope: !3663, inlinedAt: !3687)
!3757 = !DILocation(line: 335, column: 19, scope: !3663, inlinedAt: !3687)
!3758 = !DILocation(line: 353, column: 11, scope: !3663, inlinedAt: !3687)
!3759 = !DILocation(line: 353, column: 30, scope: !3663, inlinedAt: !3687)
!3760 = !DILocation(line: 353, column: 43, scope: !3663, inlinedAt: !3687)
!3761 = !DILocation(line: 353, column: 61, scope: !3663, inlinedAt: !3687)
!3762 = !DILocation(line: 353, column: 63, scope: !3663, inlinedAt: !3687)
!3763 = !DILocation(line: 353, column: 68, scope: !3663, inlinedAt: !3687)
!3764 = !DILocation(line: 353, column: 66, scope: !3663, inlinedAt: !3687)
!3765 = !DILocation(line: 353, column: 26, scope: !3663, inlinedAt: !3687)
!3766 = !DILocation(line: 353, column: 3, scope: !3663, inlinedAt: !3687)
!3767 = !DILocation(line: 358, column: 8, scope: !3663, inlinedAt: !3687)
!3768 = !DILocation(line: 359, column: 4, scope: !3663, inlinedAt: !3687)
!3769 = !DILocation(line: 359, column: 12, scope: !3663, inlinedAt: !3687)
!3770 = !DILocation(line: 359, column: 15, scope: !3663, inlinedAt: !3687)
!3771 = !DILocation(line: 359, column: 11, scope: !3663, inlinedAt: !3687)
!3772 = !DILocation(line: 360, column: 4, scope: !3663, inlinedAt: !3687)
!3773 = !DILocation(line: 361, column: 8, scope: !3663, inlinedAt: !3687)
!3774 = !DILocation(line: 362, column: 4, scope: !3663, inlinedAt: !3687)
!3775 = !DILocation(line: 362, column: 16, scope: !3663, inlinedAt: !3687)
!3776 = !DILocation(line: 362, column: 19, scope: !3663, inlinedAt: !3687)
!3777 = !DILocation(line: 362, column: 15, scope: !3663, inlinedAt: !3687)
!3778 = !DILocation(line: 363, column: 4, scope: !3663, inlinedAt: !3687)
!3779 = !DILocation(line: 364, column: 8, scope: !3663, inlinedAt: !3687)
!3780 = !DILocation(line: 365, column: 4, scope: !3663, inlinedAt: !3687)
!3781 = !DILocation(line: 365, column: 14, scope: !3663, inlinedAt: !3687)
!3782 = !DILocation(line: 365, column: 17, scope: !3663, inlinedAt: !3687)
!3783 = !DILocation(line: 365, column: 13, scope: !3663, inlinedAt: !3687)
!3784 = !DILocation(line: 366, column: 4, scope: !3663, inlinedAt: !3687)
!3785 = !DILocation(line: 307, column: 17, scope: !3663, inlinedAt: !3687)
!3786 = !DILocation(line: 340, column: 8, scope: !3663, inlinedAt: !3687)
!3787 = !DILocation(line: 345, column: 8, scope: !3663, inlinedAt: !3687)
!3788 = !DILocation(line: 345, column: 19, scope: !3663, inlinedAt: !3687)
!3789 = !DILocation(line: 332, column: 36, scope: !3663, inlinedAt: !3687)
!3790 = !DILocation(line: 332, column: 38, scope: !3663, inlinedAt: !3687)
!3791 = !DILocation(line: 332, column: 44, scope: !3663, inlinedAt: !3687)
!3792 = !DILocation(line: 332, column: 50, scope: !3663, inlinedAt: !3687)
!3793 = !DILocation(line: 332, column: 41, scope: !3663, inlinedAt: !3687)
!3794 = !DILocation(line: 255, column: 12, scope: !3663, inlinedAt: !3687)
!3795 = !DILocation(line: 255, column: 16, scope: !3663, inlinedAt: !3687)
!3796 = !DILocation(line: 255, column: 21, scope: !3663, inlinedAt: !3687)
!3797 = !DILocation(line: 256, column: 5, scope: !3663, inlinedAt: !3687)
!3798 = !DILocation(line: 256, column: 11, scope: !3663, inlinedAt: !3687)
!3799 = !DILocation(line: 256, column: 9, scope: !3663, inlinedAt: !3687)
!3800 = !DILocation(line: 315, column: 9, scope: !3663, inlinedAt: !3687)
!3801 = !DILocation(line: 315, column: 14, scope: !3663, inlinedAt: !3687)
!3802 = !DILocation(line: 315, column: 25, scope: !3663, inlinedAt: !3687)
!3803 = !DILocation(line: 315, column: 31, scope: !3663, inlinedAt: !3687)
!3804 = !DILocation(line: 315, column: 23, scope: !3663, inlinedAt: !3687)
!3805 = !DILocation(line: 317, column: 6, scope: !3663, inlinedAt: !3687)
!3806 = !DILocation(line: 317, column: 9, scope: !3663, inlinedAt: !3687)
!3807 = !DILocation(line: 317, column: 17, scope: !3663, inlinedAt: !3687)
!3808 = !DILocation(line: 317, column: 22, scope: !3663, inlinedAt: !3687)
!3809 = !DILocation(line: 317, column: 28, scope: !3663, inlinedAt: !3687)
!3810 = !DILocation(line: 317, column: 20, scope: !3663, inlinedAt: !3687)
!3811 = !DILocation(line: 318, column: 8, scope: !3663, inlinedAt: !3687)
!3812 = !DILocation(line: 318, column: 16, scope: !3663, inlinedAt: !3687)
!3813 = !DILocation(line: 318, column: 15, scope: !3663, inlinedAt: !3687)
!3814 = !DILocation(line: 318, column: 4, scope: !3663, inlinedAt: !3687)
!3815 = !DILocation(line: 322, column: 8, scope: !3663, inlinedAt: !3687)
!3816 = !DILocation(line: 322, column: 12, scope: !3663, inlinedAt: !3687)
!3817 = !DILocation(line: 322, column: 11, scope: !3663, inlinedAt: !3687)
!3818 = !DILocation(line: 322, column: 4, scope: !3663, inlinedAt: !3687)
!3819 = !DILocation(line: 325, column: 6, scope: !3663, inlinedAt: !3687)
!3820 = !DILocation(line: 325, column: 11, scope: !3663, inlinedAt: !3687)
!3821 = !DILocation(line: 325, column: 17, scope: !3663, inlinedAt: !3687)
!3822 = !DILocation(line: 325, column: 9, scope: !3663, inlinedAt: !3687)
!3823 = !DILocation(line: 326, column: 8, scope: !3663, inlinedAt: !3687)
!3824 = !DILocation(line: 326, column: 16, scope: !3663, inlinedAt: !3687)
!3825 = !DILocation(line: 326, column: 15, scope: !3663, inlinedAt: !3687)
!3826 = !DILocation(line: 326, column: 4, scope: !3663, inlinedAt: !3687)
!3827 = !DILocation(line: 169, column: 40, scope: !3621)
!3828 = !DILocation(line: 171, column: 10, scope: !3621)
!3829 = !DILocation(line: 177, column: 4, scope: !3621)
!3830 = !DILocation(line: 0, scope: !3621)
!3831 = !DILocation(line: 181, column: 10, scope: !3621)
!3832 = !DILocation(line: 187, column: 7, scope: !3621)
!3833 = !DILocation(line: 187, column: 12, scope: !3621)
!3834 = !DILocation(line: 190, column: 4, scope: !3621)
!3835 = !DILocation(line: 190, column: 12, scope: !3621)
!3836 = !DILocation(line: 190, column: 11, scope: !3621)
!3837 = !DILocation(line: 192, column: 40, scope: !3621)
!3838 = !DILocation(line: 164, column: 14, scope: !3621)
!3839 = !DILocation(line: 164, column: 9, scope: !3621)
!3840 = !DILocation(line: 166, column: 14, scope: !3621)
!3841 = !DILocation(line: 166, column: 19, scope: !3621)
!3842 = !DILocation(line: 167, column: 5, scope: !3621)
!3843 = !DILocation(line: 161, column: 26, scope: !3621)
!3844 = !DILocation(line: 194, column: 22, scope: !3621)
!3845 = !DILocation(line: 194, column: 27, scope: !3621)
!3846 = !DILocation(line: 194, column: 37, scope: !3621)
!3847 = !DILocation(line: 194, column: 42, scope: !3621)
!3848 = !DILocation(line: 194, column: 48, scope: !3621)
!3849 = !DILocation(line: 194, column: 54, scope: !3621)
!3850 = !DILocation(line: 194, column: 21, scope: !3621)
!3851 = !DILocation(line: 194, column: 2, scope: !3621)
!3852 = distinct !DISubprogram(name: "(*strconv.decimal).Assign", linkageName: "(*strconv.decimal).Assign", scope: !1408, file: !1408, line: 81, type: !3853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3855)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!3634, !41}
!3855 = !{!3856, !3857, !3858, !3859, !3860, !3861}
!3856 = !DILocalVariable(name: "a", arg: 1, scope: !3852, file: !1408, line: 81, type: !3634)
!3857 = !DILocalVariable(name: "v", arg: 2, scope: !3852, file: !1408, line: 81, type: !41)
!3858 = !DILocalVariable(name: "n", scope: !3852, file: !1408, line: 85, type: !30)
!3859 = !DILocalVariable(name: "v1", scope: !3852, file: !1408, line: 87, type: !41)
!3860 = !DILocalVariable(name: "nd", scope: !3852, file: !1408, line: 16, type: !30)
!3861 = !DILocalVariable(name: "dp", scope: !3852, file: !1408, line: 17, type: !30)
!3862 = !DILocation(line: 81, column: 19, scope: !3852)
!3863 = !DILocation(line: 85, column: 2, scope: !3852)
!3864 = !DILocation(line: 0, scope: !3852)
!3865 = !DILocation(line: 81, column: 26, scope: !3852)
!3866 = !DILocation(line: 86, column: 6, scope: !3852)
!3867 = !DILocation(line: 86, column: 8, scope: !3852)
!3868 = !DILocation(line: 87, column: 9, scope: !3852)
!3869 = !DILocation(line: 87, column: 11, scope: !3852)
!3870 = !DILocation(line: 88, column: 13, scope: !3852)
!3871 = !DILocation(line: 88, column: 3, scope: !3852)
!3872 = !DILocation(line: 89, column: 7, scope: !3852)
!3873 = !DILocation(line: 89, column: 6, scope: !3852)
!3874 = !DILocation(line: 95, column: 2, scope: !3852)
!3875 = !DILocation(line: 95, column: 4, scope: !3852)
!3876 = !DILocation(line: 96, column: 11, scope: !3852)
!3877 = !DILocation(line: 96, column: 13, scope: !3852)
!3878 = !DILocation(line: 97, column: 3, scope: !3852)
!3879 = !DILocation(line: 100, column: 2, scope: !3852)
!3880 = !DILocation(line: 88, column: 11, scope: !3852)
!3881 = !DILocation(line: 89, column: 17, scope: !3852)
!3882 = !DILocation(line: 89, column: 16, scope: !3852)
!3883 = !DILocation(line: 90, column: 3, scope: !3852)
!3884 = !DILocation(line: 91, column: 7, scope: !3852)
!3885 = !DILocation(line: 91, column: 3, scope: !3852)
!3886 = !DILocation(line: 96, column: 6, scope: !3852)
!3887 = !DILocation(line: 97, column: 7, scope: !3852)
!3888 = !DILocation(line: 97, column: 6, scope: !3852)
!3889 = !DILocation(line: 97, column: 19, scope: !3852)
!3890 = !DILocation(line: 97, column: 18, scope: !3852)
!3891 = !DILocation(line: 98, column: 3, scope: !3852)
!3892 = !DILocation(line: 98, column: 5, scope: !3852)
!3893 = !DILocation(line: 96, column: 19, scope: !3852)
!3894 = !DILocation(line: 100, column: 4, scope: !3852)
!3895 = !DILocation(line: 100, column: 9, scope: !3852)
!3896 = !DILocation(line: 101, column: 6, scope: !3852)
!3897 = distinct !DISubprogram(name: "(*strconv.decimal).Shift", linkageName: "(*strconv.decimal).Shift", scope: !1408, file: !1408, line: 315, type: !3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!3634, !30}
!3900 = !{!3901, !3902}
!3901 = !DILocalVariable(name: "a", arg: 1, scope: !3897, file: !1408, line: 315, type: !3634)
!3902 = !DILocalVariable(name: "k", arg: 2, scope: !3897, file: !1408, line: 315, type: !30)
!3903 = !DILocation(line: 315, column: 19, scope: !3897)
!3904 = !DILocation(line: 317, column: 7, scope: !3897)
!3905 = !DILocation(line: 317, column: 9, scope: !3897)
!3906 = !DILocation(line: 0, scope: !3897)
!3907 = !DILocation(line: 319, column: 7, scope: !3897)
!3908 = !DILocation(line: 319, column: 9, scope: !3897)
!3909 = !DILocation(line: 315, column: 25, scope: !3897)
!3910 = !DILocation(line: 320, column: 7, scope: !3897)
!3911 = !DILocation(line: 320, column: 9, scope: !3897)
!3912 = !DILocation(line: 321, column: 14, scope: !3897)
!3913 = !DILocation(line: 324, column: 13, scope: !3897)
!3914 = !DILocation(line: 321, column: 13, scope: !3897)
!3915 = !DILocation(line: 322, column: 4, scope: !3897)
!3916 = !DILocation(line: 324, column: 21, scope: !3897)
!3917 = !DILocation(line: 324, column: 12, scope: !3897)
!3918 = !DILocation(line: 325, column: 7, scope: !3897)
!3919 = !DILocation(line: 325, column: 9, scope: !3897)
!3920 = !DILocation(line: 326, column: 7, scope: !3897)
!3921 = !DILocation(line: 326, column: 9, scope: !3897)
!3922 = !DILocation(line: 327, column: 15, scope: !3897)
!3923 = !DILocation(line: 330, column: 14, scope: !3897)
!3924 = !DILocation(line: 327, column: 14, scope: !3897)
!3925 = !DILocation(line: 328, column: 4, scope: !3897)
!3926 = !DILocation(line: 330, column: 23, scope: !3897)
!3927 = !DILocation(line: 330, column: 22, scope: !3897)
!3928 = !DILocation(line: 330, column: 13, scope: !3897)
!3929 = !DILocation(line: 317, column: 12, scope: !3897)
!3930 = distinct !DISubprogram(name: "strconv.formatDigits", linkageName: "strconv.formatDigits", scope: !22, file: !22, line: 197, type: !3931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3933)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!3107, !44, !44, !3560, !30, !72}
!3933 = !{!3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941}
!3934 = !DILocalVariable(name: "dst", arg: 1, scope: !3930, file: !22, line: 197, type: !3107)
!3935 = !DILocalVariable(name: "shortest", arg: 2, scope: !3930, file: !22, line: 197, type: !44)
!3936 = !DILocalVariable(name: "neg", arg: 3, scope: !3930, file: !22, line: 197, type: !44)
!3937 = !DILocalVariable(name: "digs", arg: 4, scope: !3930, file: !22, line: 197, type: !3560)
!3938 = !DILocalVariable(name: "prec", arg: 5, scope: !3930, file: !22, line: 197, type: !30)
!3939 = !DILocalVariable(name: "fmt", arg: 6, scope: !3930, file: !22, line: 197, type: !72)
!3940 = !DILocalVariable(name: "eprec", scope: !3930, file: !22, line: 205, type: !30)
!3941 = !DILocalVariable(name: "exp", scope: !3930, file: !22, line: 215, type: !30)
!3942 = !DILocation(line: 433, column: 6, scope: !3943, inlinedAt: !3955)
!3943 = distinct !DISubprogram(name: "strconv.fmtF", linkageName: "strconv.fmtF", scope: !22, file: !22, line: 433, type: !3944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3946)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!3107, !44, !3560, !30}
!3946 = !{!3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954}
!3947 = !DILocalVariable(name: "dst", arg: 1, scope: !3943, file: !22, line: 433, type: !3107)
!3948 = !DILocalVariable(name: "neg", arg: 2, scope: !3943, file: !22, line: 433, type: !44)
!3949 = !DILocalVariable(name: "d", arg: 3, scope: !3943, file: !22, line: 433, type: !3560)
!3950 = !DILocalVariable(name: "prec", arg: 4, scope: !3943, file: !22, line: 433, type: !30)
!3951 = !DILocalVariable(name: "m", scope: !3943, file: !22, line: 441, type: !30)
!3952 = !DILocalVariable(name: "i", scope: !3943, file: !22, line: 453, type: !30)
!3953 = !DILocalVariable(name: "ch", scope: !3943, file: !22, line: 454, type: !72)
!3954 = !DILocalVariable(name: "j", scope: !3943, file: !22, line: 455, type: !30)
!3955 = distinct !DILocation(line: 225, column: 14, scope: !3930)
!3956 = !DILocation(line: 378, column: 6, scope: !3957, inlinedAt: !3970)
!3957 = distinct !DISubprogram(name: "strconv.fmtE", linkageName: "strconv.fmtE", scope: !22, file: !22, line: 378, type: !3958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!3107, !44, !3560, !30, !72}
!3960 = !{!3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969}
!3961 = !DILocalVariable(name: "dst", arg: 1, scope: !3957, file: !22, line: 378, type: !3107)
!3962 = !DILocalVariable(name: "neg", arg: 2, scope: !3957, file: !22, line: 378, type: !44)
!3963 = !DILocalVariable(name: "d", arg: 3, scope: !3957, file: !22, line: 378, type: !3560)
!3964 = !DILocalVariable(name: "prec", arg: 4, scope: !3957, file: !22, line: 378, type: !30)
!3965 = !DILocalVariable(name: "fmt", arg: 5, scope: !3957, file: !22, line: 378, type: !72)
!3966 = !DILocalVariable(name: "ch", scope: !3957, file: !22, line: 385, type: !72)
!3967 = !DILocalVariable(name: "i", scope: !3957, file: !22, line: 394, type: !30)
!3968 = !DILocalVariable(name: "m", scope: !3957, file: !22, line: 395, type: !30)
!3969 = !DILocalVariable(name: "exp", scope: !3957, file: !22, line: 407, type: !30)
!3970 = distinct !DILocation(line: 220, column: 15, scope: !3930)
!3971 = !DILocation(line: 197, column: 6, scope: !3930)
!3972 = !DILocation(line: 0, scope: !3930)
!3973 = !DILocation(line: 206, column: 6, scope: !3930)
!3974 = !DILocation(line: 206, column: 12, scope: !3930)
!3975 = !DILocation(line: 215, column: 18, scope: !3930)
!3976 = !DILocation(line: 216, column: 6, scope: !3930)
!3977 = !DILocation(line: 216, column: 10, scope: !3930)
!3978 = !DILocation(line: 216, column: 25, scope: !3930)
!3979 = !DILocation(line: 220, column: 16, scope: !3930)
!3980 = !DILocation(line: 220, column: 21, scope: !3930)
!3981 = !DILocation(line: 220, column: 26, scope: !3930)
!3982 = !DILocation(line: 220, column: 32, scope: !3930)
!3983 = !DILocation(line: 220, column: 36, scope: !3930)
!3984 = !DILocation(line: 220, column: 40, scope: !3930)
!3985 = !DILocation(line: 0, scope: !3957, inlinedAt: !3970)
!3986 = !DILocation(line: 381, column: 16, scope: !3957, inlinedAt: !3970)
!3987 = !DILocation(line: 381, column: 24, scope: !3957, inlinedAt: !3970)
!3988 = !DILocation(line: 381, column: 15, scope: !3957, inlinedAt: !3970)
!3989 = !DILocation(line: 381, column: 3, scope: !3957, inlinedAt: !3970)
!3990 = !DILocation(line: 385, column: 2, scope: !3957, inlinedAt: !3970)
!3991 = !DILocation(line: 378, column: 11, scope: !3957, inlinedAt: !3970)
!3992 = !DILocation(line: 386, column: 10, scope: !3957, inlinedAt: !3970)
!3993 = !DILocation(line: 389, column: 15, scope: !3957, inlinedAt: !3970)
!3994 = !DILocation(line: 389, column: 20, scope: !3957, inlinedAt: !3970)
!3995 = !DILocation(line: 389, column: 22, scope: !3957, inlinedAt: !3970)
!3996 = !DILocation(line: 389, column: 14, scope: !3957, inlinedAt: !3970)
!3997 = !DILocation(line: 389, column: 2, scope: !3957, inlinedAt: !3970)
!3998 = !DILocation(line: 392, column: 5, scope: !3957, inlinedAt: !3970)
!3999 = !DILocation(line: 392, column: 10, scope: !3957, inlinedAt: !3970)
!4000 = !DILocation(line: 393, column: 16, scope: !3957, inlinedAt: !3970)
!4001 = !DILocation(line: 393, column: 24, scope: !3957, inlinedAt: !3970)
!4002 = !DILocation(line: 393, column: 15, scope: !3957, inlinedAt: !3970)
!4003 = !DILocation(line: 393, column: 3, scope: !3957, inlinedAt: !3970)
!4004 = !DILocation(line: 394, column: 3, scope: !3957, inlinedAt: !3970)
!4005 = !DILocation(line: 395, column: 18, scope: !3957, inlinedAt: !3970)
!4006 = !DILocalVariable(name: "a", arg: 1, scope: !4007, file: !22, line: 571, type: !30)
!4007 = distinct !DISubprogram(name: "strconv.min", linkageName: "strconv.min", scope: !22, file: !22, line: 571, type: !4008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!30, !30}
!4010 = !{!4006, !4011}
!4011 = !DILocalVariable(name: "b", arg: 2, scope: !4007, file: !22, line: 571, type: !30)
!4012 = !DILocation(line: 572, column: 5, scope: !4007, inlinedAt: !4013)
!4013 = distinct !DILocation(line: 395, column: 11, scope: !3957, inlinedAt: !3970)
!4014 = !DILocation(line: 572, column: 9, scope: !4007, inlinedAt: !4013)
!4015 = !DILocation(line: 396, column: 10, scope: !3957, inlinedAt: !3970)
!4016 = !DILocation(line: 396, column: 8, scope: !3957, inlinedAt: !3970)
!4017 = !DILocation(line: 400, column: 9, scope: !3957, inlinedAt: !3970)
!4018 = !DILocation(line: 400, column: 14, scope: !3957, inlinedAt: !3970)
!4019 = !DILocation(line: 400, column: 11, scope: !3957, inlinedAt: !3970)
!4020 = !DILocation(line: 401, column: 17, scope: !3957, inlinedAt: !3970)
!4021 = !DILocation(line: 401, column: 25, scope: !3957, inlinedAt: !3970)
!4022 = !DILocation(line: 401, column: 16, scope: !3957, inlinedAt: !3970)
!4023 = !DILocation(line: 401, column: 4, scope: !3957, inlinedAt: !3970)
!4024 = !DILocation(line: 400, column: 20, scope: !3957, inlinedAt: !3970)
!4025 = !DILocation(line: 406, column: 15, scope: !3957, inlinedAt: !3970)
!4026 = !DILocation(line: 406, column: 20, scope: !3957, inlinedAt: !3970)
!4027 = !DILocation(line: 406, column: 23, scope: !3957, inlinedAt: !3970)
!4028 = !DILocation(line: 406, column: 14, scope: !3957, inlinedAt: !3970)
!4029 = !DILocation(line: 406, column: 2, scope: !3957, inlinedAt: !3970)
!4030 = !DILocation(line: 407, column: 2, scope: !3957, inlinedAt: !3970)
!4031 = !DILocation(line: 411, column: 5, scope: !3957, inlinedAt: !3970)
!4032 = !DILocation(line: 411, column: 9, scope: !3957, inlinedAt: !3970)
!4033 = !DILocation(line: 417, column: 20, scope: !3957, inlinedAt: !3970)
!4034 = !DILocation(line: 417, column: 22, scope: !3957, inlinedAt: !3970)
!4035 = !DILocation(line: 417, column: 14, scope: !3957, inlinedAt: !3970)
!4036 = !DILocation(line: 417, column: 2, scope: !3957, inlinedAt: !3970)
!4037 = !DILocation(line: 421, column: 7, scope: !3957, inlinedAt: !3970)
!4038 = !DILocation(line: 421, column: 11, scope: !3957, inlinedAt: !3970)
!4039 = !DILocation(line: 422, column: 16, scope: !3957, inlinedAt: !3970)
!4040 = !DILocation(line: 422, column: 31, scope: !3957, inlinedAt: !3970)
!4041 = !DILocation(line: 422, column: 30, scope: !3957, inlinedAt: !3970)
!4042 = !DILocation(line: 422, column: 35, scope: !3957, inlinedAt: !3970)
!4043 = !DILocation(line: 422, column: 39, scope: !3957, inlinedAt: !3970)
!4044 = !DILocation(line: 422, column: 15, scope: !3957, inlinedAt: !3970)
!4045 = !DILocation(line: 422, column: 3, scope: !3957, inlinedAt: !3970)
!4046 = !DILocation(line: 423, column: 7, scope: !3957, inlinedAt: !3970)
!4047 = !DILocation(line: 423, column: 11, scope: !3957, inlinedAt: !3970)
!4048 = !DILocation(line: 426, column: 16, scope: !3957, inlinedAt: !3970)
!4049 = !DILocation(line: 424, column: 29, scope: !3957, inlinedAt: !3970)
!4050 = !DILocation(line: 424, column: 33, scope: !3957, inlinedAt: !3970)
!4051 = !DILocation(line: 424, column: 44, scope: !3957, inlinedAt: !3970)
!4052 = !DILocation(line: 424, column: 51, scope: !3957, inlinedAt: !3970)
!4053 = !DILocation(line: 424, column: 55, scope: !3957, inlinedAt: !3970)
!4054 = !DILocation(line: 424, column: 15, scope: !3957, inlinedAt: !3970)
!4055 = !DILocation(line: 424, column: 3, scope: !3957, inlinedAt: !3970)
!4056 = !DILocation(line: 426, column: 29, scope: !3957, inlinedAt: !3970)
!4057 = !DILocation(line: 426, column: 25, scope: !3957, inlinedAt: !3970)
!4058 = !DILocation(line: 426, column: 34, scope: !3957, inlinedAt: !3970)
!4059 = !DILocation(line: 426, column: 45, scope: !3957, inlinedAt: !3970)
!4060 = !DILocation(line: 426, column: 48, scope: !3957, inlinedAt: !3970)
!4061 = !DILocation(line: 426, column: 44, scope: !3957, inlinedAt: !3970)
!4062 = !DILocation(line: 426, column: 52, scope: !3957, inlinedAt: !3970)
!4063 = !DILocation(line: 426, column: 55, scope: !3957, inlinedAt: !3970)
!4064 = !DILocation(line: 426, column: 65, scope: !3957, inlinedAt: !3970)
!4065 = !DILocation(line: 426, column: 73, scope: !3957, inlinedAt: !3970)
!4066 = !DILocation(line: 426, column: 77, scope: !3957, inlinedAt: !3970)
!4067 = !DILocation(line: 426, column: 15, scope: !3957, inlinedAt: !3970)
!4068 = !DILocation(line: 426, column: 3, scope: !3957, inlinedAt: !3970)
!4069 = !DILocation(line: 387, column: 11, scope: !3957, inlinedAt: !3970)
!4070 = !DILocation(line: 387, column: 3, scope: !3957, inlinedAt: !3970)
!4071 = !DILocation(line: 397, column: 17, scope: !3957, inlinedAt: !3970)
!4072 = !DILocation(line: 397, column: 28, scope: !3957, inlinedAt: !3970)
!4073 = !DILocation(line: 397, column: 26, scope: !3957, inlinedAt: !3970)
!4074 = !DILocation(line: 397, column: 25, scope: !3957, inlinedAt: !3970)
!4075 = !DILocation(line: 397, column: 16, scope: !3957, inlinedAt: !3970)
!4076 = !DILocation(line: 397, column: 4, scope: !3957, inlinedAt: !3970)
!4077 = !DILocation(line: 398, column: 8, scope: !3957, inlinedAt: !3970)
!4078 = !DILocation(line: 398, column: 4, scope: !3957, inlinedAt: !3970)
!4079 = !DILocation(line: 429, column: 9, scope: !3957, inlinedAt: !3970)
!4080 = !DILocation(line: 429, column: 2, scope: !3957, inlinedAt: !3970)
!4081 = !DILocation(line: 220, column: 4, scope: !3930)
!4082 = !DILocation(line: 222, column: 11, scope: !3930)
!4083 = !DILocation(line: 225, column: 15, scope: !3930)
!4084 = !DILocation(line: 225, column: 20, scope: !3930)
!4085 = !DILocation(line: 225, column: 25, scope: !3930)
!4086 = !DILocation(line: 225, column: 35, scope: !3930)
!4087 = !DILocation(line: 225, column: 39, scope: !3930)
!4088 = !DILocalVariable(name: "a", arg: 1, scope: !4089, file: !22, line: 578, type: !30)
!4089 = distinct !DISubprogram(name: "strconv.max", linkageName: "strconv.max", scope: !22, file: !22, line: 578, type: !4008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4090)
!4090 = !{!4088, !4091}
!4091 = !DILocalVariable(name: "b", arg: 2, scope: !4089, file: !22, line: 578, type: !30)
!4092 = !DILocation(line: 579, column: 5, scope: !4089, inlinedAt: !4093)
!4093 = distinct !DILocation(line: 225, column: 34, scope: !3930)
!4094 = !DILocation(line: 579, column: 9, scope: !4089, inlinedAt: !4093)
!4095 = !DILocation(line: 579, column: 7, scope: !4089, inlinedAt: !4093)
!4096 = !DILocation(line: 0, scope: !4089, inlinedAt: !4093)
!4097 = !DILocation(line: 0, scope: !3943, inlinedAt: !3955)
!4098 = !DILocation(line: 436, column: 16, scope: !3943, inlinedAt: !3955)
!4099 = !DILocation(line: 436, column: 24, scope: !3943, inlinedAt: !3955)
!4100 = !DILocation(line: 436, column: 15, scope: !3943, inlinedAt: !3955)
!4101 = !DILocation(line: 436, column: 3, scope: !3943, inlinedAt: !3955)
!4102 = !DILocation(line: 440, column: 7, scope: !3943, inlinedAt: !3955)
!4103 = !DILocation(line: 433, column: 11, scope: !3943, inlinedAt: !3955)
!4104 = !DILocation(line: 440, column: 10, scope: !3943, inlinedAt: !3955)
!4105 = !DILocation(line: 441, column: 3, scope: !3943, inlinedAt: !3955)
!4106 = !DILocation(line: 443, column: 9, scope: !3943, inlinedAt: !3955)
!4107 = !DILocation(line: 443, column: 11, scope: !3943, inlinedAt: !3955)
!4108 = !DILocation(line: 444, column: 17, scope: !3943, inlinedAt: !3955)
!4109 = !DILocation(line: 444, column: 25, scope: !3943, inlinedAt: !3955)
!4110 = !DILocation(line: 444, column: 16, scope: !3943, inlinedAt: !3955)
!4111 = !DILocation(line: 444, column: 4, scope: !3943, inlinedAt: !3955)
!4112 = !DILocation(line: 443, column: 19, scope: !3943, inlinedAt: !3955)
!4113 = !DILocation(line: 451, column: 5, scope: !3943, inlinedAt: !3955)
!4114 = !DILocation(line: 225, column: 14, scope: !3930)
!4115 = !DILocation(line: 452, column: 16, scope: !3943, inlinedAt: !3955)
!4116 = !DILocation(line: 452, column: 24, scope: !3943, inlinedAt: !3955)
!4117 = !DILocation(line: 452, column: 15, scope: !3943, inlinedAt: !3955)
!4118 = !DILocation(line: 452, column: 3, scope: !3943, inlinedAt: !3955)
!4119 = !DILocation(line: 453, column: 7, scope: !3943, inlinedAt: !3955)
!4120 = !DILocation(line: 453, column: 15, scope: !3943, inlinedAt: !3955)
!4121 = !DILocation(line: 453, column: 19, scope: !3943, inlinedAt: !3955)
!4122 = !DILocation(line: 453, column: 17, scope: !3943, inlinedAt: !3955)
!4123 = !DILocation(line: 454, column: 4, scope: !3943, inlinedAt: !3955)
!4124 = !DILocation(line: 458, column: 17, scope: !3943, inlinedAt: !3955)
!4125 = !DILocation(line: 458, column: 22, scope: !3943, inlinedAt: !3955)
!4126 = !DILocation(line: 458, column: 24, scope: !3943, inlinedAt: !3955)
!4127 = !DILocation(line: 458, column: 16, scope: !3943, inlinedAt: !3955)
!4128 = !DILocation(line: 458, column: 4, scope: !3943, inlinedAt: !3955)
!4129 = !DILocation(line: 453, column: 25, scope: !3943, inlinedAt: !3955)
!4130 = !DILocation(line: 447, column: 16, scope: !3943, inlinedAt: !3955)
!4131 = !DILocation(line: 447, column: 24, scope: !3943, inlinedAt: !3955)
!4132 = !DILocation(line: 447, column: 15, scope: !3943, inlinedAt: !3955)
!4133 = !DILocation(line: 447, column: 3, scope: !3943, inlinedAt: !3955)
!4134 = !DILocation(line: 572, column: 5, scope: !4007, inlinedAt: !4135)
!4135 = distinct !DILocation(line: 441, column: 11, scope: !3943, inlinedAt: !3955)
!4136 = !DILocation(line: 572, column: 9, scope: !4007, inlinedAt: !4135)
!4137 = !DILocation(line: 572, column: 7, scope: !4007, inlinedAt: !4135)
!4138 = !DILocation(line: 0, scope: !4007, inlinedAt: !4135)
!4139 = !DILocation(line: 442, column: 16, scope: !3943, inlinedAt: !3955)
!4140 = !DILocation(line: 442, column: 24, scope: !3943, inlinedAt: !3955)
!4141 = !DILocation(line: 442, column: 15, scope: !3943, inlinedAt: !3955)
!4142 = !DILocation(line: 442, column: 3, scope: !3943, inlinedAt: !3955)
!4143 = !DILocation(line: 455, column: 19, scope: !3943, inlinedAt: !3955)
!4144 = !DILocation(line: 455, column: 17, scope: !3943, inlinedAt: !3955)
!4145 = !DILocation(line: 455, column: 27, scope: !3943, inlinedAt: !3955)
!4146 = !DILocation(line: 455, column: 24, scope: !3943, inlinedAt: !3955)
!4147 = !DILocation(line: 456, column: 14, scope: !3943, inlinedAt: !3955)
!4148 = !DILocation(line: 456, column: 13, scope: !3943, inlinedAt: !3955)
!4149 = !DILocation(line: 456, column: 5, scope: !3943, inlinedAt: !3955)
!4150 = !DILocation(line: 462, column: 9, scope: !3943, inlinedAt: !3955)
!4151 = !DILocation(line: 462, column: 2, scope: !3943, inlinedAt: !3955)
!4152 = !DILocation(line: 225, column: 3, scope: !3930)
!4153 = distinct !DISubprogram(name: "(*strconv.decimal).Round", linkageName: "(*strconv.decimal).Round", scope: !1408, file: !1408, line: 354, type: !3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4154)
!4154 = !{!4155, !4156}
!4155 = !DILocalVariable(name: "a", arg: 1, scope: !4153, file: !1408, line: 354, type: !3634)
!4156 = !DILocalVariable(name: "nd", arg: 2, scope: !4153, file: !1408, line: 354, type: !30)
!4157 = !DILocation(line: 354, column: 19, scope: !4153)
!4158 = !DILocation(line: 355, column: 5, scope: !4153)
!4159 = !DILocation(line: 355, column: 8, scope: !4153)
!4160 = !DILocation(line: 0, scope: !4153)
!4161 = !DILocation(line: 356, column: 3, scope: !4153)
!4162 = !DILocation(line: 355, column: 15, scope: !4153)
!4163 = !DILocation(line: 355, column: 21, scope: !4153)
!4164 = !DILocation(line: 355, column: 23, scope: !4153)
!4165 = !DILocalVariable(name: "nd", arg: 2, scope: !4166, file: !1408, line: 335, type: !30)
!4166 = distinct !DISubprogram(name: "strconv.shouldRoundUp", linkageName: "strconv.shouldRoundUp", scope: !1408, file: !1408, line: 335, type: !3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4167)
!4167 = !{!4168, !4165}
!4168 = !DILocalVariable(name: "a", arg: 1, scope: !4166, file: !1408, line: 335, type: !3634)
!4169 = !DILocation(line: 344, column: 10, scope: !4166, inlinedAt: !4170)
!4170 = distinct !DILocation(line: 358, column: 18, scope: !4153)
!4171 = !DILocation(line: 344, column: 13, scope: !4166, inlinedAt: !4170)
!4172 = !DILocation(line: 0, scope: !4166, inlinedAt: !4170)
!4173 = !DILocation(line: 358, column: 19, scope: !4153)
!4174 = !DILocation(line: 358, column: 22, scope: !4153)
!4175 = !DILocation(line: 339, column: 5, scope: !4166, inlinedAt: !4170)
!4176 = !DILocation(line: 339, column: 9, scope: !4166, inlinedAt: !4170)
!4177 = !DILocation(line: 339, column: 8, scope: !4166, inlinedAt: !4170)
!4178 = !DILocation(line: 339, column: 13, scope: !4166, inlinedAt: !4170)
!4179 = !DILocation(line: 339, column: 23, scope: !4166, inlinedAt: !4170)
!4180 = !DILocation(line: 347, column: 9, scope: !4166, inlinedAt: !4170)
!4181 = !DILocation(line: 341, column: 8, scope: !4166, inlinedAt: !4170)
!4182 = !DILocation(line: 347, column: 13, scope: !4166, inlinedAt: !4170)
!4183 = !DILocation(line: 347, column: 17, scope: !4166, inlinedAt: !4170)
!4184 = !DILocation(line: 361, column: 3, scope: !4153)
!4185 = !DILocation(line: 361, column: 15, scope: !4153)
!4186 = !DILocation(line: 344, column: 21, scope: !4166, inlinedAt: !4170)
!4187 = !DILocation(line: 344, column: 25, scope: !4166, inlinedAt: !4170)
!4188 = !DILocation(line: 344, column: 27, scope: !4166, inlinedAt: !4170)
!4189 = !DILocation(line: 344, column: 24, scope: !4166, inlinedAt: !4170)
!4190 = !DILocation(line: 344, column: 35, scope: !4166, inlinedAt: !4170)
!4191 = !DILocation(line: 344, column: 38, scope: !4166, inlinedAt: !4170)
!4192 = !DILocation(line: 359, column: 12, scope: !4153)
!4193 = !DILocation(line: 361, column: 14, scope: !4153)
!4194 = !DILocation(line: 355, column: 18, scope: !4153)
!4195 = distinct !DISubprogram(name: "(*strconv.extFloat).frexp10", linkageName: "(*strconv.extFloat).frexp10", scope: !35, file: !35, line: 306, type: !4196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4199)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!4198}
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!4199 = !{!4200, !4201, !4202, !4203}
!4200 = !DILocalVariable(name: "f", arg: 1, scope: !4195, file: !35, line: 306, type: !4198)
!4201 = !DILocalVariable(name: "approxExp10", scope: !4195, file: !35, line: 316, type: !30)
!4202 = !DILocalVariable(name: "i", scope: !4195, file: !35, line: 317, type: !30)
!4203 = !DILocalVariable(name: "exp", scope: !4195, file: !35, line: 320, type: !30)
!4204 = !DILocation(line: 306, column: 20, scope: !4195)
!4205 = !DILocation(line: 316, column: 38, scope: !4195)
!4206 = !DILocation(line: 316, column: 40, scope: !4195)
!4207 = !DILocation(line: 317, column: 2, scope: !4195)
!4208 = !DILocation(line: 320, column: 10, scope: !4195)
!4209 = !DILocation(line: 320, column: 30, scope: !4195)
!4210 = !DILocation(line: 320, column: 29, scope: !4195)
!4211 = !DILocation(line: 0, scope: !4195)
!4212 = !DILocation(line: 324, column: 8, scope: !4195)
!4213 = !DILocation(line: 324, column: 12, scope: !4195)
!4214 = !DILocation(line: 316, column: 36, scope: !4195)
!4215 = !DILocation(line: 316, column: 45, scope: !4195)
!4216 = !DILocation(line: 316, column: 50, scope: !4195)
!4217 = !DILocation(line: 317, column: 8, scope: !4195)
!4218 = !DILocation(line: 317, column: 20, scope: !4195)
!4219 = !DILocation(line: 317, column: 39, scope: !4195)
!4220 = !DILocation(line: 320, column: 33, scope: !4195)
!4221 = !DILocation(line: 320, column: 37, scope: !4195)
!4222 = !DILocation(line: 322, column: 8, scope: !4195)
!4223 = !DILocation(line: 322, column: 12, scope: !4195)
!4224 = !DILocation(line: 332, column: 2, scope: !4195)
!4225 = !DILocation(line: 332, column: 25, scope: !4195)
!4226 = !DILocation(line: 332, column: 24, scope: !4195)
!4227 = !DILocation(line: 332, column: 12, scope: !4195)
!4228 = !DILocation(line: 334, column: 29, scope: !4195)
!4229 = !DILocation(line: 334, column: 30, scope: !4195)
!4230 = !DILocation(line: 334, column: 27, scope: !4195)
!4231 = !DILocation(line: 334, column: 9, scope: !4195)
!4232 = !DILocation(line: 334, column: 48, scope: !4195)
!4233 = !DILocation(line: 334, column: 2, scope: !4195)
!4234 = distinct !DISubprogram(name: "(*strconv.extFloat).Multiply", linkageName: "(*strconv.extFloat).Multiply", scope: !35, file: !35, line: 216, type: !4235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4237)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!4198, !37}
!4237 = !{!4238, !4239, !4240, !4241, !4242, !4243}
!4238 = !DILocalVariable(name: "f", arg: 1, scope: !4234, file: !35, line: 216, type: !4198)
!4239 = !DILocalVariable(name: "g", arg: 2, scope: !4234, file: !35, line: 216, type: !37)
!4240 = !DILocalVariable(name: "hi", scope: !4234, file: !35, line: 217, type: !41)
!4241 = !DILocalVariable(name: "lo", scope: !4234, file: !35, line: 217, type: !41)
!4242 = !DILocalVariable(name: "mant", scope: !4234, file: !35, line: 16, type: !41)
!4243 = !DILocalVariable(name: "exp", scope: !4234, file: !35, line: 17, type: !30)
!4244 = !DILocation(line: 216, column: 20, scope: !4234)
!4245 = !DILocation(line: 0, scope: !4234)
!4246 = !DILocation(line: 217, column: 25, scope: !4234)
!4247 = !DILocalVariable(name: "x", arg: 1, scope: !4248, file: !121, line: 464, type: !41)
!4248 = distinct !DISubprogram(name: "math/bits.Mul64", linkageName: "math/bits.Mul64", scope: !121, file: !121, line: 464, type: !4249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4251)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!41, !41}
!4251 = !{!4247, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262}
!4252 = !DILocalVariable(name: "y", arg: 2, scope: !4248, file: !121, line: 464, type: !41)
!4253 = !DILocalVariable(name: "x0", scope: !4248, file: !121, line: 466, type: !41)
!4254 = !DILocalVariable(name: "x1", scope: !4248, file: !121, line: 467, type: !41)
!4255 = !DILocalVariable(name: "y0", scope: !4248, file: !121, line: 468, type: !41)
!4256 = !DILocalVariable(name: "y1", scope: !4248, file: !121, line: 469, type: !41)
!4257 = !DILocalVariable(name: "w0", scope: !4248, file: !121, line: 470, type: !41)
!4258 = !DILocalVariable(name: "t", scope: !4248, file: !121, line: 471, type: !41)
!4259 = !DILocalVariable(name: "w1", scope: !4248, file: !121, line: 472, type: !41)
!4260 = !DILocalVariable(name: "w2", scope: !4248, file: !121, line: 473, type: !41)
!4261 = !DILocalVariable(name: "hi", scope: !4248, file: !121, line: 464, type: !41)
!4262 = !DILocalVariable(name: "lo", scope: !4248, file: !121, line: 464, type: !41)
!4263 = !DILocation(line: 464, column: 6, scope: !4248, inlinedAt: !4264)
!4264 = distinct !DILocation(line: 217, column: 22, scope: !4234)
!4265 = !DILocation(line: 466, column: 8, scope: !4248, inlinedAt: !4264)
!4266 = !DILocation(line: 466, column: 10, scope: !4248, inlinedAt: !4264)
!4267 = !DILocation(line: 466, column: 2, scope: !4248, inlinedAt: !4264)
!4268 = !DILocation(line: 467, column: 8, scope: !4248, inlinedAt: !4264)
!4269 = !DILocation(line: 467, column: 10, scope: !4248, inlinedAt: !4264)
!4270 = !DILocation(line: 467, column: 2, scope: !4248, inlinedAt: !4264)
!4271 = !DILocation(line: 468, column: 8, scope: !4248, inlinedAt: !4264)
!4272 = !DILocation(line: 468, column: 10, scope: !4248, inlinedAt: !4264)
!4273 = !DILocation(line: 468, column: 2, scope: !4248, inlinedAt: !4264)
!4274 = !DILocation(line: 469, column: 8, scope: !4248, inlinedAt: !4264)
!4275 = !DILocation(line: 469, column: 10, scope: !4248, inlinedAt: !4264)
!4276 = !DILocation(line: 469, column: 2, scope: !4248, inlinedAt: !4264)
!4277 = !DILocation(line: 470, column: 8, scope: !4248, inlinedAt: !4264)
!4278 = !DILocation(line: 470, column: 13, scope: !4248, inlinedAt: !4264)
!4279 = !DILocation(line: 470, column: 11, scope: !4248, inlinedAt: !4264)
!4280 = !DILocation(line: 470, column: 2, scope: !4248, inlinedAt: !4264)
!4281 = !DILocation(line: 471, column: 7, scope: !4248, inlinedAt: !4264)
!4282 = !DILocation(line: 471, column: 10, scope: !4248, inlinedAt: !4264)
!4283 = !DILocation(line: 471, column: 9, scope: !4248, inlinedAt: !4264)
!4284 = !DILocation(line: 471, column: 15, scope: !4248, inlinedAt: !4264)
!4285 = !DILocation(line: 471, column: 17, scope: !4248, inlinedAt: !4264)
!4286 = !DILocation(line: 471, column: 13, scope: !4248, inlinedAt: !4264)
!4287 = !DILocation(line: 471, column: 2, scope: !4248, inlinedAt: !4264)
!4288 = !DILocation(line: 472, column: 8, scope: !4248, inlinedAt: !4264)
!4289 = !DILocation(line: 472, column: 10, scope: !4248, inlinedAt: !4264)
!4290 = !DILocation(line: 472, column: 2, scope: !4248, inlinedAt: !4264)
!4291 = !DILocation(line: 473, column: 8, scope: !4248, inlinedAt: !4264)
!4292 = !DILocation(line: 473, column: 10, scope: !4248, inlinedAt: !4264)
!4293 = !DILocation(line: 473, column: 2, scope: !4248, inlinedAt: !4264)
!4294 = !DILocation(line: 474, column: 8, scope: !4248, inlinedAt: !4264)
!4295 = !DILocation(line: 474, column: 13, scope: !4248, inlinedAt: !4264)
!4296 = !DILocation(line: 474, column: 11, scope: !4248, inlinedAt: !4264)
!4297 = !DILocation(line: 474, column: 2, scope: !4248, inlinedAt: !4264)
!4298 = !DILocation(line: 475, column: 7, scope: !4248, inlinedAt: !4264)
!4299 = !DILocation(line: 475, column: 10, scope: !4248, inlinedAt: !4264)
!4300 = !DILocation(line: 475, column: 9, scope: !4248, inlinedAt: !4264)
!4301 = !DILocation(line: 475, column: 15, scope: !4248, inlinedAt: !4264)
!4302 = !DILocation(line: 475, column: 20, scope: !4248, inlinedAt: !4264)
!4303 = !DILocation(line: 475, column: 22, scope: !4248, inlinedAt: !4264)
!4304 = !DILocation(line: 475, column: 2, scope: !4248, inlinedAt: !4264)
!4305 = !DILocation(line: 476, column: 7, scope: !4248, inlinedAt: !4264)
!4306 = !DILocation(line: 476, column: 11, scope: !4248, inlinedAt: !4264)
!4307 = !DILocation(line: 476, column: 9, scope: !4248, inlinedAt: !4264)
!4308 = !DILocation(line: 476, column: 2, scope: !4248, inlinedAt: !4264)
!4309 = !DILocation(line: 217, column: 2, scope: !4234)
!4310 = !DILocation(line: 219, column: 2, scope: !4234)
!4311 = !DILocation(line: 219, column: 17, scope: !4234)
!4312 = !DILocation(line: 219, column: 20, scope: !4234)
!4313 = !DILocation(line: 475, column: 13, scope: !4248, inlinedAt: !4264)
!4314 = !DILocation(line: 475, column: 18, scope: !4248, inlinedAt: !4264)
!4315 = !DILocation(line: 219, column: 14, scope: !4234)
!4316 = !DILocation(line: 219, column: 4, scope: !4234)
!4317 = !DILocation(line: 220, column: 4, scope: !4234)
!4318 = !DILocation(line: 220, column: 12, scope: !4234)
!4319 = !DILocation(line: 220, column: 16, scope: !4234)
!4320 = !DILocation(line: 220, column: 24, scope: !4234)
!4321 = distinct !DISubprogram(name: "strconv.leftShift", linkageName: "strconv.leftShift", scope: !1408, file: !1408, line: 269, type: !4322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4324)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!3634, !27}
!4324 = !{!4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338}
!4325 = !DILocalVariable(name: "a", arg: 1, scope: !4321, file: !1408, line: 269, type: !3634)
!4326 = !DILocalVariable(name: "k", arg: 2, scope: !4321, file: !1408, line: 269, type: !27)
!4327 = !DILocalVariable(name: "leftcheats", scope: !4321, file: !1408, line: 178, type: !1409)
!4328 = !DILocalVariable(name: "delta", scope: !4321, file: !1408, line: 270, type: !30)
!4329 = !DILocalVariable(name: "r", scope: !4321, file: !1408, line: 275, type: !30)
!4330 = !DILocalVariable(name: "w", scope: !4321, file: !1408, line: 276, type: !30)
!4331 = !DILocalVariable(name: "n", scope: !4321, file: !1408, line: 279, type: !27)
!4332 = !DILocalVariable(name: "quo", scope: !4321, file: !1408, line: 282, type: !27)
!4333 = !DILocalVariable(name: "rem", scope: !4321, file: !1408, line: 283, type: !27)
!4334 = !DILocalVariable(name: "trunc", scope: !4321, file: !1408, line: 19, type: !44)
!4335 = !DILocalVariable(name: "quo", scope: !4321, file: !1408, line: 295, type: !27)
!4336 = !DILocalVariable(name: "rem", scope: !4321, file: !1408, line: 296, type: !27)
!4337 = !DILocalVariable(name: "nd", scope: !4321, file: !1408, line: 16, type: !30)
!4338 = !DILocalVariable(name: "dp", scope: !4321, file: !1408, line: 17, type: !30)
!4339 = !DILocation(line: 269, column: 6, scope: !4321)
!4340 = !DILocation(line: 270, column: 11, scope: !4321)
!4341 = !DILocation(line: 270, column: 25, scope: !4321)
!4342 = !DILocation(line: 270, column: 2, scope: !4321)
!4343 = !DILocation(line: 271, column: 24, scope: !4321)
!4344 = !DILocation(line: 276, column: 2, scope: !4321)
!4345 = !DILocation(line: 279, column: 6, scope: !4321)
!4346 = !DILocation(line: 275, column: 2, scope: !4321)
!4347 = !DILocation(line: 280, column: 11, scope: !4321)
!4348 = !DILocation(line: 280, column: 13, scope: !4321)
!4349 = !DILocation(line: 0, scope: !4321)
!4350 = !DILocation(line: 287, column: 13, scope: !4321)
!4351 = !DILocation(line: 287, column: 17, scope: !4321)
!4352 = !DILocation(line: 294, column: 6, scope: !4321)
!4353 = !DILocation(line: 294, column: 8, scope: !4321)
!4354 = !DILocation(line: 295, column: 10, scope: !4321)
!4355 = !DILocation(line: 295, column: 12, scope: !4321)
!4356 = !DILocation(line: 295, column: 3, scope: !4321)
!4357 = !DILocation(line: 296, column: 10, scope: !4321)
!4358 = !DILocation(line: 296, column: 17, scope: !4321)
!4359 = !DILocation(line: 296, column: 16, scope: !4321)
!4360 = !DILocation(line: 296, column: 12, scope: !4321)
!4361 = !DILocation(line: 296, column: 3, scope: !4321)
!4362 = !DILocation(line: 297, column: 3, scope: !4321)
!4363 = !DILocation(line: 298, column: 6, scope: !4321)
!4364 = !DILocation(line: 298, column: 8, scope: !4321)
!4365 = !DILocation(line: 300, column: 13, scope: !4321)
!4366 = !DILocation(line: 300, column: 17, scope: !4321)
!4367 = !DILocation(line: 271, column: 28, scope: !4321)
!4368 = !DILocation(line: 271, column: 30, scope: !4321)
!4369 = !DILocation(line: 271, column: 25, scope: !4321)
!4370 = !DILocation(line: 271, column: 35, scope: !4321)
!4371 = !DILocation(line: 271, column: 46, scope: !4321)
!4372 = !DILocation(line: 271, column: 49, scope: !4321)
!4373 = !DILocalVariable(name: "b", arg: 1, scope: !4374, file: !1408, line: 256, type: !3107)
!4374 = distinct !DISubprogram(name: "strconv.prefixIsLessThan", linkageName: "strconv.prefixIsLessThan", scope: !1408, file: !1408, line: 256, type: !4375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!3107, !1347}
!4377 = !{!4373, !4378, !4379}
!4378 = !DILocalVariable(name: "s", arg: 2, scope: !4374, file: !1408, line: 256, type: !1347)
!4379 = !DILocalVariable(name: "i", scope: !4374, file: !1408, line: 257, type: !30)
!4380 = !DILocation(line: 256, column: 6, scope: !4374, inlinedAt: !4381)
!4381 = distinct !DILocation(line: 271, column: 21, scope: !4321)
!4382 = !DILocation(line: 257, column: 6, scope: !4374, inlinedAt: !4381)
!4383 = !DILocation(line: 0, scope: !4374, inlinedAt: !4381)
!4384 = !DILocation(line: 257, column: 14, scope: !4374, inlinedAt: !4381)
!4385 = !DILocation(line: 257, column: 22, scope: !4374, inlinedAt: !4381)
!4386 = !DILocation(line: 257, column: 16, scope: !4374, inlinedAt: !4381)
!4387 = !DILocation(line: 258, column: 6, scope: !4374, inlinedAt: !4381)
!4388 = !DILocation(line: 258, column: 15, scope: !4374, inlinedAt: !4381)
!4389 = !DILocation(line: 258, column: 8, scope: !4374, inlinedAt: !4381)
!4390 = !DILocation(line: 261, column: 6, scope: !4374, inlinedAt: !4381)
!4391 = !DILocation(line: 261, column: 8, scope: !4374, inlinedAt: !4381)
!4392 = !DILocation(line: 261, column: 7, scope: !4374, inlinedAt: !4381)
!4393 = !DILocation(line: 261, column: 14, scope: !4374, inlinedAt: !4381)
!4394 = !DILocation(line: 261, column: 16, scope: !4374, inlinedAt: !4381)
!4395 = !DILocation(line: 261, column: 15, scope: !4374, inlinedAt: !4381)
!4396 = !DILocation(line: 261, column: 11, scope: !4374, inlinedAt: !4381)
!4397 = !DILocation(line: 257, column: 26, scope: !4374, inlinedAt: !4381)
!4398 = !DILocation(line: 262, column: 11, scope: !4374, inlinedAt: !4381)
!4399 = !DILocation(line: 262, column: 18, scope: !4374, inlinedAt: !4381)
!4400 = !DILocation(line: 262, column: 20, scope: !4374, inlinedAt: !4381)
!4401 = !DILocation(line: 262, column: 16, scope: !4374, inlinedAt: !4381)
!4402 = !DILocation(line: 262, column: 4, scope: !4374, inlinedAt: !4381)
!4403 = !DILocation(line: 275, column: 7, scope: !4321)
!4404 = !DILocation(line: 275, column: 9, scope: !4321)
!4405 = !DILocation(line: 276, column: 14, scope: !4321)
!4406 = !DILocation(line: 276, column: 12, scope: !4321)
!4407 = !DILocation(line: 280, column: 6, scope: !4321)
!4408 = !DILocation(line: 281, column: 14, scope: !4321)
!4409 = !DILocation(line: 281, column: 18, scope: !4321)
!4410 = !DILocation(line: 281, column: 17, scope: !4321)
!4411 = !DILocation(line: 281, column: 13, scope: !4321)
!4412 = !DILocation(line: 281, column: 22, scope: !4321)
!4413 = !DILocation(line: 281, column: 32, scope: !4321)
!4414 = !DILocation(line: 281, column: 29, scope: !4321)
!4415 = !DILocation(line: 281, column: 3, scope: !4321)
!4416 = !DILocation(line: 282, column: 10, scope: !4321)
!4417 = !DILocation(line: 282, column: 12, scope: !4321)
!4418 = !DILocation(line: 283, column: 17, scope: !4321)
!4419 = !DILocation(line: 283, column: 16, scope: !4321)
!4420 = !DILocation(line: 283, column: 12, scope: !4321)
!4421 = !DILocation(line: 283, column: 3, scope: !4321)
!4422 = !DILocation(line: 284, column: 3, scope: !4321)
!4423 = !DILocation(line: 285, column: 6, scope: !4321)
!4424 = !DILocation(line: 285, column: 8, scope: !4321)
!4425 = !DILocation(line: 286, column: 4, scope: !4321)
!4426 = !DILocation(line: 286, column: 8, scope: !4321)
!4427 = !DILocation(line: 286, column: 7, scope: !4321)
!4428 = !DILocation(line: 286, column: 18, scope: !4321)
!4429 = !DILocation(line: 286, column: 17, scope: !4321)
!4430 = !DILocation(line: 288, column: 4, scope: !4321)
!4431 = !DILocation(line: 288, column: 6, scope: !4321)
!4432 = !DILocation(line: 299, column: 4, scope: !4321)
!4433 = !DILocation(line: 299, column: 8, scope: !4321)
!4434 = !DILocation(line: 299, column: 7, scope: !4321)
!4435 = !DILocation(line: 299, column: 18, scope: !4321)
!4436 = !DILocation(line: 299, column: 17, scope: !4321)
!4437 = !DILocation(line: 301, column: 4, scope: !4321)
!4438 = !DILocation(line: 301, column: 6, scope: !4321)
!4439 = !DILocation(line: 306, column: 2, scope: !4321)
!4440 = !DILocation(line: 306, column: 10, scope: !4321)
!4441 = !DILocation(line: 306, column: 4, scope: !4321)
!4442 = !DILocation(line: 310, column: 4, scope: !4321)
!4443 = !DILocation(line: 310, column: 2, scope: !4321)
!4444 = !DILocation(line: 311, column: 6, scope: !4321)
!4445 = distinct !DISubprogram(name: "strconv.trim", linkageName: "strconv.trim", scope: !1408, file: !1408, line: 71, type: !4446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4448)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!3634}
!4448 = !{!4449, !4450, !4451}
!4449 = !DILocalVariable(name: "a", arg: 1, scope: !4445, file: !1408, line: 71, type: !3634)
!4450 = !DILocalVariable(name: "nd", scope: !4445, file: !1408, line: 16, type: !30)
!4451 = !DILocalVariable(name: "dp", scope: !4445, file: !1408, line: 17, type: !30)
!4452 = !DILocation(line: 71, column: 6, scope: !4445)
!4453 = !DILocation(line: 0, scope: !4445)
!4454 = !DILocation(line: 72, column: 8, scope: !4445)
!4455 = !DILocation(line: 72, column: 6, scope: !4445)
!4456 = !DILocation(line: 72, column: 11, scope: !4445)
!4457 = !DILocation(line: 72, column: 26, scope: !4445)
!4458 = !DILocation(line: 72, column: 21, scope: !4445)
!4459 = !DILocation(line: 72, column: 30, scope: !4445)
!4460 = !DILocation(line: 73, column: 3, scope: !4445)
!4461 = !DILocation(line: 73, column: 5, scope: !4445)
!4462 = !DILocation(line: 75, column: 10, scope: !4445)
!4463 = !DILocation(line: 76, column: 3, scope: !4445)
!4464 = !DILocation(line: 76, column: 5, scope: !4445)
!4465 = distinct !DISubprogram(name: "strconv.rightShift", linkageName: "strconv.rightShift", scope: !1408, file: !1408, line: 110, type: !4322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4466)
!4466 = !{!4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479}
!4467 = !DILocalVariable(name: "a", arg: 1, scope: !4465, file: !1408, line: 110, type: !3634)
!4468 = !DILocalVariable(name: "k", arg: 2, scope: !4465, file: !1408, line: 110, type: !27)
!4469 = !DILocalVariable(name: "r", scope: !4465, file: !1408, line: 111, type: !30)
!4470 = !DILocalVariable(name: "w", scope: !4465, file: !1408, line: 112, type: !30)
!4471 = !DILocalVariable(name: "n", scope: !4465, file: !1408, line: 115, type: !27)
!4472 = !DILocalVariable(name: "nd", scope: !4465, file: !1408, line: 16, type: !30)
!4473 = !DILocalVariable(name: "c", scope: !4465, file: !1408, line: 129, type: !27)
!4474 = !DILocalVariable(name: "dp", scope: !4465, file: !1408, line: 17, type: !30)
!4475 = !DILocalVariable(name: "mask", scope: !4465, file: !1408, line: 134, type: !27)
!4476 = !DILocalVariable(name: "c", scope: !4465, file: !1408, line: 138, type: !27)
!4477 = !DILocalVariable(name: "dig", scope: !4465, file: !1408, line: 139, type: !27)
!4478 = !DILocalVariable(name: "dig", scope: !4465, file: !1408, line: 148, type: !27)
!4479 = !DILocalVariable(name: "trunc", scope: !4465, file: !1408, line: 19, type: !44)
!4480 = !DILocation(line: 110, column: 6, scope: !4465)
!4481 = !DILocation(line: 111, column: 2, scope: !4465)
!4482 = !DILocation(line: 112, column: 2, scope: !4465)
!4483 = !DILocation(line: 115, column: 6, scope: !4465)
!4484 = !DILocation(line: 0, scope: !4465)
!4485 = !DILocation(line: 116, column: 8, scope: !4465)
!4486 = !DILocation(line: 116, column: 11, scope: !4465)
!4487 = !DILocation(line: 116, column: 9, scope: !4465)
!4488 = !DILocation(line: 116, column: 13, scope: !4465)
!4489 = !DILocation(line: 117, column: 6, scope: !4465)
!4490 = !DILocation(line: 117, column: 11, scope: !4465)
!4491 = !DILocation(line: 117, column: 13, scope: !4465)
!4492 = !DILocation(line: 118, column: 7, scope: !4465)
!4493 = !DILocation(line: 118, column: 9, scope: !4465)
!4494 = !DILocation(line: 123, column: 8, scope: !4465)
!4495 = !DILocation(line: 123, column: 11, scope: !4465)
!4496 = !DILocation(line: 123, column: 9, scope: !4465)
!4497 = !DILocation(line: 123, column: 13, scope: !4465)
!4498 = !DILocation(line: 124, column: 9, scope: !4465)
!4499 = !DILocation(line: 124, column: 11, scope: !4465)
!4500 = !DILocation(line: 124, column: 5, scope: !4465)
!4501 = !DILocation(line: 125, column: 5, scope: !4465)
!4502 = !DILocation(line: 132, column: 2, scope: !4465)
!4503 = !DILocation(line: 132, column: 4, scope: !4465)
!4504 = !DILocation(line: 137, column: 8, scope: !4465)
!4505 = !DILocation(line: 137, column: 12, scope: !4465)
!4506 = !DILocation(line: 137, column: 14, scope: !4465)
!4507 = !DILocation(line: 137, column: 10, scope: !4465)
!4508 = !DILocation(line: 147, column: 6, scope: !4465)
!4509 = !DILocation(line: 147, column: 8, scope: !4465)
!4510 = !DILocation(line: 148, column: 10, scope: !4465)
!4511 = !DILocation(line: 148, column: 15, scope: !4465)
!4512 = !DILocation(line: 148, column: 12, scope: !4465)
!4513 = !DILocation(line: 148, column: 3, scope: !4465)
!4514 = !DILocation(line: 149, column: 8, scope: !4465)
!4515 = !DILocation(line: 149, column: 3, scope: !4465)
!4516 = !DILocation(line: 150, column: 6, scope: !4465)
!4517 = !DILocation(line: 150, column: 8, scope: !4465)
!4518 = !DILocation(line: 156, column: 7, scope: !4465)
!4519 = !DILocation(line: 156, column: 9, scope: !4465)
!4520 = !DILocation(line: 156, column: 3, scope: !4465)
!4521 = !DILocation(line: 153, column: 13, scope: !4465)
!4522 = !DILocation(line: 153, column: 17, scope: !4465)
!4523 = !DILocation(line: 117, column: 8, scope: !4465)
!4524 = !DILocation(line: 120, column: 5, scope: !4465)
!4525 = !DILocation(line: 120, column: 7, scope: !4465)
!4526 = !DILocation(line: 121, column: 5, scope: !4465)
!4527 = !DILocation(line: 129, column: 13, scope: !4465)
!4528 = !DILocation(line: 129, column: 17, scope: !4465)
!4529 = !DILocation(line: 129, column: 16, scope: !4465)
!4530 = !DILocation(line: 129, column: 12, scope: !4465)
!4531 = !DILocation(line: 129, column: 3, scope: !4465)
!4532 = !DILocation(line: 130, column: 7, scope: !4465)
!4533 = !DILocation(line: 130, column: 8, scope: !4465)
!4534 = !DILocation(line: 130, column: 12, scope: !4465)
!4535 = !DILocation(line: 130, column: 16, scope: !4465)
!4536 = !DILocation(line: 130, column: 3, scope: !4465)
!4537 = !DILocation(line: 116, column: 19, scope: !4465)
!4538 = !DILocation(line: 132, column: 10, scope: !4465)
!4539 = !DILocation(line: 132, column: 12, scope: !4465)
!4540 = !DILocation(line: 134, column: 24, scope: !4465)
!4541 = !DILocation(line: 134, column: 27, scope: !4465)
!4542 = !DILocation(line: 134, column: 6, scope: !4465)
!4543 = !DILocation(line: 138, column: 13, scope: !4465)
!4544 = !DILocation(line: 138, column: 17, scope: !4465)
!4545 = !DILocation(line: 138, column: 16, scope: !4465)
!4546 = !DILocation(line: 138, column: 3, scope: !4465)
!4547 = !DILocation(line: 139, column: 15, scope: !4465)
!4548 = !DILocation(line: 139, column: 3, scope: !4465)
!4549 = !DILocation(line: 140, column: 8, scope: !4465)
!4550 = !DILocation(line: 140, column: 3, scope: !4465)
!4551 = !DILocation(line: 141, column: 3, scope: !4465)
!4552 = !DILocation(line: 141, column: 7, scope: !4465)
!4553 = !DILocation(line: 141, column: 6, scope: !4465)
!4554 = !DILocation(line: 139, column: 12, scope: !4465)
!4555 = !DILocation(line: 138, column: 12, scope: !4465)
!4556 = !DILocation(line: 141, column: 17, scope: !4465)
!4557 = !DILocation(line: 141, column: 16, scope: !4465)
!4558 = !DILocation(line: 142, column: 3, scope: !4465)
!4559 = !DILocation(line: 143, column: 7, scope: !4465)
!4560 = !DILocation(line: 143, column: 8, scope: !4465)
!4561 = !DILocation(line: 143, column: 14, scope: !4465)
!4562 = !DILocation(line: 143, column: 12, scope: !4465)
!4563 = !DILocation(line: 143, column: 16, scope: !4465)
!4564 = !DILocation(line: 143, column: 3, scope: !4465)
!4565 = !DILocation(line: 137, column: 18, scope: !4465)
!4566 = !DILocation(line: 151, column: 4, scope: !4465)
!4567 = !DILocation(line: 151, column: 8, scope: !4465)
!4568 = !DILocation(line: 151, column: 7, scope: !4465)
!4569 = !DILocation(line: 151, column: 18, scope: !4465)
!4570 = !DILocation(line: 151, column: 17, scope: !4465)
!4571 = !DILocation(line: 152, column: 4, scope: !4465)
!4572 = !DILocation(line: 154, column: 4, scope: !4465)
!4573 = !DILocation(line: 154, column: 6, scope: !4465)
!4574 = !DILocation(line: 159, column: 2, scope: !4465)
!4575 = !DILocation(line: 159, column: 9, scope: !4465)
!4576 = !DILocation(line: 159, column: 4, scope: !4465)
!4577 = !DILocation(line: 160, column: 6, scope: !4465)
!4578 = distinct !DISubprogram(name: "(*strconv.decimal).RoundDown", linkageName: "(*strconv.decimal).RoundDown", scope: !1408, file: !1408, line: 366, type: !3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4579)
!4579 = !{!4580, !4581, !4582}
!4580 = !DILocalVariable(name: "a", arg: 1, scope: !4578, file: !1408, line: 366, type: !3634)
!4581 = !DILocalVariable(name: "nd", arg: 2, scope: !4578, file: !1408, line: 366, type: !30)
!4582 = !DILocalVariable(name: "nd", scope: !4578, file: !1408, line: 16, type: !30)
!4583 = !DILocation(line: 366, column: 19, scope: !4578)
!4584 = !DILocation(line: 367, column: 5, scope: !4578)
!4585 = !DILocation(line: 367, column: 8, scope: !4578)
!4586 = !DILocation(line: 0, scope: !4578)
!4587 = !DILocation(line: 368, column: 3, scope: !4578)
!4588 = !DILocation(line: 367, column: 15, scope: !4578)
!4589 = !DILocation(line: 367, column: 21, scope: !4578)
!4590 = !DILocation(line: 367, column: 23, scope: !4578)
!4591 = !DILocation(line: 367, column: 18, scope: !4578)
!4592 = !DILocation(line: 370, column: 2, scope: !4578)
!4593 = !DILocation(line: 370, column: 9, scope: !4578)
!4594 = !DILocation(line: 370, column: 4, scope: !4578)
!4595 = !DILocation(line: 371, column: 7, scope: !4578)
!4596 = !DILocation(line: 371, column: 6, scope: !4578)
!4597 = distinct !DISubprogram(name: "(*strconv.decimal).RoundUp", linkageName: "(*strconv.decimal).RoundUp", scope: !1408, file: !1408, line: 375, type: !3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4598)
!4598 = !{!4599, !4600, !4601, !4602, !4603, !4604}
!4599 = !DILocalVariable(name: "a", arg: 1, scope: !4597, file: !1408, line: 375, type: !3634)
!4600 = !DILocalVariable(name: "nd", arg: 2, scope: !4597, file: !1408, line: 375, type: !30)
!4601 = !DILocalVariable(name: "i", scope: !4597, file: !1408, line: 381, type: !30)
!4602 = !DILocalVariable(name: "c", scope: !4597, file: !1408, line: 382, type: !72)
!4603 = !DILocalVariable(name: "nd", scope: !4597, file: !1408, line: 16, type: !30)
!4604 = !DILocalVariable(name: "dp", scope: !4597, file: !1408, line: 17, type: !30)
!4605 = !DILocation(line: 375, column: 19, scope: !4597)
!4606 = !DILocation(line: 376, column: 5, scope: !4597)
!4607 = !DILocation(line: 376, column: 8, scope: !4597)
!4608 = !DILocation(line: 0, scope: !4597)
!4609 = !DILocation(line: 377, column: 3, scope: !4597)
!4610 = !DILocation(line: 376, column: 15, scope: !4597)
!4611 = !DILocation(line: 376, column: 21, scope: !4597)
!4612 = !DILocation(line: 376, column: 23, scope: !4597)
!4613 = !DILocation(line: 381, column: 6, scope: !4597)
!4614 = !DILocation(line: 381, column: 19, scope: !4597)
!4615 = !DILocation(line: 381, column: 21, scope: !4597)
!4616 = !DILocation(line: 382, column: 8, scope: !4597)
!4617 = !DILocation(line: 392, column: 2, scope: !4597)
!4618 = !DILocation(line: 376, column: 18, scope: !4597)
!4619 = !DILocation(line: 382, column: 12, scope: !4597)
!4620 = !DILocation(line: 382, column: 11, scope: !4597)
!4621 = !DILocation(line: 382, column: 3, scope: !4597)
!4622 = !DILocation(line: 383, column: 6, scope: !4597)
!4623 = !DILocation(line: 383, column: 8, scope: !4597)
!4624 = !DILocation(line: 384, column: 4, scope: !4597)
!4625 = !DILocation(line: 384, column: 8, scope: !4597)
!4626 = !DILocation(line: 384, column: 7, scope: !4597)
!4627 = !DILocation(line: 385, column: 6, scope: !4597)
!4628 = !DILocation(line: 386, column: 4, scope: !4597)
!4629 = !DILocation(line: 392, column: 5, scope: !4597)
!4630 = !DILocation(line: 393, column: 2, scope: !4597)
!4631 = !DILocation(line: 393, column: 4, scope: !4597)
!4632 = !DILocation(line: 394, column: 4, scope: !4597)
!4633 = !DILocation(line: 394, column: 2, scope: !4597)
!4634 = distinct !DISubprogram(name: "(*os.File).Write", linkageName: "(*os.File).Write", scope: !4635, file: !4635, line: 91, type: !4636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4638)
!4635 = !DIFile(filename: "file.go", directory: "/home/torch2424/Source/tinygo/src/os")
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!1340, !3107}
!4638 = !{!4639, !4640, !4641, !4642}
!4639 = !DILocalVariable(name: "f", arg: 1, scope: !4634, file: !4635, line: 91, type: !1340)
!4640 = !DILocalVariable(name: "b", arg: 2, scope: !4634, file: !4635, line: 91, type: !3107)
!4641 = !DILocalVariable(name: "n", scope: !4634, file: !4635, line: 91, type: !30)
!4642 = !DILocalVariable(name: "err", scope: !4634, file: !4635, line: 91, type: !98)
!4643 = !DILocation(line: 91, column: 16, scope: !4634)
!4644 = !DILocation(line: 92, column: 11, scope: !4634)
!4645 = !DILocation(line: 92, column: 13, scope: !4634)
!4646 = !DILocation(line: 94, column: 19, scope: !4634)
!4647 = !DILocation(line: 0, scope: !4634)
!4648 = !DILocation(line: 94, column: 29, scope: !4634)
!4649 = !DILocation(line: 94, column: 31, scope: !4634)
!4650 = !DILocation(line: 94, column: 37, scope: !4634)
!4651 = !DILocation(line: 94, column: 20, scope: !4634)
!4652 = !DILocation(line: 94, column: 3, scope: !4634)
!4653 = !DILocation(line: 96, column: 2, scope: !4634)
!4654 = !DILocation(line: 91, column: 40, scope: !4634)
!4655 = !DILocation(line: 92, column: 2, scope: !4634)
!4656 = !DILocation(line: 92, column: 26, scope: !4634)
!4657 = !DILocation(line: 896, column: 26, scope: !4658, inlinedAt: !4674)
!4658 = distinct !DISubprogram(name: "fmt.intFromArg", linkageName: "fmt.intFromArg", scope: !1425, file: !1425, line: 893, type: !4659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4665)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{!4661, !30}
!4661 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]interface{}", size: 96, align: 32, elements: !4662)
!4662 = !{!4663, !296, !297}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !4664, size: 32, align: 32)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 32, align: 32, dwarfAddressSpace: 0)
!4665 = !{!4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673}
!4666 = !DILocalVariable(name: "a", arg: 1, scope: !4658, file: !1425, line: 893, type: !4661)
!4667 = !DILocalVariable(name: "argNum", arg: 2, scope: !4658, file: !1425, line: 893, type: !30)
!4668 = !DILocalVariable(name: "newArgNum", scope: !4658, file: !1425, line: 893, type: !30)
!4669 = !DILocalVariable(name: "num", scope: !4658, file: !1425, line: 893, type: !30)
!4670 = !DILocalVariable(name: "isInt", scope: !4658, file: !1425, line: 893, type: !44)
!4671 = !DILocalVariable(name: "v", scope: !4658, file: !1425, line: 899, type: !1944)
!4672 = !DILocalVariable(name: "n", scope: !4658, file: !1425, line: 901, type: !1449)
!4673 = !DILocalVariable(name: "n", scope: !4658, file: !1425, line: 907, type: !41)
!4674 = distinct !DILocation(line: 92, column: 25, scope: !4634)
!4675 = !DILocation(line: 32, column: 26, scope: !4676, inlinedAt: !4680)
!4676 = distinct !DISubprogram(name: "(os.stdioFileHandle).Write$invoke", linkageName: "(os.stdioFileHandle).Write$invoke", scope: !1339, file: !1339, line: 32, type: !4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{!4679, !3107}
!4679 = !DIDerivedType(tag: DW_TAG_typedef, name: "os.stdioFileHandle", baseType: !4)
!4680 = distinct !DILocation(line: 896, column: 26, scope: !4658, inlinedAt: !4674)
!4681 = !DILocalVariable(name: "f", arg: 1, scope: !4682, file: !1339, line: 32, type: !4679)
!4682 = distinct !DISubprogram(name: "(os.stdioFileHandle).Write", linkageName: "(os.stdioFileHandle).Write", scope: !1339, file: !1339, line: 32, type: !4677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4683)
!4683 = !{!4681, !4684, !4685, !4686}
!4684 = !DILocalVariable(name: "b", arg: 2, scope: !4682, file: !1339, line: 32, type: !3107)
!4685 = !DILocalVariable(name: "c", scope: !4682, file: !1339, line: 35, type: !72)
!4686 = !DILocalVariable(name: "ErrUnsupported", scope: !4682, file: !1324, line: 14, type: !98)
!4687 = !DILocation(line: 32, column: 26, scope: !4682, inlinedAt: !4688)
!4688 = distinct !DILocation(line: 32, column: 26, scope: !4676, inlinedAt: !4680)
!4689 = !DILocation(line: 33, column: 9, scope: !4682, inlinedAt: !4688)
!4690 = !DILocation(line: 0, scope: !4682, inlinedAt: !4688)
!4691 = !DILocation(line: 35, column: 21, scope: !4682, inlinedAt: !4688)
!4692 = !DILocation(line: 38, column: 14, scope: !4682, inlinedAt: !4688)
!4693 = !DILocation(line: 38, column: 3, scope: !4682, inlinedAt: !4688)
!4694 = !DILocation(line: 40, column: 13, scope: !4682, inlinedAt: !4688)
!4695 = !DILocation(line: 40, column: 3, scope: !4682, inlinedAt: !4688)
!4696 = !DILocation(line: 35, column: 10, scope: !4682, inlinedAt: !4688)
!4697 = !DILocation(line: 36, column: 12, scope: !4682, inlinedAt: !4688)
!4698 = !DILocation(line: 36, column: 11, scope: !4682, inlinedAt: !4688)
!4699 = !DILocation(line: 92, column: 25, scope: !4634)
!4700 = !DILocation(line: 93, column: 5, scope: !4634)
!4701 = !DILocation(line: 93, column: 9, scope: !4634)
!4702 = distinct !DISubprogram(name: "(*fmt.pp).badVerb", linkageName: "(*fmt.pp).badVerb", scope: !1425, file: !1425, line: 330, type: !4703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4744)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!4705, !295}
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 32, align: 32, dwarfAddressSpace: 0)
!4706 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.pp", baseType: !4707)
!4707 = !DICompositeType(tag: DW_TAG_structure_type, size: 1120, align: 32, elements: !4708)
!4708 = !{!4709, !4711, !4712, !4713, !4738, !4739, !4740, !4741, !4742, !4743}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "buf", baseType: !4710, size: 96, align: 32)
!4710 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.buffer", baseType: !3107)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "arg", baseType: !99, size: 64, align: 32, offset: 96)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "value", baseType: !1944, size: 96, align: 32, offset: 160)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", baseType: !4714, size: 736, align: 32, offset: 256)
!4714 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.fmt", baseType: !4715)
!4715 = !DICompositeType(tag: DW_TAG_structure_type, size: 736, align: 32, elements: !4716)
!4716 = !{!4717, !4719, !4732, !4733, !4734}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "buf", baseType: !4718, size: 32, align: 32)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 32, align: 32, dwarfAddressSpace: 0)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "fmtFlags", baseType: !4720, size: 72, align: 8, offset: 32)
!4720 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.fmtFlags", baseType: !4721)
!4721 = !DICompositeType(tag: DW_TAG_structure_type, size: 72, align: 8, elements: !4722)
!4722 = !{!4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "widPresent", baseType: !44, size: 8, align: 8)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "precPresent", baseType: !44, size: 8, align: 8, offset: 8)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "minus", baseType: !44, size: 8, align: 8, offset: 16)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "plus", baseType: !44, size: 8, align: 8, offset: 24)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "sharp", baseType: !44, size: 8, align: 8, offset: 32)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "space", baseType: !44, size: 8, align: 8, offset: 40)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "zero", baseType: !44, size: 8, align: 8, offset: 48)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "plusV", baseType: !44, size: 8, align: 8, offset: 56)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "sharpV", baseType: !44, size: 8, align: 8, offset: 64)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "wid", baseType: !30, size: 32, align: 32, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "prec", baseType: !30, size: 32, align: 32, offset: 160)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "intbuf", baseType: !4735, size: 544, align: 8, offset: 192)
!4735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !72, size: 544, align: 8, elements: !4736)
!4736 = !{!4737}
!4737 = !DISubrange(count: 68, lowerBound: 0)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "reordered", baseType: !44, size: 8, align: 8, offset: 992)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "goodArgNum", baseType: !44, size: 8, align: 8, offset: 1000)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "panicking", baseType: !44, size: 8, align: 8, offset: 1008)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "erroring", baseType: !44, size: 8, align: 8, offset: 1016)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "wrapErrs", baseType: !44, size: 8, align: 8, offset: 1024)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "wrappedErr", baseType: !98, size: 64, align: 32, offset: 1056)
!4744 = !{!4745, !4746, !4747}
!4745 = !DILocalVariable(name: "p", arg: 1, scope: !4702, file: !1425, line: 330, type: !4705)
!4746 = !DILocalVariable(name: "verb", arg: 2, scope: !4702, file: !1425, line: 330, type: !295)
!4747 = !DILocalVariable(name: "erroring", scope: !4702, file: !1425, line: 124, type: !44)
!4748 = !DILocation(line: 89, column: 19, scope: !4749, inlinedAt: !4758)
!4749 = distinct !DISubprogram(name: "(*fmt.buffer).writeRune", linkageName: "(*fmt.buffer).writeRune", scope: !1425, file: !1425, line: 89, type: !4750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4752)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!4718, !295}
!4752 = !{!4753, !4754, !4755, !4756, !4757}
!4753 = !DILocalVariable(name: "bp", arg: 1, scope: !4749, file: !1425, line: 89, type: !4718)
!4754 = !DILocalVariable(name: "r", arg: 2, scope: !4749, file: !1425, line: 89, type: !295)
!4755 = !DILocalVariable(name: "b", scope: !4749, file: !1425, line: 95, type: !4710)
!4756 = !DILocalVariable(name: "n", scope: !4749, file: !1425, line: 96, type: !30)
!4757 = !DILocalVariable(name: "w", scope: !4749, file: !1425, line: 100, type: !30)
!4758 = distinct !DILocation(line: 333, column: 17, scope: !4702)
!4759 = !DILocation(line: 330, column: 14, scope: !4702)
!4760 = !DILocation(line: 331, column: 2, scope: !4702)
!4761 = !DILocation(line: 331, column: 4, scope: !4702)
!4762 = !DILocation(line: 332, column: 2, scope: !4702)
!4763 = !DILocation(line: 332, column: 4, scope: !4702)
!4764 = !DILocation(line: 332, column: 19, scope: !4702)
!4765 = !DILocation(line: 333, column: 18, scope: !4702)
!4766 = !DILocation(line: 90, column: 5, scope: !4749, inlinedAt: !4758)
!4767 = !DILocation(line: 95, column: 8, scope: !4749, inlinedAt: !4758)
!4768 = !DILocation(line: 91, column: 16, scope: !4749, inlinedAt: !4758)
!4769 = !DILocation(line: 91, column: 28, scope: !4749, inlinedAt: !4758)
!4770 = !DILocation(line: 91, column: 25, scope: !4749, inlinedAt: !4758)
!4771 = !DILocation(line: 91, column: 15, scope: !4749, inlinedAt: !4758)
!4772 = !DILocation(line: 91, column: 3, scope: !4749, inlinedAt: !4758)
!4773 = !DILocation(line: 92, column: 3, scope: !4749, inlinedAt: !4758)
!4774 = !DILocation(line: 334, column: 17, scope: !4702)
!4775 = !DILocation(line: 336, column: 9, scope: !4702)
!4776 = !DILocation(line: 336, column: 13, scope: !4702)
!4777 = !DILocation(line: 0, scope: !4702)
!4778 = !DILocation(line: 337, column: 36, scope: !4702)
!4779 = !DILocation(line: 337, column: 38, scope: !4702)
!4780 = !DILocation(line: 132, column: 6, scope: !4781, inlinedAt: !4785)
!4781 = distinct !DISubprogram(name: "reflect.TypeOf", linkageName: "reflect.TypeOf", scope: !2062, file: !2062, line: 132, type: !1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4782)
!4782 = !{!4783, !4784}
!4783 = !DILocalVariable(name: "i", arg: 1, scope: !4781, file: !2062, line: 132, type: !99)
!4784 = !DILocalVariable(name: "typecode", scope: !4781, file: !1924, line: 19, type: !84)
!4785 = distinct !DILocation(line: 337, column: 35, scope: !4702)
!4786 = !DILocation(line: 133, column: 17, scope: !4781, inlinedAt: !4785)
!4787 = !DILocation(line: 133, column: 16, scope: !4781, inlinedAt: !4785)
!4788 = !DILocation(line: 133, column: 20, scope: !4781, inlinedAt: !4785)
!4789 = !DILocation(line: 337, column: 20, scope: !4702)
!4790 = !DILocation(line: 338, column: 18, scope: !4702)
!4791 = !DILocation(line: 339, column: 16, scope: !4702)
!4792 = !DILocation(line: 339, column: 13, scope: !4702)
!4793 = !DILocation(line: 347, column: 2, scope: !4702)
!4794 = !DILocation(line: 347, column: 17, scope: !4702)
!4795 = !DILocation(line: 348, column: 4, scope: !4702)
!4796 = !DILocation(line: 340, column: 9, scope: !4702)
!4797 = !DILocation(line: 340, column: 22, scope: !4702)
!4798 = !DILocation(line: 345, column: 3, scope: !4702)
!4799 = !DILocation(line: 341, column: 21, scope: !4702)
!4800 = !DILocation(line: 341, column: 23, scope: !4702)
!4801 = !DILocation(line: 341, column: 33, scope: !4702)
!4802 = !DILocation(line: 341, column: 20, scope: !4702)
!4803 = !DILocation(line: 342, column: 18, scope: !4702)
!4804 = !DILocation(line: 343, column: 18, scope: !4702)
!4805 = !DILocation(line: 343, column: 15, scope: !4702)
!4806 = !DILocation(line: 345, column: 20, scope: !4702)
!4807 = distinct !DISubprogram(name: "(*fmt.pp).catchPanic", linkageName: "(*fmt.pp).catchPanic", scope: !1425, file: !1425, line: 540, type: !4808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4810)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!4705, !99, !295, !1347}
!4810 = !{!4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819}
!4811 = !DILocalVariable(name: "p", arg: 1, scope: !4807, file: !1425, line: 540, type: !4705)
!4812 = !DILocalVariable(name: "arg", arg: 2, scope: !4807, file: !1425, line: 540, type: !99)
!4813 = !DILocalVariable(name: "verb", arg: 3, scope: !4807, file: !1425, line: 540, type: !295)
!4814 = !DILocalVariable(name: "method", arg: 4, scope: !4807, file: !1425, line: 540, type: !1347)
!4815 = !DILocalVariable(name: "err", scope: !4807, file: !1425, line: 541, type: !99)
!4816 = !DILocalVariable(name: "v", scope: !4807, file: !1425, line: 545, type: !1944)
!4817 = !DILocalVariable(name: "oldFlags", scope: !4807, file: !1425, line: 556, type: !4720)
!4818 = !DILocalVariable(name: "panicking", scope: !4807, file: !1425, line: 122, type: !44)
!4819 = !DILocalVariable(name: "fmtFlags", scope: !4807, file: !4820, line: 44, type: !4720)
!4820 = !DIFile(filename: "format.go", directory: "/usr/local/go/src/fmt")
!4821 = !DILocation(line: 540, column: 14, scope: !4807)
!4822 = !DILocation(line: 541, column: 23, scope: !4807)
!4823 = !DILocation(line: 0, scope: !4807)
!4824 = distinct !DISubprogram(name: "(*fmt.pp).fmt0x64", linkageName: "(*fmt.pp).fmt0x64", scope: !1425, file: !1425, line: 362, type: !4825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4827)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!4705, !41, !44}
!4827 = !{!4828, !4829, !4830, !4831, !4832}
!4828 = !DILocalVariable(name: "p", arg: 1, scope: !4824, file: !1425, line: 362, type: !4705)
!4829 = !DILocalVariable(name: "v", arg: 2, scope: !4824, file: !1425, line: 362, type: !41)
!4830 = !DILocalVariable(name: "leading0x", arg: 3, scope: !4824, file: !1425, line: 362, type: !44)
!4831 = !DILocalVariable(name: "sharp", scope: !4824, file: !1425, line: 363, type: !44)
!4832 = !DILocalVariable(name: "sharp", scope: !4824, file: !4820, line: 28, type: !44)
!4833 = !DILocation(line: 362, column: 14, scope: !4824)
!4834 = !DILocation(line: 363, column: 11, scope: !4824)
!4835 = !DILocation(line: 363, column: 13, scope: !4824)
!4836 = !DILocation(line: 363, column: 17, scope: !4824)
!4837 = !DILocation(line: 363, column: 2, scope: !4824)
!4838 = !DILocation(line: 364, column: 2, scope: !4824)
!4839 = !DILocation(line: 364, column: 16, scope: !4824)
!4840 = !DILocation(line: 364, column: 8, scope: !4824)
!4841 = !DILocation(line: 365, column: 19, scope: !4824)
!4842 = !DILocation(line: 365, column: 18, scope: !4824)
!4843 = !DILocation(line: 366, column: 8, scope: !4824)
!4844 = !DILocation(line: 0, scope: !4824)
!4845 = distinct !DISubprogram(name: "(*fmt.pp).fmtBool", linkageName: "(*fmt.pp).fmtBool", scope: !1425, file: !1425, line: 351, type: !4846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4848)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!4705, !44, !295}
!4848 = !{!4849, !4850, !4851}
!4849 = !DILocalVariable(name: "p", arg: 1, scope: !4845, file: !1425, line: 351, type: !4705)
!4850 = !DILocalVariable(name: "v", arg: 2, scope: !4845, file: !1425, line: 351, type: !44)
!4851 = !DILocalVariable(name: "verb", arg: 3, scope: !4845, file: !1425, line: 351, type: !295)
!4852 = !DILocation(line: 351, column: 14, scope: !4845)
!4853 = !DILocation(line: 352, column: 9, scope: !4845)
!4854 = !DILocation(line: 354, column: 3, scope: !4845)
!4855 = !DILocation(line: 354, column: 5, scope: !4845)
!4856 = !DILocation(line: 354, column: 20, scope: !4845)
!4857 = !DILocalVariable(name: "f", arg: 1, scope: !4858, file: !4820, line: 126, type: !4861)
!4858 = distinct !DISubprogram(name: "(*fmt.fmt).fmtBoolean", linkageName: "(*fmt.fmt).fmtBoolean", scope: !4820, file: !4820, line: 126, type: !4859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4862)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{!4861, !44}
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 32, align: 32, dwarfAddressSpace: 0)
!4862 = !{!4857, !4863}
!4863 = !DILocalVariable(name: "v", arg: 2, scope: !4858, file: !4820, line: 126, type: !44)
!4864 = !DILocation(line: 126, column: 15, scope: !4858, inlinedAt: !4865)
!4865 = distinct !DILocation(line: 354, column: 19, scope: !4845)
!4866 = !DILocation(line: 127, column: 5, scope: !4858, inlinedAt: !4865)
!4867 = !DILocation(line: 128, column: 3, scope: !4858, inlinedAt: !4865)
!4868 = !DILocation(line: 130, column: 3, scope: !4858, inlinedAt: !4865)
!4869 = !DILocation(line: 0, scope: !4858, inlinedAt: !4865)
!4870 = !DILocation(line: 128, column: 14, scope: !4858, inlinedAt: !4865)
!4871 = !DILocation(line: 130, column: 14, scope: !4858, inlinedAt: !4865)
!4872 = !DILocation(line: 0, scope: !4845)
!4873 = distinct !DISubprogram(name: "(*fmt.pp).fmtComplex", linkageName: "(*fmt.pp).fmtComplex", scope: !1425, file: !1425, line: 423, type: !4874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4877)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!4705, !4876, !30, !295}
!4876 = !DIBasicType(name: "complex128", size: 128, encoding: DW_ATE_complex_float)
!4877 = !{!4878, !4879, !4880, !4881, !4882, !4883}
!4878 = !DILocalVariable(name: "p", arg: 1, scope: !4873, file: !1425, line: 423, type: !4705)
!4879 = !DILocalVariable(name: "v", arg: 2, scope: !4873, file: !1425, line: 423, type: !4876)
!4880 = !DILocalVariable(name: "size", arg: 3, scope: !4873, file: !1425, line: 423, type: !30)
!4881 = !DILocalVariable(name: "verb", arg: 4, scope: !4873, file: !1425, line: 423, type: !295)
!4882 = !DILocalVariable(name: "oldPlus", scope: !4873, file: !1425, line: 428, type: !44)
!4883 = !DILocalVariable(name: "plus", scope: !4873, file: !4820, line: 27, type: !44)
!4884 = !DILocation(line: 423, column: 14, scope: !4873)
!4885 = !DILocation(line: 426, column: 9, scope: !4873)
!4886 = !DILocation(line: 428, column: 14, scope: !4873)
!4887 = !DILocation(line: 428, column: 16, scope: !4873)
!4888 = !DILocation(line: 428, column: 20, scope: !4873)
!4889 = !DILocation(line: 428, column: 3, scope: !4873)
!4890 = !DILocation(line: 429, column: 3, scope: !4873)
!4891 = !DILocation(line: 429, column: 5, scope: !4873)
!4892 = !DILocation(line: 429, column: 18, scope: !4873)
!4893 = !DILocation(line: 430, column: 19, scope: !4873)
!4894 = !DILocation(line: 430, column: 23, scope: !4873)
!4895 = !DILocation(line: 430, column: 27, scope: !4873)
!4896 = !DILocation(line: 430, column: 31, scope: !4873)
!4897 = !DILocation(line: 430, column: 13, scope: !4873)
!4898 = !DILocation(line: 432, column: 9, scope: !4873)
!4899 = !DILocation(line: 433, column: 13, scope: !4873)
!4900 = !DILocation(line: 434, column: 20, scope: !4873)
!4901 = !DILocation(line: 435, column: 9, scope: !4873)
!4902 = !DILocation(line: 0, scope: !4873)
!4903 = distinct !DISubprogram(name: "(*fmt.pp).fmtFloat", linkageName: "(*fmt.pp).fmtFloat", scope: !1425, file: !1425, line: 405, type: !4904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!4705, !140, !30, !295}
!4906 = !{!4907, !4908, !4909, !4910}
!4907 = !DILocalVariable(name: "p", arg: 1, scope: !4903, file: !1425, line: 405, type: !4705)
!4908 = !DILocalVariable(name: "v", arg: 2, scope: !4903, file: !1425, line: 405, type: !140)
!4909 = !DILocalVariable(name: "size", arg: 3, scope: !4903, file: !1425, line: 405, type: !30)
!4910 = !DILocalVariable(name: "verb", arg: 4, scope: !4903, file: !1425, line: 405, type: !295)
!4911 = !DILocation(line: 23, column: 6, scope: !4912, inlinedAt: !4918)
!4912 = distinct !DISubprogram(name: "math.Float64bits", linkageName: "math.Float64bits", scope: !4913, file: !4913, line: 23, type: !4914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4916)
!4913 = !DIFile(filename: "unsafe.go", directory: "/usr/local/go/src/math")
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!140}
!4916 = !{!4917}
!4917 = !DILocalVariable(name: "f", arg: 1, scope: !4912, file: !4913, line: 23, type: !140)
!4918 = distinct !DILocation(line: 65, column: 26, scope: !4919, inlinedAt: !4943)
!4919 = distinct !DISubprogram(name: "strconv.genericFtoa", linkageName: "strconv.genericFtoa", scope: !22, file: !22, line: 57, type: !4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4922)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!3107, !140, !72, !30, !30}
!4922 = !{!4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942}
!4923 = !DILocalVariable(name: "dst", arg: 1, scope: !4919, file: !22, line: 57, type: !3107)
!4924 = !DILocalVariable(name: "val", arg: 2, scope: !4919, file: !22, line: 57, type: !140)
!4925 = !DILocalVariable(name: "fmt", arg: 3, scope: !4919, file: !22, line: 57, type: !72)
!4926 = !DILocalVariable(name: "prec", arg: 4, scope: !4919, file: !22, line: 57, type: !30)
!4927 = !DILocalVariable(name: "bitSize", arg: 5, scope: !4919, file: !22, line: 57, type: !30)
!4928 = !DILocalVariable(name: "bits", scope: !4919, file: !22, line: 58, type: !41)
!4929 = !DILocalVariable(name: "flt", scope: !4919, file: !22, line: 59, type: !3624)
!4930 = !DILocalVariable(name: "neg", scope: !4919, file: !22, line: 71, type: !44)
!4931 = !DILocalVariable(name: "exp", scope: !4919, file: !22, line: 72, type: !30)
!4932 = !DILocalVariable(name: "mant", scope: !4919, file: !22, line: 73, type: !41)
!4933 = !DILocalVariable(name: "s", scope: !4919, file: !22, line: 78, type: !1347)
!4934 = !DILocalVariable(name: "optimize", scope: !4919, file: !1386, line: 15, type: !44)
!4935 = !DILocalVariable(name: "ok", scope: !4919, file: !22, line: 112, type: !44)
!4936 = !DILocalVariable(name: "shortest", scope: !4919, file: !22, line: 114, type: !44)
!4937 = !DILocalVariable(name: "f", scope: !4919, file: !22, line: 117, type: !4198)
!4938 = !DILocalVariable(name: "lower", scope: !4919, file: !22, line: 118, type: !37)
!4939 = !DILocalVariable(name: "upper", scope: !4919, file: !22, line: 118, type: !37)
!4940 = !DILocalVariable(name: "d", scope: !4919, file: !22, line: 372, type: !3107)
!4941 = !DILocalVariable(name: "digs", scope: !4919, file: !22, line: 111, type: !3560)
!4942 = !DILocalVariable(name: "digits", scope: !4919, file: !22, line: 136, type: !30)
!4943 = distinct !DILocation(line: 54, column: 20, scope: !4944, inlinedAt: !4951)
!4944 = distinct !DISubprogram(name: "strconv.AppendFloat", linkageName: "strconv.AppendFloat", scope: !22, file: !22, line: 53, type: !4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4945)
!4945 = !{!4946, !4947, !4948, !4949, !4950}
!4946 = !DILocalVariable(name: "dst", arg: 1, scope: !4944, file: !22, line: 53, type: !3107)
!4947 = !DILocalVariable(name: "f", arg: 2, scope: !4944, file: !22, line: 53, type: !140)
!4948 = !DILocalVariable(name: "fmt", arg: 3, scope: !4944, file: !22, line: 53, type: !72)
!4949 = !DILocalVariable(name: "prec", arg: 4, scope: !4944, file: !22, line: 53, type: !30)
!4950 = !DILocalVariable(name: "bitSize", arg: 5, scope: !4944, file: !22, line: 53, type: !30)
!4951 = distinct !DILocation(line: 496, column: 28, scope: !4952, inlinedAt: !4968)
!4952 = distinct !DISubprogram(name: "(*fmt.fmt).fmtFloat", linkageName: "(*fmt.fmt).fmtFloat", scope: !4820, file: !4820, line: 490, type: !4953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!4861, !140, !30, !295, !30}
!4955 = !{!4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967}
!4956 = !DILocalVariable(name: "f", arg: 1, scope: !4952, file: !4820, line: 490, type: !4861)
!4957 = !DILocalVariable(name: "v", arg: 2, scope: !4952, file: !4820, line: 490, type: !140)
!4958 = !DILocalVariable(name: "size", arg: 3, scope: !4952, file: !4820, line: 490, type: !30)
!4959 = !DILocalVariable(name: "verb", arg: 4, scope: !4952, file: !4820, line: 490, type: !295)
!4960 = !DILocalVariable(name: "prec", arg: 5, scope: !4952, file: !4820, line: 490, type: !30)
!4961 = !DILocalVariable(name: "num", scope: !4952, file: !4820, line: 496, type: !3107)
!4962 = !DILocalVariable(name: "oldZero", scope: !4952, file: !4820, line: 510, type: !44)
!4963 = !DILocalVariable(name: "zero", scope: !4952, file: !4820, line: 30, type: !44)
!4964 = !DILocalVariable(name: "digits", scope: !4952, file: !4820, line: 523, type: !30)
!4965 = !DILocalVariable(name: "tail", scope: !4952, file: !4820, line: 536, type: !3107)
!4966 = !DILocalVariable(name: "hasDecimalPoint", scope: !4952, file: !4820, line: 538, type: !44)
!4967 = !DILocalVariable(name: "i", scope: !4952, file: !4820, line: 540, type: !30)
!4968 = distinct !DILocation(line: 408, column: 17, scope: !4903)
!4969 = !DILocation(line: 348, column: 20, scope: !4970, inlinedAt: !4999)
!4970 = distinct !DISubprogram(name: "(*strconv.extFloat).FixedDecimal", linkageName: "(*strconv.extFloat).FixedDecimal", scope: !35, file: !35, line: 348, type: !4971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !4973)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!4198, !3559, !30}
!4973 = !{!4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4998}
!4974 = !DILocalVariable(name: "f", arg: 1, scope: !4970, file: !35, line: 348, type: !4198)
!4975 = !DILocalVariable(name: "d", arg: 2, scope: !4970, file: !35, line: 348, type: !3559)
!4976 = !DILocalVariable(name: "n", arg: 3, scope: !4970, file: !35, line: 348, type: !30)
!4977 = !DILocalVariable(name: "nd", scope: !4970, file: !22, line: 373, type: !30)
!4978 = !DILocalVariable(name: "dp", scope: !4970, file: !22, line: 373, type: !30)
!4979 = !DILocalVariable(name: "neg", scope: !4970, file: !22, line: 374, type: !44)
!4980 = !DILocalVariable(name: "exp10", scope: !4970, file: !35, line: 361, type: !30)
!4981 = !DILocalVariable(name: "shift", scope: !4970, file: !35, line: 363, type: !27)
!4982 = !DILocalVariable(name: "integer", scope: !4970, file: !35, line: 364, type: !290)
!4983 = !DILocalVariable(name: "fraction", scope: !4970, file: !35, line: 365, type: !41)
!4984 = !DILocalVariable(name: "\CE\B5", scope: !4970, file: !35, line: 366, type: !41)
!4985 = !DILocalVariable(name: "needed", scope: !4970, file: !35, line: 369, type: !30)
!4986 = !DILocalVariable(name: "integerDigits", scope: !4970, file: !35, line: 370, type: !30)
!4987 = !DILocalVariable(name: "pow10", scope: !4970, file: !35, line: 371, type: !41)
!4988 = !DILocalVariable(name: "i", scope: !4970, file: !35, line: 372, type: !30)
!4989 = !DILocalVariable(name: "pow", scope: !4970, file: !35, line: 372, type: !41)
!4990 = !DILocalVariable(name: "rest", scope: !4970, file: !35, line: 379, type: !290)
!4991 = !DILocalVariable(name: "pos", scope: !4970, file: !35, line: 391, type: !30)
!4992 = !DILocalVariable(name: "v", scope: !4970, file: !35, line: 392, type: !290)
!4993 = !DILocalVariable(name: "v1", scope: !4970, file: !35, line: 393, type: !290)
!4994 = !DILocalVariable(name: "i", scope: !4970, file: !35, line: 399, type: !30)
!4995 = !DILocalVariable(name: "nd", scope: !4970, file: !35, line: 402, type: !30)
!4996 = !DILocalVariable(name: "digit", scope: !4970, file: !35, line: 420, type: !41)
!4997 = !DILocalVariable(name: "ok", scope: !4970, file: !35, line: 444, type: !44)
!4998 = !DILocalVariable(name: "i", scope: !4970, file: !35, line: 449, type: !30)
!4999 = distinct !DILocation(line: 151, column: 23, scope: !4919, inlinedAt: !4943)
!5000 = !DILocation(line: 502, column: 20, scope: !5001, inlinedAt: !5034)
!5001 = distinct !DISubprogram(name: "(*strconv.extFloat).ShortestDecimal", linkageName: "(*strconv.extFloat).ShortestDecimal", scope: !35, file: !35, line: 502, type: !5002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5004)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!4198, !3559, !4198, !4198}
!5004 = !{!5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033}
!5005 = !DILocalVariable(name: "f", arg: 1, scope: !5001, file: !35, line: 502, type: !4198)
!5006 = !DILocalVariable(name: "d", arg: 2, scope: !5001, file: !35, line: 502, type: !3559)
!5007 = !DILocalVariable(name: "lower", arg: 3, scope: !5001, file: !35, line: 502, type: !4198)
!5008 = !DILocalVariable(name: "upper", arg: 4, scope: !5001, file: !35, line: 502, type: !4198)
!5009 = !DILocalVariable(name: "nd", scope: !5001, file: !22, line: 373, type: !30)
!5010 = !DILocalVariable(name: "dp", scope: !5001, file: !22, line: 373, type: !30)
!5011 = !DILocalVariable(name: "neg", scope: !5001, file: !22, line: 374, type: !44)
!5012 = !DILocalVariable(name: "n", scope: !5001, file: !35, line: 512, type: !30)
!5013 = !DILocalVariable(name: "v", scope: !5001, file: !35, line: 513, type: !41)
!5014 = !DILocalVariable(name: "v1", scope: !5001, file: !35, line: 514, type: !41)
!5015 = !DILocalVariable(name: "nd", scope: !5001, file: !35, line: 520, type: !30)
!5016 = !DILocalVariable(name: "i", scope: !5001, file: !35, line: 521, type: !30)
!5017 = !DILocalVariable(name: "mant", scope: !5001, file: !35, line: 16, type: !41)
!5018 = !DILocalVariable(name: "exp", scope: !5001, file: !35, line: 17, type: !30)
!5019 = !DILocalVariable(name: "exp10", scope: !5001, file: !35, line: 545, type: !30)
!5020 = !DILocalVariable(name: "shift", scope: !5001, file: !35, line: 552, type: !27)
!5021 = !DILocalVariable(name: "integer", scope: !5001, file: !35, line: 553, type: !290)
!5022 = !DILocalVariable(name: "fraction", scope: !5001, file: !35, line: 554, type: !41)
!5023 = !DILocalVariable(name: "allowance", scope: !5001, file: !35, line: 557, type: !41)
!5024 = !DILocalVariable(name: "targetDiff", scope: !5001, file: !35, line: 559, type: !41)
!5025 = !DILocalVariable(name: "integerDigits", scope: !5001, file: !35, line: 562, type: !30)
!5026 = !DILocalVariable(name: "i", scope: !5001, file: !35, line: 563, type: !30)
!5027 = !DILocalVariable(name: "pow", scope: !5001, file: !35, line: 563, type: !41)
!5028 = !DILocalVariable(name: "i", scope: !5001, file: !35, line: 570, type: !30)
!5029 = !DILocalVariable(name: "pow", scope: !5001, file: !35, line: 571, type: !41)
!5030 = !DILocalVariable(name: "digit", scope: !5001, file: !35, line: 572, type: !290)
!5031 = !DILocalVariable(name: "currentDiff", scope: !5001, file: !35, line: 576, type: !41)
!5032 = !DILocalVariable(name: "digit", scope: !5001, file: !35, line: 591, type: !30)
!5033 = !DILocalVariable(name: "multiplier", scope: !5001, file: !35, line: 592, type: !41)
!5034 = distinct !DILocation(line: 121, column: 25, scope: !4919, inlinedAt: !4943)
!5035 = !DILocation(line: 180, column: 20, scope: !5036, inlinedAt: !5049)
!5036 = distinct !DISubprogram(name: "(*strconv.extFloat).AssignComputeBounds", linkageName: "(*strconv.extFloat).AssignComputeBounds", scope: !35, file: !35, line: 180, type: !5037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5039)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{!4198, !41, !30, !44, !3624}
!5039 = !{!5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5048}
!5040 = !DILocalVariable(name: "f", arg: 1, scope: !5036, file: !35, line: 180, type: !4198)
!5041 = !DILocalVariable(name: "mant", arg: 2, scope: !5036, file: !35, line: 180, type: !41)
!5042 = !DILocalVariable(name: "exp", arg: 3, scope: !5036, file: !35, line: 180, type: !30)
!5043 = !DILocalVariable(name: "neg", arg: 4, scope: !5036, file: !35, line: 180, type: !44)
!5044 = !DILocalVariable(name: "flt", arg: 5, scope: !5036, file: !35, line: 180, type: !3624)
!5045 = !DILocalVariable(name: "mant", scope: !5036, file: !35, line: 16, type: !41)
!5046 = !DILocalVariable(name: "exp", scope: !5036, file: !35, line: 17, type: !30)
!5047 = !DILocalVariable(name: "neg", scope: !5036, file: !35, line: 18, type: !44)
!5048 = !DILocalVariable(name: "expBiased", scope: !5036, file: !35, line: 190, type: !30)
!5049 = distinct !DILocation(line: 118, column: 40, scope: !4919, inlinedAt: !4943)
!5050 = !DILocation(line: 12, column: 6, scope: !5051, inlinedAt: !5056)
!5051 = distinct !DISubprogram(name: "math.Float32bits", linkageName: "math.Float32bits", scope: !4913, file: !4913, line: 12, type: !5052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5054)
!5052 = !DISubroutineType(types: !5053)
!5053 = !{!1393}
!5054 = !{!5055}
!5055 = !DILocalVariable(name: "f", arg: 1, scope: !5051, file: !4913, line: 12, type: !1393)
!5056 = distinct !DILocation(line: 62, column: 33, scope: !4919, inlinedAt: !4943)
!5057 = !DILocation(line: 57, column: 6, scope: !4919, inlinedAt: !4943)
!5058 = !DILocation(line: 490, column: 15, scope: !4952, inlinedAt: !4968)
!5059 = !DILocation(line: 405, column: 14, scope: !4903)
!5060 = !DILocation(line: 406, column: 9, scope: !4903)
!5061 = !DILocation(line: 408, column: 3, scope: !4903)
!5062 = !DILocation(line: 408, column: 5, scope: !4903)
!5063 = !DILocation(line: 408, column: 18, scope: !4903)
!5064 = !DILocation(line: 408, column: 21, scope: !4903)
!5065 = !DILocation(line: 492, column: 5, scope: !4952, inlinedAt: !4968)
!5066 = !DILocation(line: 492, column: 7, scope: !4952, inlinedAt: !4968)
!5067 = !DILocation(line: 0, scope: !4952, inlinedAt: !4968)
!5068 = !DILocation(line: 498, column: 9, scope: !4952, inlinedAt: !4968)
!5069 = !DILocation(line: 498, column: 12, scope: !4952, inlinedAt: !4968)
!5070 = !DILocation(line: 504, column: 5, scope: !4952, inlinedAt: !4968)
!5071 = !DILocation(line: 496, column: 2, scope: !4952, inlinedAt: !4968)
!5072 = !DILocation(line: 504, column: 7, scope: !4952, inlinedAt: !4968)
!5073 = !DILocation(line: 504, column: 16, scope: !4952, inlinedAt: !4968)
!5074 = !DILocation(line: 504, column: 19, scope: !4952, inlinedAt: !4968)
!5075 = !DILocation(line: 509, column: 5, scope: !4952, inlinedAt: !4968)
!5076 = !DILocation(line: 509, column: 8, scope: !4952, inlinedAt: !4968)
!5077 = !DILocation(line: 514, column: 10, scope: !4952, inlinedAt: !4968)
!5078 = !DILocation(line: 514, column: 13, scope: !4952, inlinedAt: !4968)
!5079 = !DILocation(line: 516, column: 8, scope: !4952, inlinedAt: !4968)
!5080 = !DILocation(line: 516, column: 3, scope: !4952, inlinedAt: !4968)
!5081 = !DILocation(line: 516, column: 9, scope: !4952, inlinedAt: !4968)
!5082 = !DILocation(line: 517, column: 12, scope: !4952, inlinedAt: !4968)
!5083 = !DILocation(line: 517, column: 5, scope: !4952, inlinedAt: !4968)
!5084 = !DILocation(line: 518, column: 3, scope: !4952, inlinedAt: !4968)
!5085 = !DILocation(line: 523, column: 3, scope: !4952, inlinedAt: !4968)
!5086 = !DILocation(line: 524, column: 10, scope: !4952, inlinedAt: !4968)
!5087 = !DILocation(line: 526, column: 13, scope: !4952, inlinedAt: !4968)
!5088 = !DILocation(line: 526, column: 4, scope: !4952, inlinedAt: !4968)
!5089 = !DILocation(line: 528, column: 7, scope: !4952, inlinedAt: !4968)
!5090 = !DILocation(line: 528, column: 14, scope: !4952, inlinedAt: !4968)
!5091 = !DILocation(line: 535, column: 7, scope: !4952, inlinedAt: !4968)
!5092 = !DILocation(line: 536, column: 18, scope: !4952, inlinedAt: !4968)
!5093 = !DILocation(line: 536, column: 3, scope: !4952, inlinedAt: !4968)
!5094 = !DILocation(line: 538, column: 3, scope: !4952, inlinedAt: !4968)
!5095 = !DILocation(line: 540, column: 7, scope: !4952, inlinedAt: !4968)
!5096 = !DILocation(line: 540, column: 15, scope: !4952, inlinedAt: !4968)
!5097 = !DILocation(line: 540, column: 23, scope: !4952, inlinedAt: !4968)
!5098 = !DILocation(line: 540, column: 22, scope: !4952, inlinedAt: !4968)
!5099 = !DILocation(line: 540, column: 17, scope: !4952, inlinedAt: !4968)
!5100 = !DILocation(line: 541, column: 11, scope: !4952, inlinedAt: !4968)
!5101 = !DILocation(line: 541, column: 15, scope: !4952, inlinedAt: !4968)
!5102 = !DILocation(line: 541, column: 14, scope: !4952, inlinedAt: !4968)
!5103 = !DILocation(line: 540, column: 29, scope: !4952, inlinedAt: !4968)
!5104 = !DILocation(line: 545, column: 19, scope: !4952, inlinedAt: !4968)
!5105 = !DILocation(line: 545, column: 25, scope: !4952, inlinedAt: !4968)
!5106 = !DILocation(line: 545, column: 29, scope: !4952, inlinedAt: !4968)
!5107 = !DILocation(line: 545, column: 28, scope: !4952, inlinedAt: !4968)
!5108 = !DILocation(line: 549, column: 20, scope: !4952, inlinedAt: !4968)
!5109 = !DILocation(line: 549, column: 26, scope: !4952, inlinedAt: !4968)
!5110 = !DILocation(line: 549, column: 30, scope: !4952, inlinedAt: !4968)
!5111 = !DILocation(line: 549, column: 29, scope: !4952, inlinedAt: !4968)
!5112 = !DILocation(line: 555, column: 5, scope: !4952, inlinedAt: !4968)
!5113 = !DILocation(line: 558, column: 7, scope: !4952, inlinedAt: !4968)
!5114 = !DILocation(line: 561, column: 7, scope: !4952, inlinedAt: !4968)
!5115 = !DILocation(line: 561, column: 14, scope: !4952, inlinedAt: !4968)
!5116 = !DILocation(line: 562, column: 17, scope: !4952, inlinedAt: !4968)
!5117 = !DILocation(line: 565, column: 16, scope: !4952, inlinedAt: !4968)
!5118 = !DILocation(line: 562, column: 25, scope: !4952, inlinedAt: !4968)
!5119 = !DILocation(line: 562, column: 16, scope: !4952, inlinedAt: !4968)
!5120 = !DILocation(line: 562, column: 4, scope: !4952, inlinedAt: !4968)
!5121 = !DILocation(line: 563, column: 4, scope: !4952, inlinedAt: !4968)
!5122 = !DILocation(line: 565, column: 21, scope: !4952, inlinedAt: !4968)
!5123 = !DILocation(line: 565, column: 15, scope: !4952, inlinedAt: !4968)
!5124 = !DILocation(line: 565, column: 3, scope: !4952, inlinedAt: !4968)
!5125 = !DILocation(line: 559, column: 17, scope: !4952, inlinedAt: !4968)
!5126 = !DILocation(line: 559, column: 25, scope: !4952, inlinedAt: !4968)
!5127 = !DILocation(line: 559, column: 16, scope: !4952, inlinedAt: !4968)
!5128 = !DILocation(line: 559, column: 4, scope: !4952, inlinedAt: !4968)
!5129 = !DILocation(line: 568, column: 5, scope: !4952, inlinedAt: !4968)
!5130 = !DILocation(line: 568, column: 7, scope: !4952, inlinedAt: !4968)
!5131 = !DILocation(line: 577, column: 3, scope: !4952, inlinedAt: !4968)
!5132 = !DILocation(line: 577, column: 9, scope: !4952, inlinedAt: !4968)
!5133 = !DILocation(line: 577, column: 8, scope: !4952, inlinedAt: !4968)
!5134 = !DILocation(line: 578, column: 3, scope: !4952, inlinedAt: !4968)
!5135 = !DILocation(line: 568, column: 15, scope: !4952, inlinedAt: !4968)
!5136 = !DILocation(line: 568, column: 18, scope: !4952, inlinedAt: !4968)
!5137 = !DILocation(line: 581, column: 2, scope: !4952, inlinedAt: !4968)
!5138 = !DILocation(line: 581, column: 8, scope: !4952, inlinedAt: !4968)
!5139 = !DILocation(line: 581, column: 11, scope: !4952, inlinedAt: !4968)
!5140 = !DILocation(line: 493, column: 10, scope: !4952, inlinedAt: !4968)
!5141 = !DILocation(line: 493, column: 12, scope: !4952, inlinedAt: !4968)
!5142 = !DILocation(line: 493, column: 3, scope: !4952, inlinedAt: !4968)
!5143 = !DILocation(line: 490, column: 56, scope: !4952, inlinedAt: !4968)
!5144 = !DILocation(line: 496, column: 29, scope: !4952, inlinedAt: !4968)
!5145 = !DILocation(line: 496, column: 37, scope: !4952, inlinedAt: !4968)
!5146 = !DILocation(line: 496, column: 43, scope: !4952, inlinedAt: !4968)
!5147 = !DILocation(line: 496, column: 51, scope: !4952, inlinedAt: !4968)
!5148 = !DILocation(line: 496, column: 58, scope: !4952, inlinedAt: !4968)
!5149 = !DILocation(line: 496, column: 64, scope: !4952, inlinedAt: !4968)
!5150 = !DILocation(line: 53, column: 6, scope: !4944, inlinedAt: !4951)
!5151 = !DILocation(line: 54, column: 21, scope: !4944, inlinedAt: !4951)
!5152 = !DILocation(line: 54, column: 26, scope: !4944, inlinedAt: !4951)
!5153 = !DILocation(line: 54, column: 29, scope: !4944, inlinedAt: !4951)
!5154 = !DILocation(line: 54, column: 34, scope: !4944, inlinedAt: !4951)
!5155 = !DILocation(line: 54, column: 40, scope: !4944, inlinedAt: !4951)
!5156 = !DILocation(line: 58, column: 6, scope: !4919, inlinedAt: !4943)
!5157 = !DILocation(line: 59, column: 6, scope: !4919, inlinedAt: !4943)
!5158 = !DILocation(line: 60, column: 9, scope: !4919, inlinedAt: !4943)
!5159 = !DILocation(line: 0, scope: !4919, inlinedAt: !4943)
!5160 = !DILocation(line: 62, column: 42, scope: !4919, inlinedAt: !4943)
!5161 = !DILocation(line: 62, column: 41, scope: !4919, inlinedAt: !4943)
!5162 = !DILocation(line: 12, column: 18, scope: !5051, inlinedAt: !5056)
!5163 = !DILocation(line: 0, scope: !5051, inlinedAt: !5056)
!5164 = !DILocation(line: 12, column: 45, scope: !5051, inlinedAt: !5056)
!5165 = !DILocation(line: 12, column: 38, scope: !5051, inlinedAt: !5056)
!5166 = !DILocation(line: 62, column: 16, scope: !4919, inlinedAt: !4943)
!5167 = !DILocation(line: 62, column: 3, scope: !4919, inlinedAt: !4943)
!5168 = !DILocation(line: 63, column: 3, scope: !4919, inlinedAt: !4943)
!5169 = !DILocation(line: 71, column: 9, scope: !4919, inlinedAt: !4943)
!5170 = !DILocation(line: 71, column: 16, scope: !4919, inlinedAt: !4943)
!5171 = !DILocation(line: 71, column: 20, scope: !4919, inlinedAt: !4943)
!5172 = !DILocation(line: 71, column: 32, scope: !4919, inlinedAt: !4943)
!5173 = !DILocation(line: 71, column: 27, scope: !4919, inlinedAt: !4943)
!5174 = !DILocation(line: 71, column: 13, scope: !4919, inlinedAt: !4943)
!5175 = !DILocation(line: 71, column: 42, scope: !4919, inlinedAt: !4943)
!5176 = !DILocation(line: 71, column: 2, scope: !4919, inlinedAt: !4943)
!5177 = !DILocation(line: 72, column: 17, scope: !4919, inlinedAt: !4943)
!5178 = !DILocation(line: 72, column: 12, scope: !4919, inlinedAt: !4943)
!5179 = !DILocation(line: 72, column: 37, scope: !4919, inlinedAt: !4943)
!5180 = !DILocation(line: 72, column: 51, scope: !4919, inlinedAt: !4943)
!5181 = !DILocation(line: 72, column: 33, scope: !4919, inlinedAt: !4943)
!5182 = !DILocation(line: 72, column: 2, scope: !4919, inlinedAt: !4943)
!5183 = !DILocation(line: 73, column: 27, scope: !4919, inlinedAt: !4943)
!5184 = !DILocation(line: 73, column: 42, scope: !4919, inlinedAt: !4943)
!5185 = !DILocation(line: 73, column: 15, scope: !4919, inlinedAt: !4943)
!5186 = !DILocation(line: 73, column: 2, scope: !4919, inlinedAt: !4943)
!5187 = !DILocation(line: 80, column: 8, scope: !4919, inlinedAt: !4943)
!5188 = !DILocation(line: 80, column: 13, scope: !4919, inlinedAt: !4943)
!5189 = !DILocation(line: 87, column: 17, scope: !4919, inlinedAt: !4943)
!5190 = !DILocation(line: 87, column: 22, scope: !4919, inlinedAt: !4943)
!5191 = !DILocation(line: 87, column: 16, scope: !4919, inlinedAt: !4943)
!5192 = !DILocation(line: 87, column: 3, scope: !4919, inlinedAt: !4943)
!5193 = !DILocation(line: 97, column: 9, scope: !4919, inlinedAt: !4943)
!5194 = !DILocation(line: 97, column: 13, scope: !4919, inlinedAt: !4943)
!5195 = !DILocation(line: 97, column: 2, scope: !4919, inlinedAt: !4943)
!5196 = !DILocation(line: 100, column: 5, scope: !4919, inlinedAt: !4943)
!5197 = !DILocation(line: 107, column: 6, scope: !4919, inlinedAt: !4943)
!5198 = !DILocation(line: 111, column: 6, scope: !4919, inlinedAt: !4943)
!5199 = !DILocation(line: 112, column: 2, scope: !4919, inlinedAt: !4943)
!5200 = !DILocation(line: 114, column: 14, scope: !4919, inlinedAt: !4943)
!5201 = !DILocation(line: 114, column: 19, scope: !4919, inlinedAt: !4943)
!5202 = !DILocation(line: 115, column: 5, scope: !4919, inlinedAt: !4943)
!5203 = !DILocation(line: 117, column: 11, scope: !4919, inlinedAt: !4943)
!5204 = !DILocation(line: 117, column: 3, scope: !4919, inlinedAt: !4943)
!5205 = !DILocation(line: 118, column: 3, scope: !4919, inlinedAt: !4943)
!5206 = !DILocation(line: 118, column: 10, scope: !4919, inlinedAt: !4943)
!5207 = !DILocation(line: 118, column: 41, scope: !4919, inlinedAt: !4943)
!5208 = !DILocation(line: 118, column: 47, scope: !4919, inlinedAt: !4943)
!5209 = !DILocation(line: 118, column: 52, scope: !4919, inlinedAt: !4943)
!5210 = !DILocation(line: 118, column: 57, scope: !4919, inlinedAt: !4943)
!5211 = !DILocation(line: 181, column: 2, scope: !5036, inlinedAt: !5049)
!5212 = !DILocation(line: 181, column: 4, scope: !5036, inlinedAt: !5049)
!5213 = !DILocation(line: 181, column: 11, scope: !5036, inlinedAt: !5049)
!5214 = !DILocation(line: 182, column: 2, scope: !5036, inlinedAt: !5049)
!5215 = !DILocation(line: 182, column: 10, scope: !5036, inlinedAt: !5049)
!5216 = !DILocation(line: 182, column: 20, scope: !5036, inlinedAt: !5049)
!5217 = !DILocation(line: 182, column: 24, scope: !5036, inlinedAt: !5049)
!5218 = !DILocation(line: 182, column: 14, scope: !5036, inlinedAt: !5049)
!5219 = !DILocation(line: 182, column: 4, scope: !5036, inlinedAt: !5049)
!5220 = !DILocation(line: 183, column: 2, scope: !5036, inlinedAt: !5049)
!5221 = !DILocation(line: 183, column: 10, scope: !5036, inlinedAt: !5049)
!5222 = !DILocation(line: 183, column: 4, scope: !5036, inlinedAt: !5049)
!5223 = !DILocation(line: 184, column: 11, scope: !5036, inlinedAt: !5049)
!5224 = !DILocation(line: 0, scope: !5036, inlinedAt: !5049)
!5225 = !DILocation(line: 184, column: 28, scope: !5036, inlinedAt: !5049)
!5226 = !DILocation(line: 184, column: 40, scope: !5036, inlinedAt: !5049)
!5227 = !DILocation(line: 184, column: 39, scope: !5036, inlinedAt: !5049)
!5228 = !DILocation(line: 184, column: 32, scope: !5036, inlinedAt: !5049)
!5229 = !DILocation(line: 184, column: 47, scope: !5036, inlinedAt: !5049)
!5230 = !DILocation(line: 184, column: 24, scope: !5036, inlinedAt: !5049)
!5231 = !DILocation(line: 186, column: 20, scope: !5036, inlinedAt: !5049)
!5232 = !DILocation(line: 186, column: 3, scope: !5036, inlinedAt: !5049)
!5233 = !DILocation(line: 186, column: 5, scope: !5036, inlinedAt: !5049)
!5234 = !DILocation(line: 187, column: 5, scope: !5036, inlinedAt: !5049)
!5235 = !DILocation(line: 188, column: 10, scope: !5036, inlinedAt: !5049)
!5236 = !DILocation(line: 188, column: 3, scope: !5036, inlinedAt: !5049)
!5237 = !DILocation(line: 190, column: 15, scope: !5036, inlinedAt: !5049)
!5238 = !DILocation(line: 190, column: 21, scope: !5036, inlinedAt: !5049)
!5239 = !DILocation(line: 190, column: 25, scope: !5036, inlinedAt: !5049)
!5240 = !DILocation(line: 190, column: 19, scope: !5036, inlinedAt: !5049)
!5241 = !DILocation(line: 190, column: 2, scope: !5036, inlinedAt: !5049)
!5242 = !DILocation(line: 192, column: 27, scope: !5036, inlinedAt: !5049)
!5243 = !DILocation(line: 192, column: 26, scope: !5036, inlinedAt: !5049)
!5244 = !DILocation(line: 192, column: 34, scope: !5036, inlinedAt: !5049)
!5245 = !DILocation(line: 192, column: 50, scope: !5036, inlinedAt: !5049)
!5246 = !DILocation(line: 193, column: 5, scope: !5036, inlinedAt: !5049)
!5247 = !DILocation(line: 193, column: 14, scope: !5036, inlinedAt: !5049)
!5248 = !DILocation(line: 193, column: 10, scope: !5036, inlinedAt: !5049)
!5249 = !DILocation(line: 198, column: 2, scope: !5036, inlinedAt: !5049)
!5250 = !DILocation(line: 503, column: 7, scope: !5001, inlinedAt: !5034)
!5251 = !DILocation(line: 119, column: 7, scope: !4919, inlinedAt: !4943)
!5252 = !DILocation(line: 120, column: 8, scope: !4919, inlinedAt: !4943)
!5253 = !DILocation(line: 503, column: 5, scope: !5001, inlinedAt: !5034)
!5254 = !DILocation(line: 503, column: 12, scope: !5001, inlinedAt: !5034)
!5255 = !DILocation(line: 0, scope: !5001, inlinedAt: !5034)
!5256 = !DILocation(line: 504, column: 3, scope: !5001, inlinedAt: !5034)
!5257 = !DILocation(line: 504, column: 5, scope: !5001, inlinedAt: !5034)
!5258 = !DILocation(line: 505, column: 3, scope: !5001, inlinedAt: !5034)
!5259 = !DILocation(line: 505, column: 5, scope: !5001, inlinedAt: !5034)
!5260 = !DILocation(line: 506, column: 5, scope: !5001, inlinedAt: !5034)
!5261 = !DILocation(line: 506, column: 11, scope: !5001, inlinedAt: !5034)
!5262 = !DILocation(line: 507, column: 3, scope: !5001, inlinedAt: !5034)
!5263 = !DILocation(line: 509, column: 20, scope: !5001, inlinedAt: !5034)
!5264 = !DILocation(line: 509, column: 30, scope: !5001, inlinedAt: !5034)
!5265 = !DILocation(line: 509, column: 26, scope: !5001, inlinedAt: !5034)
!5266 = !DILocation(line: 512, column: 3, scope: !5001, inlinedAt: !5034)
!5267 = !DILocation(line: 513, column: 12, scope: !5001, inlinedAt: !5034)
!5268 = !DILocation(line: 513, column: 7, scope: !5001, inlinedAt: !5034)
!5269 = !DILocation(line: 513, column: 20, scope: !5001, inlinedAt: !5034)
!5270 = !DILocation(line: 513, column: 22, scope: !5001, inlinedAt: !5034)
!5271 = !DILocation(line: 514, column: 10, scope: !5001, inlinedAt: !5034)
!5272 = !DILocation(line: 514, column: 12, scope: !5001, inlinedAt: !5034)
!5273 = !DILocation(line: 515, column: 14, scope: !5001, inlinedAt: !5034)
!5274 = !DILocation(line: 515, column: 4, scope: !5001, inlinedAt: !5034)
!5275 = !DILocation(line: 516, column: 8, scope: !5001, inlinedAt: !5034)
!5276 = !DILocation(line: 516, column: 7, scope: !5001, inlinedAt: !5034)
!5277 = !DILocation(line: 520, column: 20, scope: !5001, inlinedAt: !5034)
!5278 = !DILocation(line: 520, column: 22, scope: !5001, inlinedAt: !5034)
!5279 = !DILocation(line: 520, column: 3, scope: !5001, inlinedAt: !5034)
!5280 = !DILocation(line: 521, column: 7, scope: !5001, inlinedAt: !5034)
!5281 = !DILocation(line: 521, column: 15, scope: !5001, inlinedAt: !5034)
!5282 = !DILocation(line: 521, column: 19, scope: !5001, inlinedAt: !5034)
!5283 = !DILocation(line: 522, column: 4, scope: !5001, inlinedAt: !5034)
!5284 = !DILocation(line: 524, column: 3, scope: !5001, inlinedAt: !5034)
!5285 = !DILocation(line: 521, column: 17, scope: !5001, inlinedAt: !5034)
!5286 = !DILocation(line: 522, column: 6, scope: !5001, inlinedAt: !5034)
!5287 = !DILocation(line: 522, column: 8, scope: !5001, inlinedAt: !5034)
!5288 = !DILocation(line: 522, column: 7, scope: !5001, inlinedAt: !5034)
!5289 = !DILocation(line: 524, column: 5, scope: !5001, inlinedAt: !5034)
!5290 = !DILocation(line: 524, column: 9, scope: !5001, inlinedAt: !5034)
!5291 = !DILocation(line: 524, column: 11, scope: !5001, inlinedAt: !5034)
!5292 = !DILocation(line: 524, column: 20, scope: !5001, inlinedAt: !5034)
!5293 = !DILocation(line: 525, column: 9, scope: !5001, inlinedAt: !5034)
!5294 = !DILocation(line: 525, column: 7, scope: !5001, inlinedAt: !5034)
!5295 = !DILocation(line: 525, column: 12, scope: !5001, inlinedAt: !5034)
!5296 = !DILocation(line: 525, column: 19, scope: !5001, inlinedAt: !5034)
!5297 = !DILocation(line: 528, column: 6, scope: !5001, inlinedAt: !5034)
!5298 = !DILocation(line: 540, column: 5, scope: !5001, inlinedAt: !5034)
!5299 = !DILocation(line: 540, column: 17, scope: !5001, inlinedAt: !5034)
!5300 = !DILocation(line: 540, column: 15, scope: !5001, inlinedAt: !5034)
!5301 = !DILocation(line: 545, column: 23, scope: !5001, inlinedAt: !5034)
!5302 = !DILocation(line: 545, column: 30, scope: !5001, inlinedAt: !5034)
!5303 = !DILocation(line: 545, column: 33, scope: !5001, inlinedAt: !5034)
!5304 = !DILocalVariable(name: "a", arg: 1, scope: !5305, file: !35, line: 338, type: !4198)
!5305 = distinct !DISubprogram(name: "strconv.frexp10Many", linkageName: "strconv.frexp10Many", scope: !35, file: !35, line: 338, type: !5306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5308)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!4198, !4198, !4198}
!5308 = !{!5304, !5309, !5310, !5311, !5312}
!5309 = !DILocalVariable(name: "b", arg: 2, scope: !5305, file: !35, line: 338, type: !4198)
!5310 = !DILocalVariable(name: "c", arg: 3, scope: !5305, file: !35, line: 338, type: !4198)
!5311 = !DILocalVariable(name: "exp10", scope: !5305, file: !35, line: 338, type: !30)
!5312 = !DILocalVariable(name: "i", scope: !5305, file: !35, line: 339, type: !30)
!5313 = !DILocation(line: 338, column: 6, scope: !5305, inlinedAt: !5314)
!5314 = distinct !DILocation(line: 545, column: 22, scope: !5001, inlinedAt: !5034)
!5315 = !DILocation(line: 339, column: 14, scope: !5305, inlinedAt: !5314)
!5316 = !DILocation(line: 339, column: 23, scope: !5305, inlinedAt: !5314)
!5317 = !DILocation(line: 339, column: 2, scope: !5305, inlinedAt: !5314)
!5318 = !DILocation(line: 340, column: 25, scope: !5305, inlinedAt: !5314)
!5319 = !DILocation(line: 0, scope: !5305, inlinedAt: !5314)
!5320 = !DILocation(line: 339, column: 9, scope: !5305, inlinedAt: !5314)
!5321 = !DILocation(line: 340, column: 24, scope: !5305, inlinedAt: !5314)
!5322 = !DILocation(line: 340, column: 12, scope: !5305, inlinedAt: !5314)
!5323 = !DILocation(line: 341, column: 25, scope: !5305, inlinedAt: !5314)
!5324 = !DILocation(line: 341, column: 12, scope: !5305, inlinedAt: !5314)
!5325 = !DILocation(line: 545, column: 2, scope: !5001, inlinedAt: !5034)
!5326 = !DILocation(line: 547, column: 8, scope: !5001, inlinedAt: !5034)
!5327 = !DILocation(line: 547, column: 2, scope: !5001, inlinedAt: !5034)
!5328 = !DILocation(line: 548, column: 8, scope: !5001, inlinedAt: !5034)
!5329 = !DILocation(line: 548, column: 2, scope: !5001, inlinedAt: !5034)
!5330 = !DILocation(line: 552, column: 23, scope: !5001, inlinedAt: !5034)
!5331 = !DILocation(line: 552, column: 16, scope: !5001, inlinedAt: !5034)
!5332 = !DILocation(line: 552, column: 2, scope: !5001, inlinedAt: !5034)
!5333 = !DILocation(line: 553, column: 31, scope: !5001, inlinedAt: !5034)
!5334 = !DILocation(line: 553, column: 19, scope: !5001, inlinedAt: !5034)
!5335 = !DILocation(line: 554, column: 35, scope: !5001, inlinedAt: !5034)
!5336 = !DILocation(line: 554, column: 34, scope: !5001, inlinedAt: !5034)
!5337 = !DILocation(line: 554, column: 44, scope: !5001, inlinedAt: !5034)
!5338 = !DILocation(line: 554, column: 25, scope: !5001, inlinedAt: !5034)
!5339 = !DILocation(line: 554, column: 2, scope: !5001, inlinedAt: !5034)
!5340 = !DILocation(line: 557, column: 26, scope: !5001, inlinedAt: !5034)
!5341 = !DILocation(line: 557, column: 2, scope: !5001, inlinedAt: !5034)
!5342 = !DILocation(line: 559, column: 31, scope: !5001, inlinedAt: !5034)
!5343 = !DILocation(line: 559, column: 27, scope: !5001, inlinedAt: !5034)
!5344 = !DILocation(line: 559, column: 2, scope: !5001, inlinedAt: !5034)
!5345 = !DILocation(line: 562, column: 6, scope: !5001, inlinedAt: !5034)
!5346 = !DILocation(line: 563, column: 6, scope: !5001, inlinedAt: !5034)
!5347 = !DILocation(line: 563, column: 9, scope: !5001, inlinedAt: !5034)
!5348 = !DILocation(line: 563, column: 30, scope: !5001, inlinedAt: !5034)
!5349 = !DILocation(line: 563, column: 32, scope: !5001, inlinedAt: !5034)
!5350 = !DILocation(line: 564, column: 6, scope: !5001, inlinedAt: !5034)
!5351 = !DILocation(line: 564, column: 19, scope: !5001, inlinedAt: !5034)
!5352 = !DILocation(line: 564, column: 10, scope: !5001, inlinedAt: !5034)
!5353 = !DILocation(line: 568, column: 3, scope: !5001, inlinedAt: !5034)
!5354 = !DILocation(line: 563, column: 38, scope: !5001, inlinedAt: !5034)
!5355 = !DILocation(line: 570, column: 6, scope: !5001, inlinedAt: !5034)
!5356 = !DILocation(line: 553, column: 2, scope: !5001, inlinedAt: !5034)
!5357 = !DILocation(line: 570, column: 14, scope: !5001, inlinedAt: !5034)
!5358 = !DILocation(line: 570, column: 18, scope: !5001, inlinedAt: !5034)
!5359 = !DILocation(line: 570, column: 16, scope: !5001, inlinedAt: !5034)
!5360 = !DILocation(line: 571, column: 22, scope: !5001, inlinedAt: !5034)
!5361 = !DILocation(line: 571, column: 36, scope: !5001, inlinedAt: !5034)
!5362 = !DILocation(line: 571, column: 37, scope: !5001, inlinedAt: !5034)
!5363 = !DILocation(line: 571, column: 21, scope: !5001, inlinedAt: !5034)
!5364 = !DILocation(line: 570, column: 33, scope: !5001, inlinedAt: !5034)
!5365 = !DILocation(line: 585, column: 2, scope: !5001, inlinedAt: !5034)
!5366 = !DILocation(line: 585, column: 4, scope: !5001, inlinedAt: !5034)
!5367 = !DILocation(line: 585, column: 9, scope: !5001, inlinedAt: !5034)
!5368 = !DILocation(line: 586, column: 2, scope: !5001, inlinedAt: !5034)
!5369 = !DILocation(line: 586, column: 4, scope: !5001, inlinedAt: !5034)
!5370 = !DILocation(line: 586, column: 16, scope: !5001, inlinedAt: !5034)
!5371 = !DILocation(line: 586, column: 14, scope: !5001, inlinedAt: !5034)
!5372 = !DILocation(line: 587, column: 4, scope: !5001, inlinedAt: !5034)
!5373 = !DILocation(line: 587, column: 10, scope: !5001, inlinedAt: !5034)
!5374 = !DILocation(line: 587, column: 12, scope: !5001, inlinedAt: !5034)
!5375 = !DILocation(line: 591, column: 6, scope: !5001, inlinedAt: !5034)
!5376 = !DILocation(line: 592, column: 2, scope: !5001, inlinedAt: !5034)
!5377 = !DILocation(line: 594, column: 3, scope: !5001, inlinedAt: !5034)
!5378 = !DILocation(line: 595, column: 3, scope: !5001, inlinedAt: !5034)
!5379 = !DILocation(line: 596, column: 27, scope: !5001, inlinedAt: !5034)
!5380 = !DILocation(line: 596, column: 24, scope: !5001, inlinedAt: !5034)
!5381 = !DILocation(line: 596, column: 14, scope: !5001, inlinedAt: !5034)
!5382 = !DILocation(line: 596, column: 3, scope: !5001, inlinedAt: !5034)
!5383 = !DILocation(line: 597, column: 3, scope: !5001, inlinedAt: !5034)
!5384 = !DILocation(line: 597, column: 5, scope: !5001, inlinedAt: !5034)
!5385 = !DILocation(line: 597, column: 9, scope: !5001, inlinedAt: !5034)
!5386 = !DILocation(line: 597, column: 6, scope: !5001, inlinedAt: !5034)
!5387 = !DILocation(line: 604, column: 27, scope: !5001, inlinedAt: !5034)
!5388 = !DILocation(line: 605, column: 5, scope: !5001, inlinedAt: !5034)
!5389 = !DILocation(line: 605, column: 15, scope: !5001, inlinedAt: !5034)
!5390 = !DILocation(line: 605, column: 26, scope: !5001, inlinedAt: !5034)
!5391 = !DILocation(line: 605, column: 25, scope: !5001, inlinedAt: !5034)
!5392 = !DILocation(line: 605, column: 38, scope: !5001, inlinedAt: !5034)
!5393 = !DILocation(line: 606, column: 8, scope: !5001, inlinedAt: !5034)
!5394 = !DILocation(line: 606, column: 6, scope: !5001, inlinedAt: !5034)
!5395 = !DILocation(line: 606, column: 25, scope: !5001, inlinedAt: !5034)
!5396 = !DILocation(line: 604, column: 26, scope: !5001, inlinedAt: !5034)
!5397 = !DILocation(line: 604, column: 4, scope: !5001, inlinedAt: !5034)
!5398 = !DILocation(line: 122, column: 7, scope: !4919, inlinedAt: !4943)
!5399 = !DILocation(line: 509, column: 5, scope: !5001, inlinedAt: !5034)
!5400 = !DILocation(line: 509, column: 11, scope: !5001, inlinedAt: !5034)
!5401 = !DILocation(line: 509, column: 36, scope: !5001, inlinedAt: !5034)
!5402 = !DILocation(line: 509, column: 46, scope: !5001, inlinedAt: !5034)
!5403 = !DILocation(line: 509, column: 42, scope: !5001, inlinedAt: !5034)
!5404 = !DILocation(line: 515, column: 12, scope: !5001, inlinedAt: !5034)
!5405 = !DILocation(line: 516, column: 18, scope: !5001, inlinedAt: !5034)
!5406 = !DILocation(line: 516, column: 17, scope: !5001, inlinedAt: !5034)
!5407 = !DILocation(line: 517, column: 4, scope: !5001, inlinedAt: !5034)
!5408 = !DILocation(line: 518, column: 8, scope: !5001, inlinedAt: !5034)
!5409 = !DILocation(line: 518, column: 4, scope: !5001, inlinedAt: !5034)
!5410 = !DILocation(line: 522, column: 17, scope: !5001, inlinedAt: !5034)
!5411 = !DILocation(line: 522, column: 21, scope: !5001, inlinedAt: !5034)
!5412 = !DILocation(line: 522, column: 18, scope: !5001, inlinedAt: !5034)
!5413 = !DILocation(line: 522, column: 20, scope: !5001, inlinedAt: !5034)
!5414 = !DILocation(line: 522, column: 16, scope: !5001, inlinedAt: !5034)
!5415 = !DILocation(line: 521, column: 23, scope: !5001, inlinedAt: !5034)
!5416 = !DILocation(line: 525, column: 21, scope: !5001, inlinedAt: !5034)
!5417 = !DILocation(line: 525, column: 25, scope: !5001, inlinedAt: !5034)
!5418 = !DILocation(line: 525, column: 27, scope: !5001, inlinedAt: !5034)
!5419 = !DILocation(line: 525, column: 22, scope: !5001, inlinedAt: !5034)
!5420 = !DILocation(line: 525, column: 31, scope: !5001, inlinedAt: !5034)
!5421 = !DILocation(line: 526, column: 4, scope: !5001, inlinedAt: !5034)
!5422 = !DILocation(line: 526, column: 6, scope: !5001, inlinedAt: !5034)
!5423 = !DILocation(line: 528, column: 11, scope: !5001, inlinedAt: !5034)
!5424 = !DILocation(line: 529, column: 4, scope: !5001, inlinedAt: !5034)
!5425 = !DILocation(line: 529, column: 6, scope: !5001, inlinedAt: !5034)
!5426 = !DILocation(line: 531, column: 3, scope: !5001, inlinedAt: !5034)
!5427 = !DILocation(line: 531, column: 5, scope: !5001, inlinedAt: !5034)
!5428 = !DILocation(line: 531, column: 11, scope: !5001, inlinedAt: !5034)
!5429 = !DILocation(line: 532, column: 3, scope: !5001, inlinedAt: !5034)
!5430 = !DILocation(line: 534, column: 17, scope: !5001, inlinedAt: !5034)
!5431 = !DILocation(line: 536, column: 19, scope: !5001, inlinedAt: !5034)
!5432 = !DILocation(line: 536, column: 11, scope: !5001, inlinedAt: !5034)
!5433 = !DILocation(line: 537, column: 19, scope: !5001, inlinedAt: !5034)
!5434 = !DILocation(line: 537, column: 27, scope: !5001, inlinedAt: !5034)
!5435 = !DILocation(line: 537, column: 25, scope: !5001, inlinedAt: !5034)
!5436 = !DILocation(line: 537, column: 3, scope: !5001, inlinedAt: !5034)
!5437 = !DILocation(line: 537, column: 5, scope: !5001, inlinedAt: !5034)
!5438 = !DILocation(line: 538, column: 5, scope: !5001, inlinedAt: !5034)
!5439 = !DILocation(line: 541, column: 3, scope: !5001, inlinedAt: !5034)
!5440 = !DILocation(line: 541, column: 35, scope: !5001, inlinedAt: !5034)
!5441 = !DILocation(line: 541, column: 33, scope: !5001, inlinedAt: !5034)
!5442 = !DILocation(line: 541, column: 9, scope: !5001, inlinedAt: !5034)
!5443 = !DILocation(line: 542, column: 9, scope: !5001, inlinedAt: !5034)
!5444 = !DILocation(line: 572, column: 12, scope: !5001, inlinedAt: !5034)
!5445 = !DILocation(line: 572, column: 29, scope: !5001, inlinedAt: !5034)
!5446 = !DILocation(line: 572, column: 28, scope: !5001, inlinedAt: !5034)
!5447 = !DILocation(line: 572, column: 20, scope: !5001, inlinedAt: !5034)
!5448 = !DILocation(line: 572, column: 3, scope: !5001, inlinedAt: !5034)
!5449 = !DILocation(line: 573, column: 3, scope: !5001, inlinedAt: !5034)
!5450 = !DILocation(line: 573, column: 5, scope: !5001, inlinedAt: !5034)
!5451 = !DILocation(line: 573, column: 7, scope: !5001, inlinedAt: !5034)
!5452 = !DILocation(line: 573, column: 6, scope: !5001, inlinedAt: !5034)
!5453 = !DILocation(line: 573, column: 17, scope: !5001, inlinedAt: !5034)
!5454 = !DILocation(line: 573, column: 16, scope: !5001, inlinedAt: !5034)
!5455 = !DILocation(line: 574, column: 29, scope: !5001, inlinedAt: !5034)
!5456 = !DILocation(line: 574, column: 20, scope: !5001, inlinedAt: !5034)
!5457 = !DILocation(line: 574, column: 3, scope: !5001, inlinedAt: !5034)
!5458 = !DILocation(line: 576, column: 28, scope: !5001, inlinedAt: !5034)
!5459 = !DILocation(line: 576, column: 27, scope: !5001, inlinedAt: !5034)
!5460 = !DILocation(line: 576, column: 38, scope: !5001, inlinedAt: !5034)
!5461 = !DILocation(line: 576, column: 36, scope: !5001, inlinedAt: !5034)
!5462 = !DILocation(line: 576, column: 46, scope: !5001, inlinedAt: !5034)
!5463 = !DILocation(line: 576, column: 44, scope: !5001, inlinedAt: !5034)
!5464 = !DILocation(line: 576, column: 56, scope: !5001, inlinedAt: !5034)
!5465 = !DILocation(line: 576, column: 70, scope: !5001, inlinedAt: !5034)
!5466 = !DILocation(line: 576, column: 68, scope: !5001, inlinedAt: !5034)
!5467 = !DILocation(line: 597, column: 20, scope: !5001, inlinedAt: !5034)
!5468 = !DILocation(line: 597, column: 19, scope: !5001, inlinedAt: !5034)
!5469 = !DILocation(line: 598, column: 3, scope: !5001, inlinedAt: !5034)
!5470 = !DILocation(line: 598, column: 5, scope: !5001, inlinedAt: !5034)
!5471 = !DILocation(line: 599, column: 21, scope: !5001, inlinedAt: !5034)
!5472 = !DILocation(line: 599, column: 32, scope: !5001, inlinedAt: !5034)
!5473 = !DILocation(line: 599, column: 29, scope: !5001, inlinedAt: !5034)
!5474 = !DILocation(line: 599, column: 3, scope: !5001, inlinedAt: !5034)
!5475 = !DILocation(line: 600, column: 6, scope: !5001, inlinedAt: !5034)
!5476 = !DILocation(line: 600, column: 17, scope: !5001, inlinedAt: !5034)
!5477 = !DILocation(line: 600, column: 27, scope: !5001, inlinedAt: !5034)
!5478 = !DILocation(line: 600, column: 26, scope: !5001, inlinedAt: !5034)
!5479 = !DILocation(line: 600, column: 15, scope: !5001, inlinedAt: !5034)
!5480 = !DILocation(line: 577, column: 4, scope: !5001, inlinedAt: !5034)
!5481 = !DILocation(line: 577, column: 6, scope: !5001, inlinedAt: !5034)
!5482 = !DILocation(line: 577, column: 13, scope: !5001, inlinedAt: !5034)
!5483 = !DILocation(line: 578, column: 6, scope: !5001, inlinedAt: !5034)
!5484 = !DILocation(line: 578, column: 11, scope: !5001, inlinedAt: !5034)
!5485 = !DILocation(line: 578, column: 27, scope: !5001, inlinedAt: !5034)
!5486 = !DILocation(line: 578, column: 25, scope: !5001, inlinedAt: !5034)
!5487 = !DILocation(line: 579, column: 6, scope: !5001, inlinedAt: !5034)
!5488 = !DILocation(line: 579, column: 12, scope: !5001, inlinedAt: !5034)
!5489 = !DILocation(line: 579, column: 14, scope: !5001, inlinedAt: !5034)
!5490 = !DILocation(line: 582, column: 30, scope: !5001, inlinedAt: !5034)
!5491 = !DILocation(line: 582, column: 43, scope: !5001, inlinedAt: !5034)
!5492 = !DILocation(line: 582, column: 55, scope: !5001, inlinedAt: !5034)
!5493 = !DILocation(line: 582, column: 66, scope: !5001, inlinedAt: !5034)
!5494 = !DILocation(line: 582, column: 71, scope: !5001, inlinedAt: !5034)
!5495 = !DILocation(line: 582, column: 69, scope: !5001, inlinedAt: !5034)
!5496 = !DILocation(line: 582, column: 26, scope: !5001, inlinedAt: !5034)
!5497 = !DILocation(line: 582, column: 4, scope: !5001, inlinedAt: !5034)
!5498 = !DILocation(line: 123, column: 19, scope: !4919, inlinedAt: !4943)
!5499 = !DILocation(line: 123, column: 24, scope: !4919, inlinedAt: !4943)
!5500 = !DILocation(line: 123, column: 30, scope: !4919, inlinedAt: !4943)
!5501 = !DILocation(line: 123, column: 35, scope: !4919, inlinedAt: !4943)
!5502 = !DILocation(line: 123, column: 40, scope: !4919, inlinedAt: !4943)
!5503 = !DILocation(line: 123, column: 46, scope: !4919, inlinedAt: !4943)
!5504 = !DILocation(line: 123, column: 51, scope: !4919, inlinedAt: !4943)
!5505 = !DILocation(line: 123, column: 18, scope: !4919, inlinedAt: !4943)
!5506 = !DILocation(line: 123, column: 4, scope: !4919, inlinedAt: !4943)
!5507 = !DILocation(line: 418, column: 5, scope: !4970, inlinedAt: !4999)
!5508 = !DILocation(line: 154, column: 6, scope: !4919, inlinedAt: !4943)
!5509 = !DILocation(line: 155, column: 18, scope: !4919, inlinedAt: !4943)
!5510 = !DILocation(line: 155, column: 23, scope: !4919, inlinedAt: !4943)
!5511 = !DILocation(line: 155, column: 29, scope: !4919, inlinedAt: !4943)
!5512 = !DILocation(line: 155, column: 34, scope: !4919, inlinedAt: !4943)
!5513 = !DILocation(line: 155, column: 39, scope: !4919, inlinedAt: !4943)
!5514 = !DILocation(line: 155, column: 45, scope: !4919, inlinedAt: !4943)
!5515 = !DILocation(line: 155, column: 50, scope: !4919, inlinedAt: !4943)
!5516 = !DILocation(line: 155, column: 17, scope: !4919, inlinedAt: !4943)
!5517 = !DILocation(line: 155, column: 3, scope: !4919, inlinedAt: !4943)
!5518 = !DILocation(line: 148, column: 8, scope: !4919, inlinedAt: !4943)
!5519 = !DILocation(line: 149, column: 9, scope: !4919, inlinedAt: !4943)
!5520 = !DILocation(line: 150, column: 4, scope: !4919, inlinedAt: !4943)
!5521 = !DILocation(line: 150, column: 18, scope: !4919, inlinedAt: !4943)
!5522 = !DILocation(line: 150, column: 24, scope: !4919, inlinedAt: !4943)
!5523 = !DILocation(line: 150, column: 34, scope: !4919, inlinedAt: !4943)
!5524 = !DILocation(line: 150, column: 38, scope: !4919, inlinedAt: !4943)
!5525 = !DILocation(line: 150, column: 28, scope: !4919, inlinedAt: !4943)
!5526 = !DILocation(line: 150, column: 49, scope: !4919, inlinedAt: !4943)
!5527 = !DILocation(line: 151, column: 31, scope: !4919, inlinedAt: !4943)
!5528 = !DILocation(line: 349, column: 5, scope: !4970, inlinedAt: !4999)
!5529 = !DILocation(line: 349, column: 12, scope: !4970, inlinedAt: !4999)
!5530 = !DILocation(line: 0, scope: !4970, inlinedAt: !4999)
!5531 = !DILocation(line: 350, column: 3, scope: !4970, inlinedAt: !4999)
!5532 = !DILocation(line: 350, column: 5, scope: !4970, inlinedAt: !4999)
!5533 = !DILocation(line: 351, column: 5, scope: !4970, inlinedAt: !4999)
!5534 = !DILocation(line: 352, column: 5, scope: !4970, inlinedAt: !4999)
!5535 = !DILocation(line: 352, column: 11, scope: !4970, inlinedAt: !4999)
!5536 = !DILocation(line: 353, column: 3, scope: !4970, inlinedAt: !4999)
!5537 = !DILocation(line: 355, column: 5, scope: !4970, inlinedAt: !4999)
!5538 = !DILocation(line: 360, column: 2, scope: !4970, inlinedAt: !4999)
!5539 = !DILocation(line: 360, column: 13, scope: !4970, inlinedAt: !4999)
!5540 = !DILocation(line: 361, column: 23, scope: !4970, inlinedAt: !4999)
!5541 = !DILocation(line: 361, column: 2, scope: !4970, inlinedAt: !4999)
!5542 = !DILocation(line: 363, column: 19, scope: !4970, inlinedAt: !4999)
!5543 = !DILocation(line: 363, column: 16, scope: !4970, inlinedAt: !4999)
!5544 = !DILocation(line: 363, column: 2, scope: !4970, inlinedAt: !4999)
!5545 = !DILocation(line: 364, column: 22, scope: !4970, inlinedAt: !4999)
!5546 = !DILocation(line: 364, column: 27, scope: !4970, inlinedAt: !4999)
!5547 = !DILocation(line: 364, column: 19, scope: !4970, inlinedAt: !4999)
!5548 = !DILocation(line: 365, column: 31, scope: !4970, inlinedAt: !4999)
!5549 = !DILocation(line: 365, column: 30, scope: !4970, inlinedAt: !4999)
!5550 = !DILocation(line: 365, column: 40, scope: !4970, inlinedAt: !4999)
!5551 = !DILocation(line: 365, column: 21, scope: !4970, inlinedAt: !4999)
!5552 = !DILocation(line: 365, column: 2, scope: !4970, inlinedAt: !4999)
!5553 = !DILocation(line: 366, column: 2, scope: !4970, inlinedAt: !4999)
!5554 = !DILocation(line: 369, column: 2, scope: !4970, inlinedAt: !4999)
!5555 = !DILocation(line: 370, column: 2, scope: !4970, inlinedAt: !4999)
!5556 = !DILocation(line: 371, column: 2, scope: !4970, inlinedAt: !4999)
!5557 = !DILocation(line: 372, column: 6, scope: !4970, inlinedAt: !4999)
!5558 = !DILocation(line: 372, column: 9, scope: !4970, inlinedAt: !4999)
!5559 = !DILocation(line: 372, column: 30, scope: !4970, inlinedAt: !4999)
!5560 = !DILocation(line: 372, column: 32, scope: !4970, inlinedAt: !4999)
!5561 = !DILocation(line: 373, column: 6, scope: !4970, inlinedAt: !4999)
!5562 = !DILocation(line: 373, column: 19, scope: !4970, inlinedAt: !4999)
!5563 = !DILocation(line: 373, column: 10, scope: !4970, inlinedAt: !4999)
!5564 = !DILocation(line: 377, column: 3, scope: !4970, inlinedAt: !4999)
!5565 = !DILocation(line: 372, column: 38, scope: !4970, inlinedAt: !4999)
!5566 = !DILocation(line: 379, column: 10, scope: !4970, inlinedAt: !4999)
!5567 = !DILocation(line: 379, column: 2, scope: !4970, inlinedAt: !4999)
!5568 = !DILocation(line: 380, column: 5, scope: !4970, inlinedAt: !4999)
!5569 = !DILocation(line: 380, column: 21, scope: !4970, inlinedAt: !4999)
!5570 = !DILocation(line: 380, column: 19, scope: !4970, inlinedAt: !4999)
!5571 = !DILocation(line: 382, column: 23, scope: !4970, inlinedAt: !4999)
!5572 = !DILocation(line: 382, column: 37, scope: !4970, inlinedAt: !4999)
!5573 = !DILocation(line: 382, column: 36, scope: !4970, inlinedAt: !4999)
!5574 = !DILocation(line: 382, column: 22, scope: !4970, inlinedAt: !4999)
!5575 = !DILocation(line: 364, column: 2, scope: !4970, inlinedAt: !4999)
!5576 = !DILocation(line: 391, column: 2, scope: !4970, inlinedAt: !4999)
!5577 = !DILocation(line: 392, column: 11, scope: !4970, inlinedAt: !4999)
!5578 = !DILocation(line: 392, column: 6, scope: !4970, inlinedAt: !4999)
!5579 = !DILocation(line: 392, column: 20, scope: !4970, inlinedAt: !4999)
!5580 = !DILocation(line: 392, column: 22, scope: !4970, inlinedAt: !4999)
!5581 = !DILocation(line: 393, column: 9, scope: !4970, inlinedAt: !4999)
!5582 = !DILocation(line: 393, column: 11, scope: !4970, inlinedAt: !4999)
!5583 = !DILocation(line: 394, column: 13, scope: !4970, inlinedAt: !4999)
!5584 = !DILocation(line: 394, column: 3, scope: !4970, inlinedAt: !4999)
!5585 = !DILocation(line: 395, column: 3, scope: !4970, inlinedAt: !4999)
!5586 = !DILocation(line: 396, column: 7, scope: !4970, inlinedAt: !4999)
!5587 = !DILocation(line: 396, column: 6, scope: !4970, inlinedAt: !4999)
!5588 = !DILocation(line: 399, column: 6, scope: !4970, inlinedAt: !4999)
!5589 = !DILocation(line: 399, column: 16, scope: !4970, inlinedAt: !4999)
!5590 = !DILocation(line: 399, column: 18, scope: !4970, inlinedAt: !4999)
!5591 = !DILocation(line: 400, column: 3, scope: !4970, inlinedAt: !4999)
!5592 = !DILocation(line: 400, column: 5, scope: !4970, inlinedAt: !4999)
!5593 = !DILocation(line: 400, column: 7, scope: !4970, inlinedAt: !4999)
!5594 = !DILocation(line: 400, column: 9, scope: !4970, inlinedAt: !4999)
!5595 = !DILocation(line: 400, column: 8, scope: !4970, inlinedAt: !4999)
!5596 = !DILocation(line: 400, column: 6, scope: !4970, inlinedAt: !4999)
!5597 = !DILocation(line: 402, column: 19, scope: !4970, inlinedAt: !4999)
!5598 = !DILocation(line: 402, column: 17, scope: !4970, inlinedAt: !4999)
!5599 = !DILocation(line: 402, column: 2, scope: !4970, inlinedAt: !4999)
!5600 = !DILocation(line: 403, column: 2, scope: !4970, inlinedAt: !4999)
!5601 = !DILocation(line: 403, column: 4, scope: !4970, inlinedAt: !4999)
!5602 = !DILocation(line: 404, column: 4, scope: !4970, inlinedAt: !4999)
!5603 = !DILocation(line: 404, column: 9, scope: !4970, inlinedAt: !4999)
!5604 = !DILocation(line: 404, column: 25, scope: !4970, inlinedAt: !4999)
!5605 = !DILocation(line: 404, column: 23, scope: !4970, inlinedAt: !4999)
!5606 = !DILocation(line: 405, column: 2, scope: !4970, inlinedAt: !4999)
!5607 = !DILocation(line: 407, column: 5, scope: !4970, inlinedAt: !4999)
!5608 = !DILocation(line: 407, column: 12, scope: !4970, inlinedAt: !4999)
!5609 = !DILocation(line: 408, column: 6, scope: !4970, inlinedAt: !4999)
!5610 = !DILocation(line: 408, column: 11, scope: !4970, inlinedAt: !4999)
!5611 = !DILocation(line: 408, column: 19, scope: !4970, inlinedAt: !4999)
!5612 = !DILocation(line: 409, column: 9, scope: !4970, inlinedAt: !4999)
!5613 = !DILocation(line: 413, column: 7, scope: !4970, inlinedAt: !4999)
!5614 = !DILocation(line: 413, column: 14, scope: !4970, inlinedAt: !4999)
!5615 = !DILocation(line: 414, column: 4, scope: !4970, inlinedAt: !4999)
!5616 = !DILocation(line: 415, column: 4, scope: !4970, inlinedAt: !4999)
!5617 = !DILocation(line: 416, column: 9, scope: !4970, inlinedAt: !4999)
!5618 = !DILocation(line: 416, column: 8, scope: !4970, inlinedAt: !4999)
!5619 = !DILocation(line: 416, column: 17, scope: !4970, inlinedAt: !4999)
!5620 = !DILocation(line: 416, column: 12, scope: !4970, inlinedAt: !4999)
!5621 = !DILocation(line: 420, column: 13, scope: !4970, inlinedAt: !4999)
!5622 = !DILocation(line: 420, column: 25, scope: !4970, inlinedAt: !4999)
!5623 = !DILocation(line: 420, column: 22, scope: !4970, inlinedAt: !4999)
!5624 = !DILocation(line: 420, column: 4, scope: !4970, inlinedAt: !4999)
!5625 = !DILocation(line: 421, column: 4, scope: !4970, inlinedAt: !4999)
!5626 = !DILocation(line: 421, column: 6, scope: !4970, inlinedAt: !4999)
!5627 = !DILocation(line: 421, column: 8, scope: !4970, inlinedAt: !4999)
!5628 = !DILocation(line: 421, column: 7, scope: !4970, inlinedAt: !4999)
!5629 = !DILocation(line: 444, column: 29, scope: !4970, inlinedAt: !4999)
!5630 = !DILocation(line: 444, column: 39, scope: !4970, inlinedAt: !4999)
!5631 = !DILocation(line: 444, column: 38, scope: !4970, inlinedAt: !4999)
!5632 = !DILocation(line: 444, column: 46, scope: !4970, inlinedAt: !4999)
!5633 = !DILocation(line: 444, column: 44, scope: !4970, inlinedAt: !4999)
!5634 = !DILocation(line: 444, column: 52, scope: !4970, inlinedAt: !4999)
!5635 = !DILocation(line: 444, column: 51, scope: !4970, inlinedAt: !4999)
!5636 = !DILocation(line: 444, column: 62, scope: !4970, inlinedAt: !4999)
!5637 = !DILocation(line: 444, column: 76, scope: !4970, inlinedAt: !4999)
!5638 = !DILocalVariable(name: "d", arg: 1, scope: !5639, file: !35, line: 466, type: !3559)
!5639 = distinct !DISubprogram(name: "strconv.adjustLastDigitFixed", linkageName: "strconv.adjustLastDigitFixed", scope: !35, file: !35, line: 466, type: !5640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5642)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!3559, !41, !41, !27, !41}
!5642 = !{!5638, !5643, !5644, !5645, !5646, !5647, !5648, !5649}
!5643 = !DILocalVariable(name: "num", arg: 2, scope: !5639, file: !35, line: 466, type: !41)
!5644 = !DILocalVariable(name: "den", arg: 3, scope: !5639, file: !35, line: 466, type: !41)
!5645 = !DILocalVariable(name: "shift", arg: 4, scope: !5639, file: !35, line: 466, type: !27)
!5646 = !DILocalVariable(name: "\CE\B5", arg: 5, scope: !5639, file: !35, line: 466, type: !41)
!5647 = !DILocalVariable(name: "i", scope: !5639, file: !35, line: 478, type: !30)
!5648 = !DILocalVariable(name: "nd", scope: !5639, file: !22, line: 373, type: !30)
!5649 = !DILocalVariable(name: "dp", scope: !5639, file: !22, line: 373, type: !30)
!5650 = !DILocation(line: 466, column: 6, scope: !5639, inlinedAt: !5651)
!5651 = distinct !DILocation(line: 444, column: 28, scope: !4970, inlinedAt: !4999)
!5652 = !DILocation(line: 467, column: 5, scope: !5639, inlinedAt: !5651)
!5653 = !DILocation(line: 467, column: 11, scope: !5639, inlinedAt: !5651)
!5654 = !DILocation(line: 467, column: 16, scope: !5639, inlinedAt: !5651)
!5655 = !DILocation(line: 467, column: 14, scope: !5639, inlinedAt: !5651)
!5656 = !DILocation(line: 467, column: 9, scope: !5639, inlinedAt: !5651)
!5657 = !DILocation(line: 0, scope: !5639, inlinedAt: !5651)
!5658 = !DILocation(line: 468, column: 8, scope: !5639, inlinedAt: !5651)
!5659 = !DILocation(line: 470, column: 7, scope: !5639, inlinedAt: !5651)
!5660 = !DILocation(line: 470, column: 6, scope: !5639, inlinedAt: !5651)
!5661 = !DILocation(line: 470, column: 12, scope: !5639, inlinedAt: !5651)
!5662 = !DILocation(line: 470, column: 17, scope: !5639, inlinedAt: !5651)
!5663 = !DILocation(line: 470, column: 10, scope: !5639, inlinedAt: !5651)
!5664 = !DILocation(line: 471, column: 8, scope: !5639, inlinedAt: !5651)
!5665 = !DILocation(line: 473, column: 8, scope: !5639, inlinedAt: !5651)
!5666 = !DILocation(line: 473, column: 12, scope: !5639, inlinedAt: !5651)
!5667 = !DILocation(line: 473, column: 11, scope: !5639, inlinedAt: !5651)
!5668 = !DILocation(line: 473, column: 6, scope: !5639, inlinedAt: !5651)
!5669 = !DILocation(line: 473, column: 18, scope: !5639, inlinedAt: !5651)
!5670 = !DILocation(line: 473, column: 23, scope: !5639, inlinedAt: !5651)
!5671 = !DILocation(line: 473, column: 16, scope: !5639, inlinedAt: !5651)
!5672 = !DILocation(line: 476, column: 8, scope: !5639, inlinedAt: !5651)
!5673 = !DILocation(line: 476, column: 12, scope: !5639, inlinedAt: !5651)
!5674 = !DILocation(line: 476, column: 11, scope: !5639, inlinedAt: !5651)
!5675 = !DILocation(line: 476, column: 6, scope: !5639, inlinedAt: !5651)
!5676 = !DILocation(line: 476, column: 18, scope: !5639, inlinedAt: !5651)
!5677 = !DILocation(line: 476, column: 23, scope: !5639, inlinedAt: !5651)
!5678 = !DILocation(line: 476, column: 16, scope: !5639, inlinedAt: !5651)
!5679 = !DILocation(line: 478, column: 3, scope: !5639, inlinedAt: !5651)
!5680 = !DILocation(line: 479, column: 9, scope: !5639, inlinedAt: !5651)
!5681 = !DILocation(line: 479, column: 11, scope: !5639, inlinedAt: !5651)
!5682 = !DILocation(line: 486, column: 6, scope: !5639, inlinedAt: !5651)
!5683 = !DILocation(line: 486, column: 8, scope: !5639, inlinedAt: !5651)
!5684 = !DILocation(line: 491, column: 4, scope: !5639, inlinedAt: !5651)
!5685 = !DILocation(line: 478, column: 8, scope: !5639, inlinedAt: !5651)
!5686 = !DILocation(line: 480, column: 7, scope: !5639, inlinedAt: !5651)
!5687 = !DILocation(line: 480, column: 9, scope: !5639, inlinedAt: !5651)
!5688 = !DILocation(line: 480, column: 11, scope: !5639, inlinedAt: !5651)
!5689 = !DILocation(line: 480, column: 10, scope: !5639, inlinedAt: !5651)
!5690 = !DILocation(line: 480, column: 14, scope: !5639, inlinedAt: !5651)
!5691 = !DILocation(line: 481, column: 5, scope: !5639, inlinedAt: !5651)
!5692 = !DILocation(line: 481, column: 7, scope: !5639, inlinedAt: !5651)
!5693 = !DILocation(line: 479, column: 17, scope: !5639, inlinedAt: !5651)
!5694 = !DILocation(line: 487, column: 7, scope: !5639, inlinedAt: !5651)
!5695 = !DILocation(line: 488, column: 4, scope: !5639, inlinedAt: !5651)
!5696 = !DILocation(line: 488, column: 6, scope: !5639, inlinedAt: !5651)
!5697 = !DILocation(line: 489, column: 6, scope: !5639, inlinedAt: !5651)
!5698 = !DILocation(line: 489, column: 4, scope: !5639, inlinedAt: !5651)
!5699 = !DILocation(line: 491, column: 8, scope: !5639, inlinedAt: !5651)
!5700 = !DILocation(line: 491, column: 7, scope: !5639, inlinedAt: !5651)
!5701 = !DILocation(line: 449, column: 13, scope: !4970, inlinedAt: !4999)
!5702 = !DILocation(line: 449, column: 6, scope: !4970, inlinedAt: !4999)
!5703 = !DILocation(line: 449, column: 21, scope: !4970, inlinedAt: !4999)
!5704 = !DILocation(line: 449, column: 23, scope: !4970, inlinedAt: !4999)
!5705 = !DILocation(line: 383, column: 21, scope: !4970, inlinedAt: !4999)
!5706 = !DILocation(line: 383, column: 20, scope: !4970, inlinedAt: !4999)
!5707 = !DILocation(line: 383, column: 3, scope: !4970, inlinedAt: !4999)
!5708 = !DILocation(line: 384, column: 11, scope: !4970, inlinedAt: !4999)
!5709 = !DILocation(line: 384, column: 19, scope: !4970, inlinedAt: !4999)
!5710 = !DILocation(line: 384, column: 3, scope: !4970, inlinedAt: !4999)
!5711 = !DILocation(line: 394, column: 11, scope: !4970, inlinedAt: !4999)
!5712 = !DILocation(line: 396, column: 19, scope: !4970, inlinedAt: !4999)
!5713 = !DILocation(line: 396, column: 18, scope: !4970, inlinedAt: !4999)
!5714 = !DILocation(line: 397, column: 7, scope: !4970, inlinedAt: !4999)
!5715 = !DILocation(line: 397, column: 3, scope: !4970, inlinedAt: !4999)
!5716 = !DILocation(line: 400, column: 20, scope: !4970, inlinedAt: !4999)
!5717 = !DILocation(line: 400, column: 19, scope: !4970, inlinedAt: !4999)
!5718 = !DILocation(line: 399, column: 30, scope: !4970, inlinedAt: !4999)
!5719 = !DILocation(line: 421, column: 18, scope: !4970, inlinedAt: !4999)
!5720 = !DILocation(line: 422, column: 25, scope: !4970, inlinedAt: !4999)
!5721 = !DILocation(line: 422, column: 22, scope: !4970, inlinedAt: !4999)
!5722 = !DILocation(line: 422, column: 4, scope: !4970, inlinedAt: !4999)
!5723 = !DILocation(line: 423, column: 4, scope: !4970, inlinedAt: !4999)
!5724 = !DILocation(line: 424, column: 4, scope: !4970, inlinedAt: !4999)
!5725 = !DILocation(line: 426, column: 3, scope: !4970, inlinedAt: !4999)
!5726 = !DILocation(line: 426, column: 10, scope: !4970, inlinedAt: !4999)
!5727 = !DILocation(line: 426, column: 5, scope: !4970, inlinedAt: !4999)
!5728 = !DILocation(line: 450, column: 6, scope: !4970, inlinedAt: !4999)
!5729 = !DILocation(line: 450, column: 8, scope: !4970, inlinedAt: !4999)
!5730 = !DILocation(line: 450, column: 10, scope: !4970, inlinedAt: !4999)
!5731 = !DILocation(line: 450, column: 9, scope: !4970, inlinedAt: !4999)
!5732 = !DILocation(line: 450, column: 13, scope: !4970, inlinedAt: !4999)
!5733 = !DILocation(line: 451, column: 4, scope: !4970, inlinedAt: !4999)
!5734 = !DILocation(line: 451, column: 11, scope: !4970, inlinedAt: !4999)
!5735 = !DILocation(line: 451, column: 6, scope: !4970, inlinedAt: !4999)
!5736 = !DILocation(line: 134, column: 12, scope: !4919, inlinedAt: !4943)
!5737 = !DILocation(line: 141, column: 7, scope: !4919, inlinedAt: !4943)
!5738 = !DILocation(line: 141, column: 12, scope: !4919, inlinedAt: !4943)
!5739 = !DILocation(line: 144, column: 13, scope: !4919, inlinedAt: !4943)
!5740 = !DILocation(line: 146, column: 6, scope: !4919, inlinedAt: !4943)
!5741 = !DILocation(line: 146, column: 13, scope: !4919, inlinedAt: !4943)
!5742 = !DILocation(line: 65, column: 27, scope: !4919, inlinedAt: !4943)
!5743 = !DILocation(line: 23, column: 18, scope: !4912, inlinedAt: !4918)
!5744 = !DILocation(line: 0, scope: !4912, inlinedAt: !4918)
!5745 = !DILocation(line: 23, column: 45, scope: !4912, inlinedAt: !4918)
!5746 = !DILocation(line: 23, column: 38, scope: !4912, inlinedAt: !4918)
!5747 = !DILocation(line: 65, column: 3, scope: !4919, inlinedAt: !4943)
!5748 = !DILocation(line: 66, column: 3, scope: !4919, inlinedAt: !4943)
!5749 = !DILocation(line: 68, column: 8, scope: !4919, inlinedAt: !4943)
!5750 = !DILocation(line: 132, column: 16, scope: !4919, inlinedAt: !4943)
!5751 = !DILocation(line: 126, column: 10, scope: !4919, inlinedAt: !4943)
!5752 = !DILocation(line: 132, column: 4, scope: !4919, inlinedAt: !4943)
!5753 = !DILocation(line: 157, column: 27, scope: !4919, inlinedAt: !4943)
!5754 = !DILocation(line: 157, column: 37, scope: !4919, inlinedAt: !4943)
!5755 = !DILocation(line: 157, column: 42, scope: !4919, inlinedAt: !4943)
!5756 = !DILocation(line: 157, column: 48, scope: !4919, inlinedAt: !4943)
!5757 = !DILocation(line: 157, column: 54, scope: !4919, inlinedAt: !4943)
!5758 = !DILocation(line: 157, column: 21, scope: !4919, inlinedAt: !4943)
!5759 = !DILocation(line: 157, column: 2, scope: !4919, inlinedAt: !4943)
!5760 = !DILocation(line: 496, column: 28, scope: !4952, inlinedAt: !4968)
!5761 = !DILocation(line: 497, column: 5, scope: !4952, inlinedAt: !4968)
!5762 = !DILocation(line: 497, column: 8, scope: !4952, inlinedAt: !4968)
!5763 = !DILocation(line: 498, column: 3, scope: !4952, inlinedAt: !4968)
!5764 = !DILocation(line: 504, column: 23, scope: !4952, inlinedAt: !4968)
!5765 = !DILocation(line: 504, column: 34, scope: !4952, inlinedAt: !4968)
!5766 = !DILocation(line: 504, column: 36, scope: !4952, inlinedAt: !4968)
!5767 = !DILocation(line: 505, column: 3, scope: !4952, inlinedAt: !4968)
!5768 = !DILocation(line: 505, column: 6, scope: !4952, inlinedAt: !4968)
!5769 = !DILocation(line: 510, column: 14, scope: !4952, inlinedAt: !4968)
!5770 = !DILocation(line: 510, column: 16, scope: !4952, inlinedAt: !4968)
!5771 = !DILocation(line: 510, column: 3, scope: !4952, inlinedAt: !4968)
!5772 = !DILocation(line: 511, column: 5, scope: !4952, inlinedAt: !4968)
!5773 = !DILocation(line: 513, column: 6, scope: !4952, inlinedAt: !4968)
!5774 = !DILocation(line: 513, column: 9, scope: !4952, inlinedAt: !4968)
!5775 = !DILocation(line: 513, column: 13, scope: !4952, inlinedAt: !4968)
!5776 = !DILocation(line: 513, column: 24, scope: !4952, inlinedAt: !4968)
!5777 = !DILocation(line: 513, column: 26, scope: !4952, inlinedAt: !4968)
!5778 = !DILocation(line: 513, column: 36, scope: !4952, inlinedAt: !4968)
!5779 = !DILocation(line: 513, column: 38, scope: !4952, inlinedAt: !4968)
!5780 = !DILocation(line: 514, column: 4, scope: !4952, inlinedAt: !4968)
!5781 = !DILocation(line: 522, column: 5, scope: !4952, inlinedAt: !4968)
!5782 = !DILocation(line: 522, column: 7, scope: !4952, inlinedAt: !4968)
!5783 = !DILocation(line: 522, column: 16, scope: !4952, inlinedAt: !4968)
!5784 = !DILocation(line: 545, column: 18, scope: !4952, inlinedAt: !4968)
!5785 = !DILocation(line: 545, column: 5, scope: !4952, inlinedAt: !4968)
!5786 = !DILocation(line: 546, column: 11, scope: !4952, inlinedAt: !4968)
!5787 = !DILocation(line: 546, column: 16, scope: !4952, inlinedAt: !4968)
!5788 = !DILocation(line: 546, column: 14, scope: !4952, inlinedAt: !4968)
!5789 = !DILocation(line: 546, column: 5, scope: !4952, inlinedAt: !4968)
!5790 = !DILocation(line: 549, column: 19, scope: !4952, inlinedAt: !4968)
!5791 = !DILocation(line: 549, column: 6, scope: !4952, inlinedAt: !4968)
!5792 = !DILocation(line: 550, column: 12, scope: !4952, inlinedAt: !4968)
!5793 = !DILocation(line: 550, column: 17, scope: !4952, inlinedAt: !4968)
!5794 = !DILocation(line: 550, column: 15, scope: !4952, inlinedAt: !4968)
!5795 = !DILocation(line: 550, column: 6, scope: !4952, inlinedAt: !4968)
!5796 = !DILocation(line: 571, column: 6, scope: !4952, inlinedAt: !4968)
!5797 = !DILocation(line: 571, column: 8, scope: !4952, inlinedAt: !4968)
!5798 = !DILocation(line: 571, column: 16, scope: !4952, inlinedAt: !4968)
!5799 = !DILocation(line: 571, column: 18, scope: !4952, inlinedAt: !4968)
!5800 = !DILocation(line: 571, column: 32, scope: !4952, inlinedAt: !4968)
!5801 = !DILocation(line: 571, column: 34, scope: !4952, inlinedAt: !4968)
!5802 = !DILocation(line: 571, column: 44, scope: !4952, inlinedAt: !4968)
!5803 = !DILocation(line: 571, column: 43, scope: !4952, inlinedAt: !4968)
!5804 = !DILocation(line: 571, column: 38, scope: !4952, inlinedAt: !4968)
!5805 = !DILocation(line: 572, column: 4, scope: !4952, inlinedAt: !4968)
!5806 = !DILocation(line: 572, column: 6, scope: !4952, inlinedAt: !4968)
!5807 = !DILocation(line: 572, column: 20, scope: !4952, inlinedAt: !4968)
!5808 = !DILocation(line: 572, column: 23, scope: !4952, inlinedAt: !4968)
!5809 = !DILocation(line: 572, column: 19, scope: !4952, inlinedAt: !4968)
!5810 = !DILocation(line: 573, column: 19, scope: !4952, inlinedAt: !4968)
!5811 = !DILocation(line: 573, column: 21, scope: !4952, inlinedAt: !4968)
!5812 = !DILocation(line: 573, column: 31, scope: !4952, inlinedAt: !4968)
!5813 = !DILocation(line: 573, column: 25, scope: !4952, inlinedAt: !4968)
!5814 = !DILocation(line: 573, column: 18, scope: !4952, inlinedAt: !4968)
!5815 = !DILocation(line: 574, column: 6, scope: !4952, inlinedAt: !4968)
!5816 = !DILocation(line: 574, column: 19, scope: !4952, inlinedAt: !4968)
!5817 = !DILocation(line: 574, column: 15, scope: !4952, inlinedAt: !4968)
!5818 = !DILocation(line: 575, column: 4, scope: !4952, inlinedAt: !4968)
!5819 = !DILocation(line: 568, column: 22, scope: !4952, inlinedAt: !4968)
!5820 = !DILocation(line: 581, column: 7, scope: !4952, inlinedAt: !4968)
!5821 = !DILocation(line: 500, column: 3, scope: !4952, inlinedAt: !4968)
!5822 = !DILocation(line: 500, column: 6, scope: !4952, inlinedAt: !4968)
!5823 = !DILocation(line: 0, scope: !4903)
!5824 = distinct !DISubprogram(name: "(*fmt.pp).fmtInteger", linkageName: "(*fmt.pp).fmtInteger", scope: !1425, file: !1425, line: 370, type: !5825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5827)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!4705, !41, !44, !295}
!5827 = !{!5828, !5829, !5830, !5831}
!5828 = !DILocalVariable(name: "p", arg: 1, scope: !5824, file: !1425, line: 370, type: !4705)
!5829 = !DILocalVariable(name: "v", arg: 2, scope: !5824, file: !1425, line: 370, type: !41)
!5830 = !DILocalVariable(name: "isSigned", arg: 3, scope: !5824, file: !1425, line: 370, type: !44)
!5831 = !DILocalVariable(name: "verb", arg: 4, scope: !5824, file: !1425, line: 370, type: !295)
!5832 = !DILocation(line: 370, column: 14, scope: !5824)
!5833 = !DILocation(line: 371, column: 9, scope: !5824)
!5834 = !DILocation(line: 373, column: 6, scope: !5824)
!5835 = !DILocation(line: 373, column: 8, scope: !5824)
!5836 = !DILocation(line: 374, column: 13, scope: !5824)
!5837 = !DILocation(line: 0, scope: !5824)
!5838 = !DILocation(line: 373, column: 12, scope: !5824)
!5839 = !DILocation(line: 374, column: 4, scope: !5824)
!5840 = !DILocation(line: 376, column: 21, scope: !5824)
!5841 = !DILocation(line: 374, column: 14, scope: !5824)
!5842 = !DILocation(line: 376, column: 28, scope: !5824)
!5843 = !DILocation(line: 376, column: 38, scope: !5824)
!5844 = !DILocation(line: 376, column: 20, scope: !5824)
!5845 = distinct !DISubprogram(name: "(*fmt.pp).fmtString", linkageName: "(*fmt.pp).fmtString", scope: !1425, file: !1425, line: 441, type: !5846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!4705, !1347, !295}
!5848 = !{!5849, !5850, !5851}
!5849 = !DILocalVariable(name: "p", arg: 1, scope: !5845, file: !1425, line: 441, type: !4705)
!5850 = !DILocalVariable(name: "v", arg: 2, scope: !5845, file: !1425, line: 441, type: !1347)
!5851 = !DILocalVariable(name: "verb", arg: 3, scope: !5845, file: !1425, line: 441, type: !295)
!5852 = !DILocation(line: 441, column: 14, scope: !5845)
!5853 = !DILocation(line: 442, column: 9, scope: !5845)
!5854 = !DILocation(line: 444, column: 6, scope: !5845)
!5855 = !DILocation(line: 444, column: 8, scope: !5845)
!5856 = !DILocation(line: 0, scope: !5845)
!5857 = !DILocation(line: 444, column: 12, scope: !5845)
!5858 = !DILocation(line: 447, column: 4, scope: !5845)
!5859 = !DILocation(line: 445, column: 15, scope: !5845)
!5860 = !DILocation(line: 447, column: 15, scope: !5845)
!5861 = !DILocalVariable(name: "f", arg: 1, scope: !5862, file: !4820, line: 447, type: !4861)
!5862 = distinct !DISubprogram(name: "(*fmt.fmt).fmtQ", linkageName: "(*fmt.fmt).fmtQ", scope: !4820, file: !4820, line: 447, type: !5863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5865)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!4861, !1347}
!5865 = !{!5861, !5866, !5867}
!5866 = !DILocalVariable(name: "s", arg: 2, scope: !5862, file: !4820, line: 447, type: !1347)
!5867 = !DILocalVariable(name: "buf", scope: !5862, file: !4820, line: 453, type: !3107)
!5868 = !DILocation(line: 447, column: 15, scope: !5862, inlinedAt: !5869)
!5869 = distinct !DILocation(line: 445, column: 14, scope: !5845)
!5870 = !DILocation(line: 448, column: 6, scope: !5862, inlinedAt: !5869)
!5871 = !DILocation(line: 448, column: 23, scope: !5862, inlinedAt: !5869)
!5872 = !DILocation(line: 448, column: 2, scope: !5862, inlinedAt: !5869)
!5873 = !DILocation(line: 449, column: 5, scope: !5862, inlinedAt: !5869)
!5874 = !DILocation(line: 449, column: 7, scope: !5862, inlinedAt: !5869)
!5875 = !DILocation(line: 0, scope: !5862, inlinedAt: !5869)
!5876 = !DILocation(line: 449, column: 37, scope: !5862, inlinedAt: !5869)
!5877 = !DILocation(line: 205, column: 6, scope: !5878, inlinedAt: !5883)
!5878 = distinct !DISubprogram(name: "strconv.CanBackquote", linkageName: "strconv.CanBackquote", scope: !3104, file: !3104, line: 205, type: !1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5879)
!5879 = !{!5880, !5881, !5882}
!5880 = !DILocalVariable(name: "s", arg: 1, scope: !5878, file: !3104, line: 205, type: !1347)
!5881 = !DILocalVariable(name: "r", scope: !5878, file: !3104, line: 207, type: !295)
!5882 = !DILocalVariable(name: "wid", scope: !5878, file: !3104, line: 207, type: !30)
!5883 = distinct !DILocation(line: 449, column: 36, scope: !5862, inlinedAt: !5869)
!5884 = !DILocation(line: 0, scope: !5878, inlinedAt: !5883)
!5885 = !DILocation(line: 205, column: 19, scope: !5878, inlinedAt: !5883)
!5886 = !DILocation(line: 206, column: 10, scope: !5878, inlinedAt: !5883)
!5887 = !DILocation(line: 206, column: 9, scope: !5878, inlinedAt: !5883)
!5888 = !DILocation(line: 206, column: 13, scope: !5878, inlinedAt: !5883)
!5889 = !DILocation(line: 207, column: 37, scope: !5878, inlinedAt: !5883)
!5890 = !DILocation(line: 207, column: 36, scope: !5878, inlinedAt: !5883)
!5891 = !DILocation(line: 207, column: 3, scope: !5878, inlinedAt: !5883)
!5892 = !DILocation(line: 207, column: 6, scope: !5878, inlinedAt: !5883)
!5893 = !DILocation(line: 208, column: 7, scope: !5878, inlinedAt: !5883)
!5894 = !DILocation(line: 208, column: 9, scope: !5878, inlinedAt: !5883)
!5895 = !DILocation(line: 208, column: 8, scope: !5878, inlinedAt: !5883)
!5896 = !DILocation(line: 210, column: 9, scope: !5878, inlinedAt: !5883)
!5897 = !DILocation(line: 215, column: 8, scope: !5878, inlinedAt: !5883)
!5898 = !DILocation(line: 218, column: 7, scope: !5878, inlinedAt: !5883)
!5899 = !DILocation(line: 218, column: 9, scope: !5878, inlinedAt: !5883)
!5900 = !DILocation(line: 218, column: 18, scope: !5878, inlinedAt: !5883)
!5901 = !DILocation(line: 218, column: 32, scope: !5878, inlinedAt: !5883)
!5902 = !DILocation(line: 218, column: 44, scope: !5878, inlinedAt: !5883)
!5903 = !DILocation(line: 208, column: 3, scope: !5878, inlinedAt: !5883)
!5904 = !DILocation(line: 209, column: 6, scope: !5878, inlinedAt: !5883)
!5905 = !DILocation(line: 209, column: 10, scope: !5878, inlinedAt: !5883)
!5906 = !DILocation(line: 210, column: 7, scope: !5878, inlinedAt: !5883)
!5907 = !DILocation(line: 215, column: 6, scope: !5878, inlinedAt: !5883)
!5908 = !DILocation(line: 450, column: 3, scope: !5862, inlinedAt: !5869)
!5909 = !DILocation(line: 450, column: 21, scope: !5862, inlinedAt: !5869)
!5910 = !DILocation(line: 450, column: 19, scope: !5862, inlinedAt: !5869)
!5911 = !DILocation(line: 450, column: 23, scope: !5862, inlinedAt: !5869)
!5912 = !DILocation(line: 450, column: 14, scope: !5862, inlinedAt: !5869)
!5913 = !DILocation(line: 451, column: 3, scope: !5862, inlinedAt: !5869)
!5914 = !DILocalVariable(name: "dst", arg: 1, scope: !5915, file: !3104, line: 143, type: !3107)
!5915 = distinct !DISubprogram(name: "strconv.AppendQuoteToASCII", linkageName: "strconv.AppendQuoteToASCII", scope: !3104, file: !3104, line: 143, type: !4375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5916)
!5916 = !{!5914, !5917}
!5917 = !DILocalVariable(name: "s", arg: 2, scope: !5915, file: !3104, line: 143, type: !1347)
!5918 = !DILocation(line: 143, column: 6, scope: !5915, inlinedAt: !5919)
!5919 = distinct !DILocation(line: 455, column: 35, scope: !5862, inlinedAt: !5869)
!5920 = !DILocation(line: 144, column: 26, scope: !5915, inlinedAt: !5919)
!5921 = !DILocation(line: 144, column: 31, scope: !5915, inlinedAt: !5919)
!5922 = !DILocation(line: 144, column: 25, scope: !5915, inlinedAt: !5919)
!5923 = !DILocation(line: 144, column: 2, scope: !5915, inlinedAt: !5919)
!5924 = !DILocation(line: 455, column: 8, scope: !5862, inlinedAt: !5869)
!5925 = !DILocalVariable(name: "dst", arg: 1, scope: !5926, file: !3104, line: 130, type: !3107)
!5926 = distinct !DISubprogram(name: "strconv.AppendQuote", linkageName: "strconv.AppendQuote", scope: !3104, file: !3104, line: 130, type: !4375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5927)
!5927 = !{!5925, !5928}
!5928 = !DILocalVariable(name: "s", arg: 2, scope: !5926, file: !3104, line: 130, type: !1347)
!5929 = !DILocation(line: 130, column: 6, scope: !5926, inlinedAt: !5930)
!5930 = distinct !DILocation(line: 457, column: 28, scope: !5862, inlinedAt: !5869)
!5931 = !DILocation(line: 131, column: 26, scope: !5926, inlinedAt: !5930)
!5932 = !DILocation(line: 131, column: 31, scope: !5926, inlinedAt: !5930)
!5933 = !DILocation(line: 131, column: 25, scope: !5926, inlinedAt: !5930)
!5934 = !DILocation(line: 131, column: 2, scope: !5926, inlinedAt: !5930)
!5935 = !DILocation(line: 457, column: 8, scope: !5862, inlinedAt: !5869)
!5936 = !DILocation(line: 453, column: 9, scope: !5862, inlinedAt: !5869)
!5937 = !DILocation(line: 453, column: 17, scope: !5862, inlinedAt: !5869)
!5938 = !DILocation(line: 453, column: 2, scope: !5862, inlinedAt: !5869)
!5939 = !DILocation(line: 454, column: 7, scope: !5862, inlinedAt: !5869)
!5940 = !DILocation(line: 457, column: 34, scope: !5862, inlinedAt: !5869)
!5941 = !DILocalVariable(name: "s", arg: 2, scope: !5942, file: !4820, line: 357, type: !1347)
!5942 = distinct !DISubprogram(name: "(*fmt.fmt).fmtS", linkageName: "(*fmt.fmt).fmtS", scope: !4820, file: !4820, line: 357, type: !5863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5943)
!5943 = !{!5944, !5941}
!5944 = !DILocalVariable(name: "f", arg: 1, scope: !5942, file: !4820, line: 357, type: !4861)
!5945 = !DILocation(line: 357, column: 15, scope: !5942, inlinedAt: !5946)
!5946 = distinct !DILocation(line: 447, column: 14, scope: !5845)
!5947 = !DILocation(line: 358, column: 6, scope: !5942, inlinedAt: !5946)
!5948 = !DILocation(line: 358, column: 23, scope: !5942, inlinedAt: !5946)
!5949 = !DILocation(line: 359, column: 13, scope: !5942, inlinedAt: !5946)
!5950 = distinct !DISubprogram(name: "(*fmt.pp).handleMethods", linkageName: "(*fmt.pp).handleMethods", scope: !1425, file: !1425, line: 574, type: !4703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !5951)
!5951 = !{!5952, !5953, !5954, !5955, !5956, !5957, !5958, !5960, !5961, !5962, !5964, !5965, !5966}
!5952 = !DILocalVariable(name: "p", arg: 1, scope: !5950, file: !1425, line: 574, type: !4705)
!5953 = !DILocalVariable(name: "verb", arg: 2, scope: !5950, file: !1425, line: 574, type: !295)
!5954 = !DILocalVariable(name: "err", scope: !5950, file: !1425, line: 581, type: !98)
!5955 = !DILocalVariable(name: "ok", scope: !5950, file: !1425, line: 581, type: !44)
!5956 = !DILocalVariable(name: "wrappedErr", scope: !5950, file: !1425, line: 128, type: !98)
!5957 = !DILocalVariable(name: "wrapErrs", scope: !5950, file: !1425, line: 126, type: !44)
!5958 = !DILocalVariable(name: "formatter", scope: !5950, file: !1425, line: 594, type: !5959)
!5959 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.Formatter", baseType: !99)
!5960 = !DILocalVariable(name: "ok", scope: !5950, file: !1425, line: 594, type: !44)
!5961 = !DILocalVariable(name: "handled", scope: !5950, file: !1425, line: 574, type: !44)
!5962 = !DILocalVariable(name: "stringer", scope: !5950, file: !1425, line: 603, type: !5963)
!5963 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.GoStringer", baseType: !99)
!5964 = !DILocalVariable(name: "ok", scope: !5950, file: !1425, line: 603, type: !44)
!5965 = !DILocalVariable(name: "v", scope: !5950, file: !1425, line: 620, type: !98)
!5966 = !DILocalVariable(name: "v", scope: !5950, file: !1425, line: 620, type: !5967)
!5967 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmt.Stringer", baseType: !99)
!5968 = !DILocation(line: 574, column: 14, scope: !5950)
!5969 = !DILocation(line: 575, column: 5, scope: !5950)
!5970 = !DILocation(line: 575, column: 7, scope: !5950)
!5971 = !DILocation(line: 896, column: 26, scope: !4658, inlinedAt: !5972)
!5972 = distinct !DILocation(line: 627, column: 4, scope: !5950)
!5973 = !DILocation(line: 0, scope: !5950)
!5974 = !DILocation(line: 576, column: 3, scope: !5950)
!5975 = !DILocation(line: 578, column: 5, scope: !5950)
!5976 = !DILocation(line: 594, column: 22, scope: !5950)
!5977 = !DILocation(line: 594, column: 24, scope: !5950)
!5978 = !DILocation(line: 594, column: 5, scope: !5950)
!5979 = !DILocation(line: 594, column: 41, scope: !5950)
!5980 = !DILocation(line: 602, column: 11, scope: !5950)
!5981 = !DILocation(line: 603, column: 22, scope: !5950)
!5982 = !DILocation(line: 603, column: 24, scope: !5950)
!5983 = !DILocation(line: 603, column: 6, scope: !5950)
!5984 = !DILocation(line: 603, column: 42, scope: !5950)
!5985 = !DILocation(line: 614, column: 10, scope: !5950)
!5986 = !DILocation(line: 620, column: 16, scope: !5950)
!5987 = !DILocation(line: 620, column: 18, scope: !5950)
!5988 = !DILocation(line: 621, column: 4, scope: !5950)
!5989 = !DILocation(line: 622, column: 5, scope: !5950)
!5990 = !DILocation(line: 623, column: 24, scope: !5950)
!5991 = !DILocation(line: 623, column: 26, scope: !5950)
!5992 = !DILocation(line: 623, column: 31, scope: !5950)
!5993 = !DILocation(line: 624, column: 17, scope: !5950)
!5994 = !DILocation(line: 624, column: 24, scope: !5950)
!5995 = !DILocation(line: 624, column: 16, scope: !5950)
!5996 = !DILocation(line: 628, column: 5, scope: !5950)
!5997 = !DILocation(line: 629, column: 24, scope: !5950)
!5998 = !DILocation(line: 629, column: 26, scope: !5950)
!5999 = !DILocation(line: 629, column: 31, scope: !5950)
!6000 = !DILocation(line: 630, column: 17, scope: !5950)
!6001 = !DILocation(line: 630, column: 16, scope: !5950)
!6002 = distinct !DISubprogram(name: "(*fmt.pp).printArg", linkageName: "(*fmt.pp).printArg", scope: !1425, file: !1425, line: 638, type: !6003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6005)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!4705, !99, !295}
!6005 = !{!6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6015, !6016, !6017, !6019, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032}
!6006 = !DILocalVariable(name: "p", arg: 1, scope: !6002, file: !1425, line: 638, type: !4705)
!6007 = !DILocalVariable(name: "arg", arg: 2, scope: !6002, file: !1425, line: 638, type: !99)
!6008 = !DILocalVariable(name: "verb", arg: 3, scope: !6002, file: !1425, line: 638, type: !295)
!6009 = !DILocalVariable(name: "arg", scope: !6002, file: !1425, line: 109, type: !99)
!6010 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !44)
!6011 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !1393)
!6012 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !140)
!6013 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !6014)
!6014 = !DIBasicType(name: "complex64", size: 64, encoding: DW_ATE_complex_float)
!6015 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !4876)
!6016 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !30)
!6017 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !6018)
!6018 = !DIBasicType(name: "int8", size: 8, encoding: DW_ATE_signed)
!6019 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !6020)
!6020 = !DIBasicType(name: "int16", size: 16, encoding: DW_ATE_signed)
!6021 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !1725)
!6022 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !1449)
!6023 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !27)
!6024 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !4)
!6025 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !318)
!6026 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !290)
!6027 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !41)
!6028 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !55)
!6029 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !1347)
!6030 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !3107)
!6031 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !1944)
!6032 = !DILocalVariable(name: "f", scope: !6002, file: !1425, line: 664, type: !99)
!6033 = !DILocation(line: 638, column: 14, scope: !6002)
!6034 = !DILocation(line: 639, column: 2, scope: !6002)
!6035 = !DILocation(line: 639, column: 4, scope: !6002)
!6036 = !DILocation(line: 649, column: 3, scope: !6002)
!6037 = !DILocation(line: 665, column: 2, scope: !6002)
!6038 = !DILocation(line: 666, column: 3, scope: !6002)
!6039 = !DILocation(line: 666, column: 13, scope: !6002)
!6040 = !DILocation(line: 666, column: 16, scope: !6002)
!6041 = !DILocation(line: 666, column: 12, scope: !6002)
!6042 = !DILocation(line: 0, scope: !6002)
!6043 = !DILocation(line: 668, column: 3, scope: !6002)
!6044 = !DILocation(line: 668, column: 22, scope: !6002)
!6045 = !DILocation(line: 668, column: 30, scope: !6002)
!6046 = !DILocation(line: 668, column: 13, scope: !6002)
!6047 = !DILocation(line: 669, column: 2, scope: !6002)
!6048 = !DILocation(line: 670, column: 3, scope: !6002)
!6049 = !DILocation(line: 670, column: 14, scope: !6002)
!6050 = !DILocation(line: 670, column: 21, scope: !6002)
!6051 = !DILocation(line: 670, column: 13, scope: !6002)
!6052 = !DILocation(line: 671, column: 2, scope: !6002)
!6053 = !DILocation(line: 672, column: 3, scope: !6002)
!6054 = !DILocation(line: 672, column: 27, scope: !6002)
!6055 = !DILocation(line: 672, column: 26, scope: !6002)
!6056 = !DILocation(line: 672, column: 35, scope: !6002)
!6057 = !DILocation(line: 672, column: 15, scope: !6002)
!6058 = !DILocation(line: 673, column: 2, scope: !6002)
!6059 = !DILocation(line: 674, column: 3, scope: !6002)
!6060 = !DILocation(line: 674, column: 16, scope: !6002)
!6061 = !DILocation(line: 674, column: 24, scope: !6002)
!6062 = !DILocation(line: 674, column: 15, scope: !6002)
!6063 = !DILocation(line: 675, column: 2, scope: !6002)
!6064 = !DILocation(line: 676, column: 3, scope: !6002)
!6065 = !DILocation(line: 676, column: 23, scope: !6002)
!6066 = !DILocation(line: 676, column: 22, scope: !6002)
!6067 = !DILocation(line: 676, column: 35, scope: !6002)
!6068 = !DILocation(line: 676, column: 15, scope: !6002)
!6069 = !DILocation(line: 677, column: 2, scope: !6002)
!6070 = !DILocation(line: 678, column: 3, scope: !6002)
!6071 = !DILocation(line: 678, column: 23, scope: !6002)
!6072 = !DILocation(line: 678, column: 22, scope: !6002)
!6073 = !DILocation(line: 678, column: 35, scope: !6002)
!6074 = !DILocation(line: 678, column: 15, scope: !6002)
!6075 = !DILocation(line: 679, column: 2, scope: !6002)
!6076 = !DILocation(line: 680, column: 3, scope: !6002)
!6077 = !DILocation(line: 680, column: 23, scope: !6002)
!6078 = !DILocation(line: 680, column: 22, scope: !6002)
!6079 = !DILocation(line: 680, column: 35, scope: !6002)
!6080 = !DILocation(line: 680, column: 15, scope: !6002)
!6081 = !DILocation(line: 682, column: 3, scope: !6002)
!6082 = !DILocation(line: 682, column: 23, scope: !6002)
!6083 = !DILocation(line: 682, column: 22, scope: !6002)
!6084 = !DILocation(line: 682, column: 35, scope: !6002)
!6085 = !DILocation(line: 682, column: 15, scope: !6002)
!6086 = !DILocation(line: 683, column: 2, scope: !6002)
!6087 = !DILocation(line: 684, column: 3, scope: !6002)
!6088 = !DILocation(line: 684, column: 23, scope: !6002)
!6089 = !DILocation(line: 684, column: 35, scope: !6002)
!6090 = !DILocation(line: 684, column: 15, scope: !6002)
!6091 = !DILocation(line: 686, column: 3, scope: !6002)
!6092 = !DILocation(line: 686, column: 23, scope: !6002)
!6093 = !DILocation(line: 686, column: 22, scope: !6002)
!6094 = !DILocation(line: 686, column: 37, scope: !6002)
!6095 = !DILocation(line: 686, column: 15, scope: !6002)
!6096 = !DILocation(line: 688, column: 3, scope: !6002)
!6097 = !DILocation(line: 688, column: 23, scope: !6002)
!6098 = !DILocation(line: 688, column: 22, scope: !6002)
!6099 = !DILocation(line: 688, column: 37, scope: !6002)
!6100 = !DILocation(line: 688, column: 15, scope: !6002)
!6101 = !DILocation(line: 690, column: 3, scope: !6002)
!6102 = !DILocation(line: 690, column: 23, scope: !6002)
!6103 = !DILocation(line: 690, column: 22, scope: !6002)
!6104 = !DILocation(line: 690, column: 37, scope: !6002)
!6105 = !DILocation(line: 690, column: 15, scope: !6002)
!6106 = !DILocation(line: 692, column: 3, scope: !6002)
!6107 = !DILocation(line: 692, column: 23, scope: !6002)
!6108 = !DILocation(line: 692, column: 22, scope: !6002)
!6109 = !DILocation(line: 692, column: 37, scope: !6002)
!6110 = !DILocation(line: 692, column: 15, scope: !6002)
!6111 = !DILocation(line: 693, column: 2, scope: !6002)
!6112 = !DILocation(line: 694, column: 3, scope: !6002)
!6113 = !DILocation(line: 694, column: 16, scope: !6002)
!6114 = !DILocation(line: 694, column: 29, scope: !6002)
!6115 = !DILocation(line: 694, column: 15, scope: !6002)
!6116 = !DILocation(line: 696, column: 3, scope: !6002)
!6117 = !DILocation(line: 696, column: 23, scope: !6002)
!6118 = !DILocation(line: 696, column: 22, scope: !6002)
!6119 = !DILocation(line: 696, column: 37, scope: !6002)
!6120 = !DILocation(line: 696, column: 15, scope: !6002)
!6121 = !DILocation(line: 697, column: 2, scope: !6002)
!6122 = !DILocation(line: 698, column: 3, scope: !6002)
!6123 = !DILocation(line: 698, column: 15, scope: !6002)
!6124 = !DILocation(line: 698, column: 18, scope: !6002)
!6125 = !DILocation(line: 698, column: 14, scope: !6002)
!6126 = !DILocation(line: 0, scope: !6127, inlinedAt: !6139)
!6127 = distinct !DISubprogram(name: "(*fmt.pp).fmtBytes", linkageName: "(*fmt.pp).fmtBytes", scope: !1425, file: !1425, line: 462, type: !6128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6130)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!4705, !3107, !295, !1347}
!6130 = !{!6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138}
!6131 = !DILocalVariable(name: "p", arg: 1, scope: !6127, file: !1425, line: 462, type: !4705)
!6132 = !DILocalVariable(name: "v", arg: 2, scope: !6127, file: !1425, line: 462, type: !3107)
!6133 = !DILocalVariable(name: "verb", arg: 3, scope: !6127, file: !1425, line: 462, type: !295)
!6134 = !DILocalVariable(name: "typeString", arg: 4, scope: !6127, file: !1425, line: 462, type: !1347)
!6135 = !DILocalVariable(name: "i", scope: !6127, file: !1425, line: 472, type: !30)
!6136 = !DILocalVariable(name: "c", scope: !6127, file: !1425, line: 472, type: !72)
!6137 = !DILocalVariable(name: "i", scope: !6127, file: !1425, line: 481, type: !30)
!6138 = !DILocalVariable(name: "c", scope: !6127, file: !1425, line: 481, type: !72)
!6139 = distinct !DILocation(line: 700, column: 13, scope: !6002)
!6140 = !DILocation(line: 472, column: 22, scope: !6127, inlinedAt: !6139)
!6141 = !DILocation(line: 476, column: 5, scope: !6127, inlinedAt: !6139)
!6142 = !DILocation(line: 476, column: 22, scope: !6127, inlinedAt: !6139)
!6143 = !DILocation(line: 476, column: 21, scope: !6127, inlinedAt: !6139)
!6144 = !DILocation(line: 476, column: 14, scope: !6127, inlinedAt: !6139)
!6145 = !DILocation(line: 481, column: 22, scope: !6127, inlinedAt: !6139)
!6146 = !DILocation(line: 699, column: 2, scope: !6002)
!6147 = !DILocation(line: 700, column: 3, scope: !6002)
!6148 = !DILocation(line: 700, column: 14, scope: !6002)
!6149 = !DILocation(line: 700, column: 17, scope: !6002)
!6150 = !DILocation(line: 462, column: 14, scope: !6127, inlinedAt: !6139)
!6151 = !DILocation(line: 463, column: 9, scope: !6127, inlinedAt: !6139)
!6152 = !DILocation(line: 465, column: 6, scope: !6127, inlinedAt: !6139)
!6153 = !DILocation(line: 465, column: 8, scope: !6127, inlinedAt: !6139)
!6154 = !DILocation(line: 465, column: 12, scope: !6127, inlinedAt: !6139)
!6155 = !DILocation(line: 466, column: 22, scope: !6127, inlinedAt: !6139)
!6156 = !DILocation(line: 466, column: 21, scope: !6127, inlinedAt: !6139)
!6157 = !DILocation(line: 467, column: 7, scope: !6127, inlinedAt: !6139)
!6158 = !DILocation(line: 467, column: 9, scope: !6127, inlinedAt: !6139)
!6159 = !DILocation(line: 471, column: 4, scope: !6127, inlinedAt: !6139)
!6160 = !DILocation(line: 468, column: 22, scope: !6127, inlinedAt: !6139)
!6161 = !DILocation(line: 469, column: 5, scope: !6127, inlinedAt: !6139)
!6162 = !DILocation(line: 471, column: 19, scope: !6127, inlinedAt: !6139)
!6163 = !DILocation(line: 472, column: 11, scope: !6127, inlinedAt: !6139)
!6164 = !DILocation(line: 473, column: 8, scope: !6127, inlinedAt: !6139)
!6165 = !DILocation(line: 473, column: 10, scope: !6127, inlinedAt: !6139)
!6166 = !DILocation(line: 474, column: 6, scope: !6127, inlinedAt: !6139)
!6167 = !DILocation(line: 474, column: 23, scope: !6127, inlinedAt: !6139)
!6168 = !DILocation(line: 478, column: 4, scope: !6127, inlinedAt: !6139)
!6169 = !DILocation(line: 478, column: 19, scope: !6127, inlinedAt: !6139)
!6170 = !DILocation(line: 480, column: 19, scope: !6127, inlinedAt: !6139)
!6171 = !DILocation(line: 481, column: 11, scope: !6127, inlinedAt: !6139)
!6172 = !DILocation(line: 482, column: 8, scope: !6127, inlinedAt: !6139)
!6173 = !DILocation(line: 482, column: 10, scope: !6127, inlinedAt: !6139)
!6174 = !DILocation(line: 483, column: 6, scope: !6127, inlinedAt: !6139)
!6175 = !DILocation(line: 483, column: 21, scope: !6127, inlinedAt: !6139)
!6176 = !DILocation(line: 485, column: 5, scope: !6127, inlinedAt: !6139)
!6177 = !DILocation(line: 485, column: 29, scope: !6127, inlinedAt: !6139)
!6178 = !DILocation(line: 485, column: 28, scope: !6127, inlinedAt: !6139)
!6179 = !DILocation(line: 485, column: 47, scope: !6127, inlinedAt: !6139)
!6180 = !DILocation(line: 485, column: 21, scope: !6127, inlinedAt: !6139)
!6181 = !DILocation(line: 487, column: 4, scope: !6127, inlinedAt: !6139)
!6182 = !DILocation(line: 487, column: 19, scope: !6127, inlinedAt: !6139)
!6183 = !DILocation(line: 701, column: 2, scope: !6002)
!6184 = !DILocation(line: 664, column: 9, scope: !6002)
!6185 = !DILocation(line: 704, column: 6, scope: !6002)
!6186 = !DILocation(line: 704, column: 15, scope: !6002)
!6187 = !DILocation(line: 713, column: 7, scope: !6002)
!6188 = !DILocation(line: 713, column: 23, scope: !6002)
!6189 = !DILocation(line: 713, column: 22, scope: !6002)
!6190 = !DILocation(line: 716, column: 4, scope: !6002)
!6191 = !DILocation(line: 716, column: 33, scope: !6002)
!6192 = !DILocation(line: 716, column: 32, scope: !6002)
!6193 = !DILocation(line: 716, column: 37, scope: !6002)
!6194 = !DILocation(line: 716, column: 16, scope: !6002)
!6195 = !DILocation(line: 639, column: 10, scope: !6002)
!6196 = !DILocation(line: 640, column: 2, scope: !6002)
!6197 = !DILocation(line: 640, column: 4, scope: !6002)
!6198 = !DILocation(line: 640, column: 25, scope: !6002)
!6199 = !DILocation(line: 654, column: 9, scope: !6002)
!6200 = !DILocation(line: 645, column: 4, scope: !6002)
!6201 = !DILocation(line: 645, column: 6, scope: !6002)
!6202 = !DILocation(line: 645, column: 19, scope: !6002)
!6203 = !DILocation(line: 704, column: 21, scope: !6002)
!6204 = !DILocation(line: 704, column: 35, scope: !6002)
!6205 = !DILocation(line: 705, column: 4, scope: !6002)
!6206 = !DILocation(line: 705, column: 23, scope: !6002)
!6207 = !DILocation(line: 705, column: 6, scope: !6002)
!6208 = !DILocation(line: 706, column: 23, scope: !6002)
!6209 = !DILocation(line: 706, column: 22, scope: !6002)
!6210 = !DILocation(line: 710, column: 3, scope: !6002)
!6211 = !DILocation(line: 710, column: 16, scope: !6002)
!6212 = !DILocation(line: 710, column: 19, scope: !6002)
!6213 = !DILocation(line: 710, column: 15, scope: !6002)
!6214 = distinct !DISubprogram(name: "(*fmt.pp).printValue", linkageName: "(*fmt.pp).printValue", scope: !1425, file: !1425, line: 723, type: !6215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!4705, !1944, !295, !30}
!6217 = !{!6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6236, !6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245, !6246, !6247}
!6218 = !DILocalVariable(name: "p", arg: 1, scope: !6214, file: !1425, line: 723, type: !4705)
!6219 = !DILocalVariable(name: "value", arg: 2, scope: !6214, file: !1425, line: 723, type: !1944)
!6220 = !DILocalVariable(name: "verb", arg: 3, scope: !6214, file: !1425, line: 723, type: !295)
!6221 = !DILocalVariable(name: "depth", arg: 4, scope: !6214, file: !1425, line: 723, type: !30)
!6222 = !DILocalVariable(name: "arg", scope: !6214, file: !1425, line: 109, type: !99)
!6223 = !DILocalVariable(name: "value", scope: !6214, file: !1425, line: 112, type: !1944)
!6224 = !DILocalVariable(name: "f", scope: !6214, file: !1425, line: 734, type: !1944)
!6225 = !DILocalVariable(name: "sorted", scope: !6214, file: !1425, line: 773, type: !6226)
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 32, align: 32, dwarfAddressSpace: 0)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "internal/fmtsort.SortedMap", baseType: !6228)
!6228 = !DICompositeType(tag: DW_TAG_structure_type, size: 192, align: 32, elements: !6229)
!6229 = !{!6230, !6235}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "Key", baseType: !6231, size: 96, align: 32)
!6231 = !DICompositeType(tag: DW_TAG_structure_type, name: "[]reflect.Value", size: 96, align: 32, elements: !6232)
!6232 = !{!6233, !296, !297}
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", baseType: !6234, size: 32, align: 32)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32, align: 32, dwarfAddressSpace: 0)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "Value", baseType: !6231, size: 96, align: 32, offset: 96)
!6236 = !DILocalVariable(name: "i", scope: !6214, file: !1425, line: 774, type: !30)
!6237 = !DILocalVariable(name: "key", scope: !6214, file: !1425, line: 774, type: !1944)
!6238 = !DILocalVariable(name: "i", scope: !6214, file: !1425, line: 796, type: !30)
!6239 = !DILocalVariable(name: "Name", scope: !6214, file: !2062, line: 479, type: !1347)
!6240 = !DILocalVariable(name: "name", scope: !6214, file: !1425, line: 805, type: !1347)
!6241 = !DILocalVariable(name: "value", scope: !6214, file: !1425, line: 814, type: !1944)
!6242 = !DILocalVariable(name: "t", scope: !6214, file: !1425, line: 829, type: !84)
!6243 = !DILocalVariable(name: "bytes", scope: !6214, file: !1425, line: 831, type: !3107)
!6244 = !DILocalVariable(name: "i", scope: !6214, file: !1425, line: 841, type: !30)
!6245 = !DILocalVariable(name: "i", scope: !6214, file: !1425, line: 856, type: !30)
!6246 = !DILocalVariable(name: "i", scope: !6214, file: !1425, line: 865, type: !30)
!6247 = !DILocalVariable(name: "a", scope: !6214, file: !1425, line: 877, type: !1944)
!6248 = !DILocation(line: 502, column: 14, scope: !6249, inlinedAt: !6257)
!6249 = distinct !DISubprogram(name: "(*fmt.pp).fmtPointer", linkageName: "(*fmt.pp).fmtPointer", scope: !1425, file: !1425, line: 502, type: !6250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6252)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!4705, !1944, !295}
!6252 = !{!6253, !6254, !6255, !6256}
!6253 = !DILocalVariable(name: "p", arg: 1, scope: !6249, file: !1425, line: 502, type: !4705)
!6254 = !DILocalVariable(name: "value", arg: 2, scope: !6249, file: !1425, line: 502, type: !1944)
!6255 = !DILocalVariable(name: "verb", arg: 3, scope: !6249, file: !1425, line: 502, type: !295)
!6256 = !DILocalVariable(name: "u", scope: !6249, file: !1425, line: 503, type: !55)
!6257 = distinct !DILocation(line: 886, column: 15, scope: !6214)
!6258 = !DILocation(line: 320, column: 14, scope: !6259, inlinedAt: !6265)
!6259 = distinct !DISubprogram(name: "(*fmt.pp).unknownType", linkageName: "(*fmt.pp).unknownType", scope: !1425, file: !1425, line: 320, type: !6260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6262)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!4705, !1944}
!6262 = !{!6263, !6264}
!6263 = !DILocalVariable(name: "p", arg: 1, scope: !6259, file: !1425, line: 320, type: !4705)
!6264 = !DILocalVariable(name: "v", arg: 2, scope: !6259, file: !1425, line: 320, type: !1944)
!6265 = distinct !DILocation(line: 888, column: 16, scope: !6214)
!6266 = !DILocation(line: 290, column: 6, scope: !6267, inlinedAt: !6272)
!6267 = distinct !DISubprogram(name: "fmt.getField", linkageName: "fmt.getField", scope: !1425, file: !1425, line: 290, type: !2476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6268)
!6268 = !{!6269, !6270, !6271}
!6269 = !DILocalVariable(name: "v", arg: 1, scope: !6267, file: !1425, line: 290, type: !1944)
!6270 = !DILocalVariable(name: "i", arg: 2, scope: !6267, file: !1425, line: 290, type: !30)
!6271 = !DILocalVariable(name: "val", scope: !6267, file: !1425, line: 291, type: !1944)
!6272 = distinct !DILocation(line: 810, column: 25, scope: !6214)
!6273 = !DILocation(line: 52, column: 6, scope: !6274, inlinedAt: !6286)
!6274 = distinct !DISubprogram(name: "internal/fmtsort.Sort", linkageName: "internal/fmtsort.Sort", scope: !6275, file: !6275, line: 52, type: !1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6276)
!6275 = !DIFile(filename: "sort.go", directory: "/usr/local/go/src/internal/fmtsort")
!6276 = !{!6277, !6278, !6279, !6280, !6281, !6285}
!6277 = !DILocalVariable(name: "mapValue", arg: 1, scope: !6274, file: !6275, line: 52, type: !1944)
!6278 = !DILocalVariable(name: "n", scope: !6274, file: !6275, line: 59, type: !30)
!6279 = !DILocalVariable(name: "key", scope: !6274, file: !6275, line: 60, type: !6231)
!6280 = !DILocalVariable(name: "value", scope: !6274, file: !6275, line: 61, type: !6231)
!6281 = !DILocalVariable(name: "iter", scope: !6274, file: !6275, line: 62, type: !6282)
!6282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6283, size: 32, align: 32, dwarfAddressSpace: 0)
!6283 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.MapIter", baseType: !6284)
!6284 = !DICompositeType(tag: DW_TAG_structure_type, align: 8, elements: !79)
!6285 = !DILocalVariable(name: "sorted", scope: !6274, file: !6275, line: 67, type: !6226)
!6286 = distinct !DILocation(line: 773, column: 25, scope: !6214)
!6287 = !DILocation(line: 723, column: 14, scope: !6214)
!6288 = !DILocation(line: 0, scope: !6214)
!6289 = !DILocation(line: 725, column: 11, scope: !6214)
!6290 = !DILocation(line: 728, column: 4, scope: !6214)
!6291 = !DILocation(line: 731, column: 2, scope: !6214)
!6292 = !DILocation(line: 731, column: 4, scope: !6214)
!6293 = !DILocation(line: 736, column: 6, scope: !6214)
!6294 = !DILocation(line: 736, column: 12, scope: !6214)
!6295 = !DILocation(line: 796, column: 7, scope: !6214)
!6296 = !DILocation(line: 796, column: 15, scope: !6214)
!6297 = !DILocation(line: 796, column: 19, scope: !6214)
!6298 = !DILocation(line: 796, column: 29, scope: !6214)
!6299 = !DILocation(line: 796, column: 17, scope: !6214)
!6300 = !DILocation(line: 797, column: 7, scope: !6214)
!6301 = !DILocation(line: 797, column: 9, scope: !6214)
!6302 = !DILocation(line: 814, column: 12, scope: !6214)
!6303 = !DILocation(line: 814, column: 18, scope: !6214)
!6304 = !DILocation(line: 814, column: 3, scope: !6214)
!6305 = !DILocation(line: 815, column: 20, scope: !6214)
!6306 = !DILocation(line: 816, column: 7, scope: !6214)
!6307 = !DILocation(line: 856, column: 8, scope: !6214)
!6308 = !DILocation(line: 856, column: 16, scope: !6214)
!6309 = !DILocation(line: 856, column: 20, scope: !6214)
!6310 = !DILocation(line: 856, column: 25, scope: !6214)
!6311 = !DILocation(line: 856, column: 18, scope: !6214)
!6312 = !DILocation(line: 857, column: 8, scope: !6214)
!6313 = !DILocation(line: 857, column: 10, scope: !6214)
!6314 = !DILocation(line: 865, column: 8, scope: !6214)
!6315 = !DILocation(line: 865, column: 16, scope: !6214)
!6316 = !DILocation(line: 865, column: 20, scope: !6214)
!6317 = !DILocation(line: 865, column: 25, scope: !6214)
!6318 = !DILocation(line: 865, column: 18, scope: !6214)
!6319 = !DILocation(line: 866, column: 8, scope: !6214)
!6320 = !DILocation(line: 866, column: 10, scope: !6214)
!6321 = !DILocation(line: 876, column: 6, scope: !6214)
!6322 = !DILocation(line: 876, column: 12, scope: !6214)
!6323 = !DILocation(line: 877, column: 16, scope: !6214)
!6324 = !DILocation(line: 877, column: 22, scope: !6214)
!6325 = !DILocation(line: 877, column: 11, scope: !6214)
!6326 = !DILocation(line: 877, column: 32, scope: !6214)
!6327 = !DILocation(line: 725, column: 18, scope: !6214)
!6328 = !DILocation(line: 725, column: 31, scope: !6214)
!6329 = !DILocation(line: 725, column: 37, scope: !6214)
!6330 = !DILocation(line: 725, column: 55, scope: !6214)
!6331 = !DILocation(line: 726, column: 3, scope: !6214)
!6332 = !DILocation(line: 726, column: 5, scope: !6214)
!6333 = !DILocation(line: 726, column: 11, scope: !6214)
!6334 = !DILocation(line: 726, column: 26, scope: !6214)
!6335 = !DILocation(line: 727, column: 6, scope: !6214)
!6336 = !DILocation(line: 727, column: 22, scope: !6214)
!6337 = !DILocation(line: 727, column: 21, scope: !6214)
!6338 = !DILocation(line: 732, column: 2, scope: !6214)
!6339 = !DILocation(line: 732, column: 4, scope: !6214)
!6340 = !DILocation(line: 732, column: 12, scope: !6214)
!6341 = !DILocation(line: 734, column: 14, scope: !6214)
!6342 = !DILocation(line: 734, column: 9, scope: !6214)
!6343 = !DILocation(line: 734, column: 31, scope: !6214)
!6344 = !DILocation(line: 737, column: 4, scope: !6214)
!6345 = !DILocation(line: 737, column: 21, scope: !6214)
!6346 = !DILocation(line: 739, column: 11, scope: !6214)
!6347 = !DILocation(line: 743, column: 5, scope: !6214)
!6348 = !DILocation(line: 741, column: 22, scope: !6214)
!6349 = !DILocation(line: 747, column: 3, scope: !6214)
!6350 = !DILocation(line: 747, column: 13, scope: !6214)
!6351 = !DILocation(line: 747, column: 19, scope: !6214)
!6352 = !DILocation(line: 747, column: 23, scope: !6214)
!6353 = !DILocation(line: 747, column: 12, scope: !6214)
!6354 = !DILocation(line: 749, column: 3, scope: !6214)
!6355 = !DILocation(line: 749, column: 23, scope: !6214)
!6356 = !DILocation(line: 749, column: 28, scope: !6214)
!6357 = !DILocation(line: 749, column: 41, scope: !6214)
!6358 = !DILocation(line: 749, column: 15, scope: !6214)
!6359 = !DILocation(line: 751, column: 3, scope: !6214)
!6360 = !DILocation(line: 751, column: 16, scope: !6214)
!6361 = !DILocation(line: 751, column: 22, scope: !6214)
!6362 = !DILocation(line: 751, column: 36, scope: !6214)
!6363 = !DILocation(line: 751, column: 15, scope: !6214)
!6364 = !DILocation(line: 753, column: 3, scope: !6214)
!6365 = !DILocation(line: 753, column: 14, scope: !6214)
!6366 = !DILocation(line: 753, column: 21, scope: !6214)
!6367 = !DILocation(line: 753, column: 29, scope: !6214)
!6368 = !DILocation(line: 753, column: 13, scope: !6214)
!6369 = !DILocation(line: 755, column: 3, scope: !6214)
!6370 = !DILocation(line: 755, column: 14, scope: !6214)
!6371 = !DILocation(line: 755, column: 21, scope: !6214)
!6372 = !DILocation(line: 755, column: 29, scope: !6214)
!6373 = !DILocation(line: 755, column: 13, scope: !6214)
!6374 = !DILocation(line: 757, column: 3, scope: !6214)
!6375 = !DILocation(line: 757, column: 16, scope: !6214)
!6376 = !DILocation(line: 757, column: 25, scope: !6214)
!6377 = !DILocation(line: 757, column: 33, scope: !6214)
!6378 = !DILocation(line: 757, column: 15, scope: !6214)
!6379 = !DILocation(line: 759, column: 3, scope: !6214)
!6380 = !DILocation(line: 759, column: 16, scope: !6214)
!6381 = !DILocation(line: 759, column: 25, scope: !6214)
!6382 = !DILocation(line: 759, column: 34, scope: !6214)
!6383 = !DILocation(line: 759, column: 15, scope: !6214)
!6384 = !DILocation(line: 761, column: 3, scope: !6214)
!6385 = !DILocation(line: 761, column: 15, scope: !6214)
!6386 = !DILocation(line: 761, column: 23, scope: !6214)
!6387 = !DILocation(line: 761, column: 27, scope: !6214)
!6388 = !DILocation(line: 761, column: 14, scope: !6214)
!6389 = !DILocation(line: 763, column: 6, scope: !6214)
!6390 = !DILocation(line: 763, column: 12, scope: !6214)
!6391 = !DILocation(line: 764, column: 22, scope: !6214)
!6392 = !DILocation(line: 764, column: 28, scope: !6214)
!6393 = !DILocation(line: 764, column: 21, scope: !6214)
!6394 = !DILocation(line: 765, column: 14, scope: !6214)
!6395 = !DILocation(line: 769, column: 4, scope: !6214)
!6396 = !DILocation(line: 766, column: 22, scope: !6214)
!6397 = !DILocation(line: 767, column: 5, scope: !6214)
!6398 = !DILocation(line: 769, column: 19, scope: !6214)
!6399 = !DILocation(line: 773, column: 26, scope: !6214)
!6400 = !DILocation(line: 0, scope: !6274, inlinedAt: !6286)
!6401 = !DILocation(line: 53, column: 5, scope: !6274, inlinedAt: !6286)
!6402 = !DILocation(line: 53, column: 18, scope: !6274, inlinedAt: !6286)
!6403 = !DILocation(line: 53, column: 25, scope: !6274, inlinedAt: !6286)
!6404 = !DILocation(line: 53, column: 28, scope: !6274, inlinedAt: !6286)
!6405 = !DILocation(line: 59, column: 7, scope: !6274, inlinedAt: !6286)
!6406 = !DILocation(line: 59, column: 19, scope: !6274, inlinedAt: !6286)
!6407 = !DILocation(line: 60, column: 34, scope: !6274, inlinedAt: !6286)
!6408 = !DILocation(line: 60, column: 13, scope: !6274, inlinedAt: !6286)
!6409 = !DILocation(line: 60, column: 2, scope: !6274, inlinedAt: !6286)
!6410 = !DILocation(line: 61, column: 36, scope: !6274, inlinedAt: !6286)
!6411 = !DILocation(line: 61, column: 15, scope: !6274, inlinedAt: !6286)
!6412 = !DILocation(line: 61, column: 2, scope: !6274, inlinedAt: !6286)
!6413 = !DILocation(line: 62, column: 10, scope: !6274, inlinedAt: !6286)
!6414 = !DILocation(line: 62, column: 27, scope: !6274, inlinedAt: !6286)
!6415 = !DILocation(line: 54, column: 3, scope: !6274, inlinedAt: !6286)
!6416 = !DILocation(line: 773, column: 3, scope: !6214)
!6417 = !DILocation(line: 774, column: 30, scope: !6214)
!6418 = !DILocation(line: 771, column: 21, scope: !6214)
!6419 = !DILocation(line: 792, column: 6, scope: !6214)
!6420 = !DILocation(line: 792, column: 12, scope: !6214)
!6421 = !DILocation(line: 793, column: 4, scope: !6214)
!6422 = !DILocation(line: 793, column: 6, scope: !6214)
!6423 = !DILocation(line: 793, column: 22, scope: !6214)
!6424 = !DILocation(line: 793, column: 28, scope: !6214)
!6425 = !DILocation(line: 793, column: 21, scope: !6214)
!6426 = !DILocation(line: 795, column: 3, scope: !6214)
!6427 = !DILocation(line: 795, column: 5, scope: !6214)
!6428 = !DILocation(line: 795, column: 18, scope: !6214)
!6429 = !DILocation(line: 0, scope: !6267, inlinedAt: !6272)
!6430 = !DILocation(line: 798, column: 8, scope: !6214)
!6431 = !DILocation(line: 798, column: 14, scope: !6214)
!6432 = !DILocation(line: 799, column: 23, scope: !6214)
!6433 = !DILocation(line: 801, column: 21, scope: !6214)
!6434 = !DILocation(line: 804, column: 7, scope: !6214)
!6435 = !DILocation(line: 804, column: 13, scope: !6214)
!6436 = !DILocation(line: 805, column: 16, scope: !6214)
!6437 = !DILocation(line: 805, column: 22, scope: !6214)
!6438 = !DILocation(line: 805, column: 31, scope: !6214)
!6439 = !DILocation(line: 805, column: 30, scope: !6214)
!6440 = !DILocation(line: 805, column: 34, scope: !6214)
!6441 = !DILocation(line: 805, column: 40, scope: !6214)
!6442 = !DILocation(line: 805, column: 45, scope: !6214)
!6443 = !DILocation(line: 22, column: 6, scope: !2496, inlinedAt: !6444)
!6444 = distinct !DILocation(line: 805, column: 45, scope: !6214)
!6445 = !DILocation(line: 23, column: 9, scope: !2496, inlinedAt: !6444)
!6446 = !DILocation(line: 23, column: 19, scope: !2496, inlinedAt: !6444)
!6447 = !DILocation(line: 23, column: 12, scope: !2496, inlinedAt: !6444)
!6448 = !DILocation(line: 806, column: 6, scope: !6214)
!6449 = !DILocation(line: 806, column: 24, scope: !6214)
!6450 = !DILocation(line: 806, column: 23, scope: !6214)
!6451 = !DILocation(line: 807, column: 21, scope: !6214)
!6452 = !DILocation(line: 810, column: 4, scope: !6214)
!6453 = !DILocation(line: 810, column: 26, scope: !6214)
!6454 = !DILocation(line: 810, column: 29, scope: !6214)
!6455 = !DILocation(line: 291, column: 9, scope: !6267, inlinedAt: !6272)
!6456 = !DILocation(line: 291, column: 16, scope: !6267, inlinedAt: !6272)
!6457 = !DILocation(line: 291, column: 2, scope: !6267, inlinedAt: !6272)
!6458 = !DILocation(line: 292, column: 13, scope: !6267, inlinedAt: !6272)
!6459 = !DILocation(line: 292, column: 16, scope: !6267, inlinedAt: !6272)
!6460 = !DILocation(line: 292, column: 41, scope: !6267, inlinedAt: !6272)
!6461 = !DILocation(line: 292, column: 50, scope: !6267, inlinedAt: !6272)
!6462 = !DILocation(line: 293, column: 9, scope: !6267, inlinedAt: !6272)
!6463 = !DILocation(line: 293, column: 17, scope: !6267, inlinedAt: !6272)
!6464 = !DILocation(line: 293, column: 3, scope: !6267, inlinedAt: !6272)
!6465 = !DILocation(line: 295, column: 9, scope: !6267, inlinedAt: !6272)
!6466 = !DILocation(line: 295, column: 2, scope: !6267, inlinedAt: !6272)
!6467 = !DILocation(line: 810, column: 33, scope: !6214)
!6468 = !DILocation(line: 810, column: 39, scope: !6214)
!6469 = !DILocation(line: 810, column: 16, scope: !6214)
!6470 = !DILocation(line: 796, column: 33, scope: !6214)
!6471 = !DILocation(line: 804, column: 22, scope: !6214)
!6472 = !DILocation(line: 804, column: 28, scope: !6214)
!6473 = !DILocation(line: 812, column: 3, scope: !6214)
!6474 = !DILocation(line: 812, column: 18, scope: !6214)
!6475 = !DILocation(line: 823, column: 17, scope: !6214)
!6476 = !DILocation(line: 823, column: 24, scope: !6214)
!6477 = !DILocation(line: 823, column: 30, scope: !6214)
!6478 = !DILocation(line: 823, column: 35, scope: !6214)
!6479 = !DILocation(line: 823, column: 16, scope: !6214)
!6480 = !DILocation(line: 816, column: 13, scope: !6214)
!6481 = !DILocation(line: 820, column: 5, scope: !6214)
!6482 = !DILocation(line: 817, column: 23, scope: !6214)
!6483 = !DILocation(line: 817, column: 29, scope: !6214)
!6484 = !DILocation(line: 817, column: 22, scope: !6214)
!6485 = !DILocation(line: 818, column: 5, scope: !6214)
!6486 = !DILocation(line: 818, column: 22, scope: !6214)
!6487 = !DILocation(line: 820, column: 22, scope: !6214)
!6488 = !DILocation(line: 826, column: 10, scope: !6214)
!6489 = !DILocation(line: 849, column: 6, scope: !6214)
!6490 = !DILocation(line: 849, column: 12, scope: !6214)
!6491 = !DILocation(line: 850, column: 22, scope: !6214)
!6492 = !DILocation(line: 850, column: 28, scope: !6214)
!6493 = !DILocation(line: 850, column: 21, scope: !6214)
!6494 = !DILocation(line: 851, column: 13, scope: !6214)
!6495 = !DILocation(line: 851, column: 16, scope: !6214)
!6496 = !DILocation(line: 851, column: 36, scope: !6214)
!6497 = !DILocation(line: 851, column: 43, scope: !6214)
!6498 = !DILocation(line: 852, column: 5, scope: !6214)
!6499 = !DILocation(line: 852, column: 22, scope: !6214)
!6500 = !DILocation(line: 853, column: 5, scope: !6214)
!6501 = !DILocation(line: 855, column: 4, scope: !6214)
!6502 = !DILocation(line: 855, column: 19, scope: !6214)
!6503 = !DILocation(line: 858, column: 6, scope: !6214)
!6504 = !DILocation(line: 858, column: 23, scope: !6214)
!6505 = !DILocation(line: 860, column: 5, scope: !6214)
!6506 = !DILocation(line: 860, column: 18, scope: !6214)
!6507 = !DILocation(line: 860, column: 26, scope: !6214)
!6508 = !DILocation(line: 860, column: 25, scope: !6214)
!6509 = !DILocation(line: 860, column: 30, scope: !6214)
!6510 = !DILocation(line: 860, column: 36, scope: !6214)
!6511 = !DILocation(line: 860, column: 17, scope: !6214)
!6512 = !DILocation(line: 856, column: 29, scope: !6214)
!6513 = !DILocation(line: 862, column: 4, scope: !6214)
!6514 = !DILocation(line: 862, column: 19, scope: !6214)
!6515 = !DILocation(line: 864, column: 19, scope: !6214)
!6516 = !DILocation(line: 867, column: 6, scope: !6214)
!6517 = !DILocation(line: 867, column: 21, scope: !6214)
!6518 = !DILocation(line: 869, column: 5, scope: !6214)
!6519 = !DILocation(line: 869, column: 18, scope: !6214)
!6520 = !DILocation(line: 869, column: 26, scope: !6214)
!6521 = !DILocation(line: 869, column: 25, scope: !6214)
!6522 = !DILocation(line: 869, column: 30, scope: !6214)
!6523 = !DILocation(line: 869, column: 36, scope: !6214)
!6524 = !DILocation(line: 869, column: 17, scope: !6214)
!6525 = !DILocation(line: 865, column: 29, scope: !6214)
!6526 = !DILocation(line: 871, column: 4, scope: !6214)
!6527 = !DILocation(line: 871, column: 19, scope: !6214)
!6528 = !DILocation(line: 876, column: 20, scope: !6214)
!6529 = !DILocation(line: 876, column: 29, scope: !6214)
!6530 = !DILocation(line: 876, column: 32, scope: !6214)
!6531 = !DILocation(line: 879, column: 5, scope: !6214)
!6532 = !DILocation(line: 879, column: 7, scope: !6214)
!6533 = !DILocation(line: 879, column: 20, scope: !6214)
!6534 = !DILocation(line: 880, column: 18, scope: !6214)
!6535 = !DILocation(line: 880, column: 21, scope: !6214)
!6536 = !DILocation(line: 880, column: 27, scope: !6214)
!6537 = !DILocation(line: 880, column: 17, scope: !6214)
!6538 = !DILocation(line: 881, column: 5, scope: !6214)
!6539 = !DILocation(line: 886, column: 16, scope: !6214)
!6540 = !DILocation(line: 886, column: 3, scope: !6214)
!6541 = !DILocation(line: 886, column: 19, scope: !6214)
!6542 = !DILocation(line: 0, scope: !6249, inlinedAt: !6257)
!6543 = !DILocation(line: 503, column: 6, scope: !6249, inlinedAt: !6257)
!6544 = !DILocation(line: 504, column: 9, scope: !6249, inlinedAt: !6257)
!6545 = !DILocation(line: 504, column: 19, scope: !6249, inlinedAt: !6257)
!6546 = !DILocation(line: 521, column: 22, scope: !6249, inlinedAt: !6257)
!6547 = !DILocation(line: 521, column: 21, scope: !6249, inlinedAt: !6257)
!6548 = !DILocation(line: 521, column: 14, scope: !6249, inlinedAt: !6257)
!6549 = !DILocation(line: 525, column: 7, scope: !6249, inlinedAt: !6257)
!6550 = !DILocation(line: 525, column: 9, scope: !6249, inlinedAt: !6257)
!6551 = !DILocation(line: 528, column: 5, scope: !6249, inlinedAt: !6257)
!6552 = !DILocation(line: 528, column: 22, scope: !6249, inlinedAt: !6257)
!6553 = !DILocation(line: 528, column: 21, scope: !6249, inlinedAt: !6257)
!6554 = !DILocation(line: 528, column: 27, scope: !6249, inlinedAt: !6257)
!6555 = !DILocation(line: 528, column: 33, scope: !6249, inlinedAt: !6257)
!6556 = !DILocation(line: 528, column: 26, scope: !6249, inlinedAt: !6257)
!6557 = !DILocation(line: 528, column: 14, scope: !6249, inlinedAt: !6257)
!6558 = !DILocation(line: 508, column: 3, scope: !6249, inlinedAt: !6257)
!6559 = !DILocation(line: 508, column: 13, scope: !6249, inlinedAt: !6257)
!6560 = !DILocation(line: 508, column: 12, scope: !6249, inlinedAt: !6257)
!6561 = !DILocation(line: 509, column: 3, scope: !6249, inlinedAt: !6257)
!6562 = !DILocation(line: 506, column: 7, scope: !6249, inlinedAt: !6257)
!6563 = !DILocation(line: 506, column: 20, scope: !6249, inlinedAt: !6257)
!6564 = !DILocation(line: 506, column: 3, scope: !6249, inlinedAt: !6257)
!6565 = !DILocation(line: 512, column: 9, scope: !6249, inlinedAt: !6257)
!6566 = !DILocation(line: 514, column: 6, scope: !6249, inlinedAt: !6257)
!6567 = !DILocation(line: 514, column: 8, scope: !6249, inlinedAt: !6257)
!6568 = !DILocation(line: 514, column: 12, scope: !6249, inlinedAt: !6257)
!6569 = !DILocation(line: 515, column: 4, scope: !6249, inlinedAt: !6257)
!6570 = !DILocation(line: 515, column: 6, scope: !6249, inlinedAt: !6257)
!6571 = !DILocation(line: 515, column: 19, scope: !6249, inlinedAt: !6257)
!6572 = !DILocation(line: 516, column: 22, scope: !6249, inlinedAt: !6257)
!6573 = !DILocation(line: 516, column: 32, scope: !6249, inlinedAt: !6257)
!6574 = !DILocation(line: 516, column: 21, scope: !6249, inlinedAt: !6257)
!6575 = !DILocation(line: 517, column: 21, scope: !6249, inlinedAt: !6257)
!6576 = !DILocation(line: 518, column: 7, scope: !6249, inlinedAt: !6257)
!6577 = !DILocation(line: 518, column: 9, scope: !6249, inlinedAt: !6257)
!6578 = !DILocation(line: 519, column: 22, scope: !6249, inlinedAt: !6257)
!6579 = !DILocation(line: 523, column: 4, scope: !6249, inlinedAt: !6257)
!6580 = !DILocation(line: 523, column: 19, scope: !6249, inlinedAt: !6257)
!6581 = !DILocation(line: 526, column: 20, scope: !6249, inlinedAt: !6257)
!6582 = !DILocation(line: 888, column: 3, scope: !6214)
!6583 = !DILocation(line: 888, column: 17, scope: !6214)
!6584 = !DILocation(line: 0, scope: !6259, inlinedAt: !6265)
!6585 = !DILocation(line: 321, column: 6, scope: !6259, inlinedAt: !6265)
!6586 = !DILocation(line: 321, column: 15, scope: !6259, inlinedAt: !6265)
!6587 = !DILocation(line: 325, column: 17, scope: !6259, inlinedAt: !6265)
!6588 = !DILocation(line: 326, column: 2, scope: !6259, inlinedAt: !6265)
!6589 = !DILocation(line: 326, column: 20, scope: !6259, inlinedAt: !6265)
!6590 = !DILocation(line: 326, column: 26, scope: !6259, inlinedAt: !6265)
!6591 = !DILocation(line: 326, column: 19, scope: !6259, inlinedAt: !6265)
!6592 = !DILocation(line: 327, column: 17, scope: !6259, inlinedAt: !6265)
!6593 = !DILocation(line: 322, column: 20, scope: !6259, inlinedAt: !6265)
!6594 = !DILocation(line: 323, column: 3, scope: !6259, inlinedAt: !6265)
!6595 = distinct !DISubprogram(name: "runtime.printstring", linkageName: "runtime.printstring", scope: !6596, file: !6596, line: 12, type: !1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6597)
!6596 = !DIFile(filename: "print.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!6597 = !{!6598, !6599}
!6598 = !DILocalVariable(name: "s", arg: 1, scope: !6595, file: !6596, line: 12, type: !1347)
!6599 = !DILocalVariable(name: "i", scope: !6595, file: !6596, line: 13, type: !30)
!6600 = !DILocation(line: 12, column: 6, scope: !6595)
!6601 = !DILocation(line: 13, column: 6, scope: !6595)
!6602 = !DILocation(line: 0, scope: !6595)
!6603 = !DILocation(line: 13, column: 14, scope: !6595)
!6604 = !DILocation(line: 13, column: 22, scope: !6595)
!6605 = !DILocation(line: 13, column: 16, scope: !6595)
!6606 = !DILocation(line: 14, column: 11, scope: !6595)
!6607 = !DILocation(line: 14, column: 13, scope: !6595)
!6608 = !DILocation(line: 14, column: 12, scope: !6595)
!6609 = !DILocation(line: 14, column: 10, scope: !6595)
!6610 = !DILocation(line: 13, column: 26, scope: !6595)
!6611 = distinct !DISubprogram(name: "runtime.printnl", linkageName: "runtime.printnl", scope: !6596, file: !6596, line: 285, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!6612 = !DILocation(line: 286, column: 9, scope: !6611)
!6613 = !DILocation(line: 287, column: 9, scope: !6611)
!6614 = !DILocation(line: 0, scope: !6611)
!6615 = distinct !DISubprogram(name: "runtime.markRoot", linkageName: "runtime.markRoot", scope: !58, file: !58, line: 500, type: !1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6616)
!6616 = !{!6617, !6618, !6619, !6620}
!6617 = !DILocalVariable(name: "addr", arg: 1, scope: !6615, file: !58, line: 500, type: !55)
!6618 = !DILocalVariable(name: "root", arg: 2, scope: !6615, file: !58, line: 500, type: !55)
!6619 = !DILocalVariable(name: "block", scope: !6615, file: !58, line: 502, type: !61)
!6620 = !DILocalVariable(name: "head", scope: !6615, file: !58, line: 509, type: !61)
!6621 = !DILocation(line: 500, column: 6, scope: !6615)
!6622 = !DILocation(line: 501, column: 22, scope: !6615)
!6623 = !DILocation(line: 501, column: 21, scope: !6615)
!6624 = !DILocation(line: 0, scope: !6615)
!6625 = !DILocation(line: 502, column: 26, scope: !6615)
!6626 = !DILocalVariable(name: "addr", arg: 1, scope: !6627, file: !58, line: 98, type: !55)
!6627 = distinct !DISubprogram(name: "runtime.blockFromAddr", linkageName: "runtime.blockFromAddr", scope: !58, file: !58, line: 98, type: !1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6628)
!6628 = !{!6626, !6629, !6630}
!6629 = !DILocalVariable(name: "heapStart", scope: !6627, file: !54, line: 24, type: !55)
!6630 = !DILocalVariable(name: "metadataStart", scope: !6627, file: !58, line: 54, type: !91)
!6631 = !DILocation(line: 102, column: 18, scope: !6627, inlinedAt: !6632)
!6632 = distinct !DILocation(line: 502, column: 25, scope: !6615)
!6633 = !DILocation(line: 102, column: 25, scope: !6627, inlinedAt: !6632)
!6634 = !DILocation(line: 102, column: 23, scope: !6627, inlinedAt: !6632)
!6635 = !DILocation(line: 102, column: 36, scope: !6627, inlinedAt: !6632)
!6636 = !DILocation(line: 502, column: 3, scope: !6615)
!6637 = !DILocation(line: 503, column: 6, scope: !6615)
!6638 = !DILocation(line: 503, column: 17, scope: !6615)
!6639 = !DILocation(line: 503, column: 20, scope: !6615)
!6640 = !DILocation(line: 507, column: 4, scope: !6615)
!6641 = !DILocation(line: 509, column: 11, scope: !6615)
!6642 = !DILocation(line: 509, column: 25, scope: !6615)
!6643 = !DILocation(line: 509, column: 3, scope: !6615)
!6644 = !DILocation(line: 510, column: 6, scope: !6615)
!6645 = !DILocation(line: 510, column: 16, scope: !6615)
!6646 = !DILocation(line: 510, column: 19, scope: !6615)
!6647 = !DILocation(line: 514, column: 14, scope: !6615)
!6648 = !DILocation(line: 514, column: 13, scope: !6615)
!6649 = distinct !DISubprogram(name: "runtime.printitf", linkageName: "runtime.printitf", scope: !6596, file: !6596, line: 290, type: !1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6650)
!6650 = !{!6651, !6652, !6653, !6654, !6655, !6656, !6657, !6658, !6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670, !6672}
!6651 = !DILocalVariable(name: "msg", arg: 1, scope: !6649, file: !6596, line: 290, type: !99)
!6652 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !44)
!6653 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !30)
!6654 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !6018)
!6655 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !6020)
!6656 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !1725)
!6657 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !1449)
!6658 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !27)
!6659 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !4)
!6660 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !318)
!6661 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !290)
!6662 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !41)
!6663 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !55)
!6664 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !1393)
!6665 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !140)
!6666 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !6014)
!6667 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !4876)
!6668 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !1347)
!6669 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !98)
!6670 = !DILocalVariable(name: "msg", scope: !6649, file: !6596, line: 291, type: !6671)
!6671 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.stringer", baseType: !99)
!6672 = !DILocalVariable(name: "itf", scope: !6649, file: !6596, line: 332, type: !99)
!6673 = !DILocation(line: 75, column: 6, scope: !6674, inlinedAt: !6683)
!6674 = distinct !DISubprogram(name: "runtime.printuint64", linkageName: "runtime.printuint64", scope: !6596, file: !6596, line: 75, type: !6675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6677)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!41}
!6677 = !{!6678, !6679, !6680, !6681, !6682}
!6678 = !DILocalVariable(name: "n", arg: 1, scope: !6674, file: !6596, line: 75, type: !41)
!6679 = !DILocalVariable(name: "firstdigit", scope: !6674, file: !6596, line: 78, type: !30)
!6680 = !DILocalVariable(name: "i", scope: !6674, file: !6596, line: 79, type: !30)
!6681 = !DILocalVariable(name: "digit", scope: !6674, file: !6596, line: 80, type: !72)
!6682 = !DILocalVariable(name: "i", scope: !6674, file: !6596, line: 88, type: !30)
!6683 = distinct !DILocation(line: 61, column: 13, scope: !6684, inlinedAt: !6690)
!6684 = distinct !DISubprogram(name: "runtime.printuint32", linkageName: "runtime.printuint32", scope: !6596, file: !6596, line: 50, type: !6685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6687)
!6685 = !DISubroutineType(types: !6686)
!6686 = !{!290}
!6687 = !{!6688, !6689}
!6688 = !DILocalVariable(name: "n", arg: 1, scope: !6684, file: !6596, line: 50, type: !290)
!6689 = !DILocalVariable(name: "prevdigits", scope: !6684, file: !6596, line: 54, type: !290)
!6690 = distinct !DILocation(line: 338, column: 15, scope: !6649)
!6691 = !DILocation(line: 290, column: 6, scope: !6649)
!6692 = !DILocation(line: 291, column: 16, scope: !6649)
!6693 = !DILocation(line: 324, column: 2, scope: !6649)
!6694 = !DILocation(line: 0, scope: !6649)
!6695 = !DILocation(line: 325, column: 9, scope: !6649)
!6696 = !DILocation(line: 325, column: 8, scope: !6649)
!6697 = !DILocation(line: 326, column: 2, scope: !6649)
!6698 = !DILocation(line: 327, column: 9, scope: !6649)
!6699 = !DILocation(line: 327, column: 18, scope: !6649)
!6700 = !DILocation(line: 327, column: 8, scope: !6649)
!6701 = !DILocation(line: 896, column: 26, scope: !4658, inlinedAt: !6702)
!6702 = distinct !DILocation(line: 328, column: 2, scope: !6649)
!6703 = !DILocation(line: 329, column: 9, scope: !6649)
!6704 = !DILocation(line: 329, column: 8, scope: !6649)
!6705 = !DILocation(line: 291, column: 9, scope: !6649)
!6706 = !DILocation(line: 332, column: 3, scope: !6649)
!6707 = !DILocation(line: 333, column: 10, scope: !6649)
!6708 = !DILocation(line: 61, column: 21, scope: !6684, inlinedAt: !6690)
!6709 = !DILocation(line: 61, column: 20, scope: !6684, inlinedAt: !6690)
!6710 = !DILocation(line: 78, column: 2, scope: !6674, inlinedAt: !6683)
!6711 = !DILocation(line: 79, column: 6, scope: !6674, inlinedAt: !6683)
!6712 = !DILocation(line: 0, scope: !6674, inlinedAt: !6683)
!6713 = !DILocation(line: 75, column: 18, scope: !6674, inlinedAt: !6683)
!6714 = !DILocation(line: 79, column: 15, scope: !6674, inlinedAt: !6683)
!6715 = !DILocation(line: 79, column: 17, scope: !6674, inlinedAt: !6683)
!6716 = !DILocation(line: 80, column: 17, scope: !6674, inlinedAt: !6683)
!6717 = !DILocation(line: 85, column: 3, scope: !6674, inlinedAt: !6683)
!6718 = !DILocation(line: 80, column: 16, scope: !6674, inlinedAt: !6683)
!6719 = !DILocation(line: 80, column: 3, scope: !6674, inlinedAt: !6683)
!6720 = !DILocation(line: 81, column: 10, scope: !6674, inlinedAt: !6683)
!6721 = !DILocation(line: 81, column: 9, scope: !6674, inlinedAt: !6683)
!6722 = !DILocation(line: 82, column: 12, scope: !6674, inlinedAt: !6683)
!6723 = !DILocation(line: 79, column: 23, scope: !6674, inlinedAt: !6683)
!6724 = !DILocation(line: 88, column: 6, scope: !6674, inlinedAt: !6683)
!6725 = !DILocation(line: 88, column: 23, scope: !6674, inlinedAt: !6683)
!6726 = !DILocation(line: 88, column: 25, scope: !6674, inlinedAt: !6683)
!6727 = !DILocation(line: 89, column: 18, scope: !6674, inlinedAt: !6683)
!6728 = !DILocation(line: 89, column: 17, scope: !6674, inlinedAt: !6683)
!6729 = !DILocation(line: 89, column: 10, scope: !6674, inlinedAt: !6683)
!6730 = !DILocation(line: 88, column: 31, scope: !6674, inlinedAt: !6683)
!6731 = !DILocation(line: 342, column: 10, scope: !6649)
!6732 = !DILocalVariable(name: "ptr", arg: 1, scope: !6733, file: !6596, line: 358, type: !55)
!6733 = distinct !DISubprogram(name: "runtime.printptr", linkageName: "runtime.printptr", scope: !6596, file: !6596, line: 358, type: !1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6734)
!6734 = !{!6732, !6735, !6736}
!6735 = !DILocalVariable(name: "i", scope: !6733, file: !6596, line: 365, type: !30)
!6736 = !DILocalVariable(name: "nibble", scope: !6733, file: !6596, line: 366, type: !72)
!6737 = !DILocation(line: 359, column: 5, scope: !6733, inlinedAt: !6738)
!6738 = distinct !DILocation(line: 343, column: 8, scope: !6649)
!6739 = !DILocation(line: 359, column: 9, scope: !6733, inlinedAt: !6738)
!6740 = !DILocation(line: 0, scope: !6733, inlinedAt: !6738)
!6741 = !DILocation(line: 360, column: 8, scope: !6733, inlinedAt: !6738)
!6742 = !DILocation(line: 361, column: 3, scope: !6733, inlinedAt: !6738)
!6743 = !DILocation(line: 343, column: 8, scope: !6649)
!6744 = !DILocation(line: 363, column: 9, scope: !6733, inlinedAt: !6738)
!6745 = !DILocation(line: 364, column: 9, scope: !6733, inlinedAt: !6738)
!6746 = !DILocation(line: 365, column: 6, scope: !6733, inlinedAt: !6738)
!6747 = !DILocation(line: 358, column: 15, scope: !6733, inlinedAt: !6738)
!6748 = !DILocation(line: 365, column: 14, scope: !6733, inlinedAt: !6738)
!6749 = !DILocation(line: 365, column: 16, scope: !6733, inlinedAt: !6738)
!6750 = !DILocation(line: 366, column: 18, scope: !6733, inlinedAt: !6738)
!6751 = !DILocation(line: 366, column: 22, scope: !6733, inlinedAt: !6738)
!6752 = !DILocation(line: 366, column: 17, scope: !6733, inlinedAt: !6738)
!6753 = !DILocation(line: 367, column: 6, scope: !6733, inlinedAt: !6738)
!6754 = !DILocation(line: 367, column: 13, scope: !6733, inlinedAt: !6738)
!6755 = !DILocation(line: 372, column: 3, scope: !6733, inlinedAt: !6738)
!6756 = !DILocation(line: 365, column: 45, scope: !6733, inlinedAt: !6738)
!6757 = !DILocation(line: 344, column: 10, scope: !6649)
!6758 = distinct !DISubprogram(name: "runtime._start", linkageName: "_start", scope: !1495, file: !1495, line: 12, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6759)
!6759 = !{!6760, !6761}
!6760 = !DILocalVariable(name: "heapStart", scope: !6758, file: !54, line: 24, type: !55)
!6761 = !DILocalVariable(name: "heapEnd", scope: !6758, file: !54, line: 25, type: !55)
!6762 = !DILocation(line: 146, column: 14, scope: !6763, inlinedAt: !6771)
!6763 = distinct !DISubprogram(name: "(*fmt.pp).free", linkageName: "(*fmt.pp).free", scope: !1425, file: !1425, line: 146, type: !6764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6766)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!4705}
!6766 = !{!6767, !6768, !6769, !6770}
!6767 = !DILocalVariable(name: "p", arg: 1, scope: !6763, file: !1425, line: 146, type: !4705)
!6768 = !DILocalVariable(name: "buf", scope: !6763, file: !1425, line: 106, type: !4710)
!6769 = !DILocalVariable(name: "arg", scope: !6763, file: !1425, line: 109, type: !99)
!6770 = !DILocalVariable(name: "wrappedErr", scope: !6763, file: !1425, line: 128, type: !98)
!6771 = distinct !DILocation(line: 266, column: 8, scope: !6772, inlinedAt: !6782)
!6772 = distinct !DISubprogram(name: "fmt.Fprintln", linkageName: "fmt.Fprintln", scope: !1425, file: !1425, line: 262, type: !6773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6776)
!6773 = !DISubroutineType(types: !6774)
!6774 = !{!6775, !4661}
!6775 = !DIDerivedType(tag: DW_TAG_typedef, name: "io.Writer", baseType: !99)
!6776 = !{!6777, !6778, !6779, !6780, !6781}
!6777 = !DILocalVariable(name: "w", arg: 1, scope: !6772, file: !1425, line: 262, type: !6775)
!6778 = !DILocalVariable(name: "a", arg: 2, scope: !6772, file: !1425, line: 262, type: !4661)
!6779 = !DILocalVariable(name: "p", scope: !6772, file: !1425, line: 263, type: !4705)
!6780 = !DILocalVariable(name: "n", scope: !6772, file: !1425, line: 262, type: !30)
!6781 = !DILocalVariable(name: "err", scope: !6772, file: !1425, line: 262, type: !98)
!6782 = distinct !DILocation(line: 274, column: 17, scope: !6783, inlinedAt: !6788)
!6783 = distinct !DISubprogram(name: "fmt.Println", linkageName: "fmt.Println", scope: !1425, file: !1425, line: 273, type: !6784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6786)
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!4661}
!6786 = !{!6787}
!6787 = !DILocalVariable(name: "a", arg: 1, scope: !6783, file: !1425, line: 273, type: !4661)
!6788 = distinct !DILocation(line: 31, column: 14, scope: !6789, inlinedAt: !6791)
!6789 = distinct !DISubprogram(name: "main.main", linkageName: "main.main", scope: !6790, file: !6790, line: 29, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!6790 = !DIFile(filename: "main.go", directory: "/home/torch2424/Source/tinygo-bug-1559")
!6791 = distinct !DILocation(line: 21, column: 11, scope: !6792, inlinedAt: !6796)
!6792 = distinct !DISubprogram(name: "runtime.run$1", linkageName: "runtime.run$1", scope: !6793, file: !6793, line: 18, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6794)
!6793 = !DIFile(filename: "scheduler_any.go", directory: "/home/torch2424/Source/tinygo/src/runtime")
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "schedulerDone", scope: !6792, file: !1452, line: 23, type: !44)
!6796 = distinct !DILocation(line: 18, column: 2, scope: !6797, inlinedAt: !6798)
!6797 = distinct !DISubprogram(name: "runtime.run", linkageName: "runtime.run", scope: !6793, file: !6793, line: 16, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!6798 = distinct !DILocation(line: 16, column: 5, scope: !6758)
!6799 = !DILocation(line: 54, column: 15, scope: !6800, inlinedAt: !6805)
!6800 = distinct !DISubprogram(name: "(*fmt.fmt).clearflags", linkageName: "(*fmt.fmt).clearflags", scope: !4820, file: !4820, line: 54, type: !6801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6803)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!4861}
!6803 = !{!6804}
!6804 = !DILocalVariable(name: "f", arg: 1, scope: !6800, file: !4820, line: 54, type: !4861)
!6805 = distinct !DILocation(line: 60, column: 14, scope: !6806, inlinedAt: !6813)
!6806 = distinct !DISubprogram(name: "(*fmt.fmt).init", linkageName: "(*fmt.fmt).init", scope: !4820, file: !4820, line: 58, type: !6807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6809)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!4861, !4718}
!6809 = !{!6810, !6811, !6812}
!6810 = !DILocalVariable(name: "f", arg: 1, scope: !6806, file: !4820, line: 58, type: !4861)
!6811 = !DILocalVariable(name: "buf", arg: 2, scope: !6806, file: !4820, line: 58, type: !4718)
!6812 = !DILocalVariable(name: "buf", scope: !6806, file: !4820, line: 42, type: !4718)
!6813 = distinct !DILocation(line: 141, column: 12, scope: !6814, inlinedAt: !6820)
!6814 = distinct !DISubprogram(name: "fmt.newPrinter", linkageName: "fmt.newPrinter", scope: !1425, file: !1425, line: 136, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6815)
!6815 = !{!6816, !6817, !6818, !6819}
!6816 = !DILocalVariable(name: "p", scope: !6814, file: !1425, line: 137, type: !4705)
!6817 = !DILocalVariable(name: "panicking", scope: !6814, file: !1425, line: 122, type: !44)
!6818 = !DILocalVariable(name: "erroring", scope: !6814, file: !1425, line: 124, type: !44)
!6819 = !DILocalVariable(name: "wrapErrs", scope: !6814, file: !1425, line: 126, type: !44)
!6820 = distinct !DILocation(line: 263, column: 17, scope: !6772, inlinedAt: !6782)
!6821 = !DILocation(line: 30, column: 28, scope: !6789, inlinedAt: !6791)
!6822 = !DILocation(line: 14, column: 2, scope: !6758)
!6823 = !DILocation(line: 15, column: 36, scope: !6758)
!6824 = !DILocation(line: 15, column: 40, scope: !6758)
!6825 = !DILocation(line: 15, column: 2, scope: !6758)
!6826 = !DILocation(line: 187, column: 24, scope: !6827, inlinedAt: !6832)
!6827 = distinct !DISubprogram(name: "runtime.initHeap", linkageName: "runtime.initHeap", scope: !58, file: !58, line: 186, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6828)
!6828 = !{!6829, !6830, !6831}
!6829 = !DILocalVariable(name: "heapEnd", scope: !6827, file: !54, line: 25, type: !55)
!6830 = !DILocalVariable(name: "metadataStart", scope: !6827, file: !58, line: 54, type: !91)
!6831 = !DILocalVariable(name: "metadataSize", scope: !6827, file: !58, line: 190, type: !55)
!6832 = distinct !DILocation(line: 17, column: 10, scope: !6797, inlinedAt: !6798)
!6833 = !DILocation(line: 190, column: 18, scope: !6827, inlinedAt: !6832)
!6834 = !DILocation(line: 190, column: 36, scope: !6827, inlinedAt: !6832)
!6835 = !DILocation(line: 190, column: 35, scope: !6827, inlinedAt: !6832)
!6836 = !DILocation(line: 190, column: 26, scope: !6827, inlinedAt: !6832)
!6837 = !DILocation(line: 190, column: 2, scope: !6827, inlinedAt: !6832)
!6838 = !DILocation(line: 191, column: 25, scope: !6827, inlinedAt: !6832)
!6839 = !DILocation(line: 191, column: 9, scope: !6827, inlinedAt: !6832)
!6840 = !DILocation(line: 11, column: 6, scope: !6841, inlinedAt: !6842)
!6841 = distinct !DISubprogram(name: "runtime.initAll", linkageName: "runtime.initAll", scope: !1448, file: !1448, line: 11, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!6842 = distinct !DILocation(line: 19, column: 10, scope: !6792, inlinedAt: !6796)
!6843 = !DILocation(line: 31, column: 23, scope: !6789, inlinedAt: !6791)
!6844 = !DILocation(line: 0, scope: !6789, inlinedAt: !6791)
!6845 = !DILocation(line: 273, column: 6, scope: !6783, inlinedAt: !6788)
!6846 = !DILocation(line: 274, column: 29, scope: !6783, inlinedAt: !6788)
!6847 = !DILocation(line: 262, column: 6, scope: !6772, inlinedAt: !6782)
!6848 = !DILocation(line: 132, column: 38, scope: !6849, inlinedAt: !6850)
!6849 = distinct !DISubprogram(name: "fmt.init$1", linkageName: "fmt.init$1", scope: !1425, file: !1425, line: 132, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !79)
!6850 = distinct !DILocation(line: 14, column: 14, scope: !6851, inlinedAt: !6858)
!6851 = distinct !DISubprogram(name: "(*sync.Pool).Get", linkageName: "(*sync.Pool).Get", scope: !6852, file: !6852, line: 10, type: !6853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6856)
!6852 = !DIFile(filename: "pool.go", directory: "/home/torch2424/Source/tinygo/src/sync")
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!6855}
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32, align: 32, dwarfAddressSpace: 0)
!6856 = !{!6857}
!6857 = !DILocalVariable(name: "p", arg: 1, scope: !6851, file: !6852, line: 10, type: !6855)
!6858 = distinct !DILocation(line: 137, column: 17, scope: !6814, inlinedAt: !6820)
!6859 = !DILocation(line: 83, column: 6, scope: !6860, inlinedAt: !6865)
!6860 = distinct !DISubprogram(name: "runtime.interfaceTypeAssert", linkageName: "runtime.interfaceTypeAssert", scope: !1931, file: !1931, line: 82, type: !6861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6863)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{!44}
!6863 = !{!6864}
!6864 = !DILocalVariable(name: "ok", arg: 1, scope: !6860, file: !1931, line: 82, type: !44)
!6865 = distinct !DILocation(line: 137, column: 20, scope: !6814, inlinedAt: !6820)
!6866 = !DILocation(line: 138, column: 2, scope: !6814, inlinedAt: !6820)
!6867 = !DILocation(line: 137, column: 20, scope: !6814, inlinedAt: !6820)
!6868 = !DILocation(line: 138, column: 4, scope: !6814, inlinedAt: !6820)
!6869 = !DILocation(line: 139, column: 4, scope: !6814, inlinedAt: !6820)
!6870 = !DILocation(line: 140, column: 4, scope: !6814, inlinedAt: !6820)
!6871 = !DILocation(line: 141, column: 4, scope: !6814, inlinedAt: !6820)
!6872 = !DILocation(line: 58, column: 15, scope: !6806, inlinedAt: !6813)
!6873 = !DILocation(line: 59, column: 2, scope: !6806, inlinedAt: !6813)
!6874 = !DILocation(line: 59, column: 4, scope: !6806, inlinedAt: !6813)
!6875 = !DILocation(line: 55, column: 2, scope: !6800, inlinedAt: !6805)
!6876 = !DILocation(line: 55, column: 23, scope: !6800, inlinedAt: !6805)
!6877 = !DILocation(line: 0, scope: !6800, inlinedAt: !6805)
!6878 = !DILocation(line: 264, column: 2, scope: !6772, inlinedAt: !6782)
!6879 = !DILocation(line: 264, column: 14, scope: !6772, inlinedAt: !6782)
!6880 = !DILocalVariable(name: "p", arg: 1, scope: !6881, file: !1425, line: 1168, type: !4705)
!6881 = distinct !DISubprogram(name: "(*fmt.pp).doPrintln", linkageName: "(*fmt.pp).doPrintln", scope: !1425, file: !1425, line: 1168, type: !6882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6884)
!6882 = !DISubroutineType(types: !6883)
!6883 = !{!4705, !4661}
!6884 = !{!6880, !6885, !6886, !6887}
!6885 = !DILocalVariable(name: "a", arg: 2, scope: !6881, file: !1425, line: 1168, type: !4661)
!6886 = !DILocalVariable(name: "argNum", scope: !6881, file: !1425, line: 1169, type: !30)
!6887 = !DILocalVariable(name: "arg", scope: !6881, file: !1425, line: 1169, type: !99)
!6888 = !DILocation(line: 1168, column: 14, scope: !6881, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 264, column: 13, scope: !6772, inlinedAt: !6782)
!6890 = !DILocation(line: 1169, column: 27, scope: !6881, inlinedAt: !6889)
!6891 = !DILocation(line: 1170, column: 6, scope: !6881, inlinedAt: !6889)
!6892 = !DILocation(line: 1173, column: 14, scope: !6881, inlinedAt: !6889)
!6893 = !DILocation(line: 1173, column: 13, scope: !6881, inlinedAt: !6889)
!6894 = !DILocation(line: 1175, column: 4, scope: !6881, inlinedAt: !6889)
!6895 = !DILocation(line: 1175, column: 17, scope: !6881, inlinedAt: !6889)
!6896 = !DILocation(line: 265, column: 11, scope: !6772, inlinedAt: !6782)
!6897 = !DILocation(line: 265, column: 21, scope: !6772, inlinedAt: !6782)
!6898 = !DILocation(line: 896, column: 26, scope: !4658, inlinedAt: !6899)
!6899 = distinct !DILocation(line: 265, column: 18, scope: !6772, inlinedAt: !6782)
!6900 = !DILocation(line: 265, column: 18, scope: !6772, inlinedAt: !6782)
!6901 = !DILocation(line: 265, column: 2, scope: !6772, inlinedAt: !6782)
!6902 = !DILocation(line: 265, column: 5, scope: !6772, inlinedAt: !6782)
!6903 = !DILocation(line: 153, column: 9, scope: !6763, inlinedAt: !6771)
!6904 = !DILocation(line: 153, column: 11, scope: !6763, inlinedAt: !6771)
!6905 = !DILocation(line: 153, column: 16, scope: !6763, inlinedAt: !6771)
!6906 = !DILocation(line: 0, scope: !6763, inlinedAt: !6771)
!6907 = !DILocation(line: 154, column: 3, scope: !6763, inlinedAt: !6771)
!6908 = !DILocation(line: 157, column: 10, scope: !6763, inlinedAt: !6771)
!6909 = !DILocation(line: 157, column: 12, scope: !6763, inlinedAt: !6771)
!6910 = !DILocation(line: 157, column: 4, scope: !6763, inlinedAt: !6771)
!6911 = !DILocation(line: 158, column: 4, scope: !6763, inlinedAt: !6771)
!6912 = !DILocation(line: 159, column: 4, scope: !6763, inlinedAt: !6771)
!6913 = !DILocation(line: 159, column: 25, scope: !6763, inlinedAt: !6771)
!6914 = !DILocation(line: 160, column: 4, scope: !6763, inlinedAt: !6771)
!6915 = !DILocation(line: 22, column: 3, scope: !6792, inlinedAt: !6796)
!6916 = !DILocation(line: 0, scope: !6758)
!6917 = distinct !DISubprogram(name: "runtime.runtimePanic", linkageName: "runtime.runtimePanic", scope: !1802, file: !1802, line: 17, type: !1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6918)
!6918 = !{!6919}
!6919 = !DILocalVariable(name: "msg", arg: 1, scope: !6917, file: !1802, line: 17, type: !1347)
!6920 = !DILocation(line: 17, column: 6, scope: !6917)
!6921 = !DILocation(line: 18, column: 13, scope: !6917)
!6922 = !DILocation(line: 19, column: 10, scope: !6917)
!6923 = !DILocation(line: 19, column: 9, scope: !6917)
!6924 = !DILocation(line: 49, column: 6, scope: !1920, inlinedAt: !6925)
!6925 = distinct !DILocation(line: 20, column: 7, scope: !6917)
!6926 = !DILocation(line: 0, scope: !1920, inlinedAt: !6925)
!6927 = distinct !DISubprogram(name: "(runtime.gcBlock).state", linkageName: "(runtime.gcBlock).state", scope: !58, file: !58, line: 143, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6928)
!6928 = !{!6929, !6930, !6931}
!6929 = !DILocalVariable(name: "b", arg: 1, scope: !6927, file: !58, line: 143, type: !61)
!6930 = !DILocalVariable(name: "metadataStart", scope: !6927, file: !58, line: 54, type: !91)
!6931 = !DILocalVariable(name: "stateBytePtr", scope: !6927, file: !58, line: 144, type: !1350)
!6932 = !DILocation(line: 143, column: 18, scope: !6927)
!6933 = !DILocation(line: 144, column: 50, scope: !6927)
!6934 = !DILocation(line: 144, column: 75, scope: !6927)
!6935 = !DILocation(line: 144, column: 76, scope: !6927)
!6936 = !DILocation(line: 144, column: 41, scope: !6927)
!6937 = !DILocation(line: 144, column: 2, scope: !6927)
!6938 = !DILocation(line: 145, column: 21, scope: !6927)
!6939 = !DILocation(line: 145, column: 20, scope: !6927)
!6940 = !DILocation(line: 145, column: 37, scope: !6927)
!6941 = !DILocation(line: 145, column: 33, scope: !6927)
!6942 = !DILocation(line: 145, column: 63, scope: !6927)
!6943 = !DILocation(line: 145, column: 2, scope: !6927)
!6944 = distinct !DISubprogram(name: "(runtime.gcBlock).setState", linkageName: "(runtime.gcBlock).setState", scope: !58, file: !58, line: 151, type: !6945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6947)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!61, !1708}
!6947 = !{!6948, !6949, !6950, !6951}
!6948 = !DILocalVariable(name: "b", arg: 1, scope: !6944, file: !58, line: 151, type: !61)
!6949 = !DILocalVariable(name: "newState", arg: 2, scope: !6944, file: !58, line: 151, type: !1708)
!6950 = !DILocalVariable(name: "metadataStart", scope: !6944, file: !58, line: 54, type: !91)
!6951 = !DILocalVariable(name: "stateBytePtr", scope: !6944, file: !58, line: 152, type: !1350)
!6952 = !DILocation(line: 151, column: 18, scope: !6944)
!6953 = !DILocation(line: 152, column: 50, scope: !6944)
!6954 = !DILocation(line: 152, column: 76, scope: !6944)
!6955 = !DILocation(line: 152, column: 41, scope: !6944)
!6956 = !DILocation(line: 153, column: 3, scope: !6944)
!6957 = !DILocation(line: 153, column: 34, scope: !6944)
!6958 = !DILocation(line: 153, column: 2, scope: !6944)
!6959 = !DILocation(line: 0, scope: !6944)
!6960 = distinct !DISubprogram(name: "runtime.calculateHeapAddresses", linkageName: "runtime.calculateHeapAddresses", scope: !58, file: !58, line: 230, type: !1566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6961)
!6961 = !{!6962, !6963, !6964, !6965, !6966, !6967, !6968}
!6962 = !DILocalVariable(name: "heapEnd", scope: !6960, file: !54, line: 25, type: !55)
!6963 = !DILocalVariable(name: "heapStart", scope: !6960, file: !54, line: 24, type: !55)
!6964 = !DILocalVariable(name: "totalSize", scope: !6960, file: !58, line: 231, type: !55)
!6965 = !DILocalVariable(name: "metadataSize", scope: !6960, file: !58, line: 234, type: !55)
!6966 = !DILocalVariable(name: "metadataStart", scope: !6960, file: !58, line: 54, type: !91)
!6967 = !DILocalVariable(name: "numBlocks", scope: !6960, file: !58, line: 238, type: !55)
!6968 = !DILocalVariable(name: "endBlock", scope: !6960, file: !58, line: 56, type: !61)
!6969 = !DILocation(line: 231, column: 15, scope: !6960)
!6970 = !DILocation(line: 231, column: 25, scope: !6960)
!6971 = !DILocation(line: 231, column: 23, scope: !6960)
!6972 = !DILocation(line: 234, column: 18, scope: !6960)
!6973 = !DILocation(line: 234, column: 28, scope: !6960)
!6974 = !DILocation(line: 234, column: 2, scope: !6960)
!6975 = !DILocation(line: 235, column: 33, scope: !6960)
!6976 = !DILocation(line: 235, column: 41, scope: !6960)
!6977 = !DILocation(line: 235, column: 32, scope: !6960)
!6978 = !DILocation(line: 235, column: 2, scope: !6960)
!6979 = !DILocation(line: 238, column: 24, scope: !6960)
!6980 = !DILocation(line: 238, column: 41, scope: !6960)
!6981 = !DILocation(line: 238, column: 39, scope: !6960)
!6982 = !DILocation(line: 238, column: 52, scope: !6960)
!6983 = !DILocation(line: 239, column: 21, scope: !6960)
!6984 = !DILocation(line: 239, column: 2, scope: !6960)
!6985 = !DILocation(line: 0, scope: !6960)
!6986 = distinct !DISubprogram(name: "runtime.startMark", linkageName: "runtime.startMark", scope: !58, file: !58, line: 415, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !6987)
!6987 = !{!6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996}
!6988 = !DILocalVariable(name: "root", arg: 1, scope: !6986, file: !58, line: 415, type: !61)
!6989 = !DILocalVariable(name: "stackLen", scope: !6986, file: !58, line: 419, type: !30)
!6990 = !DILocalVariable(name: "block", scope: !6986, file: !58, line: 423, type: !61)
!6991 = !DILocalVariable(name: "start", scope: !6986, file: !58, line: 429, type: !55)
!6992 = !DILocalVariable(name: "end", scope: !6986, file: !58, line: 429, type: !55)
!6993 = !DILocalVariable(name: "addr", scope: !6986, file: !58, line: 430, type: !55)
!6994 = !DILocalVariable(name: "word", scope: !6986, file: !58, line: 432, type: !55)
!6995 = !DILocalVariable(name: "referencedBlock", scope: !6986, file: !58, line: 440, type: !61)
!6996 = !DILocalVariable(name: "stackOverflow", scope: !6986, file: !58, line: 412, type: !44)
!6997 = !DILocation(line: 415, column: 6, scope: !6986)
!6998 = !DILocation(line: 417, column: 7, scope: !6986)
!6999 = !DILocation(line: 418, column: 15, scope: !6986)
!7000 = !DILocation(line: 419, column: 2, scope: !6986)
!7001 = !DILocation(line: 0, scope: !6986)
!7002 = !DILocation(line: 420, column: 6, scope: !6986)
!7003 = !DILocation(line: 420, column: 15, scope: !6986)
!7004 = !DILocation(line: 422, column: 3, scope: !6986)
!7005 = !DILocation(line: 423, column: 18, scope: !6986)
!7006 = !DILocation(line: 423, column: 17, scope: !6986)
!7007 = !DILocation(line: 430, column: 7, scope: !6986)
!7008 = !DILocation(line: 430, column: 22, scope: !6986)
!7009 = !DILocation(line: 430, column: 30, scope: !6986)
!7010 = !DILocation(line: 430, column: 27, scope: !6986)
!7011 = !DILocation(line: 432, column: 39, scope: !6986)
!7012 = !DILocation(line: 432, column: 38, scope: !6986)
!7013 = !DILocation(line: 432, column: 23, scope: !6986)
!7014 = !DILocation(line: 432, column: 12, scope: !6986)
!7015 = !DILocation(line: 432, column: 4, scope: !6986)
!7016 = !DILocation(line: 434, column: 25, scope: !6986)
!7017 = !DILocation(line: 434, column: 24, scope: !6986)
!7018 = !DILocation(line: 440, column: 37, scope: !6986)
!7019 = !DILocation(line: 102, column: 18, scope: !6627, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 440, column: 36, scope: !6986)
!7021 = !DILocation(line: 102, column: 25, scope: !6627, inlinedAt: !7020)
!7022 = !DILocation(line: 102, column: 23, scope: !6627, inlinedAt: !7020)
!7023 = !DILocation(line: 102, column: 36, scope: !6627, inlinedAt: !7020)
!7024 = !DILocation(line: 440, column: 4, scope: !6986)
!7025 = !DILocation(line: 442, column: 7, scope: !6986)
!7026 = !DILocation(line: 442, column: 28, scope: !6986)
!7027 = !DILocation(line: 442, column: 31, scope: !6986)
!7028 = !DILocation(line: 452, column: 22, scope: !6986)
!7029 = !DILocation(line: 452, column: 46, scope: !6986)
!7030 = !DILocation(line: 452, column: 4, scope: !6986)
!7031 = !DILocation(line: 454, column: 7, scope: !6986)
!7032 = !DILocation(line: 454, column: 28, scope: !6986)
!7033 = !DILocation(line: 454, column: 31, scope: !6986)
!7034 = !DILocation(line: 463, column: 4, scope: !6986)
!7035 = !DILocation(line: 463, column: 28, scope: !6986)
!7036 = !DILocation(line: 465, column: 7, scope: !6986)
!7037 = !DILocation(line: 465, column: 16, scope: !6986)
!7038 = !DILocation(line: 468, column: 5, scope: !6986)
!7039 = !DILocation(line: 430, column: 35, scope: !6986)
!7040 = !DILocation(line: 429, column: 17, scope: !6986)
!7041 = !DILocation(line: 111, column: 18, scope: !1788, inlinedAt: !7042)
!7042 = distinct !DILocation(line: 429, column: 30, scope: !6986)
!7043 = !DILocation(line: 112, column: 9, scope: !1788, inlinedAt: !7042)
!7044 = !DILocation(line: 112, column: 29, scope: !1788, inlinedAt: !7042)
!7045 = !DILocation(line: 112, column: 31, scope: !1788, inlinedAt: !7042)
!7046 = !DILocation(line: 112, column: 19, scope: !1788, inlinedAt: !7042)
!7047 = !DILocalVariable(name: "b", arg: 1, scope: !7048, file: !58, line: 132, type: !61)
!7048 = distinct !DISubprogram(name: "(runtime.gcBlock).findNext", linkageName: "(runtime.gcBlock).findNext", scope: !58, file: !58, line: 132, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7049)
!7049 = !{!7047}
!7050 = !DILocation(line: 132, column: 18, scope: !7048, inlinedAt: !7051)
!7051 = distinct !DILocation(line: 429, column: 48, scope: !6986)
!7052 = !DILocation(line: 133, column: 5, scope: !7048, inlinedAt: !7051)
!7053 = !DILocation(line: 133, column: 12, scope: !7048, inlinedAt: !7051)
!7054 = !DILocation(line: 133, column: 15, scope: !7048, inlinedAt: !7051)
!7055 = !DILocation(line: 0, scope: !7048, inlinedAt: !7051)
!7056 = !DILocation(line: 134, column: 3, scope: !7048, inlinedAt: !7051)
!7057 = !DILocation(line: 132, column: 7, scope: !7048, inlinedAt: !7051)
!7058 = !DILocation(line: 136, column: 6, scope: !7048, inlinedAt: !7051)
!7059 = !DILocation(line: 136, column: 13, scope: !7048, inlinedAt: !7051)
!7060 = !DILocation(line: 136, column: 16, scope: !7048, inlinedAt: !7051)
!7061 = !DILocation(line: 137, column: 3, scope: !7048, inlinedAt: !7051)
!7062 = !DILocation(line: 133, column: 36, scope: !7048, inlinedAt: !7051)
!7063 = !DILocation(line: 133, column: 43, scope: !7048, inlinedAt: !7051)
!7064 = !DILocation(line: 133, column: 46, scope: !7048, inlinedAt: !7051)
!7065 = !DILocation(line: 139, column: 9, scope: !7048, inlinedAt: !7051)
!7066 = !DILocation(line: 111, column: 18, scope: !1788, inlinedAt: !7067)
!7067 = distinct !DILocation(line: 429, column: 58, scope: !6986)
!7068 = !DILocation(line: 112, column: 9, scope: !1788, inlinedAt: !7067)
!7069 = !DILocation(line: 112, column: 29, scope: !1788, inlinedAt: !7067)
!7070 = !DILocation(line: 112, column: 31, scope: !1788, inlinedAt: !7067)
!7071 = !DILocation(line: 112, column: 19, scope: !1788, inlinedAt: !7067)
!7072 = !DILocation(line: 429, column: 10, scope: !6986)
!7073 = !DILocation(line: 430, column: 15, scope: !6986)
!7074 = !DILocation(line: 476, column: 10, scope: !6986)
!7075 = !DILocation(line: 476, column: 9, scope: !6986)
!7076 = !DILocation(line: 476, column: 22, scope: !6986)
!7077 = !DILocation(line: 477, column: 4, scope: !6986)
!7078 = distinct !DISubprogram(name: "(runtime.gcBlock).findHead", linkageName: "(runtime.gcBlock).findHead", scope: !58, file: !58, line: 118, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7079)
!7079 = !{!7080}
!7080 = !DILocalVariable(name: "b", arg: 1, scope: !7078, file: !58, line: 118, type: !61)
!7081 = !DILocation(line: 118, column: 18, scope: !7078)
!7082 = !DILocation(line: 0, scope: !7078)
!7083 = !DILocation(line: 118, column: 7, scope: !7078)
!7084 = !DILocation(line: 119, column: 6, scope: !7078)
!7085 = !DILocation(line: 119, column: 13, scope: !7078)
!7086 = !DILocation(line: 119, column: 16, scope: !7078)
!7087 = !DILocation(line: 120, column: 3, scope: !7078)
!7088 = !DILocation(line: 127, column: 9, scope: !7078)
!7089 = !DILocation(line: 127, column: 2, scope: !7078)
!7090 = distinct !DISubprogram(name: "(runtime.gcBlock).markFree", linkageName: "(runtime.gcBlock).markFree", scope: !58, file: !58, line: 160, type: !1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7091)
!7091 = !{!7092, !7093, !7094}
!7092 = !DILocalVariable(name: "b", arg: 1, scope: !7090, file: !58, line: 160, type: !61)
!7093 = !DILocalVariable(name: "metadataStart", scope: !7090, file: !58, line: 54, type: !91)
!7094 = !DILocalVariable(name: "stateBytePtr", scope: !7090, file: !58, line: 161, type: !1350)
!7095 = !DILocation(line: 160, column: 18, scope: !7090)
!7096 = !DILocation(line: 161, column: 50, scope: !7090)
!7097 = !DILocation(line: 161, column: 76, scope: !7090)
!7098 = !DILocation(line: 161, column: 41, scope: !7090)
!7099 = !DILocation(line: 162, column: 3, scope: !7090)
!7100 = !DILocation(line: 162, column: 41, scope: !7090)
!7101 = !DILocation(line: 162, column: 2, scope: !7090)
!7102 = !DILocation(line: 0, scope: !7090)
!7103 = distinct !DISubprogram(name: "runtime.looksLikePointer", linkageName: "runtime.looksLikePointer", scope: !58, file: !58, line: 547, type: !1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7104)
!7104 = !{!7105, !7106, !7107}
!7105 = !DILocalVariable(name: "ptr", arg: 1, scope: !7103, file: !58, line: 547, type: !55)
!7106 = !DILocalVariable(name: "heapStart", scope: !7103, file: !54, line: 24, type: !55)
!7107 = !DILocalVariable(name: "metadataStart", scope: !7103, file: !58, line: 54, type: !91)
!7108 = !DILocation(line: 547, column: 6, scope: !7103)
!7109 = !DILocation(line: 548, column: 9, scope: !7103)
!7110 = !DILocation(line: 548, column: 16, scope: !7103)
!7111 = !DILocation(line: 548, column: 13, scope: !7103)
!7112 = !DILocation(line: 0, scope: !7103)
!7113 = !DILocation(line: 548, column: 29, scope: !7103)
!7114 = !DILocation(line: 548, column: 43, scope: !7103)
!7115 = !DILocation(line: 548, column: 42, scope: !7103)
!7116 = !DILocation(line: 548, column: 33, scope: !7103)
!7117 = !DILocation(line: 548, column: 26, scope: !7103)
!7118 = !DILocation(line: 548, column: 2, scope: !7103)
!7119 = distinct !DISubprogram(name: "(*fmt.buffer).writeByte", linkageName: "(*fmt.buffer).writeByte", scope: !1425, file: !1425, line: 85, type: !7120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7122)
!7120 = !DISubroutineType(types: !7121)
!7121 = !{!4718, !72}
!7122 = !{!7123, !7124}
!7123 = !DILocalVariable(name: "b", arg: 1, scope: !7119, file: !1425, line: 85, type: !4718)
!7124 = !DILocalVariable(name: "c", arg: 2, scope: !7119, file: !1425, line: 85, type: !72)
!7125 = !DILocation(line: 85, column: 18, scope: !7119)
!7126 = !DILocation(line: 86, column: 3, scope: !7119)
!7127 = !DILocation(line: 86, column: 15, scope: !7119)
!7128 = !DILocation(line: 86, column: 14, scope: !7119)
!7129 = !DILocation(line: 86, column: 18, scope: !7119)
!7130 = !DILocation(line: 86, column: 19, scope: !7119)
!7131 = !DILocation(line: 86, column: 13, scope: !7119)
!7132 = !DILocation(line: 86, column: 2, scope: !7119)
!7133 = !DILocation(line: 0, scope: !7119)
!7134 = distinct !DISubprogram(name: "(*strconv.extFloat).Normalize", linkageName: "(*strconv.extFloat).Normalize", scope: !35, file: !35, line: 203, type: !4196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7135)
!7135 = !{!7136, !7137, !7138, !7139}
!7136 = !DILocalVariable(name: "f", arg: 1, scope: !7134, file: !35, line: 203, type: !4198)
!7137 = !DILocalVariable(name: "shift", scope: !7134, file: !35, line: 208, type: !30)
!7138 = !DILocalVariable(name: "mant", scope: !7134, file: !35, line: 16, type: !41)
!7139 = !DILocalVariable(name: "exp", scope: !7134, file: !35, line: 17, type: !30)
!7140 = !DILocation(line: 203, column: 20, scope: !7134)
!7141 = !DILocation(line: 205, column: 5, scope: !7134)
!7142 = !DILocation(line: 205, column: 7, scope: !7134)
!7143 = !DILocation(line: 206, column: 3, scope: !7134)
!7144 = !DILocation(line: 205, column: 12, scope: !7134)
!7145 = !DILocation(line: 0, scope: !7134)
!7146 = !DILocation(line: 208, column: 31, scope: !7134)
!7147 = !DILocalVariable(name: "x", arg: 1, scope: !7148, file: !121, line: 31, type: !41)
!7148 = distinct !DISubprogram(name: "math/bits.LeadingZeros64", linkageName: "math/bits.LeadingZeros64", scope: !121, file: !121, line: 31, type: !6675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7149)
!7149 = !{!7147}
!7150 = !DILocation(line: 31, column: 6, scope: !7148, inlinedAt: !7151)
!7151 = distinct !DILocation(line: 208, column: 30, scope: !7134)
!7152 = !DILocation(line: 31, column: 55, scope: !7148, inlinedAt: !7151)
!7153 = !DILocalVariable(name: "x", arg: 1, scope: !7154, file: !121, line: 331, type: !41)
!7154 = distinct !DISubprogram(name: "math/bits.Len64", linkageName: "math/bits.Len64", scope: !121, file: !121, line: 331, type: !6675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7155)
!7155 = !{!7153, !7156}
!7156 = !DILocalVariable(name: "n", scope: !7154, file: !121, line: 331, type: !30)
!7157 = !DILocation(line: 332, column: 5, scope: !7154, inlinedAt: !7158)
!7158 = distinct !DILocation(line: 31, column: 54, scope: !7148, inlinedAt: !7151)
!7159 = !DILocation(line: 332, column: 7, scope: !7154, inlinedAt: !7158)
!7160 = !DILocation(line: 0, scope: !7154, inlinedAt: !7158)
!7161 = !DILocation(line: 336, column: 5, scope: !7154, inlinedAt: !7158)
!7162 = !DILocation(line: 336, column: 7, scope: !7154, inlinedAt: !7158)
!7163 = !DILocation(line: 340, column: 5, scope: !7154, inlinedAt: !7158)
!7164 = !DILocation(line: 340, column: 7, scope: !7154, inlinedAt: !7158)
!7165 = !DILocation(line: 344, column: 9, scope: !7154, inlinedAt: !7158)
!7166 = !DILocation(line: 344, column: 25, scope: !7154, inlinedAt: !7158)
!7167 = !DILocation(line: 344, column: 24, scope: !7154, inlinedAt: !7158)
!7168 = !DILocation(line: 344, column: 16, scope: !7154, inlinedAt: !7158)
!7169 = !DILocation(line: 344, column: 11, scope: !7154, inlinedAt: !7158)
!7170 = !DILocation(line: 31, column: 47, scope: !7148, inlinedAt: !7151)
!7171 = !DILocation(line: 209, column: 18, scope: !7134)
!7172 = !DILocation(line: 209, column: 2, scope: !7134)
!7173 = !DILocation(line: 209, column: 4, scope: !7134)
!7174 = !DILocation(line: 210, column: 4, scope: !7134)
!7175 = !DILocation(line: 210, column: 2, scope: !7134)
!7176 = !DILocation(line: 211, column: 2, scope: !7134)
!7177 = distinct !DISubprogram(name: "(*fmt.buffer).write", linkageName: "(*fmt.buffer).write", scope: !1425, file: !1425, line: 77, type: !7178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7180)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!4718, !3107}
!7180 = !{!7181, !7182}
!7181 = !DILocalVariable(name: "b", arg: 1, scope: !7177, file: !1425, line: 77, type: !4718)
!7182 = !DILocalVariable(name: "p", arg: 2, scope: !7177, file: !1425, line: 77, type: !3107)
!7183 = !DILocation(line: 77, column: 18, scope: !7177)
!7184 = !DILocation(line: 78, column: 3, scope: !7177)
!7185 = !DILocation(line: 78, column: 15, scope: !7177)
!7186 = !DILocation(line: 78, column: 14, scope: !7177)
!7187 = !DILocation(line: 78, column: 18, scope: !7177)
!7188 = !DILocation(line: 78, column: 13, scope: !7177)
!7189 = !DILocation(line: 78, column: 2, scope: !7177)
!7190 = !DILocation(line: 0, scope: !7177)
!7191 = distinct !DISubprogram(name: "(*fmt.buffer).writeString", linkageName: "(*fmt.buffer).writeString", scope: !1425, file: !1425, line: 81, type: !7192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7194)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{!4718, !1347}
!7194 = !{!7195, !7196}
!7195 = !DILocalVariable(name: "b", arg: 1, scope: !7191, file: !1425, line: 81, type: !4718)
!7196 = !DILocalVariable(name: "s", arg: 2, scope: !7191, file: !1425, line: 81, type: !1347)
!7197 = !DILocation(line: 81, column: 18, scope: !7191)
!7198 = !DILocation(line: 82, column: 3, scope: !7191)
!7199 = !DILocation(line: 82, column: 15, scope: !7191)
!7200 = !DILocation(line: 82, column: 14, scope: !7191)
!7201 = !DILocation(line: 82, column: 18, scope: !7191)
!7202 = !DILocation(line: 82, column: 13, scope: !7191)
!7203 = !DILocation(line: 82, column: 2, scope: !7191)
!7204 = !DILocation(line: 0, scope: !7191)
!7205 = distinct !DISubprogram(name: "(*fmt.fmt).fmtInteger", linkageName: "(*fmt.fmt).fmtInteger", scope: !4820, file: !4820, line: 194, type: !7206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7208)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!4861, !41, !30, !44, !295, !1347}
!7208 = !{!7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7221, !7222, !7223}
!7209 = !DILocalVariable(name: "f", arg: 1, scope: !7205, file: !4820, line: 194, type: !4861)
!7210 = !DILocalVariable(name: "u", arg: 2, scope: !7205, file: !4820, line: 194, type: !41)
!7211 = !DILocalVariable(name: "base", arg: 3, scope: !7205, file: !4820, line: 194, type: !30)
!7212 = !DILocalVariable(name: "isSigned", arg: 4, scope: !7205, file: !4820, line: 194, type: !44)
!7213 = !DILocalVariable(name: "verb", arg: 5, scope: !7205, file: !4820, line: 194, type: !295)
!7214 = !DILocalVariable(name: "digits", arg: 6, scope: !7205, file: !4820, line: 194, type: !1347)
!7215 = !DILocalVariable(name: "negative", scope: !7205, file: !4820, line: 195, type: !44)
!7216 = !DILocalVariable(name: "buf", scope: !7205, file: !4820, line: 200, type: !3107)
!7217 = !DILocalVariable(name: "width", scope: !7205, file: !4820, line: 205, type: !30)
!7218 = !DILocalVariable(name: "prec", scope: !7205, file: !4820, line: 215, type: !30)
!7219 = !DILocalVariable(name: "oldZero", scope: !7205, file: !4820, line: 220, type: !44)
!7220 = !DILocalVariable(name: "zero", scope: !7205, file: !4820, line: 30, type: !44)
!7221 = !DILocalVariable(name: "i", scope: !7205, file: !4820, line: 236, type: !30)
!7222 = !DILocalVariable(name: "next", scope: !7205, file: !4820, line: 243, type: !41)
!7223 = !DILocalVariable(name: "oldZero", scope: !7205, file: !4820, line: 317, type: !44)
!7224 = !DILocation(line: 194, column: 15, scope: !7205)
!7225 = !DILocation(line: 0, scope: !7205)
!7226 = !DILocation(line: 196, column: 5, scope: !7205)
!7227 = !DILocation(line: 200, column: 11, scope: !7205)
!7228 = !DILocation(line: 200, column: 2, scope: !7205)
!7229 = !DILocation(line: 215, column: 2, scope: !7205)
!7230 = !DILocation(line: 216, column: 5, scope: !7205)
!7231 = !DILocation(line: 216, column: 7, scope: !7205)
!7232 = !DILocation(line: 236, column: 11, scope: !7205)
!7233 = !DILocation(line: 236, column: 10, scope: !7205)
!7234 = !DILocation(line: 236, column: 2, scope: !7205)
!7235 = !DILocation(line: 239, column: 9, scope: !7205)
!7236 = !DILocation(line: 194, column: 26, scope: !7205)
!7237 = !DILocation(line: 241, column: 7, scope: !7205)
!7238 = !DILocation(line: 241, column: 9, scope: !7205)
!7239 = !DILocation(line: 242, column: 4, scope: !7205)
!7240 = !DILocation(line: 243, column: 12, scope: !7205)
!7241 = !DILocation(line: 243, column: 14, scope: !7205)
!7242 = !DILocation(line: 243, column: 4, scope: !7205)
!7243 = !DILocation(line: 244, column: 4, scope: !7205)
!7244 = !DILocation(line: 244, column: 8, scope: !7205)
!7245 = !DILocation(line: 244, column: 7, scope: !7205)
!7246 = !DILocation(line: 268, column: 2, scope: !7205)
!7247 = !DILocation(line: 269, column: 2, scope: !7205)
!7248 = !DILocation(line: 269, column: 6, scope: !7205)
!7249 = !DILocation(line: 269, column: 5, scope: !7205)
!7250 = !DILocation(line: 270, column: 6, scope: !7205)
!7251 = !DILocation(line: 270, column: 8, scope: !7205)
!7252 = !DILocation(line: 270, column: 15, scope: !7205)
!7253 = !DILocation(line: 270, column: 26, scope: !7205)
!7254 = !DILocation(line: 271, column: 3, scope: !7205)
!7255 = !DILocation(line: 272, column: 3, scope: !7205)
!7256 = !DILocation(line: 272, column: 7, scope: !7205)
!7257 = !DILocation(line: 272, column: 6, scope: !7205)
!7258 = !DILocation(line: 277, column: 10, scope: !7205)
!7259 = !DILocation(line: 280, column: 4, scope: !7205)
!7260 = !DILocation(line: 281, column: 4, scope: !7205)
!7261 = !DILocation(line: 281, column: 8, scope: !7205)
!7262 = !DILocation(line: 281, column: 7, scope: !7205)
!7263 = !DILocation(line: 285, column: 7, scope: !7205)
!7264 = !DILocation(line: 285, column: 11, scope: !7205)
!7265 = !DILocation(line: 285, column: 10, scope: !7205)
!7266 = !DILocation(line: 286, column: 5, scope: !7205)
!7267 = !DILocation(line: 287, column: 5, scope: !7205)
!7268 = !DILocation(line: 287, column: 9, scope: !7205)
!7269 = !DILocation(line: 287, column: 8, scope: !7205)
!7270 = !DILocation(line: 291, column: 4, scope: !7205)
!7271 = !DILocation(line: 292, column: 4, scope: !7205)
!7272 = !DILocation(line: 292, column: 8, scope: !7205)
!7273 = !DILocation(line: 292, column: 7, scope: !7205)
!7274 = !DILocation(line: 297, column: 5, scope: !7205)
!7275 = !DILocation(line: 304, column: 5, scope: !7205)
!7276 = !DILocation(line: 305, column: 3, scope: !7205)
!7277 = !DILocation(line: 306, column: 3, scope: !7205)
!7278 = !DILocation(line: 306, column: 7, scope: !7205)
!7279 = !DILocation(line: 306, column: 6, scope: !7205)
!7280 = !DILocation(line: 308, column: 3, scope: !7205)
!7281 = !DILocation(line: 309, column: 3, scope: !7205)
!7282 = !DILocation(line: 309, column: 7, scope: !7205)
!7283 = !DILocation(line: 309, column: 6, scope: !7205)
!7284 = !DILocation(line: 311, column: 3, scope: !7205)
!7285 = !DILocation(line: 312, column: 3, scope: !7205)
!7286 = !DILocation(line: 312, column: 7, scope: !7205)
!7287 = !DILocation(line: 312, column: 6, scope: !7205)
!7288 = !DILocation(line: 248, column: 7, scope: !7205)
!7289 = !DILocation(line: 248, column: 9, scope: !7205)
!7290 = !DILocation(line: 249, column: 4, scope: !7205)
!7291 = !DILocation(line: 250, column: 4, scope: !7205)
!7292 = !DILocation(line: 250, column: 8, scope: !7205)
!7293 = !DILocation(line: 250, column: 7, scope: !7205)
!7294 = !DILocation(line: 254, column: 7, scope: !7205)
!7295 = !DILocation(line: 254, column: 9, scope: !7205)
!7296 = !DILocation(line: 255, column: 4, scope: !7205)
!7297 = !DILocation(line: 256, column: 4, scope: !7205)
!7298 = !DILocation(line: 256, column: 8, scope: !7205)
!7299 = !DILocation(line: 256, column: 7, scope: !7205)
!7300 = !DILocation(line: 260, column: 7, scope: !7205)
!7301 = !DILocation(line: 260, column: 9, scope: !7205)
!7302 = !DILocation(line: 261, column: 4, scope: !7205)
!7303 = !DILocation(line: 262, column: 4, scope: !7205)
!7304 = !DILocation(line: 262, column: 8, scope: !7205)
!7305 = !DILocation(line: 262, column: 7, scope: !7205)
!7306 = !DILocation(line: 266, column: 8, scope: !7205)
!7307 = !DILocation(line: 229, column: 4, scope: !7205)
!7308 = !DILocation(line: 200, column: 17, scope: !7205)
!7309 = !DILocation(line: 203, column: 5, scope: !7205)
!7310 = !DILocation(line: 203, column: 7, scope: !7205)
!7311 = !DILocation(line: 205, column: 16, scope: !7205)
!7312 = !DILocation(line: 205, column: 18, scope: !7205)
!7313 = !DILocation(line: 205, column: 14, scope: !7205)
!7314 = !DILocation(line: 205, column: 26, scope: !7205)
!7315 = !DILocation(line: 205, column: 22, scope: !7205)
!7316 = !DILocation(line: 206, column: 6, scope: !7205)
!7317 = !DILocation(line: 206, column: 18, scope: !7205)
!7318 = !DILocation(line: 206, column: 12, scope: !7205)
!7319 = !DILocation(line: 208, column: 23, scope: !7205)
!7320 = !DILocation(line: 208, column: 14, scope: !7205)
!7321 = !DILocation(line: 208, column: 4, scope: !7205)
!7322 = !DILocation(line: 217, column: 12, scope: !7205)
!7323 = !DILocation(line: 219, column: 6, scope: !7205)
!7324 = !DILocation(line: 219, column: 11, scope: !7205)
!7325 = !DILocation(line: 219, column: 19, scope: !7205)
!7326 = !DILocation(line: 220, column: 15, scope: !7205)
!7327 = !DILocation(line: 220, column: 17, scope: !7205)
!7328 = !DILocation(line: 220, column: 4, scope: !7205)
!7329 = !DILocation(line: 221, column: 6, scope: !7205)
!7330 = !DILocation(line: 222, column: 21, scope: !7205)
!7331 = !DILocation(line: 222, column: 18, scope: !7205)
!7332 = !DILocation(line: 223, column: 6, scope: !7205)
!7333 = !DILocation(line: 224, column: 4, scope: !7205)
!7334 = !DILocation(line: 244, column: 24, scope: !7205)
!7335 = !DILocation(line: 244, column: 22, scope: !7205)
!7336 = !DILocation(line: 244, column: 28, scope: !7205)
!7337 = !DILocation(line: 244, column: 32, scope: !7205)
!7338 = !DILocation(line: 244, column: 26, scope: !7205)
!7339 = !DILocation(line: 244, column: 17, scope: !7205)
!7340 = !DILocation(line: 245, column: 4, scope: !7205)
!7341 = !DILocation(line: 269, column: 11, scope: !7205)
!7342 = !DILocation(line: 269, column: 18, scope: !7205)
!7343 = !DILocation(line: 269, column: 17, scope: !7205)
!7344 = !DILocation(line: 276, column: 5, scope: !7205)
!7345 = !DILocation(line: 276, column: 7, scope: !7205)
!7346 = !DILocation(line: 282, column: 4, scope: !7205)
!7347 = !DILocation(line: 283, column: 4, scope: !7205)
!7348 = !DILocation(line: 283, column: 8, scope: !7205)
!7349 = !DILocation(line: 283, column: 7, scope: !7205)
!7350 = !DILocation(line: 285, column: 14, scope: !7205)
!7351 = !DILocation(line: 292, column: 13, scope: !7205)
!7352 = !DILocation(line: 292, column: 19, scope: !7205)
!7353 = !DILocation(line: 293, column: 4, scope: !7205)
!7354 = !DILocation(line: 294, column: 4, scope: !7205)
!7355 = !DILocation(line: 294, column: 8, scope: !7205)
!7356 = !DILocation(line: 294, column: 7, scope: !7205)
!7357 = !DILocation(line: 317, column: 15, scope: !7205)
!7358 = !DILocation(line: 317, column: 13, scope: !7205)
!7359 = !DILocation(line: 317, column: 2, scope: !7205)
!7360 = !DILocation(line: 318, column: 4, scope: !7205)
!7361 = !DILocation(line: 319, column: 8, scope: !7205)
!7362 = !DILocation(line: 319, column: 12, scope: !7205)
!7363 = !DILocation(line: 319, column: 11, scope: !7205)
!7364 = !DILocation(line: 319, column: 7, scope: !7205)
!7365 = !DILocation(line: 320, column: 2, scope: !7205)
!7366 = !DILocation(line: 320, column: 11, scope: !7205)
!7367 = !DILocation(line: 320, column: 4, scope: !7205)
!7368 = !DILocation(line: 307, column: 12, scope: !7205)
!7369 = !DILocation(line: 307, column: 14, scope: !7205)
!7370 = !DILocation(line: 310, column: 12, scope: !7205)
!7371 = !DILocation(line: 310, column: 14, scope: !7205)
!7372 = !DILocation(line: 250, column: 13, scope: !7205)
!7373 = !DILocation(line: 250, column: 20, scope: !7205)
!7374 = !DILocation(line: 250, column: 19, scope: !7205)
!7375 = !DILocation(line: 251, column: 4, scope: !7205)
!7376 = !DILocation(line: 256, column: 24, scope: !7205)
!7377 = !DILocation(line: 256, column: 17, scope: !7205)
!7378 = !DILocation(line: 257, column: 4, scope: !7205)
!7379 = !DILocation(line: 262, column: 24, scope: !7205)
!7380 = !DILocation(line: 262, column: 17, scope: !7205)
!7381 = !DILocation(line: 263, column: 4, scope: !7205)
!7382 = !DILocation(line: 226, column: 14, scope: !7205)
!7383 = !DILocation(line: 226, column: 22, scope: !7205)
!7384 = !DILocation(line: 226, column: 24, scope: !7205)
!7385 = !DILocation(line: 227, column: 10, scope: !7205)
!7386 = !DILocation(line: 227, column: 12, scope: !7205)
!7387 = !DILocation(line: 227, column: 3, scope: !7205)
!7388 = !DILocation(line: 228, column: 6, scope: !7205)
!7389 = !DILocation(line: 228, column: 18, scope: !7205)
!7390 = !DILocation(line: 228, column: 20, scope: !7205)
!7391 = !DILocation(line: 228, column: 28, scope: !7205)
!7392 = !DILocation(line: 228, column: 30, scope: !7205)
!7393 = !DILocation(line: 203, column: 21, scope: !7205)
!7394 = !DILocation(line: 203, column: 23, scope: !7205)
!7395 = distinct !DISubprogram(name: "(*fmt.fmt).padString", linkageName: "(*fmt.fmt).padString", scope: !4820, file: !4820, line: 108, type: !5863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7396)
!7396 = !{!7397, !7398, !7399}
!7397 = !DILocalVariable(name: "f", arg: 1, scope: !7395, file: !4820, line: 108, type: !4861)
!7398 = !DILocalVariable(name: "s", arg: 2, scope: !7395, file: !4820, line: 108, type: !1347)
!7399 = !DILocalVariable(name: "width", scope: !7395, file: !4820, line: 113, type: !30)
!7400 = !DILocation(line: 410, column: 6, scope: !7401, inlinedAt: !7414)
!7401 = distinct !DISubprogram(name: "unicode/utf8.RuneCountInString", linkageName: "unicode/utf8.RuneCountInString", scope: !2, file: !2, line: 410, type: !1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7402)
!7402 = !{!7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413}
!7403 = !DILocalVariable(name: "s", arg: 1, scope: !7401, file: !2, line: 410, type: !1347)
!7404 = !DILocalVariable(name: "ns", scope: !7401, file: !2, line: 411, type: !30)
!7405 = !DILocalVariable(name: "i", scope: !7401, file: !2, line: 412, type: !30)
!7406 = !DILocalVariable(name: "c", scope: !7401, file: !2, line: 413, type: !72)
!7407 = !DILocalVariable(name: "n", scope: !7401, file: !2, line: 410, type: !30)
!7408 = !DILocalVariable(name: "x", scope: !7401, file: !2, line: 419, type: !4)
!7409 = !DILocalVariable(name: "size", scope: !7401, file: !2, line: 424, type: !30)
!7410 = !DILocalVariable(name: "accept", scope: !7401, file: !2, line: 429, type: !10)
!7411 = !DILocalVariable(name: "c", scope: !7401, file: !2, line: 430, type: !72)
!7412 = !DILocalVariable(name: "c", scope: !7401, file: !2, line: 433, type: !72)
!7413 = !DILocalVariable(name: "c", scope: !7401, file: !2, line: 436, type: !72)
!7414 = distinct !DILocation(line: 113, column: 41, scope: !7395)
!7415 = !DILocation(line: 108, column: 15, scope: !7395)
!7416 = !DILocation(line: 109, column: 6, scope: !7395)
!7417 = !DILocation(line: 0, scope: !7395)
!7418 = !DILocation(line: 116, column: 18, scope: !7395)
!7419 = !DILocation(line: 116, column: 17, scope: !7395)
!7420 = !DILocation(line: 117, column: 3, scope: !7395)
!7421 = !DILocation(line: 117, column: 5, scope: !7395)
!7422 = !DILocation(line: 117, column: 21, scope: !7395)
!7423 = !DILocation(line: 117, column: 20, scope: !7395)
!7424 = !DILocation(line: 109, column: 8, scope: !7395)
!7425 = !DILocation(line: 109, column: 22, scope: !7395)
!7426 = !DILocation(line: 109, column: 24, scope: !7395)
!7427 = !DILocation(line: 109, column: 28, scope: !7395)
!7428 = !DILocation(line: 113, column: 11, scope: !7395)
!7429 = !DILocation(line: 113, column: 42, scope: !7395)
!7430 = !DILocation(line: 411, column: 12, scope: !7401, inlinedAt: !7414)
!7431 = !DILocation(line: 411, column: 2, scope: !7401, inlinedAt: !7414)
!7432 = !DILocation(line: 412, column: 6, scope: !7401, inlinedAt: !7414)
!7433 = !DILocation(line: 0, scope: !7401, inlinedAt: !7414)
!7434 = !DILocation(line: 410, column: 35, scope: !7401, inlinedAt: !7414)
!7435 = !DILocation(line: 412, column: 14, scope: !7401, inlinedAt: !7414)
!7436 = !DILocation(line: 412, column: 18, scope: !7401, inlinedAt: !7414)
!7437 = !DILocation(line: 412, column: 16, scope: !7401, inlinedAt: !7414)
!7438 = !DILocation(line: 413, column: 8, scope: !7401, inlinedAt: !7414)
!7439 = !DILocation(line: 413, column: 10, scope: !7401, inlinedAt: !7414)
!7440 = !DILocation(line: 413, column: 9, scope: !7401, inlinedAt: !7414)
!7441 = !DILocation(line: 416, column: 4, scope: !7401, inlinedAt: !7414)
!7442 = !DILocation(line: 412, column: 22, scope: !7401, inlinedAt: !7414)
!7443 = !DILocation(line: 419, column: 14, scope: !7401, inlinedAt: !7414)
!7444 = !DILocation(line: 419, column: 13, scope: !7401, inlinedAt: !7414)
!7445 = !DILocation(line: 420, column: 6, scope: !7401, inlinedAt: !7414)
!7446 = !DILocation(line: 420, column: 8, scope: !7401, inlinedAt: !7414)
!7447 = !DILocation(line: 421, column: 4, scope: !7401, inlinedAt: !7414)
!7448 = !DILocation(line: 424, column: 15, scope: !7401, inlinedAt: !7414)
!7449 = !DILocation(line: 424, column: 17, scope: !7401, inlinedAt: !7414)
!7450 = !DILocation(line: 424, column: 14, scope: !7401, inlinedAt: !7414)
!7451 = !DILocation(line: 424, column: 3, scope: !7401, inlinedAt: !7414)
!7452 = !DILocation(line: 425, column: 6, scope: !7401, inlinedAt: !7414)
!7453 = !DILocation(line: 425, column: 8, scope: !7401, inlinedAt: !7414)
!7454 = !DILocation(line: 425, column: 7, scope: !7401, inlinedAt: !7414)
!7455 = !DILocation(line: 425, column: 15, scope: !7401, inlinedAt: !7414)
!7456 = !DILocation(line: 425, column: 13, scope: !7401, inlinedAt: !7414)
!7457 = !DILocation(line: 426, column: 4, scope: !7401, inlinedAt: !7414)
!7458 = !DILocation(line: 429, column: 26, scope: !7401, inlinedAt: !7414)
!7459 = !DILocation(line: 429, column: 27, scope: !7401, inlinedAt: !7414)
!7460 = !DILocation(line: 429, column: 25, scope: !7401, inlinedAt: !7414)
!7461 = !DILocation(line: 429, column: 3, scope: !7401, inlinedAt: !7414)
!7462 = !DILocation(line: 430, column: 11, scope: !7401, inlinedAt: !7414)
!7463 = !DILocation(line: 430, column: 13, scope: !7401, inlinedAt: !7414)
!7464 = !DILocation(line: 430, column: 14, scope: !7401, inlinedAt: !7414)
!7465 = !DILocation(line: 430, column: 12, scope: !7401, inlinedAt: !7414)
!7466 = !DILocation(line: 439, column: 8, scope: !7401, inlinedAt: !7414)
!7467 = !DILocation(line: 439, column: 3, scope: !7401, inlinedAt: !7414)
!7468 = !DILocation(line: 432, column: 13, scope: !7401, inlinedAt: !7414)
!7469 = !DILocation(line: 432, column: 18, scope: !7401, inlinedAt: !7414)
!7470 = !DILocation(line: 433, column: 18, scope: !7401, inlinedAt: !7414)
!7471 = !DILocation(line: 433, column: 20, scope: !7401, inlinedAt: !7414)
!7472 = !DILocation(line: 433, column: 21, scope: !7401, inlinedAt: !7414)
!7473 = !DILocation(line: 433, column: 19, scope: !7401, inlinedAt: !7414)
!7474 = !DILocation(line: 435, column: 13, scope: !7401, inlinedAt: !7414)
!7475 = !DILocation(line: 435, column: 18, scope: !7401, inlinedAt: !7414)
!7476 = !DILocation(line: 436, column: 18, scope: !7401, inlinedAt: !7414)
!7477 = !DILocation(line: 436, column: 20, scope: !7401, inlinedAt: !7414)
!7478 = !DILocation(line: 436, column: 21, scope: !7401, inlinedAt: !7414)
!7479 = !DILocation(line: 436, column: 19, scope: !7401, inlinedAt: !7414)
!7480 = !DILocation(line: 413, column: 3, scope: !7401, inlinedAt: !7414)
!7481 = !DILocation(line: 414, column: 6, scope: !7401, inlinedAt: !7414)
!7482 = !DILocation(line: 414, column: 8, scope: !7401, inlinedAt: !7414)
!7483 = !DILocation(line: 430, column: 19, scope: !7401, inlinedAt: !7414)
!7484 = !DILocation(line: 430, column: 21, scope: !7401, inlinedAt: !7414)
!7485 = !DILocation(line: 430, column: 48, scope: !7401, inlinedAt: !7414)
!7486 = !DILocation(line: 433, column: 13, scope: !7401, inlinedAt: !7414)
!7487 = !DILocation(line: 433, column: 26, scope: !7401, inlinedAt: !7414)
!7488 = !DILocation(line: 433, column: 28, scope: !7401, inlinedAt: !7414)
!7489 = !DILocation(line: 433, column: 45, scope: !7401, inlinedAt: !7414)
!7490 = !DILocation(line: 436, column: 13, scope: !7401, inlinedAt: !7414)
!7491 = !DILocation(line: 436, column: 26, scope: !7401, inlinedAt: !7414)
!7492 = !DILocation(line: 436, column: 28, scope: !7401, inlinedAt: !7414)
!7493 = !DILocation(line: 436, column: 45, scope: !7401, inlinedAt: !7414)
!7494 = !DILocation(line: 441, column: 9, scope: !7401, inlinedAt: !7414)
!7495 = !DILocation(line: 441, column: 2, scope: !7401, inlinedAt: !7414)
!7496 = !DILocation(line: 113, column: 17, scope: !7395)
!7497 = !DILocation(line: 113, column: 2, scope: !7395)
!7498 = !DILocation(line: 114, column: 8, scope: !7395)
!7499 = !DILocation(line: 120, column: 5, scope: !7395)
!7500 = !DILocation(line: 120, column: 21, scope: !7395)
!7501 = !DILocation(line: 120, column: 20, scope: !7395)
!7502 = !DILocation(line: 121, column: 3, scope: !7395)
!7503 = !DILocation(line: 121, column: 18, scope: !7395)
!7504 = !DILocation(line: 121, column: 17, scope: !7395)
!7505 = !DILocation(line: 110, column: 3, scope: !7395)
!7506 = !DILocation(line: 110, column: 5, scope: !7395)
!7507 = !DILocation(line: 110, column: 21, scope: !7395)
!7508 = !DILocation(line: 110, column: 20, scope: !7395)
!7509 = !DILocation(line: 111, column: 3, scope: !7395)
!7510 = distinct !DISubprogram(name: "(*fmt.fmt).writePadding", linkageName: "(*fmt.fmt).writePadding", scope: !4820, file: !4820, line: 64, type: !7511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7513)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{!4861, !30}
!7513 = !{!7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521}
!7514 = !DILocalVariable(name: "f", arg: 1, scope: !7510, file: !4820, line: 64, type: !4861)
!7515 = !DILocalVariable(name: "n", arg: 2, scope: !7510, file: !4820, line: 64, type: !30)
!7516 = !DILocalVariable(name: "buf", scope: !7510, file: !4820, line: 68, type: !4710)
!7517 = !DILocalVariable(name: "oldLen", scope: !7510, file: !4820, line: 69, type: !30)
!7518 = !DILocalVariable(name: "newLen", scope: !7510, file: !4820, line: 70, type: !30)
!7519 = !DILocalVariable(name: "padByte", scope: !7510, file: !4820, line: 77, type: !72)
!7520 = !DILocalVariable(name: "padding", scope: !7510, file: !4820, line: 82, type: !4710)
!7521 = !DILocalVariable(name: "i", scope: !7510, file: !4820, line: 83, type: !30)
!7522 = !DILocation(line: 64, column: 15, scope: !7510)
!7523 = !DILocation(line: 65, column: 5, scope: !7510)
!7524 = !DILocation(line: 65, column: 7, scope: !7510)
!7525 = !DILocation(line: 0, scope: !7510)
!7526 = !DILocation(line: 66, column: 3, scope: !7510)
!7527 = !DILocation(line: 68, column: 10, scope: !7510)
!7528 = !DILocation(line: 68, column: 12, scope: !7510)
!7529 = !DILocation(line: 73, column: 26, scope: !7510)
!7530 = !DILocation(line: 73, column: 30, scope: !7510)
!7531 = !DILocation(line: 73, column: 33, scope: !7510)
!7532 = !DILocation(line: 73, column: 32, scope: !7510)
!7533 = !DILocation(line: 73, column: 13, scope: !7510)
!7534 = !DILocation(line: 68, column: 2, scope: !7510)
!7535 = !DILocation(line: 77, column: 2, scope: !7510)
!7536 = !DILocation(line: 78, column: 5, scope: !7510)
!7537 = !DILocation(line: 78, column: 7, scope: !7510)
!7538 = !DILocation(line: 82, column: 13, scope: !7510)
!7539 = !DILocation(line: 82, column: 24, scope: !7510)
!7540 = !DILocation(line: 82, column: 17, scope: !7510)
!7541 = !DILocation(line: 82, column: 16, scope: !7510)
!7542 = !DILocation(line: 83, column: 6, scope: !7510)
!7543 = !DILocation(line: 84, column: 3, scope: !7510)
!7544 = !DILocation(line: 84, column: 11, scope: !7510)
!7545 = !DILocation(line: 84, column: 10, scope: !7510)
!7546 = !DILocation(line: 68, column: 9, scope: !7510)
!7547 = !DILocation(line: 69, column: 16, scope: !7510)
!7548 = !DILocation(line: 69, column: 2, scope: !7510)
!7549 = !DILocation(line: 70, column: 12, scope: !7510)
!7550 = !DILocation(line: 70, column: 21, scope: !7510)
!7551 = !DILocation(line: 70, column: 19, scope: !7510)
!7552 = !DILocation(line: 70, column: 2, scope: !7510)
!7553 = !DILocation(line: 72, column: 5, scope: !7510)
!7554 = !DILocation(line: 72, column: 18, scope: !7510)
!7555 = !DILocation(line: 72, column: 12, scope: !7510)
!7556 = !DILocation(line: 74, column: 8, scope: !7510)
!7557 = !DILocation(line: 74, column: 14, scope: !7510)
!7558 = !DILocation(line: 74, column: 16, scope: !7510)
!7559 = !DILocation(line: 74, column: 13, scope: !7510)
!7560 = !DILocalVariable(name: "dst", arg: 1, scope: !7561, file: !2993, line: 45, type: !91)
!7561 = distinct !DISubprogram(name: "runtime.sliceCopy", linkageName: "runtime.sliceCopy", scope: !2993, file: !2993, line: 45, type: !7562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!91, !91, !55, !55, !55}
!7564 = !{!7560, !7565, !7566, !7567, !7568, !7569}
!7565 = !DILocalVariable(name: "src", arg: 2, scope: !7561, file: !2993, line: 45, type: !91)
!7566 = !DILocalVariable(name: "dstLen", arg: 3, scope: !7561, file: !2993, line: 45, type: !55)
!7567 = !DILocalVariable(name: "srcLen", arg: 4, scope: !7561, file: !2993, line: 45, type: !55)
!7568 = !DILocalVariable(name: "elemSize", arg: 5, scope: !7561, file: !2993, line: 45, type: !55)
!7569 = !DILocalVariable(name: "n", scope: !7561, file: !2993, line: 47, type: !55)
!7570 = !DILocation(line: 45, column: 6, scope: !7561, inlinedAt: !7571)
!7571 = distinct !DILocation(line: 74, column: 7, scope: !7510)
!7572 = !DILocation(line: 47, column: 7, scope: !7561, inlinedAt: !7571)
!7573 = !DILocation(line: 48, column: 5, scope: !7561, inlinedAt: !7571)
!7574 = !DILocation(line: 48, column: 9, scope: !7561, inlinedAt: !7571)
!7575 = !DILocation(line: 48, column: 7, scope: !7561, inlinedAt: !7571)
!7576 = !DILocation(line: 0, scope: !7561, inlinedAt: !7571)
!7577 = !DILocation(line: 51, column: 20, scope: !7561, inlinedAt: !7571)
!7578 = !DILocation(line: 51, column: 9, scope: !7561, inlinedAt: !7571)
!7579 = !DILocation(line: 82, column: 2, scope: !7510)
!7580 = !DILocation(line: 83, column: 17, scope: !7510)
!7581 = !DILocation(line: 84, column: 16, scope: !7510)
!7582 = !DILocation(line: 86, column: 3, scope: !7510)
!7583 = !DILocation(line: 86, column: 5, scope: !7510)
!7584 = !DILocation(line: 86, column: 11, scope: !7510)
!7585 = !DILocation(line: 86, column: 16, scope: !7510)
!7586 = !DILocation(line: 86, column: 2, scope: !7510)
!7587 = distinct !DISubprogram(name: "(*fmt.fmt).truncateString", linkageName: "(*fmt.fmt).truncateString", scope: !4820, file: !4820, line: 324, type: !5863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7588)
!7588 = !{!7589, !7590, !7591, !7592}
!7589 = !DILocalVariable(name: "f", arg: 1, scope: !7587, file: !4820, line: 324, type: !4861)
!7590 = !DILocalVariable(name: "s", arg: 2, scope: !7587, file: !4820, line: 324, type: !1347)
!7591 = !DILocalVariable(name: "n", scope: !7587, file: !4820, line: 326, type: !30)
!7592 = !DILocalVariable(name: "i", scope: !7587, file: !4820, line: 327, type: !30)
!7593 = !DILocation(line: 324, column: 15, scope: !7587)
!7594 = !DILocation(line: 325, column: 5, scope: !7587)
!7595 = !DILocation(line: 0, scope: !7587)
!7596 = !DILocation(line: 326, column: 3, scope: !7587)
!7597 = !DILocalVariable(name: "s", arg: 1, scope: !7598, file: !2497, line: 142, type: !1347)
!7598 = distinct !DISubprogram(name: "runtime.stringNext", linkageName: "runtime.stringNext", scope: !2497, file: !2497, line: 142, type: !7599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7606)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!1347, !7601}
!7601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7602, size: 32, align: 32, dwarfAddressSpace: 0)
!7602 = !DIDerivedType(tag: DW_TAG_typedef, name: "runtime.stringIterator", baseType: !7603)
!7603 = !DICompositeType(tag: DW_TAG_structure_type, size: 32, align: 32, elements: !7604)
!7604 = !{!7605}
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "byteindex", baseType: !55, size: 32, align: 32)
!7606 = !{!7597, !7607, !7608, !7609, !7610, !7611}
!7607 = !DILocalVariable(name: "it", arg: 2, scope: !7598, file: !2497, line: 142, type: !7601)
!7608 = !DILocalVariable(name: "i", scope: !7598, file: !2497, line: 146, type: !30)
!7609 = !DILocalVariable(name: "r", scope: !7598, file: !2497, line: 147, type: !295)
!7610 = !DILocalVariable(name: "length", scope: !7598, file: !2497, line: 147, type: !55)
!7611 = !DILocalVariable(name: "byteindex", scope: !7598, file: !2497, line: 17, type: !55)
!7612 = !DILocation(line: 142, column: 6, scope: !7598, inlinedAt: !7613)
!7613 = distinct !DILocation(line: 0, scope: !7587)
!7614 = !DILocation(line: 143, column: 9, scope: !7598, inlinedAt: !7613)
!7615 = !DILocation(line: 143, column: 19, scope: !7598, inlinedAt: !7613)
!7616 = !DILocation(line: 143, column: 12, scope: !7598, inlinedAt: !7613)
!7617 = !DILocation(line: 0, scope: !7598, inlinedAt: !7613)
!7618 = !DILocation(line: 146, column: 2, scope: !7598, inlinedAt: !7613)
!7619 = !DILocation(line: 147, column: 26, scope: !7598, inlinedAt: !7613)
!7620 = !DILocation(line: 147, column: 29, scope: !7598, inlinedAt: !7613)
!7621 = !DILocalVariable(name: "s", arg: 1, scope: !7622, file: !2497, line: 182, type: !1347)
!7622 = distinct !DISubprogram(name: "runtime.decodeUTF8", linkageName: "runtime.decodeUTF8", scope: !2497, file: !2497, line: 182, type: !7623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!1347, !55}
!7625 = !{!7621, !7626, !7627, !7628, !7629, !7630, !7631}
!7626 = !DILocalVariable(name: "index", arg: 2, scope: !7622, file: !2497, line: 182, type: !55)
!7627 = !DILocalVariable(name: "remaining", scope: !7622, file: !2497, line: 183, type: !55)
!7628 = !DILocalVariable(name: "x", scope: !7622, file: !2497, line: 184, type: !72)
!7629 = !DILocalVariable(name: "r", scope: !7622, file: !2497, line: 192, type: !295)
!7630 = !DILocalVariable(name: "r", scope: !7622, file: !2497, line: 203, type: !295)
!7631 = !DILocalVariable(name: "r", scope: !7622, file: !2497, line: 214, type: !295)
!7632 = !DILocation(line: 182, column: 6, scope: !7622, inlinedAt: !7633)
!7633 = distinct !DILocation(line: 147, column: 25, scope: !7598, inlinedAt: !7613)
!7634 = !DILocation(line: 183, column: 27, scope: !7622, inlinedAt: !7633)
!7635 = !DILocation(line: 183, column: 33, scope: !7622, inlinedAt: !7633)
!7636 = !DILocation(line: 183, column: 31, scope: !7622, inlinedAt: !7633)
!7637 = !DILocation(line: 183, column: 2, scope: !7622, inlinedAt: !7633)
!7638 = !DILocation(line: 184, column: 8, scope: !7622, inlinedAt: !7633)
!7639 = !DILocation(line: 186, column: 7, scope: !7622, inlinedAt: !7633)
!7640 = !DILocation(line: 186, column: 14, scope: !7622, inlinedAt: !7633)
!7641 = !DILocation(line: 0, scope: !7622, inlinedAt: !7633)
!7642 = !DILocation(line: 188, column: 8, scope: !7622, inlinedAt: !7633)
!7643 = !DILocation(line: 188, column: 14, scope: !7622, inlinedAt: !7633)
!7644 = !DILocation(line: 189, column: 6, scope: !7622, inlinedAt: !7633)
!7645 = !DILocation(line: 189, column: 16, scope: !7622, inlinedAt: !7633)
!7646 = !DILocation(line: 189, column: 39, scope: !7622, inlinedAt: !7633)
!7647 = !DILocation(line: 189, column: 41, scope: !7622, inlinedAt: !7633)
!7648 = !DILocation(line: 189, column: 46, scope: !7622, inlinedAt: !7633)
!7649 = !DILocation(line: 189, column: 40, scope: !7622, inlinedAt: !7633)
!7650 = !DILocalVariable(name: "b", arg: 1, scope: !7651, file: !2497, line: 229, type: !72)
!7651 = distinct !DISubprogram(name: "runtime.isContinuation", linkageName: "runtime.isContinuation", scope: !2497, file: !2497, line: 229, type: !3084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7652)
!7652 = !{!7650}
!7653 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7654)
!7654 = distinct !DILocation(line: 189, column: 38, scope: !7622, inlinedAt: !7633)
!7655 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7654)
!7656 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7654)
!7657 = !DILocation(line: 192, column: 14, scope: !7622, inlinedAt: !7633)
!7658 = !DILocation(line: 193, column: 6, scope: !7622, inlinedAt: !7633)
!7659 = !DILocation(line: 199, column: 7, scope: !7622, inlinedAt: !7633)
!7660 = !DILocation(line: 199, column: 8, scope: !7622, inlinedAt: !7633)
!7661 = !DILocation(line: 199, column: 14, scope: !7622, inlinedAt: !7633)
!7662 = !DILocation(line: 200, column: 6, scope: !7622, inlinedAt: !7633)
!7663 = !DILocation(line: 200, column: 16, scope: !7622, inlinedAt: !7633)
!7664 = !DILocation(line: 200, column: 39, scope: !7622, inlinedAt: !7633)
!7665 = !DILocation(line: 200, column: 41, scope: !7622, inlinedAt: !7633)
!7666 = !DILocation(line: 200, column: 46, scope: !7622, inlinedAt: !7633)
!7667 = !DILocation(line: 200, column: 40, scope: !7622, inlinedAt: !7633)
!7668 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7669)
!7669 = distinct !DILocation(line: 200, column: 38, scope: !7622, inlinedAt: !7633)
!7670 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7669)
!7671 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7669)
!7672 = !DILocation(line: 200, column: 70, scope: !7622, inlinedAt: !7633)
!7673 = !DILocation(line: 200, column: 72, scope: !7622, inlinedAt: !7633)
!7674 = !DILocation(line: 200, column: 77, scope: !7622, inlinedAt: !7633)
!7675 = !DILocation(line: 200, column: 71, scope: !7622, inlinedAt: !7633)
!7676 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7677)
!7677 = distinct !DILocation(line: 200, column: 69, scope: !7622, inlinedAt: !7633)
!7678 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7677)
!7679 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7677)
!7680 = !DILocation(line: 203, column: 14, scope: !7622, inlinedAt: !7633)
!7681 = !DILocation(line: 203, column: 15, scope: !7622, inlinedAt: !7633)
!7682 = !DILocation(line: 203, column: 13, scope: !7622, inlinedAt: !7633)
!7683 = !DILocation(line: 203, column: 22, scope: !7622, inlinedAt: !7633)
!7684 = !DILocation(line: 203, column: 38, scope: !7622, inlinedAt: !7633)
!7685 = !DILocation(line: 203, column: 40, scope: !7622, inlinedAt: !7633)
!7686 = !DILocation(line: 203, column: 50, scope: !7622, inlinedAt: !7633)
!7687 = !DILocation(line: 203, column: 58, scope: !7622, inlinedAt: !7633)
!7688 = !DILocation(line: 203, column: 29, scope: !7622, inlinedAt: !7633)
!7689 = !DILocation(line: 204, column: 6, scope: !7622, inlinedAt: !7633)
!7690 = !DILocation(line: 204, column: 8, scope: !7622, inlinedAt: !7633)
!7691 = !DILocation(line: 210, column: 7, scope: !7622, inlinedAt: !7633)
!7692 = !DILocation(line: 210, column: 8, scope: !7622, inlinedAt: !7633)
!7693 = !DILocation(line: 210, column: 14, scope: !7622, inlinedAt: !7633)
!7694 = !DILocation(line: 211, column: 6, scope: !7622, inlinedAt: !7633)
!7695 = !DILocation(line: 211, column: 39, scope: !7622, inlinedAt: !7633)
!7696 = !DILocation(line: 211, column: 41, scope: !7622, inlinedAt: !7633)
!7697 = !DILocation(line: 211, column: 46, scope: !7622, inlinedAt: !7633)
!7698 = !DILocation(line: 211, column: 40, scope: !7622, inlinedAt: !7633)
!7699 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7700)
!7700 = distinct !DILocation(line: 211, column: 38, scope: !7622, inlinedAt: !7633)
!7701 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7700)
!7702 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7700)
!7703 = !DILocation(line: 211, column: 70, scope: !7622, inlinedAt: !7633)
!7704 = !DILocation(line: 211, column: 72, scope: !7622, inlinedAt: !7633)
!7705 = !DILocation(line: 211, column: 77, scope: !7622, inlinedAt: !7633)
!7706 = !DILocation(line: 211, column: 71, scope: !7622, inlinedAt: !7633)
!7707 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7708)
!7708 = distinct !DILocation(line: 211, column: 69, scope: !7622, inlinedAt: !7633)
!7709 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7708)
!7710 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7708)
!7711 = !DILocation(line: 211, column: 101, scope: !7622, inlinedAt: !7633)
!7712 = !DILocation(line: 211, column: 103, scope: !7622, inlinedAt: !7633)
!7713 = !DILocation(line: 211, column: 108, scope: !7622, inlinedAt: !7633)
!7714 = !DILocation(line: 211, column: 102, scope: !7622, inlinedAt: !7633)
!7715 = !DILocation(line: 231, column: 9, scope: !7651, inlinedAt: !7716)
!7716 = distinct !DILocation(line: 211, column: 100, scope: !7622, inlinedAt: !7633)
!7717 = !DILocation(line: 231, column: 10, scope: !7651, inlinedAt: !7716)
!7718 = !DILocation(line: 231, column: 16, scope: !7651, inlinedAt: !7716)
!7719 = !DILocation(line: 214, column: 14, scope: !7622, inlinedAt: !7633)
!7720 = !DILocation(line: 214, column: 15, scope: !7622, inlinedAt: !7633)
!7721 = !DILocation(line: 214, column: 13, scope: !7622, inlinedAt: !7633)
!7722 = !DILocation(line: 214, column: 22, scope: !7622, inlinedAt: !7633)
!7723 = !DILocation(line: 214, column: 38, scope: !7622, inlinedAt: !7633)
!7724 = !DILocation(line: 214, column: 40, scope: !7622, inlinedAt: !7633)
!7725 = !DILocation(line: 214, column: 50, scope: !7622, inlinedAt: !7633)
!7726 = !DILocation(line: 214, column: 58, scope: !7622, inlinedAt: !7633)
!7727 = !DILocation(line: 214, column: 29, scope: !7622, inlinedAt: !7633)
!7728 = !DILocation(line: 214, column: 86, scope: !7622, inlinedAt: !7633)
!7729 = !DILocation(line: 214, column: 94, scope: !7622, inlinedAt: !7633)
!7730 = !DILocation(line: 214, column: 65, scope: !7622, inlinedAt: !7633)
!7731 = !DILocation(line: 214, column: 120, scope: !7622, inlinedAt: !7633)
!7732 = !DILocation(line: 214, column: 100, scope: !7622, inlinedAt: !7633)
!7733 = !DILocation(line: 215, column: 6, scope: !7622, inlinedAt: !7633)
!7734 = !DILocation(line: 147, column: 2, scope: !7598, inlinedAt: !7613)
!7735 = !DILocation(line: 148, column: 18, scope: !7598, inlinedAt: !7613)
!7736 = !DILocation(line: 148, column: 2, scope: !7598, inlinedAt: !7613)
!7737 = !DILocation(line: 148, column: 5, scope: !7598, inlinedAt: !7613)
!7738 = !DILocation(line: 149, column: 2, scope: !7598, inlinedAt: !7613)
!7739 = !DILocation(line: 327, column: 7, scope: !7587)
!7740 = !DILocation(line: 328, column: 4, scope: !7587)
!7741 = !DILocation(line: 329, column: 7, scope: !7587)
!7742 = !DILocation(line: 329, column: 9, scope: !7587)
!7743 = !DILocation(line: 330, column: 12, scope: !7587)
!7744 = !DILocation(line: 330, column: 15, scope: !7587)
!7745 = !DILocation(line: 330, column: 13, scope: !7587)
!7746 = !DILocation(line: 334, column: 9, scope: !7587)
!7747 = !DILocation(line: 334, column: 2, scope: !7587)
!7748 = !DILocation(line: 325, column: 7, scope: !7587)
!7749 = !DILocation(line: 326, column: 8, scope: !7587)
!7750 = !DILocation(line: 326, column: 10, scope: !7587)
!7751 = !DILocation(line: 327, column: 18, scope: !7587)
!7752 = !DILocation(line: 330, column: 5, scope: !7587)
!7753 = distinct !DISubprogram(name: "(*fmt.fmt).pad", linkageName: "(*fmt.fmt).pad", scope: !4820, file: !4820, line: 90, type: !7754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7756)
!7754 = !DISubroutineType(types: !7755)
!7755 = !{!4861, !3107}
!7756 = !{!7757, !7758, !7759}
!7757 = !DILocalVariable(name: "f", arg: 1, scope: !7753, file: !4820, line: 90, type: !4861)
!7758 = !DILocalVariable(name: "b", arg: 2, scope: !7753, file: !4820, line: 90, type: !3107)
!7759 = !DILocalVariable(name: "width", scope: !7753, file: !4820, line: 95, type: !30)
!7760 = !DILocation(line: 373, column: 6, scope: !7761, inlinedAt: !7776)
!7761 = distinct !DISubprogram(name: "unicode/utf8.RuneCount", linkageName: "unicode/utf8.RuneCount", scope: !2, file: !2, line: 373, type: !7762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!3107}
!7764 = !{!7765, !7766, !7767, !7768, !7769, !7770, !7771, !7772, !7773, !7774, !7775}
!7765 = !DILocalVariable(name: "p", arg: 1, scope: !7761, file: !2, line: 373, type: !3107)
!7766 = !DILocalVariable(name: "np", scope: !7761, file: !2, line: 374, type: !30)
!7767 = !DILocalVariable(name: "n", scope: !7761, file: !2, line: 375, type: !30)
!7768 = !DILocalVariable(name: "i", scope: !7761, file: !2, line: 376, type: !30)
!7769 = !DILocalVariable(name: "c", scope: !7761, file: !2, line: 378, type: !72)
!7770 = !DILocalVariable(name: "x", scope: !7761, file: !2, line: 384, type: !4)
!7771 = !DILocalVariable(name: "size", scope: !7761, file: !2, line: 389, type: !30)
!7772 = !DILocalVariable(name: "accept", scope: !7761, file: !2, line: 394, type: !10)
!7773 = !DILocalVariable(name: "c", scope: !7761, file: !2, line: 395, type: !72)
!7774 = !DILocalVariable(name: "c", scope: !7761, file: !2, line: 398, type: !72)
!7775 = !DILocalVariable(name: "c", scope: !7761, file: !2, line: 401, type: !72)
!7776 = distinct !DILocation(line: 95, column: 33, scope: !7753)
!7777 = !DILocation(line: 90, column: 15, scope: !7753)
!7778 = !DILocation(line: 91, column: 6, scope: !7753)
!7779 = !DILocation(line: 0, scope: !7753)
!7780 = !DILocation(line: 98, column: 18, scope: !7753)
!7781 = !DILocation(line: 98, column: 17, scope: !7753)
!7782 = !DILocation(line: 99, column: 3, scope: !7753)
!7783 = !DILocation(line: 99, column: 5, scope: !7753)
!7784 = !DILocation(line: 99, column: 15, scope: !7753)
!7785 = !DILocation(line: 99, column: 14, scope: !7753)
!7786 = !DILocation(line: 91, column: 8, scope: !7753)
!7787 = !DILocation(line: 91, column: 22, scope: !7753)
!7788 = !DILocation(line: 91, column: 24, scope: !7753)
!7789 = !DILocation(line: 91, column: 28, scope: !7753)
!7790 = !DILocation(line: 95, column: 11, scope: !7753)
!7791 = !DILocation(line: 95, column: 34, scope: !7753)
!7792 = !DILocation(line: 374, column: 12, scope: !7761, inlinedAt: !7776)
!7793 = !DILocation(line: 374, column: 2, scope: !7761, inlinedAt: !7776)
!7794 = !DILocation(line: 375, column: 6, scope: !7761, inlinedAt: !7776)
!7795 = !DILocation(line: 376, column: 6, scope: !7761, inlinedAt: !7776)
!7796 = !DILocation(line: 0, scope: !7761, inlinedAt: !7776)
!7797 = !DILocation(line: 376, column: 14, scope: !7761, inlinedAt: !7776)
!7798 = !DILocation(line: 376, column: 18, scope: !7761, inlinedAt: !7776)
!7799 = !DILocation(line: 376, column: 16, scope: !7761, inlinedAt: !7776)
!7800 = !DILocation(line: 377, column: 3, scope: !7761, inlinedAt: !7776)
!7801 = !DILocation(line: 378, column: 8, scope: !7761, inlinedAt: !7776)
!7802 = !DILocation(line: 378, column: 10, scope: !7761, inlinedAt: !7776)
!7803 = !DILocation(line: 378, column: 9, scope: !7761, inlinedAt: !7776)
!7804 = !DILocation(line: 381, column: 4, scope: !7761, inlinedAt: !7776)
!7805 = !DILocation(line: 384, column: 14, scope: !7761, inlinedAt: !7776)
!7806 = !DILocation(line: 384, column: 13, scope: !7761, inlinedAt: !7776)
!7807 = !DILocation(line: 385, column: 6, scope: !7761, inlinedAt: !7776)
!7808 = !DILocation(line: 385, column: 8, scope: !7761, inlinedAt: !7776)
!7809 = !DILocation(line: 386, column: 4, scope: !7761, inlinedAt: !7776)
!7810 = !DILocation(line: 389, column: 15, scope: !7761, inlinedAt: !7776)
!7811 = !DILocation(line: 389, column: 17, scope: !7761, inlinedAt: !7776)
!7812 = !DILocation(line: 389, column: 14, scope: !7761, inlinedAt: !7776)
!7813 = !DILocation(line: 389, column: 3, scope: !7761, inlinedAt: !7776)
!7814 = !DILocation(line: 390, column: 6, scope: !7761, inlinedAt: !7776)
!7815 = !DILocation(line: 390, column: 8, scope: !7761, inlinedAt: !7776)
!7816 = !DILocation(line: 390, column: 7, scope: !7761, inlinedAt: !7776)
!7817 = !DILocation(line: 390, column: 15, scope: !7761, inlinedAt: !7776)
!7818 = !DILocation(line: 390, column: 13, scope: !7761, inlinedAt: !7776)
!7819 = !DILocation(line: 391, column: 4, scope: !7761, inlinedAt: !7776)
!7820 = !DILocation(line: 394, column: 26, scope: !7761, inlinedAt: !7776)
!7821 = !DILocation(line: 394, column: 27, scope: !7761, inlinedAt: !7776)
!7822 = !DILocation(line: 394, column: 25, scope: !7761, inlinedAt: !7776)
!7823 = !DILocation(line: 394, column: 3, scope: !7761, inlinedAt: !7776)
!7824 = !DILocation(line: 395, column: 11, scope: !7761, inlinedAt: !7776)
!7825 = !DILocation(line: 395, column: 13, scope: !7761, inlinedAt: !7776)
!7826 = !DILocation(line: 395, column: 14, scope: !7761, inlinedAt: !7776)
!7827 = !DILocation(line: 395, column: 12, scope: !7761, inlinedAt: !7776)
!7828 = !DILocation(line: 404, column: 8, scope: !7761, inlinedAt: !7776)
!7829 = !DILocation(line: 404, column: 3, scope: !7761, inlinedAt: !7776)
!7830 = !DILocation(line: 397, column: 13, scope: !7761, inlinedAt: !7776)
!7831 = !DILocation(line: 397, column: 18, scope: !7761, inlinedAt: !7776)
!7832 = !DILocation(line: 398, column: 18, scope: !7761, inlinedAt: !7776)
!7833 = !DILocation(line: 398, column: 20, scope: !7761, inlinedAt: !7776)
!7834 = !DILocation(line: 398, column: 21, scope: !7761, inlinedAt: !7776)
!7835 = !DILocation(line: 398, column: 19, scope: !7761, inlinedAt: !7776)
!7836 = !DILocation(line: 400, column: 13, scope: !7761, inlinedAt: !7776)
!7837 = !DILocation(line: 400, column: 18, scope: !7761, inlinedAt: !7776)
!7838 = !DILocation(line: 401, column: 18, scope: !7761, inlinedAt: !7776)
!7839 = !DILocation(line: 401, column: 20, scope: !7761, inlinedAt: !7776)
!7840 = !DILocation(line: 401, column: 21, scope: !7761, inlinedAt: !7776)
!7841 = !DILocation(line: 401, column: 19, scope: !7761, inlinedAt: !7776)
!7842 = !DILocation(line: 378, column: 3, scope: !7761, inlinedAt: !7776)
!7843 = !DILocation(line: 379, column: 6, scope: !7761, inlinedAt: !7776)
!7844 = !DILocation(line: 379, column: 8, scope: !7761, inlinedAt: !7776)
!7845 = !DILocation(line: 395, column: 19, scope: !7761, inlinedAt: !7776)
!7846 = !DILocation(line: 395, column: 21, scope: !7761, inlinedAt: !7776)
!7847 = !DILocation(line: 395, column: 48, scope: !7761, inlinedAt: !7776)
!7848 = !DILocation(line: 398, column: 13, scope: !7761, inlinedAt: !7776)
!7849 = !DILocation(line: 398, column: 26, scope: !7761, inlinedAt: !7776)
!7850 = !DILocation(line: 398, column: 28, scope: !7761, inlinedAt: !7776)
!7851 = !DILocation(line: 398, column: 45, scope: !7761, inlinedAt: !7776)
!7852 = !DILocation(line: 401, column: 13, scope: !7761, inlinedAt: !7776)
!7853 = !DILocation(line: 401, column: 26, scope: !7761, inlinedAt: !7776)
!7854 = !DILocation(line: 401, column: 28, scope: !7761, inlinedAt: !7776)
!7855 = !DILocation(line: 401, column: 45, scope: !7761, inlinedAt: !7776)
!7856 = !DILocation(line: 406, column: 9, scope: !7761, inlinedAt: !7776)
!7857 = !DILocation(line: 406, column: 2, scope: !7761, inlinedAt: !7776)
!7858 = !DILocation(line: 95, column: 17, scope: !7753)
!7859 = !DILocation(line: 95, column: 2, scope: !7753)
!7860 = !DILocation(line: 96, column: 8, scope: !7753)
!7861 = !DILocation(line: 102, column: 5, scope: !7753)
!7862 = !DILocation(line: 102, column: 15, scope: !7753)
!7863 = !DILocation(line: 102, column: 14, scope: !7753)
!7864 = !DILocation(line: 103, column: 3, scope: !7753)
!7865 = !DILocation(line: 103, column: 18, scope: !7753)
!7866 = !DILocation(line: 103, column: 17, scope: !7753)
!7867 = !DILocation(line: 92, column: 3, scope: !7753)
!7868 = !DILocation(line: 92, column: 5, scope: !7753)
!7869 = !DILocation(line: 92, column: 15, scope: !7753)
!7870 = !DILocation(line: 92, column: 14, scope: !7753)
!7871 = !DILocation(line: 93, column: 3, scope: !7753)
!7872 = !DILocation(line: 896, column: 26, scope: !4658)
!7873 = !DILocalVariable(name: "e", arg: 1, scope: !7874, file: !7875, line: 67, type: !7878)
!7874 = distinct !DISubprogram(name: "(*errors.errorString).Error", linkageName: "(*errors.errorString).Error", scope: !7875, file: !7875, line: 67, type: !7876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7883)
!7875 = !DIFile(filename: "errors.go", directory: "/usr/local/go/src/errors")
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!7878}
!7878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7879, size: 32, align: 32, dwarfAddressSpace: 0)
!7879 = !DIDerivedType(tag: DW_TAG_typedef, name: "errors.errorString", baseType: !7880)
!7880 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !7881)
!7881 = !{!7882}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "s", baseType: !1347, size: 64, align: 32)
!7883 = !{!7873}
!7884 = !DILocation(line: 67, column: 23, scope: !7874, inlinedAt: !7885)
!7885 = distinct !DILocation(line: 896, column: 26, scope: !4658)
!7886 = !DILocation(line: 68, column: 9, scope: !7874, inlinedAt: !7885)
!7887 = !DILocation(line: 68, column: 11, scope: !7874, inlinedAt: !7885)
!7888 = !DILocation(line: 68, column: 2, scope: !7874, inlinedAt: !7885)
!7889 = !DILocalVariable(name: "e", arg: 1, scope: !7890, file: !4635, line: 154, type: !7893)
!7890 = distinct !DISubprogram(name: "(*os.PathError).Error", linkageName: "(*os.PathError).Error", scope: !4635, file: !4635, line: 154, type: !7891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7900)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!7893}
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 32, align: 32, dwarfAddressSpace: 0)
!7894 = !DIDerivedType(tag: DW_TAG_typedef, name: "os.PathError", baseType: !7895)
!7895 = !DICompositeType(tag: DW_TAG_structure_type, size: 192, align: 32, elements: !7896)
!7896 = !{!7897, !7898, !7899}
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "Op", baseType: !1347, size: 64, align: 32)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "Path", baseType: !1347, size: 64, align: 32, offset: 64)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "Err", baseType: !98, size: 64, align: 32, offset: 128)
!7900 = !{!7889}
!7901 = !DILocation(line: 154, column: 21, scope: !7890, inlinedAt: !7902)
!7902 = distinct !DILocation(line: 896, column: 26, scope: !4658)
!7903 = !DILocation(line: 155, column: 9, scope: !7890, inlinedAt: !7902)
!7904 = !DILocation(line: 155, column: 11, scope: !7890, inlinedAt: !7902)
!7905 = !DILocation(line: 155, column: 14, scope: !7890, inlinedAt: !7902)
!7906 = !DILocation(line: 155, column: 22, scope: !7890, inlinedAt: !7902)
!7907 = !DILocation(line: 155, column: 24, scope: !7890, inlinedAt: !7902)
!7908 = !DILocation(line: 155, column: 20, scope: !7890, inlinedAt: !7902)
!7909 = !DILocation(line: 155, column: 29, scope: !7890, inlinedAt: !7902)
!7910 = !DILocation(line: 155, column: 40, scope: !7890, inlinedAt: !7902)
!7911 = !DILocation(line: 155, column: 49, scope: !7890, inlinedAt: !7902)
!7912 = !DILocation(line: 155, column: 36, scope: !7890, inlinedAt: !7902)
!7913 = !DILocalVariable(name: "e", arg: 1, scope: !7914, file: !2062, line: 561, type: !7917)
!7914 = distinct !DISubprogram(name: "(*reflect.TypeError).Error", linkageName: "(*reflect.TypeError).Error", scope: !2062, file: !2062, line: 561, type: !7915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7922)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!7917}
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 32, align: 32, dwarfAddressSpace: 0)
!7918 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.TypeError", baseType: !7919)
!7919 = !DICompositeType(tag: DW_TAG_structure_type, size: 64, align: 32, elements: !7920)
!7920 = !{!7921}
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "Method", baseType: !1347, size: 64, align: 32)
!7922 = !{!7913}
!7923 = !DILocation(line: 561, column: 21, scope: !7914, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 896, column: 26, scope: !4658)
!7925 = !DILocation(line: 562, column: 44, scope: !7914, inlinedAt: !7924)
!7926 = !DILocation(line: 562, column: 46, scope: !7914, inlinedAt: !7924)
!7927 = !DILocation(line: 562, column: 42, scope: !7914, inlinedAt: !7924)
!7928 = !DILocation(line: 562, column: 53, scope: !7914, inlinedAt: !7924)
!7929 = !DILocalVariable(name: "e", arg: 1, scope: !7930, file: !1924, line: 708, type: !7933)
!7930 = distinct !DISubprogram(name: "(*reflect.ValueError).Error", linkageName: "(*reflect.ValueError).Error", scope: !1924, file: !1924, line: 708, type: !7931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !77, retainedNodes: !7935)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!7933}
!7933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7934, size: 32, align: 32, dwarfAddressSpace: 0)
!7934 = !DIDerivedType(tag: DW_TAG_typedef, name: "reflect.ValueError", baseType: !7919)
!7935 = !{!7929}
!7936 = !DILocation(line: 708, column: 22, scope: !7930, inlinedAt: !7937)
!7937 = distinct !DILocation(line: 896, column: 26, scope: !4658)
!7938 = !DILocation(line: 709, column: 45, scope: !7930, inlinedAt: !7937)
!7939 = !DILocation(line: 709, column: 47, scope: !7930, inlinedAt: !7937)
!7940 = !DILocation(line: 709, column: 43, scope: !7930, inlinedAt: !7937)
!7941 = !DILocation(line: 709, column: 54, scope: !7930, inlinedAt: !7937)
